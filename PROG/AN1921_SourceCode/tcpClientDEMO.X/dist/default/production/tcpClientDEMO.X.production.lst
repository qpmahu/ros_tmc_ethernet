

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug 18 23:24:43 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F18346
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    21                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    22                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    23                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    24                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,noexec
    25                           	psect	clrtext,global,class=CODE,delta=2
    26                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2
    56                           	psect	text25,local,class=CODE,merge=1,delta=2
    57                           	psect	text26,local,class=CODE,merge=1,delta=2
    58                           	psect	text27,local,class=CODE,merge=1,delta=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2
    61                           	psect	text30,local,class=CODE,merge=1,delta=2
    62                           	psect	text31,local,class=CODE,merge=1,delta=2
    63                           	psect	text32,local,class=CODE,merge=1,delta=2
    64                           	psect	text33,local,class=CODE,merge=1,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2
    66                           	psect	text35,local,class=CODE,merge=1,delta=2
    67                           	psect	text36,local,class=CODE,merge=1,delta=2
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text38,local,class=CODE,merge=1,delta=2
    70                           	psect	text39,local,class=CODE,merge=1,delta=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2,group=3
    84                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text56,local,class=CODE,merge=1,delta=2
    88                           	psect	text57,local,class=CODE,merge=1,delta=2
    89                           	psect	text58,local,class=CODE,merge=1,delta=2
    90                           	psect	text59,local,class=CODE,merge=1,delta=2
    91                           	psect	text60,local,class=CODE,merge=1,delta=2
    92                           	psect	text61,local,class=CODE,merge=1,delta=2
    93                           	psect	text62,local,class=CODE,merge=1,delta=2
    94                           	psect	text63,local,class=CODE,merge=1,delta=2
    95                           	psect	text64,local,class=CODE,merge=1,delta=2
    96                           	psect	text65,local,class=CODE,merge=1,delta=2
    97                           	psect	text66,local,class=CODE,merge=1,delta=2
    98                           	psect	text67,local,class=CODE,merge=1,delta=2
    99                           	psect	text68,local,class=CODE,merge=1,delta=2
   100                           	psect	text69,local,class=CODE,merge=1,delta=2
   101                           	psect	text70,local,class=CODE,merge=1,delta=2
   102                           	psect	text71,local,class=CODE,merge=1,delta=2
   103                           	psect	text72,local,class=CODE,merge=1,delta=2
   104                           	psect	text73,local,class=CODE,merge=1,delta=2
   105                           	psect	text74,local,class=CODE,merge=1,delta=2
   106                           	psect	text75,local,class=CODE,merge=1,delta=2
   107                           	psect	text76,local,class=CODE,merge=1,delta=2
   108                           	psect	text77,local,class=CODE,merge=1,delta=2
   109                           	psect	text78,local,class=CODE,merge=1,delta=2
   110                           	psect	text79,local,class=CODE,merge=1,delta=2
   111                           	psect	text80,local,class=CODE,merge=1,delta=2
   112                           	psect	text81,local,class=CODE,merge=1,delta=2
   113                           	psect	text82,local,class=CODE,merge=1,delta=2
   114                           	psect	text83,local,class=CODE,merge=1,delta=2
   115                           	psect	text84,local,class=CODE,merge=1,delta=2
   116                           	psect	text85,local,class=CODE,merge=1,delta=2
   117                           	psect	text86,local,class=CODE,merge=1,delta=2
   118                           	psect	text87,local,class=CODE,merge=1,delta=2
   119                           	psect	text88,local,class=CODE,merge=1,delta=2
   120                           	psect	text89,local,class=CODE,merge=1,delta=2
   121                           	psect	text90,local,class=CODE,merge=1,delta=2
   122                           	psect	text91,local,class=CODE,merge=1,delta=2
   123                           	psect	text92,local,class=CODE,merge=1,delta=2
   124                           	psect	text93,local,class=CODE,merge=1,delta=2
   125                           	psect	text94,local,class=CODE,merge=1,delta=2
   126                           	psect	intentry,global,class=CODE,delta=2
   127                           	psect	text96,local,class=CODE,merge=1,delta=2
   128                           	psect	text97,local,class=CODE,merge=1,delta=2
   129                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   130                           	psect	text67_split_1,local,class=CODE,merge=1,delta=2
   131                           	dabs	1,0xCA0,32
   132                           	dabs	1,0xC28,72
   133                           	dabs	1,0x2788,0,_arpMap
   134                           	dabs	1,0x7E,2
   135  0000                     
   136                           ; Version 2.20
   137                           ; Generated 30/04/2020 GMT
   138                           ; 
   139                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   140                           ; All rights reserved.
   141                           ; 
   142                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   143                           ; 
   144                           ; Redistribution and use in source and binary forms, with or without modification, are
   145                           ; permitted provided that the following conditions are met:
   146                           ; 
   147                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   148                           ;        conditions and the following disclaimer.
   149                           ; 
   150                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   151                           ;        of conditions and the following disclaimer in the documentation and/or other
   152                           ;        materials provided with the distribution.
   153                           ; 
   154                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   155                           ;        software without specific prior written permission.
   156                           ; 
   157                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   158                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   159                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   160                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   161                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   162                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   163                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   164                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   165                           ; 
   166                           ; 
   167                           ; Code-generator required, PIC16F18346 Definitions
   168                           ; 
   169                           ; SFR Addresses
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  0090                     	;# 
   208  0091                     	;# 
   209  0092                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0097                     	;# 
   213  009B                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  0111                     	;# 
   223  0112                     	;# 
   224  0113                     	;# 
   225  0114                     	;# 
   226  0115                     	;# 
   227  0116                     	;# 
   228  0117                     	;# 
   229  0118                     	;# 
   230  0119                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  018E                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  0199                     	;# 
   237  0199                     	;# 
   238  019A                     	;# 
   239  019A                     	;# 
   240  019A                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019C                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019D                     	;# 
   250  019D                     	;# 
   251  019D                     	;# 
   252  019E                     	;# 
   253  019E                     	;# 
   254  019E                     	;# 
   255  019F                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  020C                     	;# 
   261  020D                     	;# 
   262  020E                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0212                     	;# 
   267  0213                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0216                     	;# 
   276  0216                     	;# 
   277  0217                     	;# 
   278  0217                     	;# 
   279  0219                     	;# 
   280  021A                     	;# 
   281  021B                     	;# 
   282  021C                     	;# 
   283  021D                     	;# 
   284  021D                     	;# 
   285  021E                     	;# 
   286  021F                     	;# 
   287  028C                     	;# 
   288  028D                     	;# 
   289  028E                     	;# 
   290  0291                     	;# 
   291  0291                     	;# 
   292  0292                     	;# 
   293  0293                     	;# 
   294  0294                     	;# 
   295  0295                     	;# 
   296  0295                     	;# 
   297  0296                     	;# 
   298  0297                     	;# 
   299  0298                     	;# 
   300  029F                     	;# 
   301  030C                     	;# 
   302  030D                     	;# 
   303  030E                     	;# 
   304  0311                     	;# 
   305  0311                     	;# 
   306  0312                     	;# 
   307  0313                     	;# 
   308  0314                     	;# 
   309  0315                     	;# 
   310  0315                     	;# 
   311  0316                     	;# 
   312  0317                     	;# 
   313  0318                     	;# 
   314  038C                     	;# 
   315  038D                     	;# 
   316  038E                     	;# 
   317  0391                     	;# 
   318  0392                     	;# 
   319  0393                     	;# 
   320  0394                     	;# 
   321  0395                     	;# 
   322  0396                     	;# 
   323  0397                     	;# 
   324  0398                     	;# 
   325  0399                     	;# 
   326  039A                     	;# 
   327  039C                     	;# 
   328  039D                     	;# 
   329  039E                     	;# 
   330  039F                     	;# 
   331  0411                     	;# 
   332  0411                     	;# 
   333  0412                     	;# 
   334  0413                     	;# 
   335  0414                     	;# 
   336  0415                     	;# 
   337  0416                     	;# 
   338  0417                     	;# 
   339  0418                     	;# 
   340  0418                     	;# 
   341  0419                     	;# 
   342  041A                     	;# 
   343  041B                     	;# 
   344  041C                     	;# 
   345  041D                     	;# 
   346  041E                     	;# 
   347  041F                     	;# 
   348  0498                     	;# 
   349  0498                     	;# 
   350  0499                     	;# 
   351  049A                     	;# 
   352  049B                     	;# 
   353  049B                     	;# 
   354  049C                     	;# 
   355  049D                     	;# 
   356  049E                     	;# 
   357  049F                     	;# 
   358  0617                     	;# 
   359  0618                     	;# 
   360  0619                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061C                     	;# 
   366  061F                     	;# 
   367  0691                     	;# 
   368  0692                     	;# 
   369  0693                     	;# 
   370  0694                     	;# 
   371  0695                     	;# 
   372  0696                     	;# 
   373  0697                     	;# 
   374  0698                     	;# 
   375  0699                     	;# 
   376  0711                     	;# 
   377  0712                     	;# 
   378  0713                     	;# 
   379  0714                     	;# 
   380  0715                     	;# 
   381  0716                     	;# 
   382  0717                     	;# 
   383  0718                     	;# 
   384  0719                     	;# 
   385  0891                     	;# 
   386  0891                     	;# 
   387  0891                     	;# 
   388  0891                     	;# 
   389  0891                     	;# 
   390  0891                     	;# 
   391  0892                     	;# 
   392  0892                     	;# 
   393  0892                     	;# 
   394  0893                     	;# 
   395  0893                     	;# 
   396  0893                     	;# 
   397  0893                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0894                     	;# 
   401  0894                     	;# 
   402  0894                     	;# 
   403  0895                     	;# 
   404  0895                     	;# 
   405  0895                     	;# 
   406  0896                     	;# 
   407  0896                     	;# 
   408  0896                     	;# 
   409  089B                     	;# 
   410  0911                     	;# 
   411  0912                     	;# 
   412  0913                     	;# 
   413  0914                     	;# 
   414  0915                     	;# 
   415  0916                     	;# 
   416  0918                     	;# 
   417  0919                     	;# 
   418  091A                     	;# 
   419  091B                     	;# 
   420  091C                     	;# 
   421  091D                     	;# 
   422  091E                     	;# 
   423  091F                     	;# 
   424  0E0F                     	;# 
   425  0E10                     	;# 
   426  0E11                     	;# 
   427  0E12                     	;# 
   428  0E13                     	;# 
   429  0E14                     	;# 
   430  0E15                     	;# 
   431  0E16                     	;# 
   432  0E17                     	;# 
   433  0E18                     	;# 
   434  0E19                     	;# 
   435  0E1A                     	;# 
   436  0E1B                     	;# 
   437  0E1C                     	;# 
   438  0E1D                     	;# 
   439  0E1E                     	;# 
   440  0E1F                     	;# 
   441  0E20                     	;# 
   442  0E21                     	;# 
   443  0E22                     	;# 
   444  0E24                     	;# 
   445  0E25                     	;# 
   446  0E28                     	;# 
   447  0E29                     	;# 
   448  0E2A                     	;# 
   449  0E2B                     	;# 
   450  0E2C                     	;# 
   451  0E2D                     	;# 
   452  0E2E                     	;# 
   453  0E2F                     	;# 
   454  0E90                     	;# 
   455  0E91                     	;# 
   456  0E92                     	;# 
   457  0E94                     	;# 
   458  0E95                     	;# 
   459  0E9C                     	;# 
   460  0E9D                     	;# 
   461  0E9E                     	;# 
   462  0E9F                     	;# 
   463  0EA0                     	;# 
   464  0EA1                     	;# 
   465  0EA2                     	;# 
   466  0EA3                     	;# 
   467  0EA4                     	;# 
   468  0EA5                     	;# 
   469  0EA6                     	;# 
   470  0EA7                     	;# 
   471  0F0F                     	;# 
   472  0F10                     	;# 
   473  0F11                     	;# 
   474  0F12                     	;# 
   475  0F13                     	;# 
   476  0F14                     	;# 
   477  0F15                     	;# 
   478  0F16                     	;# 
   479  0F17                     	;# 
   480  0F18                     	;# 
   481  0F19                     	;# 
   482  0F1A                     	;# 
   483  0F1B                     	;# 
   484  0F1C                     	;# 
   485  0F1D                     	;# 
   486  0F1E                     	;# 
   487  0F1F                     	;# 
   488  0F20                     	;# 
   489  0F21                     	;# 
   490  0F22                     	;# 
   491  0F23                     	;# 
   492  0F24                     	;# 
   493  0F25                     	;# 
   494  0F26                     	;# 
   495  0F27                     	;# 
   496  0F28                     	;# 
   497  0F29                     	;# 
   498  0F2A                     	;# 
   499  0F2B                     	;# 
   500  0F2C                     	;# 
   501  0F2D                     	;# 
   502  0F2E                     	;# 
   503  0F2F                     	;# 
   504  0F30                     	;# 
   505  0F31                     	;# 
   506  0F32                     	;# 
   507  0F33                     	;# 
   508  0F34                     	;# 
   509  0F35                     	;# 
   510  0F36                     	;# 
   511  0F37                     	;# 
   512  0FE4                     	;# 
   513  0FE5                     	;# 
   514  0FE6                     	;# 
   515  0FE7                     	;# 
   516  0FE8                     	;# 
   517  0FE9                     	;# 
   518  0FEA                     	;# 
   519  0FEB                     	;# 
   520  0FED                     	;# 
   521  0FEE                     	;# 
   522  0FEF                     	;# 
   523  0000                     	;# 
   524  0001                     	;# 
   525  0002                     	;# 
   526  0003                     	;# 
   527  0004                     	;# 
   528  0005                     	;# 
   529  0006                     	;# 
   530  0007                     	;# 
   531  0008                     	;# 
   532  0009                     	;# 
   533  000A                     	;# 
   534  000B                     	;# 
   535  000C                     	;# 
   536  000D                     	;# 
   537  000E                     	;# 
   538  0010                     	;# 
   539  0011                     	;# 
   540  0012                     	;# 
   541  0013                     	;# 
   542  0014                     	;# 
   543  0015                     	;# 
   544  0015                     	;# 
   545  0016                     	;# 
   546  0016                     	;# 
   547  0017                     	;# 
   548  0018                     	;# 
   549  0019                     	;# 
   550  0019                     	;# 
   551  001A                     	;# 
   552  001B                     	;# 
   553  001C                     	;# 
   554  001D                     	;# 
   555  001E                     	;# 
   556  001F                     	;# 
   557  008C                     	;# 
   558  008D                     	;# 
   559  008E                     	;# 
   560  0090                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0093                     	;# 
   564  0094                     	;# 
   565  0097                     	;# 
   566  009B                     	;# 
   567  009B                     	;# 
   568  009C                     	;# 
   569  009D                     	;# 
   570  009E                     	;# 
   571  009F                     	;# 
   572  010C                     	;# 
   573  010D                     	;# 
   574  010E                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0113                     	;# 
   578  0114                     	;# 
   579  0115                     	;# 
   580  0116                     	;# 
   581  0117                     	;# 
   582  0118                     	;# 
   583  0119                     	;# 
   584  018C                     	;# 
   585  018D                     	;# 
   586  018E                     	;# 
   587  0197                     	;# 
   588  0199                     	;# 
   589  0199                     	;# 
   590  0199                     	;# 
   591  019A                     	;# 
   592  019A                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019C                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019D                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019E                     	;# 
   607  019E                     	;# 
   608  019F                     	;# 
   609  019F                     	;# 
   610  019F                     	;# 
   611  019F                     	;# 
   612  019F                     	;# 
   613  020C                     	;# 
   614  020D                     	;# 
   615  020E                     	;# 
   616  0211                     	;# 
   617  0211                     	;# 
   618  0212                     	;# 
   619  0212                     	;# 
   620  0213                     	;# 
   621  0213                     	;# 
   622  0214                     	;# 
   623  0214                     	;# 
   624  0215                     	;# 
   625  0215                     	;# 
   626  0215                     	;# 
   627  0215                     	;# 
   628  0216                     	;# 
   629  0216                     	;# 
   630  0217                     	;# 
   631  0217                     	;# 
   632  0219                     	;# 
   633  021A                     	;# 
   634  021B                     	;# 
   635  021C                     	;# 
   636  021D                     	;# 
   637  021D                     	;# 
   638  021E                     	;# 
   639  021F                     	;# 
   640  028C                     	;# 
   641  028D                     	;# 
   642  028E                     	;# 
   643  0291                     	;# 
   644  0291                     	;# 
   645  0292                     	;# 
   646  0293                     	;# 
   647  0294                     	;# 
   648  0295                     	;# 
   649  0295                     	;# 
   650  0296                     	;# 
   651  0297                     	;# 
   652  0298                     	;# 
   653  029F                     	;# 
   654  030C                     	;# 
   655  030D                     	;# 
   656  030E                     	;# 
   657  0311                     	;# 
   658  0311                     	;# 
   659  0312                     	;# 
   660  0313                     	;# 
   661  0314                     	;# 
   662  0315                     	;# 
   663  0315                     	;# 
   664  0316                     	;# 
   665  0317                     	;# 
   666  0318                     	;# 
   667  038C                     	;# 
   668  038D                     	;# 
   669  038E                     	;# 
   670  0391                     	;# 
   671  0392                     	;# 
   672  0393                     	;# 
   673  0394                     	;# 
   674  0395                     	;# 
   675  0396                     	;# 
   676  0397                     	;# 
   677  0398                     	;# 
   678  0399                     	;# 
   679  039A                     	;# 
   680  039C                     	;# 
   681  039D                     	;# 
   682  039E                     	;# 
   683  039F                     	;# 
   684  0411                     	;# 
   685  0411                     	;# 
   686  0412                     	;# 
   687  0413                     	;# 
   688  0414                     	;# 
   689  0415                     	;# 
   690  0416                     	;# 
   691  0417                     	;# 
   692  0418                     	;# 
   693  0418                     	;# 
   694  0419                     	;# 
   695  041A                     	;# 
   696  041B                     	;# 
   697  041C                     	;# 
   698  041D                     	;# 
   699  041E                     	;# 
   700  041F                     	;# 
   701  0498                     	;# 
   702  0498                     	;# 
   703  0499                     	;# 
   704  049A                     	;# 
   705  049B                     	;# 
   706  049B                     	;# 
   707  049C                     	;# 
   708  049D                     	;# 
   709  049E                     	;# 
   710  049F                     	;# 
   711  0617                     	;# 
   712  0618                     	;# 
   713  0619                     	;# 
   714  0619                     	;# 
   715  061A                     	;# 
   716  061B                     	;# 
   717  061C                     	;# 
   718  061C                     	;# 
   719  061F                     	;# 
   720  0691                     	;# 
   721  0692                     	;# 
   722  0693                     	;# 
   723  0694                     	;# 
   724  0695                     	;# 
   725  0696                     	;# 
   726  0697                     	;# 
   727  0698                     	;# 
   728  0699                     	;# 
   729  0711                     	;# 
   730  0712                     	;# 
   731  0713                     	;# 
   732  0714                     	;# 
   733  0715                     	;# 
   734  0716                     	;# 
   735  0717                     	;# 
   736  0718                     	;# 
   737  0719                     	;# 
   738  0891                     	;# 
   739  0891                     	;# 
   740  0891                     	;# 
   741  0891                     	;# 
   742  0891                     	;# 
   743  0891                     	;# 
   744  0892                     	;# 
   745  0892                     	;# 
   746  0892                     	;# 
   747  0893                     	;# 
   748  0893                     	;# 
   749  0893                     	;# 
   750  0893                     	;# 
   751  0893                     	;# 
   752  0893                     	;# 
   753  0894                     	;# 
   754  0894                     	;# 
   755  0894                     	;# 
   756  0895                     	;# 
   757  0895                     	;# 
   758  0895                     	;# 
   759  0896                     	;# 
   760  0896                     	;# 
   761  0896                     	;# 
   762  089B                     	;# 
   763  0911                     	;# 
   764  0912                     	;# 
   765  0913                     	;# 
   766  0914                     	;# 
   767  0915                     	;# 
   768  0916                     	;# 
   769  0918                     	;# 
   770  0919                     	;# 
   771  091A                     	;# 
   772  091B                     	;# 
   773  091C                     	;# 
   774  091D                     	;# 
   775  091E                     	;# 
   776  091F                     	;# 
   777  0E0F                     	;# 
   778  0E10                     	;# 
   779  0E11                     	;# 
   780  0E12                     	;# 
   781  0E13                     	;# 
   782  0E14                     	;# 
   783  0E15                     	;# 
   784  0E16                     	;# 
   785  0E17                     	;# 
   786  0E18                     	;# 
   787  0E19                     	;# 
   788  0E1A                     	;# 
   789  0E1B                     	;# 
   790  0E1C                     	;# 
   791  0E1D                     	;# 
   792  0E1E                     	;# 
   793  0E1F                     	;# 
   794  0E20                     	;# 
   795  0E21                     	;# 
   796  0E22                     	;# 
   797  0E24                     	;# 
   798  0E25                     	;# 
   799  0E28                     	;# 
   800  0E29                     	;# 
   801  0E2A                     	;# 
   802  0E2B                     	;# 
   803  0E2C                     	;# 
   804  0E2D                     	;# 
   805  0E2E                     	;# 
   806  0E2F                     	;# 
   807  0E90                     	;# 
   808  0E91                     	;# 
   809  0E92                     	;# 
   810  0E94                     	;# 
   811  0E95                     	;# 
   812  0E9C                     	;# 
   813  0E9D                     	;# 
   814  0E9E                     	;# 
   815  0E9F                     	;# 
   816  0EA0                     	;# 
   817  0EA1                     	;# 
   818  0EA2                     	;# 
   819  0EA3                     	;# 
   820  0EA4                     	;# 
   821  0EA5                     	;# 
   822  0EA6                     	;# 
   823  0EA7                     	;# 
   824  0F0F                     	;# 
   825  0F10                     	;# 
   826  0F11                     	;# 
   827  0F12                     	;# 
   828  0F13                     	;# 
   829  0F14                     	;# 
   830  0F15                     	;# 
   831  0F16                     	;# 
   832  0F17                     	;# 
   833  0F18                     	;# 
   834  0F19                     	;# 
   835  0F1A                     	;# 
   836  0F1B                     	;# 
   837  0F1C                     	;# 
   838  0F1D                     	;# 
   839  0F1E                     	;# 
   840  0F1F                     	;# 
   841  0F20                     	;# 
   842  0F21                     	;# 
   843  0F22                     	;# 
   844  0F23                     	;# 
   845  0F24                     	;# 
   846  0F25                     	;# 
   847  0F26                     	;# 
   848  0F27                     	;# 
   849  0F28                     	;# 
   850  0F29                     	;# 
   851  0F2A                     	;# 
   852  0F2B                     	;# 
   853  0F2C                     	;# 
   854  0F2D                     	;# 
   855  0F2E                     	;# 
   856  0F2F                     	;# 
   857  0F30                     	;# 
   858  0F31                     	;# 
   859  0F32                     	;# 
   860  0F33                     	;# 
   861  0F34                     	;# 
   862  0F35                     	;# 
   863  0F36                     	;# 
   864  0F37                     	;# 
   865  0FE4                     	;# 
   866  0FE5                     	;# 
   867  0FE6                     	;# 
   868  0FE7                     	;# 
   869  0FE8                     	;# 
   870  0FE9                     	;# 
   871  0FEA                     	;# 
   872  0FEB                     	;# 
   873  0FED                     	;# 
   874  0FEE                     	;# 
   875  0FEF                     	;# 
   876  0000                     	;# 
   877  0001                     	;# 
   878  0002                     	;# 
   879  0003                     	;# 
   880  0004                     	;# 
   881  0005                     	;# 
   882  0006                     	;# 
   883  0007                     	;# 
   884  0008                     	;# 
   885  0009                     	;# 
   886  000A                     	;# 
   887  000B                     	;# 
   888  000C                     	;# 
   889  000D                     	;# 
   890  000E                     	;# 
   891  0010                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0014                     	;# 
   896  0015                     	;# 
   897  0015                     	;# 
   898  0016                     	;# 
   899  0016                     	;# 
   900  0017                     	;# 
   901  0018                     	;# 
   902  0019                     	;# 
   903  0019                     	;# 
   904  001A                     	;# 
   905  001B                     	;# 
   906  001C                     	;# 
   907  001D                     	;# 
   908  001E                     	;# 
   909  001F                     	;# 
   910  008C                     	;# 
   911  008D                     	;# 
   912  008E                     	;# 
   913  0090                     	;# 
   914  0091                     	;# 
   915  0092                     	;# 
   916  0093                     	;# 
   917  0094                     	;# 
   918  0097                     	;# 
   919  009B                     	;# 
   920  009B                     	;# 
   921  009C                     	;# 
   922  009D                     	;# 
   923  009E                     	;# 
   924  009F                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  010E                     	;# 
   928  0111                     	;# 
   929  0112                     	;# 
   930  0113                     	;# 
   931  0114                     	;# 
   932  0115                     	;# 
   933  0116                     	;# 
   934  0117                     	;# 
   935  0118                     	;# 
   936  0119                     	;# 
   937  018C                     	;# 
   938  018D                     	;# 
   939  018E                     	;# 
   940  0197                     	;# 
   941  0199                     	;# 
   942  0199                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019A                     	;# 
   946  019A                     	;# 
   947  019B                     	;# 
   948  019B                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019C                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019D                     	;# 
   956  019D                     	;# 
   957  019D                     	;# 
   958  019E                     	;# 
   959  019E                     	;# 
   960  019E                     	;# 
   961  019F                     	;# 
   962  019F                     	;# 
   963  019F                     	;# 
   964  019F                     	;# 
   965  019F                     	;# 
   966  020C                     	;# 
   967  020D                     	;# 
   968  020E                     	;# 
   969  0211                     	;# 
   970  0211                     	;# 
   971  0212                     	;# 
   972  0212                     	;# 
   973  0213                     	;# 
   974  0213                     	;# 
   975  0214                     	;# 
   976  0214                     	;# 
   977  0215                     	;# 
   978  0215                     	;# 
   979  0215                     	;# 
   980  0215                     	;# 
   981  0216                     	;# 
   982  0216                     	;# 
   983  0217                     	;# 
   984  0217                     	;# 
   985  0219                     	;# 
   986  021A                     	;# 
   987  021B                     	;# 
   988  021C                     	;# 
   989  021D                     	;# 
   990  021D                     	;# 
   991  021E                     	;# 
   992  021F                     	;# 
   993  028C                     	;# 
   994  028D                     	;# 
   995  028E                     	;# 
   996  0291                     	;# 
   997  0291                     	;# 
   998  0292                     	;# 
   999  0293                     	;# 
  1000  0294                     	;# 
  1001  0295                     	;# 
  1002  0295                     	;# 
  1003  0296                     	;# 
  1004  0297                     	;# 
  1005  0298                     	;# 
  1006  029F                     	;# 
  1007  030C                     	;# 
  1008  030D                     	;# 
  1009  030E                     	;# 
  1010  0311                     	;# 
  1011  0311                     	;# 
  1012  0312                     	;# 
  1013  0313                     	;# 
  1014  0314                     	;# 
  1015  0315                     	;# 
  1016  0315                     	;# 
  1017  0316                     	;# 
  1018  0317                     	;# 
  1019  0318                     	;# 
  1020  038C                     	;# 
  1021  038D                     	;# 
  1022  038E                     	;# 
  1023  0391                     	;# 
  1024  0392                     	;# 
  1025  0393                     	;# 
  1026  0394                     	;# 
  1027  0395                     	;# 
  1028  0396                     	;# 
  1029  0397                     	;# 
  1030  0398                     	;# 
  1031  0399                     	;# 
  1032  039A                     	;# 
  1033  039C                     	;# 
  1034  039D                     	;# 
  1035  039E                     	;# 
  1036  039F                     	;# 
  1037  0411                     	;# 
  1038  0411                     	;# 
  1039  0412                     	;# 
  1040  0413                     	;# 
  1041  0414                     	;# 
  1042  0415                     	;# 
  1043  0416                     	;# 
  1044  0417                     	;# 
  1045  0418                     	;# 
  1046  0418                     	;# 
  1047  0419                     	;# 
  1048  041A                     	;# 
  1049  041B                     	;# 
  1050  041C                     	;# 
  1051  041D                     	;# 
  1052  041E                     	;# 
  1053  041F                     	;# 
  1054  0498                     	;# 
  1055  0498                     	;# 
  1056  0499                     	;# 
  1057  049A                     	;# 
  1058  049B                     	;# 
  1059  049B                     	;# 
  1060  049C                     	;# 
  1061  049D                     	;# 
  1062  049E                     	;# 
  1063  049F                     	;# 
  1064  0617                     	;# 
  1065  0618                     	;# 
  1066  0619                     	;# 
  1067  0619                     	;# 
  1068  061A                     	;# 
  1069  061B                     	;# 
  1070  061C                     	;# 
  1071  061C                     	;# 
  1072  061F                     	;# 
  1073  0691                     	;# 
  1074  0692                     	;# 
  1075  0693                     	;# 
  1076  0694                     	;# 
  1077  0695                     	;# 
  1078  0696                     	;# 
  1079  0697                     	;# 
  1080  0698                     	;# 
  1081  0699                     	;# 
  1082  0711                     	;# 
  1083  0712                     	;# 
  1084  0713                     	;# 
  1085  0714                     	;# 
  1086  0715                     	;# 
  1087  0716                     	;# 
  1088  0717                     	;# 
  1089  0718                     	;# 
  1090  0719                     	;# 
  1091  0891                     	;# 
  1092  0891                     	;# 
  1093  0891                     	;# 
  1094  0891                     	;# 
  1095  0891                     	;# 
  1096  0891                     	;# 
  1097  0892                     	;# 
  1098  0892                     	;# 
  1099  0892                     	;# 
  1100  0893                     	;# 
  1101  0893                     	;# 
  1102  0893                     	;# 
  1103  0893                     	;# 
  1104  0893                     	;# 
  1105  0893                     	;# 
  1106  0894                     	;# 
  1107  0894                     	;# 
  1108  0894                     	;# 
  1109  0895                     	;# 
  1110  0895                     	;# 
  1111  0895                     	;# 
  1112  0896                     	;# 
  1113  0896                     	;# 
  1114  0896                     	;# 
  1115  089B                     	;# 
  1116  0911                     	;# 
  1117  0912                     	;# 
  1118  0913                     	;# 
  1119  0914                     	;# 
  1120  0915                     	;# 
  1121  0916                     	;# 
  1122  0918                     	;# 
  1123  0919                     	;# 
  1124  091A                     	;# 
  1125  091B                     	;# 
  1126  091C                     	;# 
  1127  091D                     	;# 
  1128  091E                     	;# 
  1129  091F                     	;# 
  1130  0E0F                     	;# 
  1131  0E10                     	;# 
  1132  0E11                     	;# 
  1133  0E12                     	;# 
  1134  0E13                     	;# 
  1135  0E14                     	;# 
  1136  0E15                     	;# 
  1137  0E16                     	;# 
  1138  0E17                     	;# 
  1139  0E18                     	;# 
  1140  0E19                     	;# 
  1141  0E1A                     	;# 
  1142  0E1B                     	;# 
  1143  0E1C                     	;# 
  1144  0E1D                     	;# 
  1145  0E1E                     	;# 
  1146  0E1F                     	;# 
  1147  0E20                     	;# 
  1148  0E21                     	;# 
  1149  0E22                     	;# 
  1150  0E24                     	;# 
  1151  0E25                     	;# 
  1152  0E28                     	;# 
  1153  0E29                     	;# 
  1154  0E2A                     	;# 
  1155  0E2B                     	;# 
  1156  0E2C                     	;# 
  1157  0E2D                     	;# 
  1158  0E2E                     	;# 
  1159  0E2F                     	;# 
  1160  0E90                     	;# 
  1161  0E91                     	;# 
  1162  0E92                     	;# 
  1163  0E94                     	;# 
  1164  0E95                     	;# 
  1165  0E9C                     	;# 
  1166  0E9D                     	;# 
  1167  0E9E                     	;# 
  1168  0E9F                     	;# 
  1169  0EA0                     	;# 
  1170  0EA1                     	;# 
  1171  0EA2                     	;# 
  1172  0EA3                     	;# 
  1173  0EA4                     	;# 
  1174  0EA5                     	;# 
  1175  0EA6                     	;# 
  1176  0EA7                     	;# 
  1177  0F0F                     	;# 
  1178  0F10                     	;# 
  1179  0F11                     	;# 
  1180  0F12                     	;# 
  1181  0F13                     	;# 
  1182  0F14                     	;# 
  1183  0F15                     	;# 
  1184  0F16                     	;# 
  1185  0F17                     	;# 
  1186  0F18                     	;# 
  1187  0F19                     	;# 
  1188  0F1A                     	;# 
  1189  0F1B                     	;# 
  1190  0F1C                     	;# 
  1191  0F1D                     	;# 
  1192  0F1E                     	;# 
  1193  0F1F                     	;# 
  1194  0F20                     	;# 
  1195  0F21                     	;# 
  1196  0F22                     	;# 
  1197  0F23                     	;# 
  1198  0F24                     	;# 
  1199  0F25                     	;# 
  1200  0F26                     	;# 
  1201  0F27                     	;# 
  1202  0F28                     	;# 
  1203  0F29                     	;# 
  1204  0F2A                     	;# 
  1205  0F2B                     	;# 
  1206  0F2C                     	;# 
  1207  0F2D                     	;# 
  1208  0F2E                     	;# 
  1209  0F2F                     	;# 
  1210  0F30                     	;# 
  1211  0F31                     	;# 
  1212  0F32                     	;# 
  1213  0F33                     	;# 
  1214  0F34                     	;# 
  1215  0F35                     	;# 
  1216  0F36                     	;# 
  1217  0F37                     	;# 
  1218  0FE4                     	;# 
  1219  0FE5                     	;# 
  1220  0FE6                     	;# 
  1221  0FE7                     	;# 
  1222  0FE8                     	;# 
  1223  0FE9                     	;# 
  1224  0FEA                     	;# 
  1225  0FEB                     	;# 
  1226  0FED                     	;# 
  1227  0FEE                     	;# 
  1228  0FEF                     	;# 
  1229  0000                     	;# 
  1230  0001                     	;# 
  1231  0002                     	;# 
  1232  0003                     	;# 
  1233  0004                     	;# 
  1234  0005                     	;# 
  1235  0006                     	;# 
  1236  0007                     	;# 
  1237  0008                     	;# 
  1238  0009                     	;# 
  1239  000A                     	;# 
  1240  000B                     	;# 
  1241  000C                     	;# 
  1242  000D                     	;# 
  1243  000E                     	;# 
  1244  0010                     	;# 
  1245  0011                     	;# 
  1246  0012                     	;# 
  1247  0013                     	;# 
  1248  0014                     	;# 
  1249  0015                     	;# 
  1250  0015                     	;# 
  1251  0016                     	;# 
  1252  0016                     	;# 
  1253  0017                     	;# 
  1254  0018                     	;# 
  1255  0019                     	;# 
  1256  0019                     	;# 
  1257  001A                     	;# 
  1258  001B                     	;# 
  1259  001C                     	;# 
  1260  001D                     	;# 
  1261  001E                     	;# 
  1262  001F                     	;# 
  1263  008C                     	;# 
  1264  008D                     	;# 
  1265  008E                     	;# 
  1266  0090                     	;# 
  1267  0091                     	;# 
  1268  0092                     	;# 
  1269  0093                     	;# 
  1270  0094                     	;# 
  1271  0097                     	;# 
  1272  009B                     	;# 
  1273  009B                     	;# 
  1274  009C                     	;# 
  1275  009D                     	;# 
  1276  009E                     	;# 
  1277  009F                     	;# 
  1278  010C                     	;# 
  1279  010D                     	;# 
  1280  010E                     	;# 
  1281  0111                     	;# 
  1282  0112                     	;# 
  1283  0113                     	;# 
  1284  0114                     	;# 
  1285  0115                     	;# 
  1286  0116                     	;# 
  1287  0117                     	;# 
  1288  0118                     	;# 
  1289  0119                     	;# 
  1290  018C                     	;# 
  1291  018D                     	;# 
  1292  018E                     	;# 
  1293  0197                     	;# 
  1294  0199                     	;# 
  1295  0199                     	;# 
  1296  0199                     	;# 
  1297  019A                     	;# 
  1298  019A                     	;# 
  1299  019A                     	;# 
  1300  019B                     	;# 
  1301  019B                     	;# 
  1302  019B                     	;# 
  1303  019B                     	;# 
  1304  019B                     	;# 
  1305  019C                     	;# 
  1306  019C                     	;# 
  1307  019C                     	;# 
  1308  019D                     	;# 
  1309  019D                     	;# 
  1310  019D                     	;# 
  1311  019E                     	;# 
  1312  019E                     	;# 
  1313  019E                     	;# 
  1314  019F                     	;# 
  1315  019F                     	;# 
  1316  019F                     	;# 
  1317  019F                     	;# 
  1318  019F                     	;# 
  1319  020C                     	;# 
  1320  020D                     	;# 
  1321  020E                     	;# 
  1322  0211                     	;# 
  1323  0211                     	;# 
  1324  0212                     	;# 
  1325  0212                     	;# 
  1326  0213                     	;# 
  1327  0213                     	;# 
  1328  0214                     	;# 
  1329  0214                     	;# 
  1330  0215                     	;# 
  1331  0215                     	;# 
  1332  0215                     	;# 
  1333  0215                     	;# 
  1334  0216                     	;# 
  1335  0216                     	;# 
  1336  0217                     	;# 
  1337  0217                     	;# 
  1338  0219                     	;# 
  1339  021A                     	;# 
  1340  021B                     	;# 
  1341  021C                     	;# 
  1342  021D                     	;# 
  1343  021D                     	;# 
  1344  021E                     	;# 
  1345  021F                     	;# 
  1346  028C                     	;# 
  1347  028D                     	;# 
  1348  028E                     	;# 
  1349  0291                     	;# 
  1350  0291                     	;# 
  1351  0292                     	;# 
  1352  0293                     	;# 
  1353  0294                     	;# 
  1354  0295                     	;# 
  1355  0295                     	;# 
  1356  0296                     	;# 
  1357  0297                     	;# 
  1358  0298                     	;# 
  1359  029F                     	;# 
  1360  030C                     	;# 
  1361  030D                     	;# 
  1362  030E                     	;# 
  1363  0311                     	;# 
  1364  0311                     	;# 
  1365  0312                     	;# 
  1366  0313                     	;# 
  1367  0314                     	;# 
  1368  0315                     	;# 
  1369  0315                     	;# 
  1370  0316                     	;# 
  1371  0317                     	;# 
  1372  0318                     	;# 
  1373  038C                     	;# 
  1374  038D                     	;# 
  1375  038E                     	;# 
  1376  0391                     	;# 
  1377  0392                     	;# 
  1378  0393                     	;# 
  1379  0394                     	;# 
  1380  0395                     	;# 
  1381  0396                     	;# 
  1382  0397                     	;# 
  1383  0398                     	;# 
  1384  0399                     	;# 
  1385  039A                     	;# 
  1386  039C                     	;# 
  1387  039D                     	;# 
  1388  039E                     	;# 
  1389  039F                     	;# 
  1390  0411                     	;# 
  1391  0411                     	;# 
  1392  0412                     	;# 
  1393  0413                     	;# 
  1394  0414                     	;# 
  1395  0415                     	;# 
  1396  0416                     	;# 
  1397  0417                     	;# 
  1398  0418                     	;# 
  1399  0418                     	;# 
  1400  0419                     	;# 
  1401  041A                     	;# 
  1402  041B                     	;# 
  1403  041C                     	;# 
  1404  041D                     	;# 
  1405  041E                     	;# 
  1406  041F                     	;# 
  1407  0498                     	;# 
  1408  0498                     	;# 
  1409  0499                     	;# 
  1410  049A                     	;# 
  1411  049B                     	;# 
  1412  049B                     	;# 
  1413  049C                     	;# 
  1414  049D                     	;# 
  1415  049E                     	;# 
  1416  049F                     	;# 
  1417  0617                     	;# 
  1418  0618                     	;# 
  1419  0619                     	;# 
  1420  0619                     	;# 
  1421  061A                     	;# 
  1422  061B                     	;# 
  1423  061C                     	;# 
  1424  061C                     	;# 
  1425  061F                     	;# 
  1426  0691                     	;# 
  1427  0692                     	;# 
  1428  0693                     	;# 
  1429  0694                     	;# 
  1430  0695                     	;# 
  1431  0696                     	;# 
  1432  0697                     	;# 
  1433  0698                     	;# 
  1434  0699                     	;# 
  1435  0711                     	;# 
  1436  0712                     	;# 
  1437  0713                     	;# 
  1438  0714                     	;# 
  1439  0715                     	;# 
  1440  0716                     	;# 
  1441  0717                     	;# 
  1442  0718                     	;# 
  1443  0719                     	;# 
  1444  0891                     	;# 
  1445  0891                     	;# 
  1446  0891                     	;# 
  1447  0891                     	;# 
  1448  0891                     	;# 
  1449  0891                     	;# 
  1450  0892                     	;# 
  1451  0892                     	;# 
  1452  0892                     	;# 
  1453  0893                     	;# 
  1454  0893                     	;# 
  1455  0893                     	;# 
  1456  0893                     	;# 
  1457  0893                     	;# 
  1458  0893                     	;# 
  1459  0894                     	;# 
  1460  0894                     	;# 
  1461  0894                     	;# 
  1462  0895                     	;# 
  1463  0895                     	;# 
  1464  0895                     	;# 
  1465  0896                     	;# 
  1466  0896                     	;# 
  1467  0896                     	;# 
  1468  089B                     	;# 
  1469  0911                     	;# 
  1470  0912                     	;# 
  1471  0913                     	;# 
  1472  0914                     	;# 
  1473  0915                     	;# 
  1474  0916                     	;# 
  1475  0918                     	;# 
  1476  0919                     	;# 
  1477  091A                     	;# 
  1478  091B                     	;# 
  1479  091C                     	;# 
  1480  091D                     	;# 
  1481  091E                     	;# 
  1482  091F                     	;# 
  1483  0E0F                     	;# 
  1484  0E10                     	;# 
  1485  0E11                     	;# 
  1486  0E12                     	;# 
  1487  0E13                     	;# 
  1488  0E14                     	;# 
  1489  0E15                     	;# 
  1490  0E16                     	;# 
  1491  0E17                     	;# 
  1492  0E18                     	;# 
  1493  0E19                     	;# 
  1494  0E1A                     	;# 
  1495  0E1B                     	;# 
  1496  0E1C                     	;# 
  1497  0E1D                     	;# 
  1498  0E1E                     	;# 
  1499  0E1F                     	;# 
  1500  0E20                     	;# 
  1501  0E21                     	;# 
  1502  0E22                     	;# 
  1503  0E24                     	;# 
  1504  0E25                     	;# 
  1505  0E28                     	;# 
  1506  0E29                     	;# 
  1507  0E2A                     	;# 
  1508  0E2B                     	;# 
  1509  0E2C                     	;# 
  1510  0E2D                     	;# 
  1511  0E2E                     	;# 
  1512  0E2F                     	;# 
  1513  0E90                     	;# 
  1514  0E91                     	;# 
  1515  0E92                     	;# 
  1516  0E94                     	;# 
  1517  0E95                     	;# 
  1518  0E9C                     	;# 
  1519  0E9D                     	;# 
  1520  0E9E                     	;# 
  1521  0E9F                     	;# 
  1522  0EA0                     	;# 
  1523  0EA1                     	;# 
  1524  0EA2                     	;# 
  1525  0EA3                     	;# 
  1526  0EA4                     	;# 
  1527  0EA5                     	;# 
  1528  0EA6                     	;# 
  1529  0EA7                     	;# 
  1530  0F0F                     	;# 
  1531  0F10                     	;# 
  1532  0F11                     	;# 
  1533  0F12                     	;# 
  1534  0F13                     	;# 
  1535  0F14                     	;# 
  1536  0F15                     	;# 
  1537  0F16                     	;# 
  1538  0F17                     	;# 
  1539  0F18                     	;# 
  1540  0F19                     	;# 
  1541  0F1A                     	;# 
  1542  0F1B                     	;# 
  1543  0F1C                     	;# 
  1544  0F1D                     	;# 
  1545  0F1E                     	;# 
  1546  0F1F                     	;# 
  1547  0F20                     	;# 
  1548  0F21                     	;# 
  1549  0F22                     	;# 
  1550  0F23                     	;# 
  1551  0F24                     	;# 
  1552  0F25                     	;# 
  1553  0F26                     	;# 
  1554  0F27                     	;# 
  1555  0F28                     	;# 
  1556  0F29                     	;# 
  1557  0F2A                     	;# 
  1558  0F2B                     	;# 
  1559  0F2C                     	;# 
  1560  0F2D                     	;# 
  1561  0F2E                     	;# 
  1562  0F2F                     	;# 
  1563  0F30                     	;# 
  1564  0F31                     	;# 
  1565  0F32                     	;# 
  1566  0F33                     	;# 
  1567  0F34                     	;# 
  1568  0F35                     	;# 
  1569  0F36                     	;# 
  1570  0F37                     	;# 
  1571  0FE4                     	;# 
  1572  0FE5                     	;# 
  1573  0FE6                     	;# 
  1574  0FE7                     	;# 
  1575  0FE8                     	;# 
  1576  0FE9                     	;# 
  1577  0FEA                     	;# 
  1578  0FEB                     	;# 
  1579  0FED                     	;# 
  1580  0FEE                     	;# 
  1581  0FEF                     	;# 
  1582  0000                     	;# 
  1583  0001                     	;# 
  1584  0002                     	;# 
  1585  0003                     	;# 
  1586  0004                     	;# 
  1587  0005                     	;# 
  1588  0006                     	;# 
  1589  0007                     	;# 
  1590  0008                     	;# 
  1591  0009                     	;# 
  1592  000A                     	;# 
  1593  000B                     	;# 
  1594  000C                     	;# 
  1595  000D                     	;# 
  1596  000E                     	;# 
  1597  0010                     	;# 
  1598  0011                     	;# 
  1599  0012                     	;# 
  1600  0013                     	;# 
  1601  0014                     	;# 
  1602  0015                     	;# 
  1603  0015                     	;# 
  1604  0016                     	;# 
  1605  0016                     	;# 
  1606  0017                     	;# 
  1607  0018                     	;# 
  1608  0019                     	;# 
  1609  0019                     	;# 
  1610  001A                     	;# 
  1611  001B                     	;# 
  1612  001C                     	;# 
  1613  001D                     	;# 
  1614  001E                     	;# 
  1615  001F                     	;# 
  1616  008C                     	;# 
  1617  008D                     	;# 
  1618  008E                     	;# 
  1619  0090                     	;# 
  1620  0091                     	;# 
  1621  0092                     	;# 
  1622  0093                     	;# 
  1623  0094                     	;# 
  1624  0097                     	;# 
  1625  009B                     	;# 
  1626  009B                     	;# 
  1627  009C                     	;# 
  1628  009D                     	;# 
  1629  009E                     	;# 
  1630  009F                     	;# 
  1631  010C                     	;# 
  1632  010D                     	;# 
  1633  010E                     	;# 
  1634  0111                     	;# 
  1635  0112                     	;# 
  1636  0113                     	;# 
  1637  0114                     	;# 
  1638  0115                     	;# 
  1639  0116                     	;# 
  1640  0117                     	;# 
  1641  0118                     	;# 
  1642  0119                     	;# 
  1643  018C                     	;# 
  1644  018D                     	;# 
  1645  018E                     	;# 
  1646  0197                     	;# 
  1647  0199                     	;# 
  1648  0199                     	;# 
  1649  0199                     	;# 
  1650  019A                     	;# 
  1651  019A                     	;# 
  1652  019A                     	;# 
  1653  019B                     	;# 
  1654  019B                     	;# 
  1655  019B                     	;# 
  1656  019B                     	;# 
  1657  019B                     	;# 
  1658  019C                     	;# 
  1659  019C                     	;# 
  1660  019C                     	;# 
  1661  019D                     	;# 
  1662  019D                     	;# 
  1663  019D                     	;# 
  1664  019E                     	;# 
  1665  019E                     	;# 
  1666  019E                     	;# 
  1667  019F                     	;# 
  1668  019F                     	;# 
  1669  019F                     	;# 
  1670  019F                     	;# 
  1671  019F                     	;# 
  1672  020C                     	;# 
  1673  020D                     	;# 
  1674  020E                     	;# 
  1675  0211                     	;# 
  1676  0211                     	;# 
  1677  0212                     	;# 
  1678  0212                     	;# 
  1679  0213                     	;# 
  1680  0213                     	;# 
  1681  0214                     	;# 
  1682  0214                     	;# 
  1683  0215                     	;# 
  1684  0215                     	;# 
  1685  0215                     	;# 
  1686  0215                     	;# 
  1687  0216                     	;# 
  1688  0216                     	;# 
  1689  0217                     	;# 
  1690  0217                     	;# 
  1691  0219                     	;# 
  1692  021A                     	;# 
  1693  021B                     	;# 
  1694  021C                     	;# 
  1695  021D                     	;# 
  1696  021D                     	;# 
  1697  021E                     	;# 
  1698  021F                     	;# 
  1699  028C                     	;# 
  1700  028D                     	;# 
  1701  028E                     	;# 
  1702  0291                     	;# 
  1703  0291                     	;# 
  1704  0292                     	;# 
  1705  0293                     	;# 
  1706  0294                     	;# 
  1707  0295                     	;# 
  1708  0295                     	;# 
  1709  0296                     	;# 
  1710  0297                     	;# 
  1711  0298                     	;# 
  1712  029F                     	;# 
  1713  030C                     	;# 
  1714  030D                     	;# 
  1715  030E                     	;# 
  1716  0311                     	;# 
  1717  0311                     	;# 
  1718  0312                     	;# 
  1719  0313                     	;# 
  1720  0314                     	;# 
  1721  0315                     	;# 
  1722  0315                     	;# 
  1723  0316                     	;# 
  1724  0317                     	;# 
  1725  0318                     	;# 
  1726  038C                     	;# 
  1727  038D                     	;# 
  1728  038E                     	;# 
  1729  0391                     	;# 
  1730  0392                     	;# 
  1731  0393                     	;# 
  1732  0394                     	;# 
  1733  0395                     	;# 
  1734  0396                     	;# 
  1735  0397                     	;# 
  1736  0398                     	;# 
  1737  0399                     	;# 
  1738  039A                     	;# 
  1739  039C                     	;# 
  1740  039D                     	;# 
  1741  039E                     	;# 
  1742  039F                     	;# 
  1743  0411                     	;# 
  1744  0411                     	;# 
  1745  0412                     	;# 
  1746  0413                     	;# 
  1747  0414                     	;# 
  1748  0415                     	;# 
  1749  0416                     	;# 
  1750  0417                     	;# 
  1751  0418                     	;# 
  1752  0418                     	;# 
  1753  0419                     	;# 
  1754  041A                     	;# 
  1755  041B                     	;# 
  1756  041C                     	;# 
  1757  041D                     	;# 
  1758  041E                     	;# 
  1759  041F                     	;# 
  1760  0498                     	;# 
  1761  0498                     	;# 
  1762  0499                     	;# 
  1763  049A                     	;# 
  1764  049B                     	;# 
  1765  049B                     	;# 
  1766  049C                     	;# 
  1767  049D                     	;# 
  1768  049E                     	;# 
  1769  049F                     	;# 
  1770  0617                     	;# 
  1771  0618                     	;# 
  1772  0619                     	;# 
  1773  0619                     	;# 
  1774  061A                     	;# 
  1775  061B                     	;# 
  1776  061C                     	;# 
  1777  061C                     	;# 
  1778  061F                     	;# 
  1779  0691                     	;# 
  1780  0692                     	;# 
  1781  0693                     	;# 
  1782  0694                     	;# 
  1783  0695                     	;# 
  1784  0696                     	;# 
  1785  0697                     	;# 
  1786  0698                     	;# 
  1787  0699                     	;# 
  1788  0711                     	;# 
  1789  0712                     	;# 
  1790  0713                     	;# 
  1791  0714                     	;# 
  1792  0715                     	;# 
  1793  0716                     	;# 
  1794  0717                     	;# 
  1795  0718                     	;# 
  1796  0719                     	;# 
  1797  0891                     	;# 
  1798  0891                     	;# 
  1799  0891                     	;# 
  1800  0891                     	;# 
  1801  0891                     	;# 
  1802  0891                     	;# 
  1803  0892                     	;# 
  1804  0892                     	;# 
  1805  0892                     	;# 
  1806  0893                     	;# 
  1807  0893                     	;# 
  1808  0893                     	;# 
  1809  0893                     	;# 
  1810  0893                     	;# 
  1811  0893                     	;# 
  1812  0894                     	;# 
  1813  0894                     	;# 
  1814  0894                     	;# 
  1815  0895                     	;# 
  1816  0895                     	;# 
  1817  0895                     	;# 
  1818  0896                     	;# 
  1819  0896                     	;# 
  1820  0896                     	;# 
  1821  089B                     	;# 
  1822  0911                     	;# 
  1823  0912                     	;# 
  1824  0913                     	;# 
  1825  0914                     	;# 
  1826  0915                     	;# 
  1827  0916                     	;# 
  1828  0918                     	;# 
  1829  0919                     	;# 
  1830  091A                     	;# 
  1831  091B                     	;# 
  1832  091C                     	;# 
  1833  091D                     	;# 
  1834  091E                     	;# 
  1835  091F                     	;# 
  1836  0E0F                     	;# 
  1837  0E10                     	;# 
  1838  0E11                     	;# 
  1839  0E12                     	;# 
  1840  0E13                     	;# 
  1841  0E14                     	;# 
  1842  0E15                     	;# 
  1843  0E16                     	;# 
  1844  0E17                     	;# 
  1845  0E18                     	;# 
  1846  0E19                     	;# 
  1847  0E1A                     	;# 
  1848  0E1B                     	;# 
  1849  0E1C                     	;# 
  1850  0E1D                     	;# 
  1851  0E1E                     	;# 
  1852  0E1F                     	;# 
  1853  0E20                     	;# 
  1854  0E21                     	;# 
  1855  0E22                     	;# 
  1856  0E24                     	;# 
  1857  0E25                     	;# 
  1858  0E28                     	;# 
  1859  0E29                     	;# 
  1860  0E2A                     	;# 
  1861  0E2B                     	;# 
  1862  0E2C                     	;# 
  1863  0E2D                     	;# 
  1864  0E2E                     	;# 
  1865  0E2F                     	;# 
  1866  0E90                     	;# 
  1867  0E91                     	;# 
  1868  0E92                     	;# 
  1869  0E94                     	;# 
  1870  0E95                     	;# 
  1871  0E9C                     	;# 
  1872  0E9D                     	;# 
  1873  0E9E                     	;# 
  1874  0E9F                     	;# 
  1875  0EA0                     	;# 
  1876  0EA1                     	;# 
  1877  0EA2                     	;# 
  1878  0EA3                     	;# 
  1879  0EA4                     	;# 
  1880  0EA5                     	;# 
  1881  0EA6                     	;# 
  1882  0EA7                     	;# 
  1883  0F0F                     	;# 
  1884  0F10                     	;# 
  1885  0F11                     	;# 
  1886  0F12                     	;# 
  1887  0F13                     	;# 
  1888  0F14                     	;# 
  1889  0F15                     	;# 
  1890  0F16                     	;# 
  1891  0F17                     	;# 
  1892  0F18                     	;# 
  1893  0F19                     	;# 
  1894  0F1A                     	;# 
  1895  0F1B                     	;# 
  1896  0F1C                     	;# 
  1897  0F1D                     	;# 
  1898  0F1E                     	;# 
  1899  0F1F                     	;# 
  1900  0F20                     	;# 
  1901  0F21                     	;# 
  1902  0F22                     	;# 
  1903  0F23                     	;# 
  1904  0F24                     	;# 
  1905  0F25                     	;# 
  1906  0F26                     	;# 
  1907  0F27                     	;# 
  1908  0F28                     	;# 
  1909  0F29                     	;# 
  1910  0F2A                     	;# 
  1911  0F2B                     	;# 
  1912  0F2C                     	;# 
  1913  0F2D                     	;# 
  1914  0F2E                     	;# 
  1915  0F2F                     	;# 
  1916  0F30                     	;# 
  1917  0F31                     	;# 
  1918  0F32                     	;# 
  1919  0F33                     	;# 
  1920  0F34                     	;# 
  1921  0F35                     	;# 
  1922  0F36                     	;# 
  1923  0F37                     	;# 
  1924  0FE4                     	;# 
  1925  0FE5                     	;# 
  1926  0FE6                     	;# 
  1927  0FE7                     	;# 
  1928  0FE8                     	;# 
  1929  0FE9                     	;# 
  1930  0FEA                     	;# 
  1931  0FEB                     	;# 
  1932  0FED                     	;# 
  1933  0FEE                     	;# 
  1934  0FEF                     	;# 
  1935  0000                     	;# 
  1936  0001                     	;# 
  1937  0002                     	;# 
  1938  0003                     	;# 
  1939  0004                     	;# 
  1940  0005                     	;# 
  1941  0006                     	;# 
  1942  0007                     	;# 
  1943  0008                     	;# 
  1944  0009                     	;# 
  1945  000A                     	;# 
  1946  000B                     	;# 
  1947  000C                     	;# 
  1948  000D                     	;# 
  1949  000E                     	;# 
  1950  0010                     	;# 
  1951  0011                     	;# 
  1952  0012                     	;# 
  1953  0013                     	;# 
  1954  0014                     	;# 
  1955  0015                     	;# 
  1956  0015                     	;# 
  1957  0016                     	;# 
  1958  0016                     	;# 
  1959  0017                     	;# 
  1960  0018                     	;# 
  1961  0019                     	;# 
  1962  0019                     	;# 
  1963  001A                     	;# 
  1964  001B                     	;# 
  1965  001C                     	;# 
  1966  001D                     	;# 
  1967  001E                     	;# 
  1968  001F                     	;# 
  1969  008C                     	;# 
  1970  008D                     	;# 
  1971  008E                     	;# 
  1972  0090                     	;# 
  1973  0091                     	;# 
  1974  0092                     	;# 
  1975  0093                     	;# 
  1976  0094                     	;# 
  1977  0097                     	;# 
  1978  009B                     	;# 
  1979  009B                     	;# 
  1980  009C                     	;# 
  1981  009D                     	;# 
  1982  009E                     	;# 
  1983  009F                     	;# 
  1984  010C                     	;# 
  1985  010D                     	;# 
  1986  010E                     	;# 
  1987  0111                     	;# 
  1988  0112                     	;# 
  1989  0113                     	;# 
  1990  0114                     	;# 
  1991  0115                     	;# 
  1992  0116                     	;# 
  1993  0117                     	;# 
  1994  0118                     	;# 
  1995  0119                     	;# 
  1996  018C                     	;# 
  1997  018D                     	;# 
  1998  018E                     	;# 
  1999  0197                     	;# 
  2000  0199                     	;# 
  2001  0199                     	;# 
  2002  0199                     	;# 
  2003  019A                     	;# 
  2004  019A                     	;# 
  2005  019A                     	;# 
  2006  019B                     	;# 
  2007  019B                     	;# 
  2008  019B                     	;# 
  2009  019B                     	;# 
  2010  019B                     	;# 
  2011  019C                     	;# 
  2012  019C                     	;# 
  2013  019C                     	;# 
  2014  019D                     	;# 
  2015  019D                     	;# 
  2016  019D                     	;# 
  2017  019E                     	;# 
  2018  019E                     	;# 
  2019  019E                     	;# 
  2020  019F                     	;# 
  2021  019F                     	;# 
  2022  019F                     	;# 
  2023  019F                     	;# 
  2024  019F                     	;# 
  2025  020C                     	;# 
  2026  020D                     	;# 
  2027  020E                     	;# 
  2028  0211                     	;# 
  2029  0211                     	;# 
  2030  0212                     	;# 
  2031  0212                     	;# 
  2032  0213                     	;# 
  2033  0213                     	;# 
  2034  0214                     	;# 
  2035  0214                     	;# 
  2036  0215                     	;# 
  2037  0215                     	;# 
  2038  0215                     	;# 
  2039  0215                     	;# 
  2040  0216                     	;# 
  2041  0216                     	;# 
  2042  0217                     	;# 
  2043  0217                     	;# 
  2044  0219                     	;# 
  2045  021A                     	;# 
  2046  021B                     	;# 
  2047  021C                     	;# 
  2048  021D                     	;# 
  2049  021D                     	;# 
  2050  021E                     	;# 
  2051  021F                     	;# 
  2052  028C                     	;# 
  2053  028D                     	;# 
  2054  028E                     	;# 
  2055  0291                     	;# 
  2056  0291                     	;# 
  2057  0292                     	;# 
  2058  0293                     	;# 
  2059  0294                     	;# 
  2060  0295                     	;# 
  2061  0295                     	;# 
  2062  0296                     	;# 
  2063  0297                     	;# 
  2064  0298                     	;# 
  2065  029F                     	;# 
  2066  030C                     	;# 
  2067  030D                     	;# 
  2068  030E                     	;# 
  2069  0311                     	;# 
  2070  0311                     	;# 
  2071  0312                     	;# 
  2072  0313                     	;# 
  2073  0314                     	;# 
  2074  0315                     	;# 
  2075  0315                     	;# 
  2076  0316                     	;# 
  2077  0317                     	;# 
  2078  0318                     	;# 
  2079  038C                     	;# 
  2080  038D                     	;# 
  2081  038E                     	;# 
  2082  0391                     	;# 
  2083  0392                     	;# 
  2084  0393                     	;# 
  2085  0394                     	;# 
  2086  0395                     	;# 
  2087  0396                     	;# 
  2088  0397                     	;# 
  2089  0398                     	;# 
  2090  0399                     	;# 
  2091  039A                     	;# 
  2092  039C                     	;# 
  2093  039D                     	;# 
  2094  039E                     	;# 
  2095  039F                     	;# 
  2096  0411                     	;# 
  2097  0411                     	;# 
  2098  0412                     	;# 
  2099  0413                     	;# 
  2100  0414                     	;# 
  2101  0415                     	;# 
  2102  0416                     	;# 
  2103  0417                     	;# 
  2104  0418                     	;# 
  2105  0418                     	;# 
  2106  0419                     	;# 
  2107  041A                     	;# 
  2108  041B                     	;# 
  2109  041C                     	;# 
  2110  041D                     	;# 
  2111  041E                     	;# 
  2112  041F                     	;# 
  2113  0498                     	;# 
  2114  0498                     	;# 
  2115  0499                     	;# 
  2116  049A                     	;# 
  2117  049B                     	;# 
  2118  049B                     	;# 
  2119  049C                     	;# 
  2120  049D                     	;# 
  2121  049E                     	;# 
  2122  049F                     	;# 
  2123  0617                     	;# 
  2124  0618                     	;# 
  2125  0619                     	;# 
  2126  0619                     	;# 
  2127  061A                     	;# 
  2128  061B                     	;# 
  2129  061C                     	;# 
  2130  061C                     	;# 
  2131  061F                     	;# 
  2132  0691                     	;# 
  2133  0692                     	;# 
  2134  0693                     	;# 
  2135  0694                     	;# 
  2136  0695                     	;# 
  2137  0696                     	;# 
  2138  0697                     	;# 
  2139  0698                     	;# 
  2140  0699                     	;# 
  2141  0711                     	;# 
  2142  0712                     	;# 
  2143  0713                     	;# 
  2144  0714                     	;# 
  2145  0715                     	;# 
  2146  0716                     	;# 
  2147  0717                     	;# 
  2148  0718                     	;# 
  2149  0719                     	;# 
  2150  0891                     	;# 
  2151  0891                     	;# 
  2152  0891                     	;# 
  2153  0891                     	;# 
  2154  0891                     	;# 
  2155  0891                     	;# 
  2156  0892                     	;# 
  2157  0892                     	;# 
  2158  0892                     	;# 
  2159  0893                     	;# 
  2160  0893                     	;# 
  2161  0893                     	;# 
  2162  0893                     	;# 
  2163  0893                     	;# 
  2164  0893                     	;# 
  2165  0894                     	;# 
  2166  0894                     	;# 
  2167  0894                     	;# 
  2168  0895                     	;# 
  2169  0895                     	;# 
  2170  0895                     	;# 
  2171  0896                     	;# 
  2172  0896                     	;# 
  2173  0896                     	;# 
  2174  089B                     	;# 
  2175  0911                     	;# 
  2176  0912                     	;# 
  2177  0913                     	;# 
  2178  0914                     	;# 
  2179  0915                     	;# 
  2180  0916                     	;# 
  2181  0918                     	;# 
  2182  0919                     	;# 
  2183  091A                     	;# 
  2184  091B                     	;# 
  2185  091C                     	;# 
  2186  091D                     	;# 
  2187  091E                     	;# 
  2188  091F                     	;# 
  2189  0E0F                     	;# 
  2190  0E10                     	;# 
  2191  0E11                     	;# 
  2192  0E12                     	;# 
  2193  0E13                     	;# 
  2194  0E14                     	;# 
  2195  0E15                     	;# 
  2196  0E16                     	;# 
  2197  0E17                     	;# 
  2198  0E18                     	;# 
  2199  0E19                     	;# 
  2200  0E1A                     	;# 
  2201  0E1B                     	;# 
  2202  0E1C                     	;# 
  2203  0E1D                     	;# 
  2204  0E1E                     	;# 
  2205  0E1F                     	;# 
  2206  0E20                     	;# 
  2207  0E21                     	;# 
  2208  0E22                     	;# 
  2209  0E24                     	;# 
  2210  0E25                     	;# 
  2211  0E28                     	;# 
  2212  0E29                     	;# 
  2213  0E2A                     	;# 
  2214  0E2B                     	;# 
  2215  0E2C                     	;# 
  2216  0E2D                     	;# 
  2217  0E2E                     	;# 
  2218  0E2F                     	;# 
  2219  0E90                     	;# 
  2220  0E91                     	;# 
  2221  0E92                     	;# 
  2222  0E94                     	;# 
  2223  0E95                     	;# 
  2224  0E9C                     	;# 
  2225  0E9D                     	;# 
  2226  0E9E                     	;# 
  2227  0E9F                     	;# 
  2228  0EA0                     	;# 
  2229  0EA1                     	;# 
  2230  0EA2                     	;# 
  2231  0EA3                     	;# 
  2232  0EA4                     	;# 
  2233  0EA5                     	;# 
  2234  0EA6                     	;# 
  2235  0EA7                     	;# 
  2236  0F0F                     	;# 
  2237  0F10                     	;# 
  2238  0F11                     	;# 
  2239  0F12                     	;# 
  2240  0F13                     	;# 
  2241  0F14                     	;# 
  2242  0F15                     	;# 
  2243  0F16                     	;# 
  2244  0F17                     	;# 
  2245  0F18                     	;# 
  2246  0F19                     	;# 
  2247  0F1A                     	;# 
  2248  0F1B                     	;# 
  2249  0F1C                     	;# 
  2250  0F1D                     	;# 
  2251  0F1E                     	;# 
  2252  0F1F                     	;# 
  2253  0F20                     	;# 
  2254  0F21                     	;# 
  2255  0F22                     	;# 
  2256  0F23                     	;# 
  2257  0F24                     	;# 
  2258  0F25                     	;# 
  2259  0F26                     	;# 
  2260  0F27                     	;# 
  2261  0F28                     	;# 
  2262  0F29                     	;# 
  2263  0F2A                     	;# 
  2264  0F2B                     	;# 
  2265  0F2C                     	;# 
  2266  0F2D                     	;# 
  2267  0F2E                     	;# 
  2268  0F2F                     	;# 
  2269  0F30                     	;# 
  2270  0F31                     	;# 
  2271  0F32                     	;# 
  2272  0F33                     	;# 
  2273  0F34                     	;# 
  2274  0F35                     	;# 
  2275  0F36                     	;# 
  2276  0F37                     	;# 
  2277  0FE4                     	;# 
  2278  0FE5                     	;# 
  2279  0FE6                     	;# 
  2280  0FE7                     	;# 
  2281  0FE8                     	;# 
  2282  0FE9                     	;# 
  2283  0FEA                     	;# 
  2284  0FEB                     	;# 
  2285  0FED                     	;# 
  2286  0FEE                     	;# 
  2287  0FEF                     	;# 
  2288  0000                     	;# 
  2289  0001                     	;# 
  2290  0002                     	;# 
  2291  0003                     	;# 
  2292  0004                     	;# 
  2293  0005                     	;# 
  2294  0006                     	;# 
  2295  0007                     	;# 
  2296  0008                     	;# 
  2297  0009                     	;# 
  2298  000A                     	;# 
  2299  000B                     	;# 
  2300  000C                     	;# 
  2301  000D                     	;# 
  2302  000E                     	;# 
  2303  0010                     	;# 
  2304  0011                     	;# 
  2305  0012                     	;# 
  2306  0013                     	;# 
  2307  0014                     	;# 
  2308  0015                     	;# 
  2309  0015                     	;# 
  2310  0016                     	;# 
  2311  0016                     	;# 
  2312  0017                     	;# 
  2313  0018                     	;# 
  2314  0019                     	;# 
  2315  0019                     	;# 
  2316  001A                     	;# 
  2317  001B                     	;# 
  2318  001C                     	;# 
  2319  001D                     	;# 
  2320  001E                     	;# 
  2321  001F                     	;# 
  2322  008C                     	;# 
  2323  008D                     	;# 
  2324  008E                     	;# 
  2325  0090                     	;# 
  2326  0091                     	;# 
  2327  0092                     	;# 
  2328  0093                     	;# 
  2329  0094                     	;# 
  2330  0097                     	;# 
  2331  009B                     	;# 
  2332  009B                     	;# 
  2333  009C                     	;# 
  2334  009D                     	;# 
  2335  009E                     	;# 
  2336  009F                     	;# 
  2337  010C                     	;# 
  2338  010D                     	;# 
  2339  010E                     	;# 
  2340  0111                     	;# 
  2341  0112                     	;# 
  2342  0113                     	;# 
  2343  0114                     	;# 
  2344  0115                     	;# 
  2345  0116                     	;# 
  2346  0117                     	;# 
  2347  0118                     	;# 
  2348  0119                     	;# 
  2349  018C                     	;# 
  2350  018D                     	;# 
  2351  018E                     	;# 
  2352  0197                     	;# 
  2353  0199                     	;# 
  2354  0199                     	;# 
  2355  0199                     	;# 
  2356  019A                     	;# 
  2357  019A                     	;# 
  2358  019A                     	;# 
  2359  019B                     	;# 
  2360  019B                     	;# 
  2361  019B                     	;# 
  2362  019B                     	;# 
  2363  019B                     	;# 
  2364  019C                     	;# 
  2365  019C                     	;# 
  2366  019C                     	;# 
  2367  019D                     	;# 
  2368  019D                     	;# 
  2369  019D                     	;# 
  2370  019E                     	;# 
  2371  019E                     	;# 
  2372  019E                     	;# 
  2373  019F                     	;# 
  2374  019F                     	;# 
  2375  019F                     	;# 
  2376  019F                     	;# 
  2377  019F                     	;# 
  2378  020C                     	;# 
  2379  020D                     	;# 
  2380  020E                     	;# 
  2381  0211                     	;# 
  2382  0211                     	;# 
  2383  0212                     	;# 
  2384  0212                     	;# 
  2385  0213                     	;# 
  2386  0213                     	;# 
  2387  0214                     	;# 
  2388  0214                     	;# 
  2389  0215                     	;# 
  2390  0215                     	;# 
  2391  0215                     	;# 
  2392  0215                     	;# 
  2393  0216                     	;# 
  2394  0216                     	;# 
  2395  0217                     	;# 
  2396  0217                     	;# 
  2397  0219                     	;# 
  2398  021A                     	;# 
  2399  021B                     	;# 
  2400  021C                     	;# 
  2401  021D                     	;# 
  2402  021D                     	;# 
  2403  021E                     	;# 
  2404  021F                     	;# 
  2405  028C                     	;# 
  2406  028D                     	;# 
  2407  028E                     	;# 
  2408  0291                     	;# 
  2409  0291                     	;# 
  2410  0292                     	;# 
  2411  0293                     	;# 
  2412  0294                     	;# 
  2413  0295                     	;# 
  2414  0295                     	;# 
  2415  0296                     	;# 
  2416  0297                     	;# 
  2417  0298                     	;# 
  2418  029F                     	;# 
  2419  030C                     	;# 
  2420  030D                     	;# 
  2421  030E                     	;# 
  2422  0311                     	;# 
  2423  0311                     	;# 
  2424  0312                     	;# 
  2425  0313                     	;# 
  2426  0314                     	;# 
  2427  0315                     	;# 
  2428  0315                     	;# 
  2429  0316                     	;# 
  2430  0317                     	;# 
  2431  0318                     	;# 
  2432  038C                     	;# 
  2433  038D                     	;# 
  2434  038E                     	;# 
  2435  0391                     	;# 
  2436  0392                     	;# 
  2437  0393                     	;# 
  2438  0394                     	;# 
  2439  0395                     	;# 
  2440  0396                     	;# 
  2441  0397                     	;# 
  2442  0398                     	;# 
  2443  0399                     	;# 
  2444  039A                     	;# 
  2445  039C                     	;# 
  2446  039D                     	;# 
  2447  039E                     	;# 
  2448  039F                     	;# 
  2449  0411                     	;# 
  2450  0411                     	;# 
  2451  0412                     	;# 
  2452  0413                     	;# 
  2453  0414                     	;# 
  2454  0415                     	;# 
  2455  0416                     	;# 
  2456  0417                     	;# 
  2457  0418                     	;# 
  2458  0418                     	;# 
  2459  0419                     	;# 
  2460  041A                     	;# 
  2461  041B                     	;# 
  2462  041C                     	;# 
  2463  041D                     	;# 
  2464  041E                     	;# 
  2465  041F                     	;# 
  2466  0498                     	;# 
  2467  0498                     	;# 
  2468  0499                     	;# 
  2469  049A                     	;# 
  2470  049B                     	;# 
  2471  049B                     	;# 
  2472  049C                     	;# 
  2473  049D                     	;# 
  2474  049E                     	;# 
  2475  049F                     	;# 
  2476  0617                     	;# 
  2477  0618                     	;# 
  2478  0619                     	;# 
  2479  0619                     	;# 
  2480  061A                     	;# 
  2481  061B                     	;# 
  2482  061C                     	;# 
  2483  061C                     	;# 
  2484  061F                     	;# 
  2485  0691                     	;# 
  2486  0692                     	;# 
  2487  0693                     	;# 
  2488  0694                     	;# 
  2489  0695                     	;# 
  2490  0696                     	;# 
  2491  0697                     	;# 
  2492  0698                     	;# 
  2493  0699                     	;# 
  2494  0711                     	;# 
  2495  0712                     	;# 
  2496  0713                     	;# 
  2497  0714                     	;# 
  2498  0715                     	;# 
  2499  0716                     	;# 
  2500  0717                     	;# 
  2501  0718                     	;# 
  2502  0719                     	;# 
  2503  0891                     	;# 
  2504  0891                     	;# 
  2505  0891                     	;# 
  2506  0891                     	;# 
  2507  0891                     	;# 
  2508  0891                     	;# 
  2509  0892                     	;# 
  2510  0892                     	;# 
  2511  0892                     	;# 
  2512  0893                     	;# 
  2513  0893                     	;# 
  2514  0893                     	;# 
  2515  0893                     	;# 
  2516  0893                     	;# 
  2517  0893                     	;# 
  2518  0894                     	;# 
  2519  0894                     	;# 
  2520  0894                     	;# 
  2521  0895                     	;# 
  2522  0895                     	;# 
  2523  0895                     	;# 
  2524  0896                     	;# 
  2525  0896                     	;# 
  2526  0896                     	;# 
  2527  089B                     	;# 
  2528  0911                     	;# 
  2529  0912                     	;# 
  2530  0913                     	;# 
  2531  0914                     	;# 
  2532  0915                     	;# 
  2533  0916                     	;# 
  2534  0918                     	;# 
  2535  0919                     	;# 
  2536  091A                     	;# 
  2537  091B                     	;# 
  2538  091C                     	;# 
  2539  091D                     	;# 
  2540  091E                     	;# 
  2541  091F                     	;# 
  2542  0E0F                     	;# 
  2543  0E10                     	;# 
  2544  0E11                     	;# 
  2545  0E12                     	;# 
  2546  0E13                     	;# 
  2547  0E14                     	;# 
  2548  0E15                     	;# 
  2549  0E16                     	;# 
  2550  0E17                     	;# 
  2551  0E18                     	;# 
  2552  0E19                     	;# 
  2553  0E1A                     	;# 
  2554  0E1B                     	;# 
  2555  0E1C                     	;# 
  2556  0E1D                     	;# 
  2557  0E1E                     	;# 
  2558  0E1F                     	;# 
  2559  0E20                     	;# 
  2560  0E21                     	;# 
  2561  0E22                     	;# 
  2562  0E24                     	;# 
  2563  0E25                     	;# 
  2564  0E28                     	;# 
  2565  0E29                     	;# 
  2566  0E2A                     	;# 
  2567  0E2B                     	;# 
  2568  0E2C                     	;# 
  2569  0E2D                     	;# 
  2570  0E2E                     	;# 
  2571  0E2F                     	;# 
  2572  0E90                     	;# 
  2573  0E91                     	;# 
  2574  0E92                     	;# 
  2575  0E94                     	;# 
  2576  0E95                     	;# 
  2577  0E9C                     	;# 
  2578  0E9D                     	;# 
  2579  0E9E                     	;# 
  2580  0E9F                     	;# 
  2581  0EA0                     	;# 
  2582  0EA1                     	;# 
  2583  0EA2                     	;# 
  2584  0EA3                     	;# 
  2585  0EA4                     	;# 
  2586  0EA5                     	;# 
  2587  0EA6                     	;# 
  2588  0EA7                     	;# 
  2589  0F0F                     	;# 
  2590  0F10                     	;# 
  2591  0F11                     	;# 
  2592  0F12                     	;# 
  2593  0F13                     	;# 
  2594  0F14                     	;# 
  2595  0F15                     	;# 
  2596  0F16                     	;# 
  2597  0F17                     	;# 
  2598  0F18                     	;# 
  2599  0F19                     	;# 
  2600  0F1A                     	;# 
  2601  0F1B                     	;# 
  2602  0F1C                     	;# 
  2603  0F1D                     	;# 
  2604  0F1E                     	;# 
  2605  0F1F                     	;# 
  2606  0F20                     	;# 
  2607  0F21                     	;# 
  2608  0F22                     	;# 
  2609  0F23                     	;# 
  2610  0F24                     	;# 
  2611  0F25                     	;# 
  2612  0F26                     	;# 
  2613  0F27                     	;# 
  2614  0F28                     	;# 
  2615  0F29                     	;# 
  2616  0F2A                     	;# 
  2617  0F2B                     	;# 
  2618  0F2C                     	;# 
  2619  0F2D                     	;# 
  2620  0F2E                     	;# 
  2621  0F2F                     	;# 
  2622  0F30                     	;# 
  2623  0F31                     	;# 
  2624  0F32                     	;# 
  2625  0F33                     	;# 
  2626  0F34                     	;# 
  2627  0F35                     	;# 
  2628  0F36                     	;# 
  2629  0F37                     	;# 
  2630  0FE4                     	;# 
  2631  0FE5                     	;# 
  2632  0FE6                     	;# 
  2633  0FE7                     	;# 
  2634  0FE8                     	;# 
  2635  0FE9                     	;# 
  2636  0FEA                     	;# 
  2637  0FEB                     	;# 
  2638  0FED                     	;# 
  2639  0FEE                     	;# 
  2640  0FEF                     	;# 
  2641  0000                     	;# 
  2642  0001                     	;# 
  2643  0002                     	;# 
  2644  0003                     	;# 
  2645  0004                     	;# 
  2646  0005                     	;# 
  2647  0006                     	;# 
  2648  0007                     	;# 
  2649  0008                     	;# 
  2650  0009                     	;# 
  2651  000A                     	;# 
  2652  000B                     	;# 
  2653  000C                     	;# 
  2654  000D                     	;# 
  2655  000E                     	;# 
  2656  0010                     	;# 
  2657  0011                     	;# 
  2658  0012                     	;# 
  2659  0013                     	;# 
  2660  0014                     	;# 
  2661  0015                     	;# 
  2662  0015                     	;# 
  2663  0016                     	;# 
  2664  0016                     	;# 
  2665  0017                     	;# 
  2666  0018                     	;# 
  2667  0019                     	;# 
  2668  0019                     	;# 
  2669  001A                     	;# 
  2670  001B                     	;# 
  2671  001C                     	;# 
  2672  001D                     	;# 
  2673  001E                     	;# 
  2674  001F                     	;# 
  2675  008C                     	;# 
  2676  008D                     	;# 
  2677  008E                     	;# 
  2678  0090                     	;# 
  2679  0091                     	;# 
  2680  0092                     	;# 
  2681  0093                     	;# 
  2682  0094                     	;# 
  2683  0097                     	;# 
  2684  009B                     	;# 
  2685  009B                     	;# 
  2686  009C                     	;# 
  2687  009D                     	;# 
  2688  009E                     	;# 
  2689  009F                     	;# 
  2690  010C                     	;# 
  2691  010D                     	;# 
  2692  010E                     	;# 
  2693  0111                     	;# 
  2694  0112                     	;# 
  2695  0113                     	;# 
  2696  0114                     	;# 
  2697  0115                     	;# 
  2698  0116                     	;# 
  2699  0117                     	;# 
  2700  0118                     	;# 
  2701  0119                     	;# 
  2702  018C                     	;# 
  2703  018D                     	;# 
  2704  018E                     	;# 
  2705  0197                     	;# 
  2706  0199                     	;# 
  2707  0199                     	;# 
  2708  0199                     	;# 
  2709  019A                     	;# 
  2710  019A                     	;# 
  2711  019A                     	;# 
  2712  019B                     	;# 
  2713  019B                     	;# 
  2714  019B                     	;# 
  2715  019B                     	;# 
  2716  019B                     	;# 
  2717  019C                     	;# 
  2718  019C                     	;# 
  2719  019C                     	;# 
  2720  019D                     	;# 
  2721  019D                     	;# 
  2722  019D                     	;# 
  2723  019E                     	;# 
  2724  019E                     	;# 
  2725  019E                     	;# 
  2726  019F                     	;# 
  2727  019F                     	;# 
  2728  019F                     	;# 
  2729  019F                     	;# 
  2730  019F                     	;# 
  2731  020C                     	;# 
  2732  020D                     	;# 
  2733  020E                     	;# 
  2734  0211                     	;# 
  2735  0211                     	;# 
  2736  0212                     	;# 
  2737  0212                     	;# 
  2738  0213                     	;# 
  2739  0213                     	;# 
  2740  0214                     	;# 
  2741  0214                     	;# 
  2742  0215                     	;# 
  2743  0215                     	;# 
  2744  0215                     	;# 
  2745  0215                     	;# 
  2746  0216                     	;# 
  2747  0216                     	;# 
  2748  0217                     	;# 
  2749  0217                     	;# 
  2750  0219                     	;# 
  2751  021A                     	;# 
  2752  021B                     	;# 
  2753  021C                     	;# 
  2754  021D                     	;# 
  2755  021D                     	;# 
  2756  021E                     	;# 
  2757  021F                     	;# 
  2758  028C                     	;# 
  2759  028D                     	;# 
  2760  028E                     	;# 
  2761  0291                     	;# 
  2762  0291                     	;# 
  2763  0292                     	;# 
  2764  0293                     	;# 
  2765  0294                     	;# 
  2766  0295                     	;# 
  2767  0295                     	;# 
  2768  0296                     	;# 
  2769  0297                     	;# 
  2770  0298                     	;# 
  2771  029F                     	;# 
  2772  030C                     	;# 
  2773  030D                     	;# 
  2774  030E                     	;# 
  2775  0311                     	;# 
  2776  0311                     	;# 
  2777  0312                     	;# 
  2778  0313                     	;# 
  2779  0314                     	;# 
  2780  0315                     	;# 
  2781  0315                     	;# 
  2782  0316                     	;# 
  2783  0317                     	;# 
  2784  0318                     	;# 
  2785  038C                     	;# 
  2786  038D                     	;# 
  2787  038E                     	;# 
  2788  0391                     	;# 
  2789  0392                     	;# 
  2790  0393                     	;# 
  2791  0394                     	;# 
  2792  0395                     	;# 
  2793  0396                     	;# 
  2794  0397                     	;# 
  2795  0398                     	;# 
  2796  0399                     	;# 
  2797  039A                     	;# 
  2798  039C                     	;# 
  2799  039D                     	;# 
  2800  039E                     	;# 
  2801  039F                     	;# 
  2802  0411                     	;# 
  2803  0411                     	;# 
  2804  0412                     	;# 
  2805  0413                     	;# 
  2806  0414                     	;# 
  2807  0415                     	;# 
  2808  0416                     	;# 
  2809  0417                     	;# 
  2810  0418                     	;# 
  2811  0418                     	;# 
  2812  0419                     	;# 
  2813  041A                     	;# 
  2814  041B                     	;# 
  2815  041C                     	;# 
  2816  041D                     	;# 
  2817  041E                     	;# 
  2818  041F                     	;# 
  2819  0498                     	;# 
  2820  0498                     	;# 
  2821  0499                     	;# 
  2822  049A                     	;# 
  2823  049B                     	;# 
  2824  049B                     	;# 
  2825  049C                     	;# 
  2826  049D                     	;# 
  2827  049E                     	;# 
  2828  049F                     	;# 
  2829  0617                     	;# 
  2830  0618                     	;# 
  2831  0619                     	;# 
  2832  0619                     	;# 
  2833  061A                     	;# 
  2834  061B                     	;# 
  2835  061C                     	;# 
  2836  061C                     	;# 
  2837  061F                     	;# 
  2838  0691                     	;# 
  2839  0692                     	;# 
  2840  0693                     	;# 
  2841  0694                     	;# 
  2842  0695                     	;# 
  2843  0696                     	;# 
  2844  0697                     	;# 
  2845  0698                     	;# 
  2846  0699                     	;# 
  2847  0711                     	;# 
  2848  0712                     	;# 
  2849  0713                     	;# 
  2850  0714                     	;# 
  2851  0715                     	;# 
  2852  0716                     	;# 
  2853  0717                     	;# 
  2854  0718                     	;# 
  2855  0719                     	;# 
  2856  0891                     	;# 
  2857  0891                     	;# 
  2858  0891                     	;# 
  2859  0891                     	;# 
  2860  0891                     	;# 
  2861  0891                     	;# 
  2862  0892                     	;# 
  2863  0892                     	;# 
  2864  0892                     	;# 
  2865  0893                     	;# 
  2866  0893                     	;# 
  2867  0893                     	;# 
  2868  0893                     	;# 
  2869  0893                     	;# 
  2870  0893                     	;# 
  2871  0894                     	;# 
  2872  0894                     	;# 
  2873  0894                     	;# 
  2874  0895                     	;# 
  2875  0895                     	;# 
  2876  0895                     	;# 
  2877  0896                     	;# 
  2878  0896                     	;# 
  2879  0896                     	;# 
  2880  089B                     	;# 
  2881  0911                     	;# 
  2882  0912                     	;# 
  2883  0913                     	;# 
  2884  0914                     	;# 
  2885  0915                     	;# 
  2886  0916                     	;# 
  2887  0918                     	;# 
  2888  0919                     	;# 
  2889  091A                     	;# 
  2890  091B                     	;# 
  2891  091C                     	;# 
  2892  091D                     	;# 
  2893  091E                     	;# 
  2894  091F                     	;# 
  2895  0E0F                     	;# 
  2896  0E10                     	;# 
  2897  0E11                     	;# 
  2898  0E12                     	;# 
  2899  0E13                     	;# 
  2900  0E14                     	;# 
  2901  0E15                     	;# 
  2902  0E16                     	;# 
  2903  0E17                     	;# 
  2904  0E18                     	;# 
  2905  0E19                     	;# 
  2906  0E1A                     	;# 
  2907  0E1B                     	;# 
  2908  0E1C                     	;# 
  2909  0E1D                     	;# 
  2910  0E1E                     	;# 
  2911  0E1F                     	;# 
  2912  0E20                     	;# 
  2913  0E21                     	;# 
  2914  0E22                     	;# 
  2915  0E24                     	;# 
  2916  0E25                     	;# 
  2917  0E28                     	;# 
  2918  0E29                     	;# 
  2919  0E2A                     	;# 
  2920  0E2B                     	;# 
  2921  0E2C                     	;# 
  2922  0E2D                     	;# 
  2923  0E2E                     	;# 
  2924  0E2F                     	;# 
  2925  0E90                     	;# 
  2926  0E91                     	;# 
  2927  0E92                     	;# 
  2928  0E94                     	;# 
  2929  0E95                     	;# 
  2930  0E9C                     	;# 
  2931  0E9D                     	;# 
  2932  0E9E                     	;# 
  2933  0E9F                     	;# 
  2934  0EA0                     	;# 
  2935  0EA1                     	;# 
  2936  0EA2                     	;# 
  2937  0EA3                     	;# 
  2938  0EA4                     	;# 
  2939  0EA5                     	;# 
  2940  0EA6                     	;# 
  2941  0EA7                     	;# 
  2942  0F0F                     	;# 
  2943  0F10                     	;# 
  2944  0F11                     	;# 
  2945  0F12                     	;# 
  2946  0F13                     	;# 
  2947  0F14                     	;# 
  2948  0F15                     	;# 
  2949  0F16                     	;# 
  2950  0F17                     	;# 
  2951  0F18                     	;# 
  2952  0F19                     	;# 
  2953  0F1A                     	;# 
  2954  0F1B                     	;# 
  2955  0F1C                     	;# 
  2956  0F1D                     	;# 
  2957  0F1E                     	;# 
  2958  0F1F                     	;# 
  2959  0F20                     	;# 
  2960  0F21                     	;# 
  2961  0F22                     	;# 
  2962  0F23                     	;# 
  2963  0F24                     	;# 
  2964  0F25                     	;# 
  2965  0F26                     	;# 
  2966  0F27                     	;# 
  2967  0F28                     	;# 
  2968  0F29                     	;# 
  2969  0F2A                     	;# 
  2970  0F2B                     	;# 
  2971  0F2C                     	;# 
  2972  0F2D                     	;# 
  2973  0F2E                     	;# 
  2974  0F2F                     	;# 
  2975  0F30                     	;# 
  2976  0F31                     	;# 
  2977  0F32                     	;# 
  2978  0F33                     	;# 
  2979  0F34                     	;# 
  2980  0F35                     	;# 
  2981  0F36                     	;# 
  2982  0F37                     	;# 
  2983  0FE4                     	;# 
  2984  0FE5                     	;# 
  2985  0FE6                     	;# 
  2986  0FE7                     	;# 
  2987  0FE8                     	;# 
  2988  0FE9                     	;# 
  2989  0FEA                     	;# 
  2990  0FEB                     	;# 
  2991  0FED                     	;# 
  2992  0FEE                     	;# 
  2993  0FEF                     	;# 
  2994  0000                     	;# 
  2995  0001                     	;# 
  2996  0002                     	;# 
  2997  0003                     	;# 
  2998  0004                     	;# 
  2999  0005                     	;# 
  3000  0006                     	;# 
  3001  0007                     	;# 
  3002  0008                     	;# 
  3003  0009                     	;# 
  3004  000A                     	;# 
  3005  000B                     	;# 
  3006  000C                     	;# 
  3007  000D                     	;# 
  3008  000E                     	;# 
  3009  0010                     	;# 
  3010  0011                     	;# 
  3011  0012                     	;# 
  3012  0013                     	;# 
  3013  0014                     	;# 
  3014  0015                     	;# 
  3015  0015                     	;# 
  3016  0016                     	;# 
  3017  0016                     	;# 
  3018  0017                     	;# 
  3019  0018                     	;# 
  3020  0019                     	;# 
  3021  0019                     	;# 
  3022  001A                     	;# 
  3023  001B                     	;# 
  3024  001C                     	;# 
  3025  001D                     	;# 
  3026  001E                     	;# 
  3027  001F                     	;# 
  3028  008C                     	;# 
  3029  008D                     	;# 
  3030  008E                     	;# 
  3031  0090                     	;# 
  3032  0091                     	;# 
  3033  0092                     	;# 
  3034  0093                     	;# 
  3035  0094                     	;# 
  3036  0097                     	;# 
  3037  009B                     	;# 
  3038  009B                     	;# 
  3039  009C                     	;# 
  3040  009D                     	;# 
  3041  009E                     	;# 
  3042  009F                     	;# 
  3043  010C                     	;# 
  3044  010D                     	;# 
  3045  010E                     	;# 
  3046  0111                     	;# 
  3047  0112                     	;# 
  3048  0113                     	;# 
  3049  0114                     	;# 
  3050  0115                     	;# 
  3051  0116                     	;# 
  3052  0117                     	;# 
  3053  0118                     	;# 
  3054  0119                     	;# 
  3055  018C                     	;# 
  3056  018D                     	;# 
  3057  018E                     	;# 
  3058  0197                     	;# 
  3059  0199                     	;# 
  3060  0199                     	;# 
  3061  0199                     	;# 
  3062  019A                     	;# 
  3063  019A                     	;# 
  3064  019A                     	;# 
  3065  019B                     	;# 
  3066  019B                     	;# 
  3067  019B                     	;# 
  3068  019B                     	;# 
  3069  019B                     	;# 
  3070  019C                     	;# 
  3071  019C                     	;# 
  3072  019C                     	;# 
  3073  019D                     	;# 
  3074  019D                     	;# 
  3075  019D                     	;# 
  3076  019E                     	;# 
  3077  019E                     	;# 
  3078  019E                     	;# 
  3079  019F                     	;# 
  3080  019F                     	;# 
  3081  019F                     	;# 
  3082  019F                     	;# 
  3083  019F                     	;# 
  3084  020C                     	;# 
  3085  020D                     	;# 
  3086  020E                     	;# 
  3087  0211                     	;# 
  3088  0211                     	;# 
  3089  0212                     	;# 
  3090  0212                     	;# 
  3091  0213                     	;# 
  3092  0213                     	;# 
  3093  0214                     	;# 
  3094  0214                     	;# 
  3095  0215                     	;# 
  3096  0215                     	;# 
  3097  0215                     	;# 
  3098  0215                     	;# 
  3099  0216                     	;# 
  3100  0216                     	;# 
  3101  0217                     	;# 
  3102  0217                     	;# 
  3103  0219                     	;# 
  3104  021A                     	;# 
  3105  021B                     	;# 
  3106  021C                     	;# 
  3107  021D                     	;# 
  3108  021D                     	;# 
  3109  021E                     	;# 
  3110  021F                     	;# 
  3111  028C                     	;# 
  3112  028D                     	;# 
  3113  028E                     	;# 
  3114  0291                     	;# 
  3115  0291                     	;# 
  3116  0292                     	;# 
  3117  0293                     	;# 
  3118  0294                     	;# 
  3119  0295                     	;# 
  3120  0295                     	;# 
  3121  0296                     	;# 
  3122  0297                     	;# 
  3123  0298                     	;# 
  3124  029F                     	;# 
  3125  030C                     	;# 
  3126  030D                     	;# 
  3127  030E                     	;# 
  3128  0311                     	;# 
  3129  0311                     	;# 
  3130  0312                     	;# 
  3131  0313                     	;# 
  3132  0314                     	;# 
  3133  0315                     	;# 
  3134  0315                     	;# 
  3135  0316                     	;# 
  3136  0317                     	;# 
  3137  0318                     	;# 
  3138  038C                     	;# 
  3139  038D                     	;# 
  3140  038E                     	;# 
  3141  0391                     	;# 
  3142  0392                     	;# 
  3143  0393                     	;# 
  3144  0394                     	;# 
  3145  0395                     	;# 
  3146  0396                     	;# 
  3147  0397                     	;# 
  3148  0398                     	;# 
  3149  0399                     	;# 
  3150  039A                     	;# 
  3151  039C                     	;# 
  3152  039D                     	;# 
  3153  039E                     	;# 
  3154  039F                     	;# 
  3155  0411                     	;# 
  3156  0411                     	;# 
  3157  0412                     	;# 
  3158  0413                     	;# 
  3159  0414                     	;# 
  3160  0415                     	;# 
  3161  0416                     	;# 
  3162  0417                     	;# 
  3163  0418                     	;# 
  3164  0418                     	;# 
  3165  0419                     	;# 
  3166  041A                     	;# 
  3167  041B                     	;# 
  3168  041C                     	;# 
  3169  041D                     	;# 
  3170  041E                     	;# 
  3171  041F                     	;# 
  3172  0498                     	;# 
  3173  0498                     	;# 
  3174  0499                     	;# 
  3175  049A                     	;# 
  3176  049B                     	;# 
  3177  049B                     	;# 
  3178  049C                     	;# 
  3179  049D                     	;# 
  3180  049E                     	;# 
  3181  049F                     	;# 
  3182  0617                     	;# 
  3183  0618                     	;# 
  3184  0619                     	;# 
  3185  0619                     	;# 
  3186  061A                     	;# 
  3187  061B                     	;# 
  3188  061C                     	;# 
  3189  061C                     	;# 
  3190  061F                     	;# 
  3191  0691                     	;# 
  3192  0692                     	;# 
  3193  0693                     	;# 
  3194  0694                     	;# 
  3195  0695                     	;# 
  3196  0696                     	;# 
  3197  0697                     	;# 
  3198  0698                     	;# 
  3199  0699                     	;# 
  3200  0711                     	;# 
  3201  0712                     	;# 
  3202  0713                     	;# 
  3203  0714                     	;# 
  3204  0715                     	;# 
  3205  0716                     	;# 
  3206  0717                     	;# 
  3207  0718                     	;# 
  3208  0719                     	;# 
  3209  0891                     	;# 
  3210  0891                     	;# 
  3211  0891                     	;# 
  3212  0891                     	;# 
  3213  0891                     	;# 
  3214  0891                     	;# 
  3215  0892                     	;# 
  3216  0892                     	;# 
  3217  0892                     	;# 
  3218  0893                     	;# 
  3219  0893                     	;# 
  3220  0893                     	;# 
  3221  0893                     	;# 
  3222  0893                     	;# 
  3223  0893                     	;# 
  3224  0894                     	;# 
  3225  0894                     	;# 
  3226  0894                     	;# 
  3227  0895                     	;# 
  3228  0895                     	;# 
  3229  0895                     	;# 
  3230  0896                     	;# 
  3231  0896                     	;# 
  3232  0896                     	;# 
  3233  089B                     	;# 
  3234  0911                     	;# 
  3235  0912                     	;# 
  3236  0913                     	;# 
  3237  0914                     	;# 
  3238  0915                     	;# 
  3239  0916                     	;# 
  3240  0918                     	;# 
  3241  0919                     	;# 
  3242  091A                     	;# 
  3243  091B                     	;# 
  3244  091C                     	;# 
  3245  091D                     	;# 
  3246  091E                     	;# 
  3247  091F                     	;# 
  3248  0E0F                     	;# 
  3249  0E10                     	;# 
  3250  0E11                     	;# 
  3251  0E12                     	;# 
  3252  0E13                     	;# 
  3253  0E14                     	;# 
  3254  0E15                     	;# 
  3255  0E16                     	;# 
  3256  0E17                     	;# 
  3257  0E18                     	;# 
  3258  0E19                     	;# 
  3259  0E1A                     	;# 
  3260  0E1B                     	;# 
  3261  0E1C                     	;# 
  3262  0E1D                     	;# 
  3263  0E1E                     	;# 
  3264  0E1F                     	;# 
  3265  0E20                     	;# 
  3266  0E21                     	;# 
  3267  0E22                     	;# 
  3268  0E24                     	;# 
  3269  0E25                     	;# 
  3270  0E28                     	;# 
  3271  0E29                     	;# 
  3272  0E2A                     	;# 
  3273  0E2B                     	;# 
  3274  0E2C                     	;# 
  3275  0E2D                     	;# 
  3276  0E2E                     	;# 
  3277  0E2F                     	;# 
  3278  0E90                     	;# 
  3279  0E91                     	;# 
  3280  0E92                     	;# 
  3281  0E94                     	;# 
  3282  0E95                     	;# 
  3283  0E9C                     	;# 
  3284  0E9D                     	;# 
  3285  0E9E                     	;# 
  3286  0E9F                     	;# 
  3287  0EA0                     	;# 
  3288  0EA1                     	;# 
  3289  0EA2                     	;# 
  3290  0EA3                     	;# 
  3291  0EA4                     	;# 
  3292  0EA5                     	;# 
  3293  0EA6                     	;# 
  3294  0EA7                     	;# 
  3295  0F0F                     	;# 
  3296  0F10                     	;# 
  3297  0F11                     	;# 
  3298  0F12                     	;# 
  3299  0F13                     	;# 
  3300  0F14                     	;# 
  3301  0F15                     	;# 
  3302  0F16                     	;# 
  3303  0F17                     	;# 
  3304  0F18                     	;# 
  3305  0F19                     	;# 
  3306  0F1A                     	;# 
  3307  0F1B                     	;# 
  3308  0F1C                     	;# 
  3309  0F1D                     	;# 
  3310  0F1E                     	;# 
  3311  0F1F                     	;# 
  3312  0F20                     	;# 
  3313  0F21                     	;# 
  3314  0F22                     	;# 
  3315  0F23                     	;# 
  3316  0F24                     	;# 
  3317  0F25                     	;# 
  3318  0F26                     	;# 
  3319  0F27                     	;# 
  3320  0F28                     	;# 
  3321  0F29                     	;# 
  3322  0F2A                     	;# 
  3323  0F2B                     	;# 
  3324  0F2C                     	;# 
  3325  0F2D                     	;# 
  3326  0F2E                     	;# 
  3327  0F2F                     	;# 
  3328  0F30                     	;# 
  3329  0F31                     	;# 
  3330  0F32                     	;# 
  3331  0F33                     	;# 
  3332  0F34                     	;# 
  3333  0F35                     	;# 
  3334  0F36                     	;# 
  3335  0F37                     	;# 
  3336  0FE4                     	;# 
  3337  0FE5                     	;# 
  3338  0FE6                     	;# 
  3339  0FE7                     	;# 
  3340  0FE8                     	;# 
  3341  0FE9                     	;# 
  3342  0FEA                     	;# 
  3343  0FEB                     	;# 
  3344  0FED                     	;# 
  3345  0FEE                     	;# 
  3346  0FEF                     	;# 
  3347  0000                     	;# 
  3348  0001                     	;# 
  3349  0002                     	;# 
  3350  0003                     	;# 
  3351  0004                     	;# 
  3352  0005                     	;# 
  3353  0006                     	;# 
  3354  0007                     	;# 
  3355  0008                     	;# 
  3356  0009                     	;# 
  3357  000A                     	;# 
  3358  000B                     	;# 
  3359  000C                     	;# 
  3360  000D                     	;# 
  3361  000E                     	;# 
  3362  0010                     	;# 
  3363  0011                     	;# 
  3364  0012                     	;# 
  3365  0013                     	;# 
  3366  0014                     	;# 
  3367  0015                     	;# 
  3368  0015                     	;# 
  3369  0016                     	;# 
  3370  0016                     	;# 
  3371  0017                     	;# 
  3372  0018                     	;# 
  3373  0019                     	;# 
  3374  0019                     	;# 
  3375  001A                     	;# 
  3376  001B                     	;# 
  3377  001C                     	;# 
  3378  001D                     	;# 
  3379  001E                     	;# 
  3380  001F                     	;# 
  3381  008C                     	;# 
  3382  008D                     	;# 
  3383  008E                     	;# 
  3384  0090                     	;# 
  3385  0091                     	;# 
  3386  0092                     	;# 
  3387  0093                     	;# 
  3388  0094                     	;# 
  3389  0097                     	;# 
  3390  009B                     	;# 
  3391  009B                     	;# 
  3392  009C                     	;# 
  3393  009D                     	;# 
  3394  009E                     	;# 
  3395  009F                     	;# 
  3396  010C                     	;# 
  3397  010D                     	;# 
  3398  010E                     	;# 
  3399  0111                     	;# 
  3400  0112                     	;# 
  3401  0113                     	;# 
  3402  0114                     	;# 
  3403  0115                     	;# 
  3404  0116                     	;# 
  3405  0117                     	;# 
  3406  0118                     	;# 
  3407  0119                     	;# 
  3408  018C                     	;# 
  3409  018D                     	;# 
  3410  018E                     	;# 
  3411  0197                     	;# 
  3412  0199                     	;# 
  3413  0199                     	;# 
  3414  0199                     	;# 
  3415  019A                     	;# 
  3416  019A                     	;# 
  3417  019A                     	;# 
  3418  019B                     	;# 
  3419  019B                     	;# 
  3420  019B                     	;# 
  3421  019B                     	;# 
  3422  019B                     	;# 
  3423  019C                     	;# 
  3424  019C                     	;# 
  3425  019C                     	;# 
  3426  019D                     	;# 
  3427  019D                     	;# 
  3428  019D                     	;# 
  3429  019E                     	;# 
  3430  019E                     	;# 
  3431  019E                     	;# 
  3432  019F                     	;# 
  3433  019F                     	;# 
  3434  019F                     	;# 
  3435  019F                     	;# 
  3436  019F                     	;# 
  3437  020C                     	;# 
  3438  020D                     	;# 
  3439  020E                     	;# 
  3440  0211                     	;# 
  3441  0211                     	;# 
  3442  0212                     	;# 
  3443  0212                     	;# 
  3444  0213                     	;# 
  3445  0213                     	;# 
  3446  0214                     	;# 
  3447  0214                     	;# 
  3448  0215                     	;# 
  3449  0215                     	;# 
  3450  0215                     	;# 
  3451  0215                     	;# 
  3452  0216                     	;# 
  3453  0216                     	;# 
  3454  0217                     	;# 
  3455  0217                     	;# 
  3456  0219                     	;# 
  3457  021A                     	;# 
  3458  021B                     	;# 
  3459  021C                     	;# 
  3460  021D                     	;# 
  3461  021D                     	;# 
  3462  021E                     	;# 
  3463  021F                     	;# 
  3464  028C                     	;# 
  3465  028D                     	;# 
  3466  028E                     	;# 
  3467  0291                     	;# 
  3468  0291                     	;# 
  3469  0292                     	;# 
  3470  0293                     	;# 
  3471  0294                     	;# 
  3472  0295                     	;# 
  3473  0295                     	;# 
  3474  0296                     	;# 
  3475  0297                     	;# 
  3476  0298                     	;# 
  3477  029F                     	;# 
  3478  030C                     	;# 
  3479  030D                     	;# 
  3480  030E                     	;# 
  3481  0311                     	;# 
  3482  0311                     	;# 
  3483  0312                     	;# 
  3484  0313                     	;# 
  3485  0314                     	;# 
  3486  0315                     	;# 
  3487  0315                     	;# 
  3488  0316                     	;# 
  3489  0317                     	;# 
  3490  0318                     	;# 
  3491  038C                     	;# 
  3492  038D                     	;# 
  3493  038E                     	;# 
  3494  0391                     	;# 
  3495  0392                     	;# 
  3496  0393                     	;# 
  3497  0394                     	;# 
  3498  0395                     	;# 
  3499  0396                     	;# 
  3500  0397                     	;# 
  3501  0398                     	;# 
  3502  0399                     	;# 
  3503  039A                     	;# 
  3504  039C                     	;# 
  3505  039D                     	;# 
  3506  039E                     	;# 
  3507  039F                     	;# 
  3508  0411                     	;# 
  3509  0411                     	;# 
  3510  0412                     	;# 
  3511  0413                     	;# 
  3512  0414                     	;# 
  3513  0415                     	;# 
  3514  0416                     	;# 
  3515  0417                     	;# 
  3516  0418                     	;# 
  3517  0418                     	;# 
  3518  0419                     	;# 
  3519  041A                     	;# 
  3520  041B                     	;# 
  3521  041C                     	;# 
  3522  041D                     	;# 
  3523  041E                     	;# 
  3524  041F                     	;# 
  3525  0498                     	;# 
  3526  0498                     	;# 
  3527  0499                     	;# 
  3528  049A                     	;# 
  3529  049B                     	;# 
  3530  049B                     	;# 
  3531  049C                     	;# 
  3532  049D                     	;# 
  3533  049E                     	;# 
  3534  049F                     	;# 
  3535  0617                     	;# 
  3536  0618                     	;# 
  3537  0619                     	;# 
  3538  0619                     	;# 
  3539  061A                     	;# 
  3540  061B                     	;# 
  3541  061C                     	;# 
  3542  061C                     	;# 
  3543  061F                     	;# 
  3544  0691                     	;# 
  3545  0692                     	;# 
  3546  0693                     	;# 
  3547  0694                     	;# 
  3548  0695                     	;# 
  3549  0696                     	;# 
  3550  0697                     	;# 
  3551  0698                     	;# 
  3552  0699                     	;# 
  3553  0711                     	;# 
  3554  0712                     	;# 
  3555  0713                     	;# 
  3556  0714                     	;# 
  3557  0715                     	;# 
  3558  0716                     	;# 
  3559  0717                     	;# 
  3560  0718                     	;# 
  3561  0719                     	;# 
  3562  0891                     	;# 
  3563  0891                     	;# 
  3564  0891                     	;# 
  3565  0891                     	;# 
  3566  0891                     	;# 
  3567  0891                     	;# 
  3568  0892                     	;# 
  3569  0892                     	;# 
  3570  0892                     	;# 
  3571  0893                     	;# 
  3572  0893                     	;# 
  3573  0893                     	;# 
  3574  0893                     	;# 
  3575  0893                     	;# 
  3576  0893                     	;# 
  3577  0894                     	;# 
  3578  0894                     	;# 
  3579  0894                     	;# 
  3580  0895                     	;# 
  3581  0895                     	;# 
  3582  0895                     	;# 
  3583  0896                     	;# 
  3584  0896                     	;# 
  3585  0896                     	;# 
  3586  089B                     	;# 
  3587  0911                     	;# 
  3588  0912                     	;# 
  3589  0913                     	;# 
  3590  0914                     	;# 
  3591  0915                     	;# 
  3592  0916                     	;# 
  3593  0918                     	;# 
  3594  0919                     	;# 
  3595  091A                     	;# 
  3596  091B                     	;# 
  3597  091C                     	;# 
  3598  091D                     	;# 
  3599  091E                     	;# 
  3600  091F                     	;# 
  3601  0E0F                     	;# 
  3602  0E10                     	;# 
  3603  0E11                     	;# 
  3604  0E12                     	;# 
  3605  0E13                     	;# 
  3606  0E14                     	;# 
  3607  0E15                     	;# 
  3608  0E16                     	;# 
  3609  0E17                     	;# 
  3610  0E18                     	;# 
  3611  0E19                     	;# 
  3612  0E1A                     	;# 
  3613  0E1B                     	;# 
  3614  0E1C                     	;# 
  3615  0E1D                     	;# 
  3616  0E1E                     	;# 
  3617  0E1F                     	;# 
  3618  0E20                     	;# 
  3619  0E21                     	;# 
  3620  0E22                     	;# 
  3621  0E24                     	;# 
  3622  0E25                     	;# 
  3623  0E28                     	;# 
  3624  0E29                     	;# 
  3625  0E2A                     	;# 
  3626  0E2B                     	;# 
  3627  0E2C                     	;# 
  3628  0E2D                     	;# 
  3629  0E2E                     	;# 
  3630  0E2F                     	;# 
  3631  0E90                     	;# 
  3632  0E91                     	;# 
  3633  0E92                     	;# 
  3634  0E94                     	;# 
  3635  0E95                     	;# 
  3636  0E9C                     	;# 
  3637  0E9D                     	;# 
  3638  0E9E                     	;# 
  3639  0E9F                     	;# 
  3640  0EA0                     	;# 
  3641  0EA1                     	;# 
  3642  0EA2                     	;# 
  3643  0EA3                     	;# 
  3644  0EA4                     	;# 
  3645  0EA5                     	;# 
  3646  0EA6                     	;# 
  3647  0EA7                     	;# 
  3648  0F0F                     	;# 
  3649  0F10                     	;# 
  3650  0F11                     	;# 
  3651  0F12                     	;# 
  3652  0F13                     	;# 
  3653  0F14                     	;# 
  3654  0F15                     	;# 
  3655  0F16                     	;# 
  3656  0F17                     	;# 
  3657  0F18                     	;# 
  3658  0F19                     	;# 
  3659  0F1A                     	;# 
  3660  0F1B                     	;# 
  3661  0F1C                     	;# 
  3662  0F1D                     	;# 
  3663  0F1E                     	;# 
  3664  0F1F                     	;# 
  3665  0F20                     	;# 
  3666  0F21                     	;# 
  3667  0F22                     	;# 
  3668  0F23                     	;# 
  3669  0F24                     	;# 
  3670  0F25                     	;# 
  3671  0F26                     	;# 
  3672  0F27                     	;# 
  3673  0F28                     	;# 
  3674  0F29                     	;# 
  3675  0F2A                     	;# 
  3676  0F2B                     	;# 
  3677  0F2C                     	;# 
  3678  0F2D                     	;# 
  3679  0F2E                     	;# 
  3680  0F2F                     	;# 
  3681  0F30                     	;# 
  3682  0F31                     	;# 
  3683  0F32                     	;# 
  3684  0F33                     	;# 
  3685  0F34                     	;# 
  3686  0F35                     	;# 
  3687  0F36                     	;# 
  3688  0F37                     	;# 
  3689  0FE4                     	;# 
  3690  0FE5                     	;# 
  3691  0FE6                     	;# 
  3692  0FE7                     	;# 
  3693  0FE8                     	;# 
  3694  0FE9                     	;# 
  3695  0FEA                     	;# 
  3696  0FEB                     	;# 
  3697  0FED                     	;# 
  3698  0FEE                     	;# 
  3699  0FEF                     	;# 
  3700  0000                     	;# 
  3701  0001                     	;# 
  3702  0002                     	;# 
  3703  0003                     	;# 
  3704  0004                     	;# 
  3705  0005                     	;# 
  3706  0006                     	;# 
  3707  0007                     	;# 
  3708  0008                     	;# 
  3709  0009                     	;# 
  3710  000A                     	;# 
  3711  000B                     	;# 
  3712  000C                     	;# 
  3713  000D                     	;# 
  3714  000E                     	;# 
  3715  0010                     	;# 
  3716  0011                     	;# 
  3717  0012                     	;# 
  3718  0013                     	;# 
  3719  0014                     	;# 
  3720  0015                     	;# 
  3721  0015                     	;# 
  3722  0016                     	;# 
  3723  0016                     	;# 
  3724  0017                     	;# 
  3725  0018                     	;# 
  3726  0019                     	;# 
  3727  0019                     	;# 
  3728  001A                     	;# 
  3729  001B                     	;# 
  3730  001C                     	;# 
  3731  001D                     	;# 
  3732  001E                     	;# 
  3733  001F                     	;# 
  3734  008C                     	;# 
  3735  008D                     	;# 
  3736  008E                     	;# 
  3737  0090                     	;# 
  3738  0091                     	;# 
  3739  0092                     	;# 
  3740  0093                     	;# 
  3741  0094                     	;# 
  3742  0097                     	;# 
  3743  009B                     	;# 
  3744  009B                     	;# 
  3745  009C                     	;# 
  3746  009D                     	;# 
  3747  009E                     	;# 
  3748  009F                     	;# 
  3749  010C                     	;# 
  3750  010D                     	;# 
  3751  010E                     	;# 
  3752  0111                     	;# 
  3753  0112                     	;# 
  3754  0113                     	;# 
  3755  0114                     	;# 
  3756  0115                     	;# 
  3757  0116                     	;# 
  3758  0117                     	;# 
  3759  0118                     	;# 
  3760  0119                     	;# 
  3761  018C                     	;# 
  3762  018D                     	;# 
  3763  018E                     	;# 
  3764  0197                     	;# 
  3765  0199                     	;# 
  3766  0199                     	;# 
  3767  0199                     	;# 
  3768  019A                     	;# 
  3769  019A                     	;# 
  3770  019A                     	;# 
  3771  019B                     	;# 
  3772  019B                     	;# 
  3773  019B                     	;# 
  3774  019B                     	;# 
  3775  019B                     	;# 
  3776  019C                     	;# 
  3777  019C                     	;# 
  3778  019C                     	;# 
  3779  019D                     	;# 
  3780  019D                     	;# 
  3781  019D                     	;# 
  3782  019E                     	;# 
  3783  019E                     	;# 
  3784  019E                     	;# 
  3785  019F                     	;# 
  3786  019F                     	;# 
  3787  019F                     	;# 
  3788  019F                     	;# 
  3789  019F                     	;# 
  3790  020C                     	;# 
  3791  020D                     	;# 
  3792  020E                     	;# 
  3793  0211                     	;# 
  3794  0211                     	;# 
  3795  0212                     	;# 
  3796  0212                     	;# 
  3797  0213                     	;# 
  3798  0213                     	;# 
  3799  0214                     	;# 
  3800  0214                     	;# 
  3801  0215                     	;# 
  3802  0215                     	;# 
  3803  0215                     	;# 
  3804  0215                     	;# 
  3805  0216                     	;# 
  3806  0216                     	;# 
  3807  0217                     	;# 
  3808  0217                     	;# 
  3809  0219                     	;# 
  3810  021A                     	;# 
  3811  021B                     	;# 
  3812  021C                     	;# 
  3813  021D                     	;# 
  3814  021D                     	;# 
  3815  021E                     	;# 
  3816  021F                     	;# 
  3817  028C                     	;# 
  3818  028D                     	;# 
  3819  028E                     	;# 
  3820  0291                     	;# 
  3821  0291                     	;# 
  3822  0292                     	;# 
  3823  0293                     	;# 
  3824  0294                     	;# 
  3825  0295                     	;# 
  3826  0295                     	;# 
  3827  0296                     	;# 
  3828  0297                     	;# 
  3829  0298                     	;# 
  3830  029F                     	;# 
  3831  030C                     	;# 
  3832  030D                     	;# 
  3833  030E                     	;# 
  3834  0311                     	;# 
  3835  0311                     	;# 
  3836  0312                     	;# 
  3837  0313                     	;# 
  3838  0314                     	;# 
  3839  0315                     	;# 
  3840  0315                     	;# 
  3841  0316                     	;# 
  3842  0317                     	;# 
  3843  0318                     	;# 
  3844  038C                     	;# 
  3845  038D                     	;# 
  3846  038E                     	;# 
  3847  0391                     	;# 
  3848  0392                     	;# 
  3849  0393                     	;# 
  3850  0394                     	;# 
  3851  0395                     	;# 
  3852  0396                     	;# 
  3853  0397                     	;# 
  3854  0398                     	;# 
  3855  0399                     	;# 
  3856  039A                     	;# 
  3857  039C                     	;# 
  3858  039D                     	;# 
  3859  039E                     	;# 
  3860  039F                     	;# 
  3861  0411                     	;# 
  3862  0411                     	;# 
  3863  0412                     	;# 
  3864  0413                     	;# 
  3865  0414                     	;# 
  3866  0415                     	;# 
  3867  0416                     	;# 
  3868  0417                     	;# 
  3869  0418                     	;# 
  3870  0418                     	;# 
  3871  0419                     	;# 
  3872  041A                     	;# 
  3873  041B                     	;# 
  3874  041C                     	;# 
  3875  041D                     	;# 
  3876  041E                     	;# 
  3877  041F                     	;# 
  3878  0498                     	;# 
  3879  0498                     	;# 
  3880  0499                     	;# 
  3881  049A                     	;# 
  3882  049B                     	;# 
  3883  049B                     	;# 
  3884  049C                     	;# 
  3885  049D                     	;# 
  3886  049E                     	;# 
  3887  049F                     	;# 
  3888  0617                     	;# 
  3889  0618                     	;# 
  3890  0619                     	;# 
  3891  0619                     	;# 
  3892  061A                     	;# 
  3893  061B                     	;# 
  3894  061C                     	;# 
  3895  061C                     	;# 
  3896  061F                     	;# 
  3897  0691                     	;# 
  3898  0692                     	;# 
  3899  0693                     	;# 
  3900  0694                     	;# 
  3901  0695                     	;# 
  3902  0696                     	;# 
  3903  0697                     	;# 
  3904  0698                     	;# 
  3905  0699                     	;# 
  3906  0711                     	;# 
  3907  0712                     	;# 
  3908  0713                     	;# 
  3909  0714                     	;# 
  3910  0715                     	;# 
  3911  0716                     	;# 
  3912  0717                     	;# 
  3913  0718                     	;# 
  3914  0719                     	;# 
  3915  0891                     	;# 
  3916  0891                     	;# 
  3917  0891                     	;# 
  3918  0891                     	;# 
  3919  0891                     	;# 
  3920  0891                     	;# 
  3921  0892                     	;# 
  3922  0892                     	;# 
  3923  0892                     	;# 
  3924  0893                     	;# 
  3925  0893                     	;# 
  3926  0893                     	;# 
  3927  0893                     	;# 
  3928  0893                     	;# 
  3929  0893                     	;# 
  3930  0894                     	;# 
  3931  0894                     	;# 
  3932  0894                     	;# 
  3933  0895                     	;# 
  3934  0895                     	;# 
  3935  0895                     	;# 
  3936  0896                     	;# 
  3937  0896                     	;# 
  3938  0896                     	;# 
  3939  089B                     	;# 
  3940  0911                     	;# 
  3941  0912                     	;# 
  3942  0913                     	;# 
  3943  0914                     	;# 
  3944  0915                     	;# 
  3945  0916                     	;# 
  3946  0918                     	;# 
  3947  0919                     	;# 
  3948  091A                     	;# 
  3949  091B                     	;# 
  3950  091C                     	;# 
  3951  091D                     	;# 
  3952  091E                     	;# 
  3953  091F                     	;# 
  3954  0E0F                     	;# 
  3955  0E10                     	;# 
  3956  0E11                     	;# 
  3957  0E12                     	;# 
  3958  0E13                     	;# 
  3959  0E14                     	;# 
  3960  0E15                     	;# 
  3961  0E16                     	;# 
  3962  0E17                     	;# 
  3963  0E18                     	;# 
  3964  0E19                     	;# 
  3965  0E1A                     	;# 
  3966  0E1B                     	;# 
  3967  0E1C                     	;# 
  3968  0E1D                     	;# 
  3969  0E1E                     	;# 
  3970  0E1F                     	;# 
  3971  0E20                     	;# 
  3972  0E21                     	;# 
  3973  0E22                     	;# 
  3974  0E24                     	;# 
  3975  0E25                     	;# 
  3976  0E28                     	;# 
  3977  0E29                     	;# 
  3978  0E2A                     	;# 
  3979  0E2B                     	;# 
  3980  0E2C                     	;# 
  3981  0E2D                     	;# 
  3982  0E2E                     	;# 
  3983  0E2F                     	;# 
  3984  0E90                     	;# 
  3985  0E91                     	;# 
  3986  0E92                     	;# 
  3987  0E94                     	;# 
  3988  0E95                     	;# 
  3989  0E9C                     	;# 
  3990  0E9D                     	;# 
  3991  0E9E                     	;# 
  3992  0E9F                     	;# 
  3993  0EA0                     	;# 
  3994  0EA1                     	;# 
  3995  0EA2                     	;# 
  3996  0EA3                     	;# 
  3997  0EA4                     	;# 
  3998  0EA5                     	;# 
  3999  0EA6                     	;# 
  4000  0EA7                     	;# 
  4001  0F0F                     	;# 
  4002  0F10                     	;# 
  4003  0F11                     	;# 
  4004  0F12                     	;# 
  4005  0F13                     	;# 
  4006  0F14                     	;# 
  4007  0F15                     	;# 
  4008  0F16                     	;# 
  4009  0F17                     	;# 
  4010  0F18                     	;# 
  4011  0F19                     	;# 
  4012  0F1A                     	;# 
  4013  0F1B                     	;# 
  4014  0F1C                     	;# 
  4015  0F1D                     	;# 
  4016  0F1E                     	;# 
  4017  0F1F                     	;# 
  4018  0F20                     	;# 
  4019  0F21                     	;# 
  4020  0F22                     	;# 
  4021  0F23                     	;# 
  4022  0F24                     	;# 
  4023  0F25                     	;# 
  4024  0F26                     	;# 
  4025  0F27                     	;# 
  4026  0F28                     	;# 
  4027  0F29                     	;# 
  4028  0F2A                     	;# 
  4029  0F2B                     	;# 
  4030  0F2C                     	;# 
  4031  0F2D                     	;# 
  4032  0F2E                     	;# 
  4033  0F2F                     	;# 
  4034  0F30                     	;# 
  4035  0F31                     	;# 
  4036  0F32                     	;# 
  4037  0F33                     	;# 
  4038  0F34                     	;# 
  4039  0F35                     	;# 
  4040  0F36                     	;# 
  4041  0F37                     	;# 
  4042  0FE4                     	;# 
  4043  0FE5                     	;# 
  4044  0FE6                     	;# 
  4045  0FE7                     	;# 
  4046  0FE8                     	;# 
  4047  0FE9                     	;# 
  4048  0FEA                     	;# 
  4049  0FEB                     	;# 
  4050  0FED                     	;# 
  4051  0FEE                     	;# 
  4052  0FEF                     	;_arpMap
  4053                           
  4054 ;; Function _rtcc_handler is unused but had its address taken
  4055  0000                     
  4056 ;; Function _TMR1_DefaultInterruptHandler is unused but had its address taken
  4057  0000                     
  4058 ;; Function _putch is unused but had its address taken
  4059  0000                     
  4060                           	psect	idataBANK3
  4061  2976                     __pidataBANK3:
  4062                           
  4063                           ;initializer for _tcpMss
  4064  2976  3418               	retlw	24
  4065  2977  3402               	retlw	2
  4066                           
  4067                           ;initializer for _lfsr_value
  4068  2978  3440               	retlw	64
  4069                           
  4070                           ;initializer for _xor_mask
  4071  2979  3441               	retlw	65
  4072                           
  4073                           	psect	stringtext1
  4074  3037                     __pstringtext1:
  4075  3037                     _xorSequences:
  4076  3037  3441               	retlw	65
  4077  3038  3444               	retlw	68
  4078  3039  3447               	retlw	71
  4079  303A  3448               	retlw	72
  4080  303B  344E               	retlw	78
  4081  303C  3453               	retlw	83
  4082  303D  3455               	retlw	85
  4083  303E  345C               	retlw	92
  4084  303F  345F               	retlw	95
  4085  3040  3460               	retlw	96
  4086  3041  3465               	retlw	101
  4087  3042  3469               	retlw	105
  4088  3043  346A               	retlw	106
  4089  3044  3472               	retlw	114
  4090  3045  3477               	retlw	119
  4091  3046  3478               	retlw	120
  4092  3047  347B               	retlw	123
  4093  3048  347E               	retlw	126
  4094  3049                     __end_of_xorSequences:
  4095                           
  4096                           	psect	stringtext2
  4097  3055                     __pstringtext2:
  4098  3055                     _dpowers:
  4099  3055  3401               	retlw	1
  4100  3056  3400               	retlw	0
  4101  3057  340A               	retlw	10
  4102  3058  3400               	retlw	0
  4103  3059  3464               	retlw	100
  4104  305A  3400               	retlw	0
  4105  305B  34E8               	retlw	232
  4106  305C  3403               	retlw	3
  4107  305D  3410               	retlw	16
  4108  305E  3427               	retlw	39
  4109  305F                     __end_of_dpowers:
  4110                           
  4111                           	psect	stringtext3
  4112  3069                     __pstringtext3:
  4113  3069                     _macAddress:
  4114  3069  3402               	retlw	2
  4115  306A  3400               	retlw	0
  4116  306B  3400               	retlw	0
  4117  306C  3400               	retlw	0
  4118  306D  3400               	retlw	0
  4119  306E  3401               	retlw	1
  4120  306F                     __end_of_macAddress:
  4121                           
  4122                           	psect	stringtext4
  4123  306F                     __pstringtext4:
  4124  306F                     _broadcastMAC:
  4125  306F  34FF               	retlw	255
  4126  3070  34FF               	retlw	255
  4127  3071  34FF               	retlw	255
  4128  3072  34FF               	retlw	255
  4129  3073  34FF               	retlw	255
  4130  3074  34FF               	retlw	255
  4131  3075                     __end_of_broadcastMAC:
  4132                           
  4133                           	psect	nvBANK3
  4134  01ED                     __pnvBANK3:
  4135  01ED                     _timer1ReloadVal:
  4136  01ED                     	ds	2
  4137                           
  4138                           	psect	nvBANK4
  4139  026C                     __pnvBANK4:
  4140  026C                     _TMR1_InterruptHandler:
  4141  026C                     	ds	2
  4142  000C                     _PORTAbits	set	12
  4143  000B                     _INTCONbits	set	11
  4144  001B                     _T1CONbits	set	27
  4145  0011                     _PIR1bits	set	17
  4146  0019                     _TMR1L	set	25
  4147  001A                     _TMR1H	set	26
  4148  001C                     _T1GCON	set	28
  4149  001B                     _T1CON	set	27
  4150  005F                     _GIE	set	95
  4151  009D                     _ADCON0bits	set	157
  4152  009C                     _ADRESH	set	156
  4153  009B                     _ADRESL	set	155
  4154  009F                     _ADACT	set	159
  4155  009E                     _ADCON1	set	158
  4156  009D                     _ADCON0	set	157
  4157  008E                     _TRISC	set	142
  4158  008D                     _TRISB	set	141
  4159  008C                     _TRISA	set	140
  4160  0091                     _PIE1bits	set	145
  4161  0097                     _WDTCON	set	151
  4162  010C                     _LATAbits	set	268
  4163  010E                     _LATC	set	270
  4164  010D                     _LATB	set	269
  4165  010C                     _LATA	set	268
  4166  0876                     _LATC6	set	2166
  4167  018C                     _ANSELA	set	396
  4168  018D                     _ANSELB	set	397
  4169  018E                     _ANSELC	set	398
  4170  020E                     _WPUC	set	526
  4171  020C                     _WPUA	set	524
  4172  020D                     _WPUB	set	525
  4173  0214                     _SSP1STATbits	set	532
  4174  0211                     _SSP1BUF	set	529
  4175  0215                     _SSP1CON1bits	set	533
  4176  0212                     _SSP1ADD	set	530
  4177  0215                     _SSP1CON1	set	533
  4178  0214                     _SSP1STAT	set	532
  4179  028E                     _ODCONC	set	654
  4180  028D                     _ODCONB	set	653
  4181  028C                     _ODCONA	set	652
  4182  091E                     _OSCTUNE	set	2334
  4183  091F                     _OSCFRQ	set	2335
  4184  091D                     _OSCEN	set	2333
  4185  091B                     _OSCCON3	set	2331
  4186  0919                     _OSCCON1	set	2329
  4187  0E20                     _SSP1CLKPPSbits	set	3616
  4188  0E21                     _SSP1DATPPSbits	set	3617
  4189  0E0F                     _PPSLOCKbits	set	3599
  4190  0E0F                     _PPSLOCK	set	3599
  4191  0EA7                     _RC7PPSbits	set	3751
  4192  0E9E                     _RB6PPSbits	set	3742
  4193                           
  4194                           	psect	stringtext5
  4195  3000                     __pstringtext5:
  4196  3000                     STR_1:
  4197  3000  340D               	retlw	13
  4198  3001  340A               	retlw	10
  4199  3002  340D               	retlw	13
  4200  3003  340A               	retlw	10
  4201  3004  3453               	retlw	83	;'S'
  4202  3005  3474               	retlw	116	;'t'
  4203  3006  3461               	retlw	97	;'a'
  4204  3007  3472               	retlw	114	;'r'
  4205  3008  3474               	retlw	116	;'t'
  4206  3009  3469               	retlw	105	;'i'
  4207  300A  346E               	retlw	110	;'n'
  4208  300B  3467               	retlw	103	;'g'
  4209  300C  3420               	retlw	32	;' '
  4210  300D  3453               	retlw	83	;'S'
  4211  300E  3479               	retlw	121	;'y'
  4212  300F  3473               	retlw	115	;'s'
  4213  3010  346C               	retlw	108	;'l'
  4214  3011  346F               	retlw	111	;'o'
  4215  3012  3467               	retlw	103	;'g'
  4216  3013  3420               	retlw	32	;' '
  4217  3014  3461               	retlw	97	;'a'
  4218  3015  3474               	retlw	116	;'t'
  4219  3016  3420               	retlw	32	;' '
  4220  3017  3425               	retlw	37	;'%'
  4221  3018  346C               	retlw	108	;'l'
  4222  3019  3475               	retlw	117	;'u'
  4223  301A  340D               	retlw	13
  4224  301B  340A               	retlw	10
  4225  301C  3400               	retlw	0
  4226                           
  4227                           	psect	stringtext6
  4228  301D                     __pstringtext6:
  4229  301D                     STR_6:
  4230  301D  3450               	retlw	80	;'P'
  4231  301E  346F               	retlw	111	;'o'
  4232  301F  3474               	retlw	116	;'t'
  4233  3020  343A               	retlw	58	;':'
  4234  3021  3420               	retlw	32	;' '
  4235  3022  3425               	retlw	37	;'%'
  4236  3023  3464               	retlw	100	;'d'
  4237  3024  340A               	retlw	10
  4238  3025  3420               	retlw	32	;' '
  4239  3026  344C               	retlw	76	;'L'
  4240  3027  3445               	retlw	69	;'E'
  4241  3028  3444               	retlw	68	;'D'
  4242  3029  3427               	retlw	39	;'''
  4243  302A  3473               	retlw	115	;'s'
  4244  302B  3420               	retlw	32	;' '
  4245  302C  3473               	retlw	115	;'s'
  4246  302D  3474               	retlw	116	;'t'
  4247  302E  3461               	retlw	97	;'a'
  4248  302F  3474               	retlw	116	;'t'
  4249  3030  3465               	retlw	101	;'e'
  4250  3031  343A               	retlw	58	;':'
  4251  3032  3420               	retlw	32	;' '
  4252  3033  3425               	retlw	37	;'%'
  4253  3034  3464               	retlw	100	;'d'
  4254  3035  340A               	retlw	10
  4255  3036  3400               	retlw	0
  4256                           
  4257                           	psect	stringtext7
  4258  3049                     __pstringtext7:
  4259  3049                     STR_5:
  4260  3049  3425               	retlw	37	;'%'
  4261  304A  3464               	retlw	100	;'d'
  4262  304B  342E               	retlw	46	;'.'
  4263  304C  3425               	retlw	37	;'%'
  4264  304D  3464               	retlw	100	;'d'
  4265  304E  342E               	retlw	46	;'.'
  4266  304F  3425               	retlw	37	;'%'
  4267  3050  3464               	retlw	100	;'d'
  4268  3051  342E               	retlw	46	;'.'
  4269  3052  3425               	retlw	37	;'%'
  4270  3053  3464               	retlw	100	;'d'
  4271  3054  3400               	retlw	0
  4272                           
  4273                           	psect	stringtext8
  4274  305F                     __pstringtext8:
  4275  305F                     STR_2:
  4276  305F  3425               	retlw	37	;'%'
  4277  3060  3475               	retlw	117	;'u'
  4278  3061  3420               	retlw	32	;' '
  4279  3062  343A               	retlw	58	;':'
  4280  3063  3420               	retlw	32	;' '
  4281  3064  3425               	retlw	37	;'%'
  4282  3065  3473               	retlw	115	;'s'
  4283  3066  340D               	retlw	13
  4284  3067  340A               	retlw	10
  4285  3068  3400               	retlw	0
  4286                           
  4287                           	psect	stringtext9
  4288  3075                     __pstringtext9:
  4289  3075                     STR_3:
  4290  3075  342E               	retlw	46	;'.'
  4291  3076  3400               	retlw	0
  4292                           
  4293                           	psect	stringtext10
  4294  0000                     __pstringtext10:
  4295  3075                     
  4296                           	psect	cinit
  4297  0014                     start_initialization:	
  4298                           ; #config settings
  4299                           
  4300  0014                     __initialization:	;BIGRAM
  4301                           
  4302                           ; Initialize objects allocated to BANK3
  4303  0014  0023               	movlb	3	; select bank3
  4304  0015  31A9  2176  3180   	fcall	__pidataBANK3	;fetch initializer
  4305  0018  00E5               	movwf	__pdataBANK3& (0+127)
  4306  0019  31A9  2177  3180   	fcall	__pidataBANK3+1	;fetch initializer
  4307  001C  00E6               	movwf	(__pdataBANK3+1)& (0+127)
  4308  001D  31A9  2178  3180   	fcall	__pidataBANK3+2	;fetch initializer
  4309  0020  00E7               	movwf	(__pdataBANK3+2)& (0+127)
  4310  0021  31A9  2179  3180   	fcall	__pidataBANK3+3	;fetch initializer
  4311  0024  00E8               	movwf	(__pdataBANK3+3)& (0+127)
  4312                           
  4313                           ; Clear objects allocated to BIGRAM
  4314  0025  3088               	movlw	low (0+10120)
  4315  0026  0084               	movwf	4
  4316  0027  3027               	movlw	high (0+10120)
  4317  0028  0085               	movwf	5
  4318  0029  3068               	movlw	104
  4319  002A  00FE               	movwf	btemp
  4320  002B  3000               	movlw	0
  4321  002C  00FF               	movwf	btemp+1
  4322  002D  31A9  21E3  3180   	fcall	clear_ram0
  4323                           
  4324                           ; Clear objects allocated to BANK2
  4325  0030  0022               	movlb	2	; select bank2
  4326  0031  01EE               	clrf	__pbssBANK2& (0+127)
  4327  0032  01EF               	clrf	(__pbssBANK2+1)& (0+127)
  4328                           
  4329                           ; Clear objects allocated to BANK3
  4330  0033  30A0               	movlw	low __pbssBANK3
  4331  0034  0084               	movwf	4
  4332  0035  3001               	movlw	high __pbssBANK3
  4333  0036  0085               	movwf	5
  4334  0037  3045               	movlw	69
  4335  0038  00FE               	movwf	btemp
  4336  0039  3000               	movlw	0
  4337  003A  00FF               	movwf	btemp+1
  4338  003B  31A9  21E3  3180   	fcall	clear_ram0
  4339                           
  4340                           ; Clear objects allocated to BANK4
  4341  003E  3020               	movlw	low __pbssBANK4
  4342  003F  0084               	movwf	4
  4343  0040  3002               	movlw	high __pbssBANK4
  4344  0041  0085               	movwf	5
  4345  0042  304C               	movlw	76
  4346  0043  00FE               	movwf	btemp
  4347  0044  3000               	movlw	0
  4348  0045  00FF               	movwf	btemp+1
  4349  0046  31A9  21E3  3180   	fcall	clear_ram0
  4350                           
  4351                           ; Clear objects allocated to BANK5
  4352  0049  30A0               	movlw	low __pbssBANK5
  4353  004A  0084               	movwf	4
  4354  004B  3002               	movlw	high __pbssBANK5
  4355  004C  0085               	movwf	5
  4356  004D  3049               	movlw	73
  4357  004E  00FE               	movwf	btemp
  4358  004F  3000               	movlw	0
  4359  0050  00FF               	movwf	btemp+1
  4360  0051  31A9  21E3  3180   	fcall	clear_ram0
  4361                           
  4362                           ; Clear objects allocated to BANK6
  4363  0054  3020               	movlw	low __pbssBANK6
  4364  0055  0084               	movwf	4
  4365  0056  3003               	movlw	high __pbssBANK6
  4366  0057  0085               	movwf	5
  4367  0058  3032               	movlw	50
  4368  0059  00FE               	movwf	btemp
  4369  005A  3000               	movlw	0
  4370  005B  00FF               	movwf	btemp+1
  4371  005C  31A9  21E3  3180   	fcall	clear_ram0
  4372                           
  4373                           ; Clear objects allocated to BANK7
  4374  005F  30A0               	movlw	low __pbssBANK7
  4375  0060  0084               	movwf	4
  4376  0061  3003               	movlw	high __pbssBANK7
  4377  0062  0085               	movwf	5
  4378  0063  3050               	movlw	80
  4379  0064  00FE               	movwf	btemp
  4380  0065  3000               	movlw	0
  4381  0066  00FF               	movwf	btemp+1
  4382  0067  31A9  21E3         	fcall	clear_ram0
  4383  0069                     end_of_initialization:	
  4384                           ;End of C runtime variable initialization code
  4385                           
  4386  0069                     __end_of__initialization:
  4387  0069  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4388  006A  0020               	movlb	0
  4389  006B  31AA  2A09         	ljmp	_main	;jump to C main() function
  4390                           
  4391                           	psect	bssBANK2
  4392  016E                     __pbssBANK2:
  4393  016E                     _currentTCB:
  4394  016E                     	ds	1
  4395  016F                     _tcbList:
  4396  016F                     	ds	1
  4397                           
  4398                           	psect	bssBANK3
  4399  01A0                     __pbssBANK3:
  4400  01A0                     _receivedRemoteAddress:
  4401  01A0                     	ds	4
  4402  01A4                     _TXPacketSize:
  4403  01A4                     	ds	2
  4404  01A6                     _nextPacketPointer:
  4405  01A6                     	ds	2
  4406  01A8                     _eth_MAC:
  4407  01A8                     	ds	2
  4408  01AA                     _portUnreachable:
  4409  01AA                     	ds	2
  4410  01AC                     TMR1_ISR@CountCallBack:
  4411  01AC                     	ds	2
  4412  01AE                     _ipv4StartPosition:
  4413  01AE                     	ds	2
  4414  01B0                     _rcvPayloadLen:
  4415  01B0                     	ds	2
  4416  01B2                     _nextAvailablePort:
  4417  01B2                     	ds	2
  4418  01B4                     strtok@sp:
  4419  01B4                     	ds	1
  4420  01B5                     _lastBank:
  4421  01B5                     	ds	1
  4422  01B6                     _tcbListSize:
  4423  01B6                     	ds	1
  4424  01B7                     _Control_Byte:
  4425  01B7                     	ds	1
  4426  01B8                     _sequenceIndex:
  4427  01B8                     	ds	1
  4428  01B9                     _ipv4Header:
  4429  01B9                     	ds	20
  4430  01CD                     _tcpHeader:
  4431  01CD                     	ds	20
  4432  01E1                     DEMO_TCP_Client@t_client:
  4433  01E1                     	ds	4
  4434                           
  4435                           	psect	dataBANK3
  4436  01E5                     __pdataBANK3:
  4437  01E5                     _tcpMss:
  4438  01E5                     	ds	2
  4439  01E7                     _lfsr_value:
  4440  01E7                     	ds	1
  4441  01E8                     _xor_mask:
  4442  01E8                     	ds	1
  4443                           
  4444                           	psect	bssBANK4
  4445  0220                     __pbssBANK4:
  4446  0220                     _ip_database_info:
  4447  0220                     	ds	36
  4448  0244                     _ethData:
  4449  0244                     	ds	6
  4450  024A                     DEMO_TCP_Client@socketTimeout:
  4451  024A                     	ds	4
  4452  024E                     _rxPacketStatusVector:
  4453  024E                     	ds	4
  4454  0252                     _remoteIpv4Address:
  4455  0252                     	ds	4
  4456  0256                     Network_Manage@nowPv:
  4457  0256                     	ds	4
  4458  025A                     _device_time:
  4459  025A                     	ds	4
  4460  025E                     _nextSequenceNumber:
  4461  025E                     	ds	4
  4462  0262                     _remoteSocket:
  4463  0262                     	ds	6
  4464  0268                     _arpTimer:
  4465  0268                     	ds	4
  4466                           
  4467                           	psect	bssBANK5
  4468  02A0                     __pbssBANK5:
  4469  02A0                     DEMO_TCP_Client@port60TCB:
  4470  02A0                     	ds	52
  4471  02D4                     makeIpv4AddresstoStr@ip_str:
  4472  02D4                     	ds	15
  4473  02E3                     _hostMacAddress:
  4474  02E3                     	ds	6
  4475                           
  4476                           	psect	bssBANK6
  4477  0320                     __pbssBANK6:
  4478  0320                     DEMO_TCP_Client@rxdataPort60:
  4479  0320                     	ds	50
  4480                           
  4481                           	psect	bssBANK7
  4482  03A0                     __pbssBANK7:
  4483  03A0                     DEMO_TCP_Client@txdataPort60:
  4484  03A0                     	ds	80
  4485                           
  4486                           	psect	clrtext
  4487  29E3                     clear_ram0:	
  4488                           ;	Called with FSR0 containing the base address, and
  4489                           ;	btemp/btemp+1 has the size to clear
  4490                           
  4491  29E3  0064               	clrwdt	;clear the watchdog before getting into this loop
  4492  29E4                     clrloop0:
  4493  29E4  0180               	clrf	0	;clear RAM location pointed to by FSR
  4494  29E5  3101               	addfsr 0,1
  4495  29E6  3001               	movlw	1
  4496  29E7  02FE               	subwf	126,f
  4497  29E8  3000               	movlw	0
  4498  29E9  3BFF               	subwfb	127,f
  4499  29EA  087F               	movf	127,w
  4500  29EB  047E               	iorwf	126,w
  4501  29EC  1903               	btfsc	3,2
  4502  29ED  3400               	retlw	0	;all done for this memory range, return
  4503  29EE  29E4               	goto	clrloop0	;have we reached the end yet?
  4504                           
  4505                           	psect	cstackBANK3
  4506  01E9                     __pcstackBANK3:
  4507  01E9                     Network_Manage@now:
  4508                           
  4509                           ; 4 bytes @ 0x0
  4510  01E9                     	ds	4
  4511                           
  4512                           	psect	cstackBANK2
  4513  0120                     __pcstackBANK2:
  4514  0120                     ?_TCP_Recv:
  4515  0120                     ??_TCP_Connect:	
  4516                           ; 1 bytes @ 0x0
  4517                           
  4518  0120                     ??_TCP_Update:	
  4519                           ; 1 bytes @ 0x0
  4520                           
  4521  0120                     TCP_Recv@remoteAddress:	
  4522                           ; 1 bytes @ 0x0
  4523                           
  4524                           
  4525                           ; 4 bytes @ 0x0
  4526  0120                     	ds	4
  4527  0124                     TCP_Recv@length:
  4528  0124                     TCP_Update@count:	
  4529                           ; 2 bytes @ 0x4
  4530                           
  4531                           
  4532                           ; 2 bytes @ 0x4
  4533  0124                     	ds	1
  4534  0125                     TCP_Connect@tcbPtr:
  4535                           
  4536                           ; 1 bytes @ 0x5
  4537  0125                     	ds	1
  4538  0126                     ??_DEMO_TCP_Client:
  4539  0126                     ??_TCP_Recv:	
  4540                           ; 1 bytes @ 0x6
  4541                           
  4542  0126                     TCP_Update@tcbPtr:	
  4543                           ; 1 bytes @ 0x6
  4544                           
  4545                           
  4546                           ; 1 bytes @ 0x6
  4547  0126                     	ds	2
  4548  0128                     DEMO_TCP_Client@pot:
  4549                           
  4550                           ; 2 bytes @ 0x8
  4551  0128                     	ds	2
  4552  012A                     DEMO_TCP_Client@socketState:
  4553                           
  4554                           ; 1 bytes @ 0xA
  4555  012A                     	ds	1
  4556  012B                     DEMO_TCP_Client@rx_len:
  4557                           
  4558                           ; 2 bytes @ 0xB
  4559  012B                     	ds	19
  4560  013E                     ??_IPV4_Packet:
  4561                           
  4562                           ; 1 bytes @ 0x1E
  4563  013E                     	ds	18
  4564  0150                     IPV4_Packet@hdrLen:
  4565                           
  4566                           ; 1 bytes @ 0x30
  4567  0150                     	ds	1
  4568  0151                     IPV4_Packet@length:
  4569                           
  4570                           ; 2 bytes @ 0x31
  4571  0151                     	ds	2
  4572  0153                     IPV4_Packet@cksm:
  4573                           
  4574                           ; 2 bytes @ 0x33
  4575  0153                     	ds	2
  4576  0155                     IPV4_Packet@addrTemp:
  4577                           
  4578                           ; 4 bytes @ 0x35
  4579  0155                     	ds	4
  4580  0159                     ??_Network_Read:
  4581                           
  4582                           ; 1 bytes @ 0x39
  4583  0159                     	ds	7
  4584  0160                     Network_Read@header:
  4585                           
  4586                           ; 14 bytes @ 0x40
  4587  0160                     	ds	14
  4588                           
  4589                           	psect	cstackBANK1
  4590  00A0                     __pcstackBANK1:
  4591  00A0                     ??_ICMP_EchoReply:
  4592  00A0                     ??_TCP_Snd:	
  4593                           ; 1 bytes @ 0x0
  4594                           
  4595                           
  4596                           ; 1 bytes @ 0x0
  4597  00A0                     	ds	4
  4598  00A4                     ICMP_EchoReply@identifier:
  4599                           
  4600                           ; 2 bytes @ 0x4
  4601  00A4                     	ds	2
  4602  00A6                     ICMP_EchoReply@sequence:
  4603                           
  4604                           ; 2 bytes @ 0x6
  4605  00A6                     	ds	2
  4606  00A8                     ICMP_EchoReply@icmp_cksm_start:
  4607                           
  4608                           ; 2 bytes @ 0x8
  4609  00A8                     	ds	2
  4610  00AA                     ICMP_EchoReply@cksm:
  4611                           
  4612                           ; 2 bytes @ 0xA
  4613  00AA                     	ds	2
  4614  00AC                     ICMP_EchoReply@ipv4PayloadLength:
  4615                           
  4616                           ; 2 bytes @ 0xC
  4617  00AC                     	ds	2
  4618  00AE                     ICMP_EchoReply@ret:
  4619                           
  4620                           ; 1 bytes @ 0xE
  4621  00AE                     	ds	1
  4622  00AF                     ICMP_EchoReply@ipv4Hdr:
  4623                           
  4624                           ; 1 bytes @ 0xF
  4625  00AF                     	ds	1
  4626  00B0                     ??_ICMP_Receive:
  4627                           
  4628                           ; 1 bytes @ 0x10
  4629  00B0                     	ds	6
  4630  00B6                     ICMP_Receive@icmpHdr:
  4631                           
  4632                           ; 4 bytes @ 0x16
  4633  00B6                     	ds	2
  4634  00B8                     TCP_Snd@data:
  4635                           
  4636                           ; 1 bytes @ 0x18
  4637  00B8                     	ds	1
  4638  00B9                     TCP_Snd@cksm:
  4639                           
  4640                           ; 2 bytes @ 0x19
  4641  00B9                     	ds	1
  4642  00BA                     ICMP_Receive@ipv4Hdr:
  4643                           
  4644                           ; 1 bytes @ 0x1A
  4645  00BA                     	ds	1
  4646  00BB                     TCP_Snd@payloadLength:
  4647                           
  4648                           ; 2 bytes @ 0x1B
  4649  00BB                     	ds	2
  4650  00BD                     TCP_Snd@ret:
  4651                           
  4652                           ; 1 bytes @ 0x1D
  4653  00BD                     	ds	1
  4654  00BE                     TCP_Snd@tcpDataLength:
  4655                           
  4656                           ; 2 bytes @ 0x1E
  4657  00BE                     	ds	2
  4658  00C0                     TCP_Snd@txHeader:
  4659                           
  4660                           ; 20 bytes @ 0x20
  4661  00C0                     	ds	20
  4662  00D4                     TCP_Snd@tcbPtr:
  4663                           
  4664                           ; 1 bytes @ 0x34
  4665  00D4                     	ds	1
  4666  00D5                     ??_TCP_PayloadSave:
  4667  00D5                     ?_TCP_Send:	
  4668                           ; 1 bytes @ 0x35
  4669                           
  4670  00D5                     TCP_Send@data:	
  4671                           ; 1 bytes @ 0x35
  4672                           
  4673                           
  4674                           ; 1 bytes @ 0x35
  4675  00D5                     	ds	1
  4676  00D6                     TCP_Send@dataLen:
  4677                           
  4678                           ; 2 bytes @ 0x36
  4679  00D6                     	ds	8
  4680  00DE                     TCP_PayloadSave@buffer_size:
  4681                           
  4682                           ; 2 bytes @ 0x3E
  4683  00DE                     	ds	2
  4684  00E0                     ??_TCP_FiniteStateMachine:
  4685                           
  4686                           ; 1 bytes @ 0x40
  4687  00E0                     	ds	9
  4688  00E9                     TCP_FiniteStateMachine@ret:
  4689                           
  4690                           ; 1 bytes @ 0x49
  4691  00E9                     	ds	1
  4692  00EA                     TCP_FiniteStateMachine@notAckBytes:
  4693                           
  4694                           ; 2 bytes @ 0x4A
  4695  00EA                     	ds	2
  4696  00EC                     TCP_FiniteStateMachine@event:
  4697                           
  4698                           ; 1 bytes @ 0x4C
  4699  00EC                     	ds	1
  4700  00ED                     TCP_FiniteStateMachine@nextState:
  4701                           
  4702                           ; 1 bytes @ 0x4D
  4703  00ED                     	ds	1
  4704  00EE                     ?_TCP_Connect:
  4705  00EE                     TCP_Recv@count:	
  4706                           ; 1 bytes @ 0x4E
  4707                           
  4708  00EE                     TCP_Connect@srvaddr:	
  4709                           ; 1 bytes @ 0x4E
  4710                           
  4711                           
  4712                           ; 1 bytes @ 0x4E
  4713  00EE                     	ds	1
  4714  00EF                     TCP_Recv@tcbPtr:
  4715  00EF                     TCP_Close@tcbPtr:	
  4716                           ; 1 bytes @ 0x4F
  4717                           
  4718                           
  4719                           ; 1 bytes @ 0x4F
  4720  00EF                     	ds	1
  4721                           
  4722                           	psect	cstackCOMMON
  4723  0070                     __pcstackCOMMON:
  4724  0070                     ?_ETH_GetMAC:
  4725  0070                     ?_ETH_Send:	
  4726                           ; 1 bytes @ 0x0
  4727                           
  4728  0070                     ?_ETH_Read8:	
  4729                           ; 1 bytes @ 0x0
  4730                           
  4731  0070                     ?_TCP_FiniteStateMachine:	
  4732                           ; 1 bytes @ 0x0
  4733                           
  4734  0070                     ?_isPortUnreachable:	
  4735                           ; 1 bytes @ 0x0
  4736                           
  4737  0070                     ?_resetPortUnreachable:	
  4738                           ; 1 bytes @ 0x0
  4739                           
  4740  0070                     ??_resetPortUnreachable:	
  4741                           ; 1 bytes @ 0x0
  4742                           
  4743  0070                     ?_TCP_SocketPoll:	
  4744                           ; 1 bytes @ 0x0
  4745                           
  4746  0070                     ?_TMR1_SetInterruptHandler:	
  4747                           ; 1 bytes @ 0x0
  4748                           
  4749  0070                     ??_TMR1_SetInterruptHandler:	
  4750                           ; 1 bytes @ 0x0
  4751                           
  4752  0070                     ?_ETH_Init:	
  4753                           ; 1 bytes @ 0x0
  4754                           
  4755  0070                     ?_IPV4_Init:	
  4756                           ; 1 bytes @ 0x0
  4757                           
  4758  0070                     ?_Network_WaitForLink:	
  4759                           ; 1 bytes @ 0x0
  4760                           
  4761  0070                     ?_timersInit:	
  4762                           ; 1 bytes @ 0x0
  4763                           
  4764  0070                     ?_ETH_CheckLinkUp:	
  4765                           ; 1 bytes @ 0x0
  4766                           
  4767  0070                     ?_ETH_EventHandler:	
  4768                           ; 1 bytes @ 0x0
  4769                           
  4770  0070                     ?_Network_Read:	
  4771                           ; 1 bytes @ 0x0
  4772                           
  4773  0070                     ?_ETH_NextPacketUpdate:	
  4774                           ; 1 bytes @ 0x0
  4775                           
  4776  0070                     ?_IPV4_Packet:	
  4777                           ; 1 bytes @ 0x0
  4778                           
  4779  0070                     ?_ETH_Flush:	
  4780                           ; 1 bytes @ 0x0
  4781                           
  4782  0070                     ?_PIN_MANAGER_Initialize:	
  4783                           ; 1 bytes @ 0x0
  4784                           
  4785  0070                     ??_PIN_MANAGER_Initialize:	
  4786                           ; 1 bytes @ 0x0
  4787                           
  4788  0070                     ?_OSCILLATOR_Initialize:	
  4789                           ; 1 bytes @ 0x0
  4790                           
  4791  0070                     ??_OSCILLATOR_Initialize:	
  4792                           ; 1 bytes @ 0x0
  4793                           
  4794  0070                     ?_WDT_Initialize:	
  4795                           ; 1 bytes @ 0x0
  4796                           
  4797  0070                     ??_WDT_Initialize:	
  4798                           ; 1 bytes @ 0x0
  4799                           
  4800  0070                     ?_ADC_Initialize:	
  4801                           ; 1 bytes @ 0x0
  4802                           
  4803  0070                     ??_ADC_Initialize:	
  4804                           ; 1 bytes @ 0x0
  4805                           
  4806  0070                     ?_TMR1_Initialize:	
  4807                           ; 1 bytes @ 0x0
  4808                           
  4809  0070                     ?_IPV4_SaveStartPosition:	
  4810                           ; 1 bytes @ 0x0
  4811                           
  4812  0070                     ?_ICMP_Receive:	
  4813                           ; 1 bytes @ 0x0
  4814                           
  4815  0070                     ?_ETH_Write8:	
  4816                           ; 1 bytes @ 0x0
  4817                           
  4818  0070                     ?_TMR1_StartTimer:	
  4819                           ; 1 bytes @ 0x0
  4820                           
  4821  0070                     ??_TMR1_StartTimer:	
  4822                           ; 1 bytes @ 0x0
  4823                           
  4824  0070                     ?_TMR1_CallBack:	
  4825                           ; 1 bytes @ 0x0
  4826                           
  4827  0070                     ??_TMR1_CallBack:	
  4828                           ; 1 bytes @ 0x0
  4829                           
  4830  0070                     ?_ICMP_EchoReply:	
  4831                           ; 1 bytes @ 0x0
  4832                           
  4833  0070                     ?_ETH_SendSystemReset:	
  4834                           ; 1 bytes @ 0x0
  4835                           
  4836  0070                     ?_ENC28_Rcr8:	
  4837                           ; 1 bytes @ 0x0
  4838                           
  4839  0070                     ?_TCP_Client_Initialize:	
  4840                           ; 1 bytes @ 0x0
  4841                           
  4842  0070                     ??_TCP_Client_Initialize:	
  4843                           ; 1 bytes @ 0x0
  4844                           
  4845  0070                     ?_DEMO_TCP_Client:	
  4846                           ; 1 bytes @ 0x0
  4847                           
  4848  0070                     ?_ARPV4_Init:	
  4849                           ; 1 bytes @ 0x0
  4850                           
  4851  0070                     ?_ARPV4_Packet:	
  4852                           ; 1 bytes @ 0x0
  4853                           
  4854  0070                     ?_ARPV4_Update:	
  4855                           ; 1 bytes @ 0x0
  4856                           
  4857  0070                     ??_ARPV4_Update:	
  4858                           ; 1 bytes @ 0x0
  4859                           
  4860  0070                     ?_TCB_Insert:	
  4861                           ; 1 bytes @ 0x0
  4862                           
  4863  0070                     ??_TCB_Insert:	
  4864                           ; 1 bytes @ 0x0
  4865                           
  4866  0070                     ?_TCB_Remove:	
  4867                           ; 1 bytes @ 0x0
  4868                           
  4869  0070                     ??_TCB_Remove:	
  4870                           ; 1 bytes @ 0x0
  4871                           
  4872  0070                     ?_TCB_Reset:	
  4873                           ; 1 bytes @ 0x0
  4874                           
  4875  0070                     ??_TCB_Reset:	
  4876                           ; 1 bytes @ 0x0
  4877                           
  4878  0070                     ?_TCB_Check:	
  4879                           ; 1 bytes @ 0x0
  4880                           
  4881  0070                     ??_TCB_Check:	
  4882                           ; 1 bytes @ 0x0
  4883                           
  4884  0070                     ?_TCP_Snd:	
  4885                           ; 1 bytes @ 0x0
  4886                           
  4887  0070                     ?_TCP_ParseTCPOptions:	
  4888                           ; 1 bytes @ 0x0
  4889                           
  4890  0070                     ?_TCP_Init:	
  4891                           ; 1 bytes @ 0x0
  4892                           
  4893  0070                     ??_TCP_Init:	
  4894                           ; 1 bytes @ 0x0
  4895                           
  4896  0070                     ?_TCP_SocketInit:	
  4897                           ; 1 bytes @ 0x0
  4898                           
  4899  0070                     ?_TCP_SocketRemove:	
  4900                           ; 1 bytes @ 0x0
  4901                           
  4902  0070                     ?_TCP_Close:	
  4903                           ; 1 bytes @ 0x0
  4904                           
  4905  0070                     ?_TCP_SendDone:	
  4906                           ; 1 bytes @ 0x0
  4907                           
  4908  0070                     ?_TCP_Update:	
  4909                           ; 1 bytes @ 0x0
  4910                           
  4911  0070                     ?_SPI1_Initialize:	
  4912                           ; 1 bytes @ 0x0
  4913                           
  4914  0070                     ??_SPI1_Initialize:	
  4915                           ; 1 bytes @ 0x0
  4916                           
  4917  0070                     ?_SPI1_Exchange8bit:	
  4918                           ; 1 bytes @ 0x0
  4919                           
  4920  0070                     ??_SPI1_Exchange8bit:	
  4921                           ; 1 bytes @ 0x0
  4922                           
  4923  0070                     ?_rtcc_init:	
  4924                           ; 1 bytes @ 0x0
  4925                           
  4926  0070                     ?_Network_Init:	
  4927                           ; 1 bytes @ 0x0
  4928                           
  4929  0070                     ?_Network_Manage:	
  4930                           ; 1 bytes @ 0x0
  4931                           
  4932  0070                     ?_ipdb_init:	
  4933                           ; 1 bytes @ 0x0
  4934                           
  4935  0070                     ??_ipdb_init:	
  4936                           ; 1 bytes @ 0x0
  4937                           
  4938  0070                     ?_SYSTEM_Initialize:	
  4939                           ; 1 bytes @ 0x0
  4940                           
  4941  0070                     ?_TMR1_ISR:	
  4942                           ; 1 bytes @ 0x0
  4943                           
  4944  0070                     ??_TMR1_ISR:	
  4945                           ; 1 bytes @ 0x0
  4946                           
  4947  0070                     ?_INTERRUPT_InterruptManager:	
  4948                           ; 1 bytes @ 0x0
  4949                           
  4950  0070                     ??_INTERRUPT_InterruptManager:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0070                     ?_ENC28_BankSel:	
  4954                           ; 1 bytes @ 0x0
  4955                           
  4956  0070                     ?_main:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0070                     ?_ARPV4_Lookup:	
  4960                           ; 1 bytes @ 0x0
  4961                           
  4962  0070                     ?_MAC_getAddress:	
  4963                           ; 2 bytes @ 0x0
  4964                           
  4965  0070                     ?_strlen:	
  4966                           ; 2 bytes @ 0x0
  4967                           
  4968  0070                     ?_IPV4_PseudoHeaderChecksum:	
  4969                           ; 2 bytes @ 0x0
  4970                           
  4971  0070                     ?_ADC_GetConversion:	
  4972                           ; 2 bytes @ 0x0
  4973                           
  4974  0070                     ?___wmul:	
  4975                           ; 2 bytes @ 0x0
  4976                           
  4977  0070                     ?___lwdiv:	
  4978                           ; 2 bytes @ 0x0
  4979                           
  4980  0070                     ?_time:	
  4981                           ; 2 bytes @ 0x0
  4982                           
  4983  0070                     SPI1_Exchange8bit@data:	
  4984                           ; 4 bytes @ 0x0
  4985                           
  4986  0070                     PIN_MANAGER_Initialize@state:	
  4987                           ; 1 bytes @ 0x0
  4988                           
  4989  0070                     time@t:	
  4990                           ; 1 bytes @ 0x0
  4991                           
  4992  0070                     IPV4_PseudoHeaderChecksum@payloadLen:	
  4993                           ; 2 bytes @ 0x0
  4994                           
  4995  0070                     isPortUnreachable@port:	
  4996                           ; 2 bytes @ 0x0
  4997                           
  4998  0070                     ___wmul@multiplier:	
  4999                           ; 2 bytes @ 0x0
  5000                           
  5001  0070                     ___lwdiv@divisor:	
  5002                           ; 2 bytes @ 0x0
  5003                           
  5004  0070                     ARPV4_Lookup@ip_address:	
  5005                           ; 2 bytes @ 0x0
  5006                           
  5007                           
  5008                           ; 4 bytes @ 0x0
  5009  0070                     	ds	1
  5010  0071                     ??_ETH_Read8:
  5011  0071                     ?_ETH_Write16:	
  5012                           ; 1 bytes @ 0x1
  5013                           
  5014  0071                     ?_ETH_Write32:	
  5015                           ; 1 bytes @ 0x1
  5016                           
  5017  0071                     ??_ETH_Write8:	
  5018                           ; 1 bytes @ 0x1
  5019                           
  5020  0071                     ??_ETH_SendSystemReset:	
  5021                           ; 1 bytes @ 0x1
  5022                           
  5023  0071                     ??_ENC28_BankSel:	
  5024                           ; 1 bytes @ 0x1
  5025                           
  5026  0071                     ?_ETH_ReadBlock:	
  5027                           ; 1 bytes @ 0x1
  5028                           
  5029  0071                     ?_ETH_WriteBlock:	
  5030                           ; 2 bytes @ 0x1
  5031                           
  5032  0071                     ?_ETH_Read16:	
  5033                           ; 2 bytes @ 0x1
  5034                           
  5035  0071                     TCB_Insert@ptr:	
  5036                           ; 2 bytes @ 0x1
  5037                           
  5038  0071                     TCB_Remove@ptr:	
  5039                           ; 1 bytes @ 0x1
  5040                           
  5041  0071                     TCB_Reset@tcbPtr:	
  5042                           ; 1 bytes @ 0x1
  5043                           
  5044  0071                     TCB_Check@ret:	
  5045                           ; 1 bytes @ 0x1
  5046                           
  5047  0071                     ipdb_init@x:	
  5048                           ; 1 bytes @ 0x1
  5049                           
  5050  0071                     ETH_Write8@data:	
  5051                           ; 1 bytes @ 0x1
  5052                           
  5053  0071                     ARPV4_Update@entryPointer:	
  5054                           ; 1 bytes @ 0x1
  5055                           
  5056  0071                     ETH_ReadBlock@buffer:	
  5057                           ; 2 bytes @ 0x1
  5058                           
  5059  0071                     ETH_Write16@data:	
  5060                           ; 2 bytes @ 0x1
  5061                           
  5062  0071                     ETH_WriteBlock@data:	
  5063                           ; 2 bytes @ 0x1
  5064                           
  5065  0071                     ETH_Write32@data:	
  5066                           ; 2 bytes @ 0x1
  5067                           
  5068                           
  5069                           ; 4 bytes @ 0x1
  5070  0071                     	ds	1
  5071  0072                     ??_isPortUnreachable:
  5072  0072                     ??_IPV4_Init:	
  5073                           ; 1 bytes @ 0x2
  5074                           
  5075  0072                     ??_MAC_getAddress:	
  5076                           ; 1 bytes @ 0x2
  5077                           
  5078  0072                     ??_strlen:	
  5079                           ; 1 bytes @ 0x2
  5080                           
  5081  0072                     ??_IPV4_PseudoHeaderChecksum:	
  5082                           ; 1 bytes @ 0x2
  5083                           
  5084  0072                     ??_ADC_GetConversion:	
  5085                           ; 1 bytes @ 0x2
  5086                           
  5087  0072                     TCB_Check@count:	
  5088                           ; 1 bytes @ 0x2
  5089                           
  5090  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  5091                           ; 1 bytes @ 0x2
  5092                           
  5093  0072                     ENC28_BankSel@r:	
  5094                           ; 1 bytes @ 0x2
  5095                           
  5096  0072                     ETH_Read8@b:	
  5097                           ; 1 bytes @ 0x2
  5098                           
  5099  0072                     ___wmul@multiplicand:	
  5100                           ; 1 bytes @ 0x2
  5101                           
  5102  0072                     ___lwdiv@dividend:	
  5103                           ; 2 bytes @ 0x2
  5104                           
  5105                           
  5106                           ; 2 bytes @ 0x2
  5107  0072                     	ds	1
  5108  0073                     ??_ETH_Read16:
  5109  0073                     ??_TMR1_Initialize:	
  5110                           ; 1 bytes @ 0x3
  5111                           
  5112  0073                     ??_ETH_Write16:	
  5113                           ; 1 bytes @ 0x3
  5114                           
  5115  0073                     ??_rtcc_init:	
  5116                           ; 1 bytes @ 0x3
  5117                           
  5118  0073                     ?_ETH_ComputeChecksum:	
  5119                           ; 1 bytes @ 0x3
  5120                           
  5121  0073                     ARPV4_Update@x:	
  5122                           ; 2 bytes @ 0x3
  5123                           
  5124  0073                     TCB_Check@tcbPtr:	
  5125                           ; 1 bytes @ 0x3
  5126                           
  5127  0073                     ADC_GetConversion@channel:	
  5128                           ; 1 bytes @ 0x3
  5129                           
  5130  0073                     ENC28_BankSel@a:	
  5131                           ; 1 bytes @ 0x3
  5132                           
  5133  0073                     strlen@s:	
  5134                           ; 1 bytes @ 0x3
  5135                           
  5136  0073                     ETH_ReadBlock@length:	
  5137                           ; 1 bytes @ 0x3
  5138                           
  5139  0073                     ETH_WriteBlock@length:	
  5140                           ; 2 bytes @ 0x3
  5141                           
  5142  0073                     ETH_ComputeChecksum@len:	
  5143                           ; 2 bytes @ 0x3
  5144                           
  5145                           
  5146                           ; 2 bytes @ 0x3
  5147  0073                     	ds	1
  5148  0074                     ??_time:
  5149  0074                     ??_ARPV4_Lookup:	
  5150                           ; 1 bytes @ 0x4
  5151                           
  5152  0074                     ??_ENC28_Rcr8:	
  5153                           ; 1 bytes @ 0x4
  5154                           
  5155  0074                     ?_ENC28_Bfs:	
  5156                           ; 1 bytes @ 0x4
  5157                           
  5158  0074                     ?_ENC28_Wcr8:	
  5159                           ; 1 bytes @ 0x4
  5160                           
  5161  0074                     ?_ENC28_Bfc:	
  5162                           ; 1 bytes @ 0x4
  5163                           
  5164  0074                     ??___wmul:	
  5165                           ; 1 bytes @ 0x4
  5166                           
  5167  0074                     ??___lwdiv:	
  5168                           ; 1 bytes @ 0x4
  5169                           
  5170  0074                     ?_ENC28_Rcr16:	
  5171                           ; 1 bytes @ 0x4
  5172                           
  5173  0074                     TCB_Check@ptr:	
  5174                           ; 2 bytes @ 0x4
  5175                           
  5176  0074                     time@gie_val:	
  5177                           ; 1 bytes @ 0x4
  5178                           
  5179  0074                     ENC28_Wcr8@v:	
  5180                           ; 1 bytes @ 0x4
  5181                           
  5182  0074                     ENC28_Bfs@bits:	
  5183                           ; 1 bytes @ 0x4
  5184                           
  5185  0074                     ENC28_Bfc@bits:	
  5186                           ; 1 bytes @ 0x4
  5187                           
  5188  0074                     strlen@cp:	
  5189                           ; 1 bytes @ 0x4
  5190                           
  5191  0074                     ___wmul@product:	
  5192                           ; 1 bytes @ 0x4
  5193                           
  5194                           
  5195                           ; 2 bytes @ 0x4
  5196  0074                     	ds	1
  5197  0075                     ??_ETH_ReadBlock:
  5198  0075                     ??_ETH_WriteBlock:	
  5199                           ; 1 bytes @ 0x5
  5200                           
  5201  0075                     ??_TCP_SocketPoll:	
  5202                           ; 1 bytes @ 0x5
  5203                           
  5204  0075                     ??_ETH_Write32:	
  5205                           ; 1 bytes @ 0x5
  5206                           
  5207  0075                     ??_ENC28_Bfs:	
  5208                           ; 1 bytes @ 0x5
  5209                           
  5210  0075                     ??_ENC28_Wcr8:	
  5211                           ; 1 bytes @ 0x5
  5212                           
  5213  0075                     ??_ENC28_Bfc:	
  5214                           ; 1 bytes @ 0x5
  5215                           
  5216  0075                     ??_TCP_SocketInit:	
  5217                           ; 1 bytes @ 0x5
  5218                           
  5219  0075                     ??_TCP_SendDone:	
  5220                           ; 1 bytes @ 0x5
  5221                           
  5222  0075                     ?_TCP_InsertRxBuffer:	
  5223                           ; 1 bytes @ 0x5
  5224                           
  5225  0075                     ?_TCP_GetReceivedData:	
  5226                           ; 1 bytes @ 0x5
  5227                           
  5228  0075                     TCP_SendDone@ret:	
  5229                           ; 2 bytes @ 0x5
  5230                           
  5231  0075                     TCP_InsertRxBuffer@data:	
  5232                           ; 1 bytes @ 0x5
  5233                           
  5234  0075                     ENC28_Rcr8@v:	
  5235                           ; 1 bytes @ 0x5
  5236                           
  5237  0075                     ENC28_Wcr8@a:	
  5238                           ; 1 bytes @ 0x5
  5239                           
  5240  0075                     ENC28_Bfs@a:	
  5241                           ; 1 bytes @ 0x5
  5242                           
  5243  0075                     ENC28_Bfc@a:	
  5244                           ; 1 bytes @ 0x5
  5245                           
  5246  0075                     ETH_WriteBlock@p:	
  5247                           ; 1 bytes @ 0x5
  5248                           
  5249  0075                     ETH_ComputeChecksum@seed:	
  5250                           ; 2 bytes @ 0x5
  5251                           
  5252  0075                     ___lwdiv@quotient:	
  5253                           ; 2 bytes @ 0x5
  5254                           
  5255  0075                     time@the_time:	
  5256                           ; 2 bytes @ 0x5
  5257                           
  5258                           
  5259                           ; 4 bytes @ 0x5
  5260  0075                     	ds	1
  5261  0076                     ??_ENC28_Rcr16:
  5262  0076                     TCP_SocketPoll@tmpSocketState:	
  5263                           ; 1 bytes @ 0x6
  5264                           
  5265  0076                     TCP_SendDone@tcbPtr:	
  5266                           ; 1 bytes @ 0x6
  5267                           
  5268  0076                     ENC28_Rcr8@a:	
  5269                           ; 1 bytes @ 0x6
  5270                           
  5271  0076                     TCP_InsertRxBuffer@data_len:	
  5272                           ; 1 bytes @ 0x6
  5273                           
  5274  0076                     ETH_Read16@b:	
  5275                           ; 2 bytes @ 0x6
  5276                           
  5277  0076                     ETH_ReadBlock@p:	
  5278                           ; 2 bytes @ 0x6
  5279                           
  5280                           
  5281                           ; 2 bytes @ 0x6
  5282  0076                     	ds	1
  5283  0077                     ??_ETH_GetMAC:
  5284  0077                     TCP_SocketInit@tcbPtr:	
  5285                           ; 1 bytes @ 0x7
  5286                           
  5287  0077                     TCP_SocketPoll@socket_ptr:	
  5288                           ; 1 bytes @ 0x7
  5289                           
  5290  0077                     ___lwdiv@counter:	
  5291                           ; 1 bytes @ 0x7
  5292                           
  5293  0077                     ENC28_Rcr16@v:	
  5294                           ; 1 bytes @ 0x7
  5295                           
  5296  0077                     ETH_ComputeChecksum@v:	
  5297                           ; 2 bytes @ 0x7
  5298                           
  5299                           
  5300                           ; 2 bytes @ 0x7
  5301  0077                     	ds	1
  5302  0078                     ??_TCP_SocketRemove:
  5303  0078                     ??_TCP_InsertRxBuffer:	
  5304                           ; 1 bytes @ 0x8
  5305                           
  5306  0078                     ??_TCP_GetReceivedData:	
  5307                           ; 1 bytes @ 0x8
  5308                           
  5309  0078                     ?___lwmod:	
  5310                           ; 1 bytes @ 0x8
  5311                           
  5312  0078                     ETH_GetMAC@macAddr:	
  5313                           ; 2 bytes @ 0x8
  5314                           
  5315  0078                     ARPV4_Lookup@entry_pointer:	
  5316                           ; 1 bytes @ 0x8
  5317                           
  5318  0078                     TCP_GetReceivedData@ret:	
  5319                           ; 2 bytes @ 0x8
  5320                           
  5321  0078                     ETH_ReadBlock@readCount:	
  5322                           ; 2 bytes @ 0x8
  5323                           
  5324  0078                     ___lwmod@divisor:	
  5325                           ; 2 bytes @ 0x8
  5326                           
  5327                           
  5328                           ; 2 bytes @ 0x8
  5329  0078                     	ds	1
  5330  0079                     ??_timersInit:
  5331  0079                     ??_ARPV4_Init:	
  5332                           ; 1 bytes @ 0x9
  5333                           
  5334  0079                     TCP_SocketRemove@tcbPtr:	
  5335                           ; 1 bytes @ 0x9
  5336                           
  5337  0079                     ENC28_Rcr16@a:	
  5338                           ; 1 bytes @ 0x9
  5339                           
  5340  0079                     ETH_ComputeChecksum@cksm:	
  5341                           ; 1 bytes @ 0x9
  5342                           
  5343                           
  5344                           ; 4 bytes @ 0x9
  5345  0079                     	ds	1
  5346  007A                     ?_ENC28_Wcr16:
  5347  007A                     ?_ETH_GetReadPtr:	
  5348                           ; 1 bytes @ 0xA
  5349                           
  5350  007A                     ?_ENC28_PhyRead:	
  5351                           ; 2 bytes @ 0xA
  5352                           
  5353  007A                     ARPV4_Init@x:	
  5354                           ; 2 bytes @ 0xA
  5355                           
  5356  007A                     ARPV4_Lookup@x:	
  5357                           ; 1 bytes @ 0xA
  5358                           
  5359  007A                     TCP_InsertRxBuffer@tcbPtr:	
  5360                           ; 1 bytes @ 0xA
  5361                           
  5362  007A                     TCP_GetReceivedData@tcbPtr:	
  5363                           ; 1 bytes @ 0xA
  5364                           
  5365  007A                     ENC28_Wcr16@v:	
  5366                           ; 1 bytes @ 0xA
  5367                           
  5368  007A                     ___lwmod@dividend:	
  5369                           ; 2 bytes @ 0xA
  5370                           
  5371                           
  5372                           ; 2 bytes @ 0xA
  5373  007A                     	ds	2
  5374  007C                     ??_IPV4_SaveStartPosition:
  5375  007C                     ??_ETH_GetReadPtr:	
  5376                           ; 1 bytes @ 0xC
  5377                           
  5378  007C                     ??_ENC28_Wcr16:	
  5379                           ; 1 bytes @ 0xC
  5380                           
  5381  007C                     ??_ENC28_PhyRead:	
  5382                           ; 1 bytes @ 0xC
  5383                           
  5384  007C                     ??___lwmod:	
  5385                           ; 1 bytes @ 0xC
  5386                           
  5387                           
  5388                           ; 1 bytes @ 0xC
  5389  007C                     	ds	1
  5390  007D                     ENC28_Wcr16@a:
  5391  007D                     ENC28_PhyRead@a:	
  5392                           ; 1 bytes @ 0xD
  5393                           
  5394  007D                     ___lwmod@counter:	
  5395                           ; 1 bytes @ 0xD
  5396                           
  5397                           
  5398                           ; 1 bytes @ 0xD
  5399  007D                     	ds	1
  5400  007E                     ??_ETH_Dump:
  5401  007E                     ??_Network_WaitForLink:	
  5402                           ; 1 bytes @ 0xE
  5403                           
  5404  007E                     ??_ETH_CheckLinkUp:	
  5405                           ; 1 bytes @ 0xE
  5406                           
  5407  007E                     ??_Network_Init:	
  5408                           ; 1 bytes @ 0xE
  5409                           
  5410  007E                     ??_SYSTEM_Initialize:	
  5411                           ; 1 bytes @ 0xE
  5412                           
  5413  007E                     ??_main:	
  5414                           ; 1 bytes @ 0xE
  5415                           
  5416                           
  5417                           	psect	cstackBANK0
  5418  0020                     __pcstackBANK0:	
  5419                           ; 1 bytes @ 0xE
  5420                           
  5421  0020                     ?_ETH_WriteStart:
  5422  0020                     ??_ETH_Send:	
  5423                           ; 1 bytes @ 0x0
  5424                           
  5425  0020                     ?_ETH_Insert:	
  5426                           ; 1 bytes @ 0x0
  5427                           
  5428  0020                     ?_ETH_Dump:	
  5429                           ; 1 bytes @ 0x0
  5430                           
  5431  0020                     ??_ETH_NextPacketUpdate:	
  5432                           ; 1 bytes @ 0x0
  5433                           
  5434  0020                     ??_ETH_Flush:	
  5435                           ; 1 bytes @ 0x0
  5436                           
  5437  0020                     ?_ETH_Copy:	
  5438                           ; 1 bytes @ 0x0
  5439                           
  5440  0020                     ?_ENC28_PhyWrite:	
  5441                           ; 1 bytes @ 0x0
  5442                           
  5443  0020                     ??_ETH_ComputeChecksum:	
  5444                           ; 1 bytes @ 0x0
  5445                           
  5446  0020                     ?_ETH_TxComputeChecksum:	
  5447                           ; 1 bytes @ 0x0
  5448                           
  5449  0020                     ?_sprintf:	
  5450                           ; 2 bytes @ 0x0
  5451                           
  5452  0020                     IPV4_PseudoHeaderChecksum@v:	
  5453                           ; 2 bytes @ 0x0
  5454                           
  5455  0020                     ENC28_PhyWrite@d:	
  5456                           ; 1 bytes @ 0x0
  5457                           
  5458  0020                     ETH_CheckLinkUp@phstat2:	
  5459                           ; 2 bytes @ 0x0
  5460                           
  5461  0020                     ETH_WriteStart@dest_mac:	
  5462                           ; 2 bytes @ 0x0
  5463                           
  5464  0020                     ETH_Dump@length:	
  5465                           ; 2 bytes @ 0x0
  5466                           
  5467  0020                     ETH_Insert@len:	
  5468                           ; 2 bytes @ 0x0
  5469                           
  5470  0020                     ETH_Copy@len:	
  5471                           ; 2 bytes @ 0x0
  5472                           
  5473  0020                     ETH_TxComputeChecksum@position:	
  5474                           ; 2 bytes @ 0x0
  5475                           
  5476  0020                     sprintf@sp:	
  5477                           ; 2 bytes @ 0x0
  5478                           
  5479                           
  5480                           ; 2 bytes @ 0x0
  5481  0020                     	ds	1
  5482  0021                     IPV4_PseudoHeaderChecksum@len:
  5483                           
  5484                           ; 1 bytes @ 0x1
  5485  0021                     	ds	1
  5486  0022                     ??_ETH_EventHandler:
  5487  0022                     ??_ETH_Copy:	
  5488                           ; 1 bytes @ 0x2
  5489                           
  5490  0022                     ??_ENC28_PhyWrite:	
  5491                           ; 1 bytes @ 0x2
  5492                           
  5493  0022                     ETH_WriteStart@type:	
  5494                           ; 1 bytes @ 0x2
  5495                           
  5496  0022                     ETH_Dump@newRXTail:	
  5497                           ; 2 bytes @ 0x2
  5498                           
  5499  0022                     ETH_Insert@offset:	
  5500                           ; 2 bytes @ 0x2
  5501                           
  5502  0022                     ETH_TxComputeChecksum@length:	
  5503                           ; 2 bytes @ 0x2
  5504                           
  5505  0022                     sprintf@f:	
  5506                           ; 2 bytes @ 0x2
  5507                           
  5508  0022                     IPV4_PseudoHeaderChecksum@cksm:	
  5509                           ; 2 bytes @ 0x2
  5510                           
  5511                           
  5512                           ; 4 bytes @ 0x2
  5513  0022                     	ds	1
  5514  0023                     ENC28_PhyWrite@a:
  5515  0023                     ETH_Copy@tx_buffer_address:	
  5516                           ; 1 bytes @ 0x3
  5517                           
  5518  0023                     ETH_EventHandler@phstat2_val:	
  5519                           ; 2 bytes @ 0x3
  5520                           
  5521                           
  5522                           ; 3 bytes @ 0x3
  5523  0023                     	ds	1
  5524  0024                     ??_ETH_WriteStart:
  5525  0024                     ??_ETH_Insert:	
  5526                           ; 1 bytes @ 0x4
  5527                           
  5528  0024                     ??_TCP_ParseTCPOptions:	
  5529                           ; 1 bytes @ 0x4
  5530                           
  5531  0024                     ENC28_PhyWrite@v:	
  5532                           ; 1 bytes @ 0x4
  5533                           
  5534  0024                     ETH_TxComputeChecksum@seed:	
  5535                           ; 1 bytes @ 0x4
  5536                           
  5537                           
  5538                           ; 2 bytes @ 0x4
  5539  0024                     	ds	1
  5540  0025                     ??_ETH_Init:
  5541  0025                     ETH_Insert@current_tx_pointer:	
  5542                           ; 1 bytes @ 0x5
  5543                           
  5544  0025                     ETH_Copy@timer:	
  5545                           ; 2 bytes @ 0x5
  5546                           
  5547                           
  5548                           ; 2 bytes @ 0x5
  5549  0025                     	ds	1
  5550  0026                     ??_ETH_TxComputeChecksum:
  5551  0026                     ??_ARPV4_Packet:	
  5552                           ; 1 bytes @ 0x6
  5553                           
  5554  0026                     ?_ARPV4_Request:	
  5555                           ; 1 bytes @ 0x6
  5556                           
  5557  0026                     TCP_ParseTCPOptions@ret:	
  5558                           ; 1 bytes @ 0x6
  5559                           
  5560  0026                     ETH_EventHandler@eir_val:	
  5561                           ; 1 bytes @ 0x6
  5562                           
  5563  0026                     ARPV4_Request@destAddress:	
  5564                           ; 1 bytes @ 0x6
  5565                           
  5566  0026                     IPV4_PseudoHeaderChecksum@tmp:	
  5567                           ; 4 bytes @ 0x6
  5568                           
  5569                           
  5570                           ; 12 bytes @ 0x6
  5571  0026                     	ds	1
  5572  0027                     TCP_ParseTCPOptions@opt:
  5573  0027                     ETH_Insert@data:	
  5574                           ; 1 bytes @ 0x7
  5575                           
  5576  0027                     ETH_Copy@temp_len:	
  5577                           ; 1 bytes @ 0x7
  5578                           
  5579                           
  5580                           ; 2 bytes @ 0x7
  5581  0027                     	ds	1
  5582  0028                     ??_sprintf:
  5583  0028                     ?_ETH_RxComputeChecksum:	
  5584                           ; 1 bytes @ 0x8
  5585                           
  5586  0028                     TCP_ParseTCPOptions@tcpOptionsSize:	
  5587                           ; 2 bytes @ 0x8
  5588                           
  5589  0028                     ETH_RxComputeChecksum@len:	
  5590                           ; 2 bytes @ 0x8
  5591                           
  5592                           
  5593                           ; 2 bytes @ 0x8
  5594  0028                     	ds	2
  5595  002A                     ??_ARPV4_Request:
  5596  002A                     ETH_RxComputeChecksum@seed:	
  5597                           ; 1 bytes @ 0xA
  5598                           
  5599                           
  5600                           ; 2 bytes @ 0xA
  5601  002A                     	ds	2
  5602  002C                     ??_ETH_RxComputeChecksum:
  5603  002C                     sprintf@ap:	
  5604                           ; 1 bytes @ 0xC
  5605                           
  5606                           
  5607                           ; 1 bytes @ 0xC
  5608  002C                     	ds	1
  5609  002D                     sprintf@flag:
  5610                           
  5611                           ; 1 bytes @ 0xD
  5612  002D                     	ds	1
  5613  002E                     sprintf@prec:
  5614                           
  5615                           ; 1 bytes @ 0xE
  5616  002E                     	ds	1
  5617  002F                     sprintf@val:
  5618  002F                     ETH_TxComputeChecksum@cksm:	
  5619                           ; 2 bytes @ 0xF
  5620                           
  5621                           
  5622                           ; 4 bytes @ 0xF
  5623  002F                     	ds	2
  5624  0031                     sprintf@c:
  5625  0031                     ETH_RxComputeChecksum@rxptr:	
  5626                           ; 1 bytes @ 0x11
  5627                           
  5628                           
  5629                           ; 2 bytes @ 0x11
  5630  0031                     	ds	2
  5631  0033                     ?_IPV4_Send:
  5632  0033                     IPV4_Send@payloadLength:	
  5633                           ; 1 bytes @ 0x13
  5634                           
  5635  0033                     ETH_RxComputeChecksum@cksm:	
  5636                           ; 2 bytes @ 0x13
  5637                           
  5638                           
  5639                           ; 4 bytes @ 0x13
  5640  0033                     	ds	2
  5641  0035                     ??_IPV4_Send:
  5642                           
  5643                           ; 1 bytes @ 0x15
  5644  0035                     	ds	3
  5645  0038                     IPV4_Send@cksm:
  5646                           
  5647                           ; 2 bytes @ 0x18
  5648  0038                     	ds	2
  5649  003A                     IPV4_Send@ret:
  5650                           
  5651                           ; 1 bytes @ 0x1A
  5652  003A                     	ds	1
  5653  003B                     IPV4_Send@totalLength:
  5654                           
  5655                           ; 2 bytes @ 0x1B
  5656  003B                     	ds	1
  5657  003C                     ARPV4_Request@ret:
  5658                           
  5659                           ; 1 bytes @ 0x1C
  5660  003C                     	ds	1
  5661  003D                     ARPV4_Request@header:
  5662                           
  5663                           ; 28 bytes @ 0x1D
  5664  003D                     	ds	1
  5665  003E                     ARPV4_Packet@length:
  5666                           
  5667                           ; 2 bytes @ 0x1E
  5668  003E                     	ds	2
  5669  0040                     ARPV4_Packet@mergeFlag:
  5670                           
  5671                           ; 1 bytes @ 0x20
  5672  0040                     	ds	1
  5673  0041                     ARPV4_Packet@ret:
  5674                           
  5675                           ; 1 bytes @ 0x21
  5676  0041                     	ds	1
  5677  0042                     ARPV4_Packet@arpPtr:
  5678                           
  5679                           ; 2 bytes @ 0x22
  5680  0042                     	ds	2
  5681  0044                     ARPV4_Packet@x:
  5682                           
  5683                           ; 1 bytes @ 0x24
  5684  0044                     	ds	1
  5685  0045                     ARPV4_Packet@x_219:
  5686                           
  5687                           ; 1 bytes @ 0x25
  5688  0045                     	ds	1
  5689  0046                     ARPV4_Packet@entryPointer:
  5690                           
  5691                           ; 2 bytes @ 0x26
  5692  0046                     	ds	2
  5693  0048                     ARPV4_Packet@header:
  5694                           
  5695                           ; 28 bytes @ 0x28
  5696  0048                     	ds	17
  5697  0059                     ?_IPv4_Start:
  5698  0059                     IPv4_Start@destAddress:	
  5699                           ; 1 bytes @ 0x39
  5700                           
  5701                           
  5702                           ; 4 bytes @ 0x39
  5703  0059                     	ds	4
  5704  005D                     IPv4_Start@protocol:
  5705                           
  5706                           ; 1 bytes @ 0x3D
  5707  005D                     	ds	1
  5708  005E                     ??_IPv4_Start:
  5709                           
  5710                           ; 1 bytes @ 0x3E
  5711  005E                     	ds	8
  5712  0066                     IPv4_Start@targetAddress:
  5713                           
  5714                           ; 4 bytes @ 0x46
  5715  0066                     	ds	4
  5716  006A                     IPv4_Start@macAddress:
  5717                           
  5718                           ; 2 bytes @ 0x4A
  5719  006A                     	ds	2
  5720  006C                     IPv4_Start@ret:
  5721                           
  5722                           ; 1 bytes @ 0x4C
  5723  006C                     	ds	1
  5724  006D                     ?_TCP_PayloadSave:
  5725  006D                     ??_TCP_Send:	
  5726                           ; 1 bytes @ 0x4D
  5727                           
  5728  006D                     TCP_PayloadSave@len:	
  5729                           ; 1 bytes @ 0x4D
  5730                           
  5731                           
  5732                           ; 2 bytes @ 0x4D
  5733  006D                     	ds	2
  5734  006F                     ??_TCP_Close:
  5735  006F                     ??_Network_Manage:	
  5736                           ; 1 bytes @ 0x4F
  5737                           
  5738  006F                     TCP_Send@tcbPtr:	
  5739                           ; 1 bytes @ 0x4F
  5740                           
  5741                           
  5742                           ; 1 bytes @ 0x4F
  5743  006F                     	ds	1
  5744                           
  5745                           	psect	maintext
  5746  2A09                     __pmaintext:	
  5747 ;;
  5748 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  5749 ;;
  5750 ;; *************** function _main *****************
  5751 ;; Defined at:
  5752 ;;		line 52 in file "main.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : B1F/0
  5763 ;;		On exit  : 1C/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels required when called:   16
  5772 ;; This function calls:
  5773 ;;		_DEMO_TCP_Client
  5774 ;;		_Network_Manage
  5775 ;;		_SYSTEM_Initialize
  5776 ;;		_TCP_Client_Initialize
  5777 ;; This function is called by:
  5778 ;;		Startup code after reset
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function _main
  5784  2A09                     _main:
  5785                           
  5786                           ;main.c: 55: SYSTEM_Initialize();
  5787                           
  5788                           ;incstack = 0
  5789                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5790  2A09  31AA  22FA  31AA   	fcall	_SYSTEM_Initialize
  5791                           
  5792                           ;main.c: 60: (INTCONbits.GIE = 1);
  5793  2A0C  178B               	bsf	11,7	;volatile
  5794                           
  5795                           ;main.c: 63: (INTCONbits.PEIE = 1);
  5796  2A0D  170B               	bsf	11,6	;volatile
  5797                           
  5798                           ;main.c: 71: TCP_Client_Initialize();
  5799  2A0E  31A9  21FC  31AA   	fcall	_TCP_Client_Initialize
  5800  2A11                     l8410:
  5801                           
  5802                           ;main.c: 74: {;main.c: 75: Network_Manage();
  5803  2A11  31A2  2218  31AA   	fcall	_Network_Manage
  5804                           
  5805                           ;main.c: 76: DEMO_TCP_Client();
  5806  2A14  319C  240A  31AA   	fcall	_DEMO_TCP_Client
  5807  2A17  2A11               	goto	l8410
  5808  2A18                     __end_of_main:
  5809                           
  5810                           	psect	text1
  5811  29FC                     __ptext1:	
  5812 ;; *************** function _TCP_Client_Initialize *****************
  5813 ;; Defined at:
  5814 ;;		line 105 in file "tcp_client_demo.c"
  5815 ;; Parameters:    Size  Location     Type
  5816 ;;		None
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg
  5823 ;; Tracked objects:
  5824 ;;		On entry : 1F/4
  5825 ;;		On exit  : 1F/4
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5832 ;;Total ram usage:        0 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_main
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           
  5843                           ;psect for function _TCP_Client_Initialize
  5844  29FC                     _TCP_Client_Initialize:
  5845                           
  5846                           ;tcp_client_demo.c: 106: remoteSocket.addr.s_addr = ((uint32_t)(((uint32_t)192 << 24) | 
      +                          ((uint32_t)168<<16) | ((uint32_t)0 << 8) | (uint32_t)16));
  5847                           
  5848                           ;incstack = 0
  5849                           ; Regs used in _TCP_Client_Initialize: [wreg]
  5850  29FC  30C0               	movlw	192
  5851  29FD  00E7               	movwf	((_remoteSocket+3)^(0+512)+2)
  5852  29FE  30A8               	movlw	168
  5853  29FF  00E6               	movwf	((_remoteSocket+2)^(0+512)+2)
  5854  2A00  3000               	movlw	0
  5855  2A01  00E5               	movwf	((_remoteSocket+1)^(0+512)+2)
  5856  2A02  3010               	movlw	16
  5857  2A03  00E4               	movwf	(_remoteSocket^(0+512)+2)
  5858                           
  5859                           ;tcp_client_demo.c: 107: remoteSocket.port = 60;
  5860  2A04  303C               	movlw	60
  5861  2A05  00E2               	movwf	_remoteSocket^(0+512)
  5862  2A06  3000               	movlw	0
  5863  2A07  00E3               	movwf	(_remoteSocket^(0+512)+1)
  5864  2A08  0008               	return
  5865  2A09                     __end_of_TCP_Client_Initialize:
  5866                           
  5867                           	psect	text2
  5868  2AFA                     __ptext2:	
  5869 ;; *************** function _SYSTEM_Initialize *****************
  5870 ;; Defined at:
  5871 ;;		line 76 in file "mcc_generated_files/mcc.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : B1F/0
  5882 ;;		On exit  : 1F/4
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:   10
  5892 ;; This function calls:
  5893 ;;		_ADC_Initialize
  5894 ;;		_Network_Init
  5895 ;;		_OSCILLATOR_Initialize
  5896 ;;		_PIN_MANAGER_Initialize
  5897 ;;		_SPI1_Initialize
  5898 ;;		_TMR1_Initialize
  5899 ;;		_WDT_Initialize
  5900 ;; This function is called by:
  5901 ;;		_main
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function _SYSTEM_Initialize
  5907  2AFA                     _SYSTEM_Initialize:
  5908                           
  5909                           ;mcc.c: 79: PIN_MANAGER_Initialize();
  5910                           
  5911                           ;incstack = 0
  5912                           ; Regs used in _SYSTEM_Initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5913  2AFA  31AF  27BE  31AA   	fcall	_PIN_MANAGER_Initialize
  5914                           
  5915                           ;mcc.c: 80: OSCILLATOR_Initialize();
  5916  2AFD  31A9  21B7  31AA   	fcall	_OSCILLATOR_Initialize
  5917                           
  5918                           ;mcc.c: 81: WDT_Initialize();
  5919  2B00  31A9  2172  31AA   	fcall	_WDT_Initialize
  5920                           
  5921                           ;mcc.c: 82: SPI1_Initialize();
  5922  2B03  31A9  2186  31AA   	fcall	_SPI1_Initialize
  5923                           
  5924                           ;mcc.c: 83: ADC_Initialize();
  5925  2B06  31A9  21AE  31AA   	fcall	_ADC_Initialize
  5926                           
  5927                           ;mcc.c: 84: TMR1_Initialize();
  5928  2B09  31AB  233B  31AA   	fcall	_TMR1_Initialize
  5929                           
  5930                           ;mcc.c: 85: Network_Init();
  5931  2B0C  31AA  22E5         	fcall	_Network_Init
  5932  2B0E  0008               	return
  5933  2B0F                     __end_of_SYSTEM_Initialize:
  5934                           
  5935                           	psect	text3
  5936  2972                     __ptext3:	
  5937 ;; *************** function _WDT_Initialize *****************
  5938 ;; Defined at:
  5939 ;;		line 104 in file "mcc_generated_files/mcc.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;		None
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg
  5948 ;; Tracked objects:
  5949 ;;		On entry : 1F/12
  5950 ;;		On exit  : 1F/1
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5957 ;;Total ram usage:        0 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; Hardware stack levels required when called:    3
  5960 ;; This function calls:
  5961 ;;		Nothing
  5962 ;; This function is called by:
  5963 ;;		_SYSTEM_Initialize
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           
  5968                           ;psect for function _WDT_Initialize
  5969  2972                     _WDT_Initialize:
  5970                           
  5971                           ;mcc.c: 107: WDTCON = 0x16;
  5972                           
  5973                           ;incstack = 0
  5974                           ; Regs used in _WDT_Initialize: [wreg]
  5975  2972  3016               	movlw	22
  5976  2973  0021               	movlb	1	; select bank1
  5977  2974  0097               	movwf	23	;volatile
  5978  2975  0008               	return
  5979  2976                     __end_of_WDT_Initialize:
  5980                           
  5981                           	psect	text4
  5982  2B3B                     __ptext4:	
  5983 ;; *************** function _TMR1_Initialize *****************
  5984 ;; Defined at:
  5985 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;		None
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 1F/1
  5996 ;;		On exit  : 1F/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6003 ;;Total ram usage:        0 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    4
  6006 ;; This function calls:
  6007 ;;		_TMR1_SetInterruptHandler
  6008 ;;		_TMR1_StartTimer
  6009 ;; This function is called by:
  6010 ;;		_SYSTEM_Initialize
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           
  6015                           ;psect for function _TMR1_Initialize
  6016  2B3B                     _TMR1_Initialize:
  6017                           
  6018                           ;tmr1.c: 68: T1CON = 0x00;
  6019                           
  6020                           ;incstack = 0
  6021                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6022  2B3B  0020               	movlb	0	; select bank0
  6023  2B3C  019B               	clrf	27	;volatile
  6024                           
  6025                           ;tmr1.c: 71: T1GCON = 0x00;
  6026  2B3D  019C               	clrf	28	;volatile
  6027                           
  6028                           ;tmr1.c: 74: TMR1H = 0x0B;
  6029  2B3E  300B               	movlw	11
  6030  2B3F  009A               	movwf	26	;volatile
  6031                           
  6032                           ;tmr1.c: 77: TMR1L = 0xDC;
  6033  2B40  30DC               	movlw	220
  6034  2B41  0099               	movwf	25	;volatile
  6035                           
  6036                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
  6037  2B42  081A               	movf	26,w	;volatile
  6038  2B43  0023               	movlb	3	; select bank3
  6039  2B44  00EE               	movwf	(_timer1ReloadVal+1)^(0+384)	;volatile
  6040  2B45  0020               	movlb	0	; select bank0
  6041  2B46  0819               	movf	25,w	;volatile
  6042  2B47  0023               	movlb	3	; select bank3
  6043  2B48  00ED               	movwf	_timer1ReloadVal^(0+384)	;volatile
  6044                           
  6045                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  6046  2B49  0020               	movlb	0	; select bank0
  6047  2B4A  1011               	bcf	17,0	;volatile
  6048                           
  6049                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  6050  2B4B  0021               	movlb	1	; select bank1
  6051  2B4C  1411               	bsf	17,0	;volatile
  6052                           
  6053                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  6054  2B4D  3000               	movlw	0
  6055  2B4E  31A9  21C0  31AB   	fcall	_TMR1_SetInterruptHandler
  6056                           
  6057                           ;tmr1.c: 92: TMR1_StartTimer();
  6058  2B51  3187  27FD         	fcall	_TMR1_StartTimer
  6059  2B53  0008               	return
  6060  2B54                     __end_of_TMR1_Initialize:
  6061                           
  6062                           	psect	text5
  6063  07FD                     __ptext5:	
  6064 ;; *************** function _TMR1_StartTimer *****************
  6065 ;; Defined at:
  6066 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;		None
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;		None
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1    wreg      void 
  6073 ;; Registers used:
  6074 ;;		None
  6075 ;; Tracked objects:
  6076 ;;		On entry : 1F/4
  6077 ;;		On exit  : 1F/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:    3
  6087 ;; This function calls:
  6088 ;;		Nothing
  6089 ;; This function is called by:
  6090 ;;		_TMR1_Initialize
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           
  6095                           ;psect for function _TMR1_StartTimer
  6096  07FD                     _TMR1_StartTimer:
  6097                           
  6098                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  6099                           
  6100                           ;incstack = 0
  6101                           ; Regs used in _TMR1_StartTimer: []
  6102  07FD  0020               	movlb	0	; select bank0
  6103  07FE  141B               	bsf	27,0	;volatile
  6104  07FF  0008               	return
  6105  0800                     __end_of_TMR1_StartTimer:
  6106                           
  6107                           	psect	text6
  6108  2986                     __ptext6:	
  6109 ;; *************** function _SPI1_Initialize *****************
  6110 ;; Defined at:
  6111 ;;		line 63 in file "mcc_generated_files/spi1.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  1    wreg      void 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2
  6120 ;; Tracked objects:
  6121 ;;		On entry : 1F/1
  6122 ;;		On exit  : 1F/4
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    3
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_SYSTEM_Initialize
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           
  6140                           ;psect for function _SPI1_Initialize
  6141  2986                     _SPI1_Initialize:
  6142                           
  6143                           ;spi1.c: 68: SSP1STAT = 0xC0;
  6144                           
  6145                           ;incstack = 0
  6146                           ; Regs used in _SPI1_Initialize: [wreg+status,2]
  6147  2986  30C0               	movlw	192
  6148  2987  0024               	movlb	4	; select bank4
  6149  2988  0094               	movwf	20	;volatile
  6150                           
  6151                           ;spi1.c: 71: SSP1CON1 = 0x20;
  6152  2989  3020               	movlw	32
  6153  298A  0095               	movwf	21	;volatile
  6154                           
  6155                           ;spi1.c: 74: SSP1ADD = 0x00;
  6156  298B  0192               	clrf	18	;volatile
  6157  298C  0008               	return
  6158  298D                     __end_of_SPI1_Initialize:
  6159                           
  6160                           	psect	text7
  6161  2FBE                     __ptext7:	
  6162 ;; *************** function _PIN_MANAGER_Initialize *****************
  6163 ;; Defined at:
  6164 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  state           1    0[COMMON] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : B1F/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6182 ;;Total ram usage:        1 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    3
  6185 ;; This function calls:
  6186 ;;		Nothing
  6187 ;; This function is called by:
  6188 ;;		_SYSTEM_Initialize
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _PIN_MANAGER_Initialize
  6194  2FBE                     _PIN_MANAGER_Initialize:
  6195                           
  6196                           ;pin_manager.c: 56: LATA = 0x00;
  6197                           
  6198                           ;incstack = 0
  6199                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  6200  2FBE  0022               	movlb	2	; select bank2
  6201  2FBF  018C               	clrf	12	;volatile
  6202                           
  6203                           ;pin_manager.c: 57: LATB = 0x00;
  6204  2FC0  018D               	clrf	13	;volatile
  6205                           
  6206                           ;pin_manager.c: 58: LATC = 0x00;
  6207  2FC1  018E               	clrf	14	;volatile
  6208                           
  6209                           ;pin_manager.c: 63: TRISA = 0x17;
  6210  2FC2  3017               	movlw	23
  6211  2FC3  0021               	movlb	1	; select bank1
  6212  2FC4  008C               	movwf	12	;volatile
  6213                           
  6214                           ;pin_manager.c: 64: TRISB = 0xB0;
  6215  2FC5  30B0               	movlw	176
  6216  2FC6  008D               	movwf	13	;volatile
  6217                           
  6218                           ;pin_manager.c: 65: TRISC = 0x3F;
  6219  2FC7  303F               	movlw	63
  6220  2FC8  008E               	movwf	14	;volatile
  6221                           
  6222                           ;pin_manager.c: 70: ANSELC = 0xBF;
  6223  2FC9  30BF               	movlw	191
  6224  2FCA  0023               	movlb	3	; select bank3
  6225  2FCB  008E               	movwf	14	;volatile
  6226                           
  6227                           ;pin_manager.c: 71: ANSELB = 0xA0;
  6228  2FCC  30A0               	movlw	160
  6229  2FCD  008D               	movwf	13	;volatile
  6230                           
  6231                           ;pin_manager.c: 72: ANSELA = 0x37;
  6232  2FCE  3037               	movlw	55
  6233  2FCF  008C               	movwf	12	;volatile
  6234                           
  6235                           ;pin_manager.c: 77: WPUB = 0x00;
  6236  2FD0  0024               	movlb	4	; select bank4
  6237  2FD1  018D               	clrf	13	;volatile
  6238                           
  6239                           ;pin_manager.c: 78: WPUA = 0x00;
  6240  2FD2  018C               	clrf	12	;volatile
  6241                           
  6242                           ;pin_manager.c: 79: WPUC = 0x00;
  6243  2FD3  018E               	clrf	14	;volatile
  6244                           
  6245                           ;pin_manager.c: 84: ODCONA = 0x00;
  6246  2FD4  0025               	movlb	5	; select bank5
  6247  2FD5  018C               	clrf	12	;volatile
  6248                           
  6249                           ;pin_manager.c: 85: ODCONB = 0x00;
  6250  2FD6  018D               	clrf	13	;volatile
  6251                           
  6252                           ;pin_manager.c: 86: ODCONC = 0x00;
  6253  2FD7  018E               	clrf	14	;volatile
  6254                           
  6255                           ;pin_manager.c: 93: bool state = GIE;
  6256  2FD8  3000               	movlw	0
  6257  2FD9  1B8B               	btfsc	11,7	;volatile
  6258  2FDA  3001               	movlw	1
  6259  2FDB  00F0               	movwf	PIN_MANAGER_Initialize@state
  6260                           
  6261                           ;pin_manager.c: 94: GIE = 0;
  6262  2FDC  138B               	bcf	11,7	;volatile
  6263                           
  6264                           ;pin_manager.c: 95: PPSLOCK = 0x55;
  6265  2FDD  3055               	movlw	85
  6266  2FDE  003C               	movlb	28	; select bank28
  6267  2FDF  008F               	movwf	15	;volsfr
  6268                           
  6269                           ;pin_manager.c: 96: PPSLOCK = 0xAA;
  6270  2FE0  30AA               	movlw	170
  6271  2FE1  008F               	movwf	15	;volsfr
  6272                           
  6273                           ;pin_manager.c: 97: PPSLOCKbits.PPSLOCKED = 0x00;
  6274  2FE2  100F               	bcf	15,0	;volsfr
  6275                           
  6276                           ;pin_manager.c: 99: SSP1DATPPSbits.SSP1DATPPS = 0x0C;
  6277  2FE3  0821               	movf	33,w	;volatile
  6278  2FE4  39E0               	andlw	-32
  6279  2FE5  380C               	iorlw	12
  6280  2FE6  00A1               	movwf	33	;volatile
  6281                           
  6282                           ;pin_manager.c: 100: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
  6283  2FE7  0820               	movf	32,w	;volatile
  6284  2FE8  39E0               	andlw	-32
  6285  2FE9  380E               	iorlw	14
  6286  2FEA  00A0               	movwf	32	;volatile
  6287                           
  6288                           ;pin_manager.c: 101: RB6PPSbits.RB6PPS = 0x18;
  6289  2FEB  003D               	movlb	29	; select bank29
  6290  2FEC  081E               	movf	30,w	;volatile
  6291  2FED  39E0               	andlw	-32
  6292  2FEE  3818               	iorlw	24
  6293  2FEF  009E               	movwf	30	;volatile
  6294                           
  6295                           ;pin_manager.c: 102: RC7PPSbits.RC7PPS = 0x19;
  6296  2FF0  0827               	movf	39,w	;volatile
  6297  2FF1  39E0               	andlw	-32
  6298  2FF2  3819               	iorlw	25
  6299  2FF3  00A7               	movwf	39	;volatile
  6300                           
  6301                           ;pin_manager.c: 104: PPSLOCK = 0x55;
  6302  2FF4  3055               	movlw	85
  6303  2FF5  003C               	movlb	28	; select bank28
  6304  2FF6  008F               	movwf	15	;volsfr
  6305                           
  6306                           ;pin_manager.c: 105: PPSLOCK = 0xAA;
  6307  2FF7  30AA               	movlw	170
  6308  2FF8  008F               	movwf	15	;volsfr
  6309                           
  6310                           ;pin_manager.c: 106: PPSLOCKbits.PPSLOCKED = 0x01;
  6311  2FF9  140F               	bsf	15,0	;volsfr
  6312                           
  6313                           ;pin_manager.c: 108: GIE = state;
  6314  2FFA  1C70               	btfss	PIN_MANAGER_Initialize@state,0
  6315  2FFB  2FFE               	goto	u2580
  6316  2FFC  178B               	bsf	11,7	;volatile
  6317  2FFD  0008               	return
  6318  2FFE                     u2580:
  6319  2FFE  138B               	bcf	11,7	;volatile
  6320  2FFF  0008               	return
  6321  3000                     __end_of_PIN_MANAGER_Initialize:
  6322                           
  6323                           	psect	text8
  6324  29B7                     __ptext8:	
  6325 ;; *************** function _OSCILLATOR_Initialize *****************
  6326 ;; Defined at:
  6327 ;;		line 88 in file "mcc_generated_files/mcc.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 1F/12
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    3
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_SYSTEM_Initialize
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _OSCILLATOR_Initialize
  6357  29B7                     _OSCILLATOR_Initialize:
  6358                           
  6359                           ;mcc.c: 91: OSCCON1 = 0x62;
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6363  29B7  3062               	movlw	98
  6364  29B8  0032               	movlb	18	; select bank18
  6365  29B9  0099               	movwf	25	;volatile
  6366                           
  6367                           ;mcc.c: 93: OSCCON3 = 0x00;
  6368  29BA  019B               	clrf	27	;volatile
  6369                           
  6370                           ;mcc.c: 95: OSCEN = 0x00;
  6371  29BB  019D               	clrf	29	;volatile
  6372                           
  6373                           ;mcc.c: 97: OSCFRQ = 0x03;
  6374  29BC  3003               	movlw	3
  6375  29BD  009F               	movwf	31	;volatile
  6376                           
  6377                           ;mcc.c: 99: OSCTUNE = 0x00;
  6378  29BE  019E               	clrf	30	;volatile
  6379  29BF  0008               	return
  6380  29C0                     __end_of_OSCILLATOR_Initialize:
  6381                           
  6382                           	psect	text9
  6383  2AE5                     __ptext9:	
  6384 ;; *************** function _Network_Init *****************
  6385 ;; Defined at:
  6386 ;;		line 54 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;		None
  6389 ;; Auto vars:     Size  Location     Type
  6390 ;;		None
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  1    wreg      void 
  6393 ;; Registers used:
  6394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 1F/0
  6397 ;;		On exit  : 1F/4
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6404 ;;Total ram usage:        0 bytes
  6405 ;; Hardware stack levels used:    1
  6406 ;; Hardware stack levels required when called:    9
  6407 ;; This function calls:
  6408 ;;		_ARPV4_Init
  6409 ;;		_ETH_Init
  6410 ;;		_IPV4_Init
  6411 ;;		_Network_WaitForLink
  6412 ;;		_TCP_Init
  6413 ;;		_rtcc_init
  6414 ;;		_timersInit
  6415 ;; This function is called by:
  6416 ;;		_SYSTEM_Initialize
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function _Network_Init
  6422  2AE5                     _Network_Init:
  6423                           
  6424                           ;network.c: 56: ETH_Init();
  6425                           
  6426                           ;incstack = 0
  6427                           ; Regs used in _Network_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6428  2AE5  3185  25E9  31AA   	fcall	_ETH_Init
  6429                           
  6430                           ;network.c: 57: ARPV4_Init();
  6431  2AE8  31AA  22A7  31AA   	fcall	_ARPV4_Init
  6432                           
  6433                           ;network.c: 58: IPV4_Init();
  6434  2AEB  31A9  216B  31AA   	fcall	_IPV4_Init
  6435                           
  6436                           ;network.c: 59: TCP_Init();
  6437  2AEE  31AA  225B  31AA   	fcall	_TCP_Init
  6438                           
  6439                           ;network.c: 60: rtcc_init();
  6440  2AF1  31A9  21D7  31AA   	fcall	_rtcc_init
  6441                           
  6442                           ;network.c: 61: Network_WaitForLink();
  6443  2AF4  31A9  217F  31AA   	fcall	_Network_WaitForLink
  6444                           
  6445                           ;network.c: 62: timersInit();
  6446  2AF7  31AA  2228         	fcall	_timersInit
  6447  2AF9  0008               	return
  6448  2AFA                     __end_of_Network_Init:
  6449                           
  6450                           	psect	text10
  6451  2A28                     __ptext10:	
  6452 ;; *************** function _timersInit *****************
  6453 ;; Defined at:
  6454 ;;		line 65 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;		None
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  1    wreg      void 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 1B/4
  6465 ;;		On exit  : 1F/4
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6472 ;;Total ram usage:        0 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    4
  6475 ;; This function calls:
  6476 ;;		_time
  6477 ;; This function is called by:
  6478 ;;		_Network_Init
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           
  6483                           ;psect for function _timersInit
  6484  2A28                     _timersInit:
  6485                           
  6486                           ;network.c: 67: time(&arpTimer);
  6487                           
  6488                           ;incstack = 0
  6489                           ; Regs used in _timersInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6490  2A28  3068               	movlw	low _arpTimer
  6491  2A29  00F0               	movwf	time@t
  6492  2A2A  3002               	movlw	high _arpTimer
  6493  2A2B  00F1               	movwf	time@t+1
  6494  2A2C  31AD  2536         	fcall	_time
  6495                           
  6496                           ;network.c: 68: arpTimer += 10;
  6497  2A2E  300A               	movlw	10
  6498  2A2F  0024               	movlb	4	; select bank4
  6499  2A30  07E8               	addwf	_arpTimer^(0+512),f
  6500  2A31  3000               	movlw	0
  6501  2A32  3DE9               	addwfc	(_arpTimer+1)^(0+512),f
  6502  2A33  3000               	movlw	0
  6503  2A34  3DEA               	addwfc	(_arpTimer+2)^(0+512),f
  6504  2A35  3000               	movlw	0
  6505  2A36  3DEB               	addwfc	(_arpTimer+3)^(0+512),f
  6506  2A37  0008               	return
  6507  2A38                     __end_of_timersInit:
  6508                           
  6509                           	psect	text11
  6510  29D7                     __ptext11:	
  6511 ;; *************** function _rtcc_init *****************
  6512 ;; Defined at:
  6513 ;;		line 62 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, pclath, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 1F/4
  6524 ;;		On exit  : 1F/4
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    4
  6534 ;; This function calls:
  6535 ;;		_TMR1_SetInterruptHandler
  6536 ;; This function is called by:
  6537 ;;		_Network_Init
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _rtcc_init
  6543  29D7                     _rtcc_init:
  6544                           
  6545                           ;rtcc.c: 64: device_time = 1293861600;
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in _rtcc_init: [wreg+status,2+status,0+pclath+cstack]
  6549  29D7  304D               	movlw	77
  6550  29D8  00DD               	movwf	(_device_time+3)^(0+512)	;volatile
  6551  29D9  301E               	movlw	30
  6552  29DA  00DC               	movwf	(_device_time+2)^(0+512)	;volatile
  6553  29DB  30C2               	movlw	194
  6554  29DC  00DB               	movwf	(_device_time+1)^(0+512)	;volatile
  6555  29DD  30E0               	movlw	224
  6556  29DE  00DA               	movwf	_device_time^(0+512)	;volatile
  6557                           
  6558                           ;rtcc.c: 65: TMR1_SetInterruptHandler(rtcc_handler);
  6559  29DF  3000               	movlw	0
  6560  29E0  31A9  21C0         	fcall	_TMR1_SetInterruptHandler
  6561  29E2  0008               	return
  6562  29E3                     __end_of_rtcc_init:
  6563                           
  6564                           	psect	text12
  6565  29C0                     __ptext12:	
  6566 ;; *************** function _TMR1_SetInterruptHandler *****************
  6567 ;; Defined at:
  6568 ;;		line 185 in file "mcc_generated_files/tmr1.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  InterruptHan    1    wreg     PTR void 
  6571 ;; Auto vars:     Size  Location     Type
  6572 ;;  InterruptHan    1    2[COMMON] PTR void 
  6573 ;; Return value:  Size  Location     Type
  6574 ;;                  1    wreg      void 
  6575 ;; Registers used:
  6576 ;;		wreg
  6577 ;; Tracked objects:
  6578 ;;		On entry : 1A/1
  6579 ;;		On exit  : 1F/4
  6580 ;;		Unchanged: 0/0
  6581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6585 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6586 ;;Total ram usage:        3 bytes
  6587 ;; Hardware stack levels used:    1
  6588 ;; Hardware stack levels required when called:    3
  6589 ;; This function calls:
  6590 ;;		Nothing
  6591 ;; This function is called by:
  6592 ;;		_rtcc_init
  6593 ;;		_TMR1_Initialize
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           
  6598                           ;psect for function _TMR1_SetInterruptHandler
  6599  29C0                     _TMR1_SetInterruptHandler:
  6600                           
  6601                           ;incstack = 0
  6602                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6603                           ;TMR1_SetInterruptHandler@InterruptHandler stored from wreg
  6604  29C0  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6605                           
  6606                           ;tmr1.c: 186: TMR1_InterruptHandler = InterruptHandler;
  6607  29C1  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6608  29C2  00F0               	movwf	??_TMR1_SetInterruptHandler
  6609  29C3  3000               	movlw	0
  6610  29C4  00F1               	movwf	??_TMR1_SetInterruptHandler+1
  6611  29C5  0870               	movf	??_TMR1_SetInterruptHandler,w
  6612  29C6  0024               	movlb	4	; select bank4
  6613  29C7  00EC               	movwf	_TMR1_InterruptHandler^(0+512)
  6614  29C8  0871               	movf	??_TMR1_SetInterruptHandler+1,w
  6615  29C9  00ED               	movwf	(_TMR1_InterruptHandler+1)^(0+512)
  6616  29CA  0008               	return
  6617  29CB                     __end_of_TMR1_SetInterruptHandler:
  6618                           
  6619                           	psect	text13
  6620  2A5B                     __ptext13:	
  6621 ;; *************** function _TCP_Init *****************
  6622 ;; Defined at:
  6623 ;;		line 1149 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      void 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2
  6632 ;; Tracked objects:
  6633 ;;		On entry : 1F/4
  6634 ;;		On exit  : 1F/4
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    3
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_Network_Init
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _TCP_Init
  6653  2A5B                     _TCP_Init:
  6654                           
  6655                           ;tcpv4.c: 1151: tcbList = (0);
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _TCP_Init: [wreg+status,2]
  6659  2A5B  0022               	movlb	2	; select bank2
  6660  2A5C  01EF               	clrf	_tcbList^(0+256)
  6661                           
  6662                           ;tcpv4.c: 1152: tcbListSize = 0;
  6663  2A5D  0023               	movlb	3	; select bank3
  6664  2A5E  01B6               	clrf	_tcbListSize^(0+384)
  6665                           
  6666                           ;tcpv4.c: 1153: nextAvailablePort = (1024u);
  6667  2A5F  3000               	movlw	0
  6668  2A60  00B2               	movwf	_nextAvailablePort^(0+384)
  6669  2A61  3004               	movlw	4
  6670  2A62  00B3               	movwf	(_nextAvailablePort^(0+384)+1)
  6671                           
  6672                           ;tcpv4.c: 1154: nextSequenceNumber = 0;
  6673  2A63  3000               	movlw	0
  6674  2A64  0024               	movlb	4	; select bank4
  6675  2A65  00E1               	movwf	(_nextSequenceNumber+3)^(0+512)
  6676  2A66  3000               	movlw	0
  6677  2A67  00E0               	movwf	(_nextSequenceNumber+2)^(0+512)
  6678  2A68  3000               	movlw	0
  6679  2A69  00DF               	movwf	(_nextSequenceNumber+1)^(0+512)
  6680  2A6A  3000               	movlw	0
  6681  2A6B  00DE               	movwf	_nextSequenceNumber^(0+512)
  6682  2A6C  0008               	return
  6683  2A6D                     __end_of_TCP_Init:
  6684                           
  6685                           	psect	text14
  6686  297F                     __ptext14:	
  6687 ;; *************** function _Network_WaitForLink *****************
  6688 ;; Defined at:
  6689 ;;		line 71 in file "mcc_generated_files/TCPIPLibrary/network.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0, pclath, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 1F/4
  6700 ;;		On exit  : 1B/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    8
  6710 ;; This function calls:
  6711 ;;		_ETH_CheckLinkUp
  6712 ;; This function is called by:
  6713 ;;		_Network_Init
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function _Network_WaitForLink
  6719  297F                     _Network_WaitForLink:
  6720  297F                     l6400:	
  6721                           ;network.c: 73: while(!ETH_CheckLinkUp());
  6722                           
  6723                           ;incstack = 0
  6724                           ; Regs used in _Network_WaitForLink: [wreg+status,2+status,0+pclath+cstack]
  6725                           
  6726  297F  31AA  2238  31A9   	fcall	_ETH_CheckLinkUp
  6727  2982  3A00               	xorlw	0
  6728  2983  1D03               	btfss	3,2
  6729  2984  0008               	return
  6730  2985  297F               	goto	l6400
  6731  2986                     __end_of_Network_WaitForLink:
  6732                           
  6733                           	psect	text15
  6734  296B                     __ptext15:	
  6735 ;; *************** function _IPV4_Init *****************
  6736 ;; Defined at:
  6737 ;;		line 63 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  6738 ;; Parameters:    Size  Location     Type
  6739 ;;		None
  6740 ;; Auto vars:     Size  Location     Type
  6741 ;;		None
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      void 
  6744 ;; Registers used:
  6745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 1F/2
  6748 ;;		On exit  : 1F/4
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6755 ;;Total ram usage:        0 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    4
  6758 ;; This function calls:
  6759 ;;		_ipdb_init
  6760 ;; This function is called by:
  6761 ;;		_Network_Init
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           
  6766                           ;psect for function _IPV4_Init
  6767  296B                     _IPV4_Init:
  6768                           
  6769                           ;ipv4.c: 65: ipdb_init();
  6770                           
  6771                           ;incstack = 0
  6772                           ; Regs used in _IPV4_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6773  296B  31A0  205F         	fcall	_ipdb_init
  6774  296D  0008               	return
  6775  296E                     __end_of_IPV4_Init:
  6776                           
  6777                           	psect	text16
  6778  205F                     __ptext16:	
  6779 ;; *************** function _ipdb_init *****************
  6780 ;; Defined at:
  6781 ;;		line 31 in file "mcc_generated_files/TCPIPLibrary/ip_database.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;  x               1    1[COMMON] unsigned char 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6790 ;; Tracked objects:
  6791 ;;		On entry : 1F/2
  6792 ;;		On exit  : 1F/4
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6799 ;;Total ram usage:        2 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    3
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_IPV4_Init
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           
  6810                           ;psect for function _ipdb_init
  6811  205F                     _ipdb_init:
  6812                           
  6813                           ;ip_database.c: 33: ip_database_info.ipv4_myAddress = 0xc0a80002;
  6814                           
  6815                           ;incstack = 0
  6816                           ; Regs used in _ipdb_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  6817  205F  30C0               	movlw	192
  6818  2060  0024               	movlb	4	; select bank4
  6819  2061  00A3               	movwf	(_ip_database_info+3)^(0+512)
  6820  2062  30A8               	movlw	168
  6821  2063  00A2               	movwf	(_ip_database_info+2)^(0+512)
  6822  2064  3000               	movlw	0
  6823  2065  00A1               	movwf	(_ip_database_info+1)^(0+512)
  6824  2066  3002               	movlw	2
  6825  2067  00A0               	movwf	_ip_database_info^(0+512)
  6826                           
  6827                           ;ip_database.c: 34: ip_database_info.ipv4_subnetMask = 0xffffff00;
  6828  2068  30FF               	movlw	255
  6829  2069  00AF               	movwf	((_ip_database_info+3)^(0+512)+12)
  6830  206A  30FF               	movlw	255
  6831  206B  00AE               	movwf	((_ip_database_info+2)^(0+512)+12)
  6832  206C  30FF               	movlw	255
  6833  206D  00AD               	movwf	((_ip_database_info+1)^(0+512)+12)
  6834  206E  3000               	movlw	0
  6835  206F  00AC               	movwf	(_ip_database_info^(0+512)+12)
  6836                           
  6837                           ;ip_database.c: 35: ip_database_info.ipv4_router = 0xc0a80001;
  6838  2070  30C0               	movlw	192
  6839  2071  00B3               	movwf	((_ip_database_info+3)^(0+512)+16)
  6840  2072  30A8               	movlw	168
  6841  2073  00B2               	movwf	((_ip_database_info+2)^(0+512)+16)
  6842  2074  3000               	movlw	0
  6843  2075  00B1               	movwf	((_ip_database_info+1)^(0+512)+16)
  6844  2076  3001               	movlw	1
  6845  2077  00B0               	movwf	(_ip_database_info^(0+512)+16)
  6846                           
  6847                           ;ip_database.c: 36: ip_database_info.ipv4_dns[0] = 0;
  6848  2078  3000               	movlw	0
  6849  2079  00A7               	movwf	((_ip_database_info+3)^(0+512)+4)
  6850  207A  3000               	movlw	0
  6851  207B  00A6               	movwf	((_ip_database_info+2)^(0+512)+4)
  6852  207C  3000               	movlw	0
  6853  207D  00A5               	movwf	((_ip_database_info+1)^(0+512)+4)
  6854  207E  3000               	movlw	0
  6855  207F  00A4               	movwf	(_ip_database_info^(0+512)+4)
  6856                           
  6857                           ;ip_database.c: 37: ip_database_info.ipv4_dns[1] = 0;
  6858  2080  3000               	movlw	0
  6859  2081  00AB               	movwf	((_ip_database_info+3)^(0+512)+8)
  6860  2082  3000               	movlw	0
  6861  2083  00AA               	movwf	((_ip_database_info+2)^(0+512)+8)
  6862  2084  3000               	movlw	0
  6863  2085  00A9               	movwf	((_ip_database_info+1)^(0+512)+8)
  6864  2086  3000               	movlw	0
  6865  2087  00A8               	movwf	(_ip_database_info^(0+512)+8)
  6866                           
  6867                           ;ip_database.c: 38: for(uint8_t x=0; x < 2; x++)
  6868  2088  01F1               	clrf	ipdb_init@x
  6869  2089                     l6082:
  6870                           
  6871                           ;ip_database.c: 39: ip_database_info.ipv4_ntpAddress[x] = 0;
  6872  2089  0871               	movf	ipdb_init@x,w
  6873  208A  00F0               	movwf	??_ipdb_init
  6874  208B  3001               	movlw	1
  6875  208C                     u4435:
  6876  208C  35F0               	lslf	??_ipdb_init,f
  6877  208D  3EFF               	addlw	-1
  6878  208E  1D03               	skipz
  6879  208F  288C               	goto	u4435
  6880  2090  3570               	lslf	??_ipdb_init,w
  6881  2091  3E38               	addlw	(low ((_ip_database_info| (0+512)+24)))& (0+255)
  6882  2092  0086               	movwf	6
  6883  2093  3002               	movlw	2	; select bank4/5
  6884  2094  0087               	movwf	7
  6885  2095  3000               	movlw	0
  6886  2096  3FC0               	movwi [0]fsr1
  6887  2097  3000               	movlw	0
  6888  2098  3FC1               	movwi [1]fsr1
  6889  2099  3FC2               	movwi [2]fsr1
  6890  209A  3FC3               	movwi [3]fsr1
  6891  209B  3001               	movlw	1
  6892  209C  00F0               	movwf	??_ipdb_init
  6893  209D  0870               	movf	??_ipdb_init,w
  6894  209E  07F1               	addwf	ipdb_init@x,f
  6895  209F  3002               	movlw	2
  6896  20A0  0271               	subwf	ipdb_init@x,w
  6897  20A1  1C03               	skipc
  6898  20A2  2889               	goto	l6082
  6899                           
  6900                           ;ip_database.c: 40: ip_database_info.ipv4_tftpAddress = 0;
  6901  20A3  3000               	movlw	0
  6902  20A4  0024               	movlb	4	; select bank4
  6903  20A5  00C3               	movwf	((_ip_database_info+3)^(0+512)+32)
  6904  20A6  3000               	movlw	0
  6905  20A7  00C2               	movwf	((_ip_database_info+2)^(0+512)+32)
  6906  20A8  3000               	movlw	0
  6907  20A9  00C1               	movwf	((_ip_database_info+1)^(0+512)+32)
  6908  20AA  3000               	movlw	0
  6909  20AB  00C0               	movwf	(_ip_database_info^(0+512)+32)
  6910  20AC  0008               	return
  6911  20AD                     __end_of_ipdb_init:
  6912                           
  6913                           	psect	text17
  6914  05E9                     __ptext17:	
  6915 ;; *************** function _ETH_Init *****************
  6916 ;; Defined at:
  6917 ;;		line 124 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;		None
  6920 ;; Auto vars:     Size  Location     Type
  6921 ;;		None
  6922 ;; Return value:  Size  Location     Type
  6923 ;;                  1    wreg      void 
  6924 ;; Registers used:
  6925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6926 ;; Tracked objects:
  6927 ;;		On entry : 1F/0
  6928 ;;		On exit  : 1B/0
  6929 ;;		Unchanged: 0/0
  6930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6933 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6934 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6935 ;;Total ram usage:        3 bytes
  6936 ;; Hardware stack levels used:    1
  6937 ;; Hardware stack levels required when called:    8
  6938 ;; This function calls:
  6939 ;;		_ENC28_Bfs
  6940 ;;		_ENC28_PhyWrite
  6941 ;;		_ENC28_Rcr8
  6942 ;;		_ENC28_Wcr16
  6943 ;;		_ENC28_Wcr8
  6944 ;;		_ETH_CheckLinkUp
  6945 ;;		_ETH_SendSystemReset
  6946 ;;		_MAC_getAddress
  6947 ;; This function is called by:
  6948 ;;		_Network_Init
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _ETH_Init
  6954  05E9                     _ETH_Init:
  6955                           
  6956                           ;ENC28J60.c: 127: ethData.error = 0;
  6957                           
  6958                           ;incstack = 0
  6959                           ; Regs used in _ETH_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6960  05E9  0024               	movlb	4	; select bank4
  6961  05EA  1044               	bcf	_ethData^(0+512),0	;volatile
  6962                           
  6963                           ;ENC28J60.c: 128: ethData.up = 0;
  6964  05EB  1144               	bcf	_ethData^(0+512),2	;volatile
  6965                           
  6966                           ;ENC28J60.c: 129: ethData.linkChange = 0;
  6967  05EC  1244               	bcf	_ethData^(0+512),4	;volatile
  6968                           
  6969                           ;ENC28J60.c: 130: ethData.bufferBusy = 0;
  6970  05ED  12C4               	bcf	_ethData^(0+512),5	;volatile
  6971                           
  6972                           ;ENC28J60.c: 131: ethData.saveRDPT = 0;
  6973  05EE  01C6               	clrf	(_ethData^(0+512)+2)	;volatile
  6974  05EF  01C7               	clrf	((_ethData+1)^(0+512)+2)	;volatile
  6975                           
  6976                           ;ENC28J60.c: 133: lastBank = sfr_bank0;
  6977  05F0  0023               	movlb	3	; select bank3
  6978  05F1  01B5               	clrf	_lastBank^(0+384)
  6979                           
  6980                           ;ENC28J60.c: 135: _delay((unsigned long)((100)*(1000000/4000000.0)));
  6981  05F2  3008               	movlw	8
  6982  05F3                     u7797:
  6983  05F3  0B89               	decfsz	9,f
  6984  05F4  2DF3               	goto	u7797
  6985  05F5  0000               	nop
  6986                           
  6987                           ;ENC28J60.c: 137: ETH_SendSystemReset();
  6988  05F6  31A9  219D  3185   	fcall	_ETH_SendSystemReset
  6989                           
  6990                           ;ENC28J60.c: 138: _delay((unsigned long)((10)*(1000000/4000.0)));
  6991  05F9  3004               	movlw	4
  6992  05FA  0020               	movlb	0	; select bank0
  6993  05FB  00A5               	movwf	??_ETH_Init
  6994  05FC  303D               	movlw	61
  6995  05FD                     u7807:
  6996  05FD  0B89               	decfsz	9,f
  6997  05FE  2DFD               	goto	u7807
  6998  05FF  0BA5               	decfsz	??_ETH_Init,f
  6999  0600  2DFD               	goto	u7807
  7000  0601  3200               	nop2
  7001  0602                     l6322:	
  7002                           ;ENC28J60.c: 141: while (!(ENC28_Rcr8(J60_ESTAT) & 0x01));
  7003                           
  7004  0602  30FD               	movlw	253
  7005  0603  31AB  2325  3185   	fcall	_ENC28_Rcr8
  7006  0606  3901               	andlw	1
  7007  0607  1903               	btfsc	3,2
  7008  0608  2E02               	goto	l6322
  7009                           
  7010                           ;ENC28J60.c: 144: nextPacketPointer = (0);
  7011  0609  0023               	movlb	3	; select bank3
  7012  060A  01A6               	clrf	_nextPacketPointer^(0+384)
  7013  060B  01A7               	clrf	(_nextPacketPointer+1)^(0+384)
  7014                           
  7015                           ;ENC28J60.c: 146: ENC28_Bfs (J60_ECON2, 0x80);
  7016  060C  3080               	movlw	128
  7017  060D  0020               	movlb	0	; select bank0
  7018  060E  00A5               	movwf	??_ETH_Init
  7019  060F  0825               	movf	??_ETH_Init,w
  7020  0610  00F4               	movwf	ENC28_Bfs@bits
  7021  0611  30FE               	movlw	254
  7022  0612  31AA  226D  3185   	fcall	_ENC28_Bfs
  7023                           
  7024                           ;ENC28J60.c: 149: ENC28_Wcr16(J60_ETXSTL, (0x1FFF - (1500)));
  7025  0615  3023               	movlw	35
  7026  0616  00FA               	movwf	ENC28_Wcr16@v
  7027  0617  301A               	movlw	26
  7028  0618  00FB               	movwf	ENC28_Wcr16@v+1
  7029  0619  3004               	movlw	4
  7030  061A  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7031                           
  7032                           ;ENC28J60.c: 150: ENC28_Wcr16(J60_ETXNDL, (0x1FFF));
  7033  061D  30FF               	movlw	255
  7034  061E  00FA               	movwf	ENC28_Wcr16@v
  7035  061F  301F               	movlw	31
  7036  0620  00FB               	movwf	ENC28_Wcr16@v+1
  7037  0621  3006               	movlw	6
  7038  0622  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7039                           
  7040                           ;ENC28J60.c: 151: ENC28_Wcr16(J60_ERXSTL, (0));
  7041  0625  3000               	movlw	0
  7042  0626  00FA               	movwf	ENC28_Wcr16@v
  7043  0627  00FB               	movwf	ENC28_Wcr16@v+1
  7044  0628  3008               	movlw	8
  7045  0629  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7046                           
  7047                           ;ENC28J60.c: 152: ENC28_Wcr16(J60_ERXNDL, ((0x1FFF - (1500)) - 2));
  7048  062C  3021               	movlw	33
  7049  062D  00FA               	movwf	ENC28_Wcr16@v
  7050  062E  301A               	movlw	26
  7051  062F  00FB               	movwf	ENC28_Wcr16@v+1
  7052  0630  300A               	movlw	10
  7053  0631  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7054                           
  7055                           ;ENC28J60.c: 153: ENC28_Wcr16(J60_ERDPTL,nextPacketPointer);
  7056  0634  0023               	movlb	3	; select bank3
  7057  0635  0827               	movf	(_nextPacketPointer+1)^(0+384),w
  7058  0636  00FB               	movwf	ENC28_Wcr16@v+1
  7059  0637  0826               	movf	_nextPacketPointer^(0+384),w
  7060  0638  00FA               	movwf	ENC28_Wcr16@v
  7061  0639  3000               	movlw	0
  7062  063A  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7063                           
  7064                           ;ENC28J60.c: 155: ENC28_Wcr16(J60_ERDPTL, (0));
  7065  063D  3000               	movlw	0
  7066  063E  00FA               	movwf	ENC28_Wcr16@v
  7067  063F  00FB               	movwf	ENC28_Wcr16@v+1
  7068  0640  3000               	movlw	0
  7069  0641  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7070                           
  7071                           ;ENC28J60.c: 156: ENC28_Wcr16(J60_EWRPTL, (0x1FFF - (1500)));
  7072  0644  3023               	movlw	35
  7073  0645  00FA               	movwf	ENC28_Wcr16@v
  7074  0646  301A               	movlw	26
  7075  0647  00FB               	movwf	ENC28_Wcr16@v+1
  7076  0648  3002               	movlw	2
  7077  0649  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7078                           
  7079                           ;ENC28J60.c: 159: ENC28_Wcr8(J60_ERXFCON, 0b10101001);
  7080  064C  30A9               	movlw	169
  7081  064D  0020               	movlb	0	; select bank0
  7082  064E  00A5               	movwf	??_ETH_Init
  7083  064F  0825               	movf	??_ETH_Init,w
  7084  0650  00F4               	movwf	ENC28_Wcr8@v
  7085  0651  3058               	movlw	88
  7086  0652  3188  2000  3185   	fcall	_ENC28_Wcr8
  7087                           
  7088                           ;ENC28J60.c: 162: eth_MAC = MAC_getAddress();
  7089  0655  31A9  217A  3185   	fcall	_MAC_getAddress
  7090  0658  0871               	movf	?_MAC_getAddress+1,w
  7091  0659  0023               	movlb	3	; select bank3
  7092  065A  00A9               	movwf	(_eth_MAC+1)^(0+384)
  7093  065B  0870               	movf	?_MAC_getAddress,w
  7094  065C  00A8               	movwf	_eth_MAC^(0+384)
  7095                           
  7096                           ;ENC28J60.c: 165: ENC28_Wcr8(J60_MACON1, 0x0D);
  7097  065D  300D               	movlw	13
  7098  065E  0020               	movlb	0	; select bank0
  7099  065F  00A5               	movwf	??_ETH_Init
  7100  0660  0825               	movf	??_ETH_Init,w
  7101  0661  00F4               	movwf	ENC28_Wcr8@v
  7102  0662  3080               	movlw	128
  7103  0663  3188  2000  3185   	fcall	_ENC28_Wcr8
  7104                           
  7105                           ;ENC28J60.c: 166: ENC28_Wcr8(J60_MACON3, 0x22);
  7106  0666  3022               	movlw	34
  7107  0667  0020               	movlb	0	; select bank0
  7108  0668  00A5               	movwf	??_ETH_Init
  7109  0669  0825               	movf	??_ETH_Init,w
  7110  066A  00F4               	movwf	ENC28_Wcr8@v
  7111  066B  3082               	movlw	130
  7112  066C  3188  2000  3185   	fcall	_ENC28_Wcr8
  7113                           
  7114                           ;ENC28J60.c: 167: ENC28_Wcr8(J60_MACON4, 0x40);
  7115  066F  3040               	movlw	64
  7116  0670  0020               	movlb	0	; select bank0
  7117  0671  00A5               	movwf	??_ETH_Init
  7118  0672  0825               	movf	??_ETH_Init,w
  7119  0673  00F4               	movwf	ENC28_Wcr8@v
  7120  0674  3083               	movlw	131
  7121  0675  3188  2000  3185   	fcall	_ENC28_Wcr8
  7122                           
  7123                           ;ENC28J60.c: 168: ENC28_Wcr16(J60_MAIPGL, 0x0c12);
  7124  0678  3012               	movlw	18
  7125  0679  00FA               	movwf	ENC28_Wcr16@v
  7126  067A  300C               	movlw	12
  7127  067B  00FB               	movwf	ENC28_Wcr16@v+1
  7128  067C  3086               	movlw	134
  7129  067D  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7130                           
  7131                           ;ENC28J60.c: 169: ENC28_Wcr8(J60_MABBIPG, 0x12);
  7132  0680  3012               	movlw	18
  7133  0681  0020               	movlb	0	; select bank0
  7134  0682  00A5               	movwf	??_ETH_Init
  7135  0683  0825               	movf	??_ETH_Init,w
  7136  0684  00F4               	movwf	ENC28_Wcr8@v
  7137  0685  3084               	movlw	132
  7138  0686  3188  2000  3185   	fcall	_ENC28_Wcr8
  7139                           
  7140                           ;ENC28J60.c: 170: ENC28_Wcr16(J60_MAMXFLL, (1500));
  7141  0689  30DC               	movlw	220
  7142  068A  00FA               	movwf	ENC28_Wcr16@v
  7143  068B  3005               	movlw	5
  7144  068C  00FB               	movwf	ENC28_Wcr16@v+1
  7145  068D  308A               	movlw	138
  7146  068E  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7147                           
  7148                           ;ENC28J60.c: 171: ENC28_Wcr8(J60_MAADR1, eth_MAC->mac_array[0]); __nop();
  7149  0691  0023               	movlb	3	; select bank3
  7150  0692  0828               	movf	_eth_MAC^(0+384),w
  7151  0693  0084               	movwf	4
  7152  0694  0829               	movf	(_eth_MAC+1)^(0+384),w
  7153  0695  0085               	movwf	5
  7154  0696  0800               	movf	0,w	;code access
  7155  0697  0020               	movlb	0	; select bank0
  7156  0698  00A5               	movwf	??_ETH_Init
  7157  0699  0825               	movf	??_ETH_Init,w
  7158  069A  00F4               	movwf	ENC28_Wcr8@v
  7159  069B  30C4               	movlw	196
  7160  069C  3188  2000  3185   	fcall	_ENC28_Wcr8
  7161  069F  0000               	nop
  7162                           
  7163                           ;ENC28J60.c: 172: ENC28_Wcr8(J60_MAADR2, eth_MAC->mac_array[1]); __nop();
  7164  06A0  0023               	movlb	3	; select bank3
  7165  06A1  0829               	movf	(_eth_MAC+1)^(0+384),w
  7166  06A2  0020               	movlb	0	; select bank0
  7167  06A3  00A6               	movwf	??_ETH_Init+1
  7168  06A4  0023               	movlb	3	; select bank3
  7169  06A5  0828               	movf	_eth_MAC^(0+384),w
  7170  06A6  0020               	movlb	0	; select bank0
  7171  06A7  00A5               	movwf	??_ETH_Init
  7172  06A8  3001               	movlw	1
  7173  06A9  0725               	addwf	??_ETH_Init,w
  7174  06AA  0084               	movwf	4
  7175  06AB  0826               	movf	??_ETH_Init+1,w
  7176  06AC  1803               	skipnc
  7177  06AD  0A26               	incf	??_ETH_Init+1,w
  7178  06AE  0085               	movwf	5
  7179  06AF  0800               	movf	0,w	;code access
  7180  06B0  00A7               	movwf	??_ETH_Init+2
  7181  06B1  0827               	movf	??_ETH_Init+2,w
  7182  06B2  00F4               	movwf	ENC28_Wcr8@v
  7183  06B3  30C5               	movlw	197
  7184  06B4  3188  2000  3185   	fcall	_ENC28_Wcr8
  7185  06B7  0000               	nop
  7186                           
  7187                           ;ENC28J60.c: 173: ENC28_Wcr8(J60_MAADR3, eth_MAC->mac_array[2]); __nop();
  7188  06B8  0023               	movlb	3	; select bank3
  7189  06B9  0829               	movf	(_eth_MAC+1)^(0+384),w
  7190  06BA  0020               	movlb	0	; select bank0
  7191  06BB  00A6               	movwf	??_ETH_Init+1
  7192  06BC  0023               	movlb	3	; select bank3
  7193  06BD  0828               	movf	_eth_MAC^(0+384),w
  7194  06BE  0020               	movlb	0	; select bank0
  7195  06BF  00A5               	movwf	??_ETH_Init
  7196  06C0  3002               	movlw	2
  7197  06C1  0725               	addwf	??_ETH_Init,w
  7198  06C2  0084               	movwf	4
  7199  06C3  0826               	movf	??_ETH_Init+1,w
  7200  06C4  1803               	skipnc
  7201  06C5  0A26               	incf	??_ETH_Init+1,w
  7202  06C6  0085               	movwf	5
  7203  06C7  0800               	movf	0,w	;code access
  7204  06C8  00A7               	movwf	??_ETH_Init+2
  7205  06C9  0827               	movf	??_ETH_Init+2,w
  7206  06CA  00F4               	movwf	ENC28_Wcr8@v
  7207  06CB  30C2               	movlw	194
  7208  06CC  3188  2000  3185   	fcall	_ENC28_Wcr8
  7209  06CF  0000               	nop
  7210                           
  7211                           ;ENC28J60.c: 174: ENC28_Wcr8(J60_MAADR4, eth_MAC->mac_array[3]); __nop();
  7212  06D0  0023               	movlb	3	; select bank3
  7213  06D1  0829               	movf	(_eth_MAC+1)^(0+384),w
  7214  06D2  0020               	movlb	0	; select bank0
  7215  06D3  00A6               	movwf	??_ETH_Init+1
  7216  06D4  0023               	movlb	3	; select bank3
  7217  06D5  0828               	movf	_eth_MAC^(0+384),w
  7218  06D6  0020               	movlb	0	; select bank0
  7219  06D7  00A5               	movwf	??_ETH_Init
  7220  06D8  3003               	movlw	3
  7221  06D9  0725               	addwf	??_ETH_Init,w
  7222  06DA  0084               	movwf	4
  7223  06DB  0826               	movf	??_ETH_Init+1,w
  7224  06DC  1803               	skipnc
  7225  06DD  0A26               	incf	??_ETH_Init+1,w
  7226  06DE  0085               	movwf	5
  7227  06DF  0800               	movf	0,w	;code access
  7228  06E0  00A7               	movwf	??_ETH_Init+2
  7229  06E1  0827               	movf	??_ETH_Init+2,w
  7230  06E2  00F4               	movwf	ENC28_Wcr8@v
  7231  06E3  30C3               	movlw	195
  7232  06E4  3188  2000  3185   	fcall	_ENC28_Wcr8
  7233  06E7  0000               	nop
  7234                           
  7235                           ;ENC28J60.c: 175: ENC28_Wcr8(J60_MAADR5, eth_MAC->mac_array[4]); __nop();
  7236  06E8  0023               	movlb	3	; select bank3
  7237  06E9  0829               	movf	(_eth_MAC+1)^(0+384),w
  7238  06EA  0020               	movlb	0	; select bank0
  7239  06EB  00A6               	movwf	??_ETH_Init+1
  7240  06EC  0023               	movlb	3	; select bank3
  7241  06ED  0828               	movf	_eth_MAC^(0+384),w
  7242  06EE  0020               	movlb	0	; select bank0
  7243  06EF  00A5               	movwf	??_ETH_Init
  7244  06F0  3004               	movlw	4
  7245  06F1  0725               	addwf	??_ETH_Init,w
  7246  06F2  0084               	movwf	4
  7247  06F3  0826               	movf	??_ETH_Init+1,w
  7248  06F4  1803               	skipnc
  7249  06F5  0A26               	incf	??_ETH_Init+1,w
  7250  06F6  0085               	movwf	5
  7251  06F7  0800               	movf	0,w	;code access
  7252  06F8  00A7               	movwf	??_ETH_Init+2
  7253  06F9  0827               	movf	??_ETH_Init+2,w
  7254  06FA  00F4               	movwf	ENC28_Wcr8@v
  7255  06FB  30C0               	movlw	192
  7256  06FC  3188  2000  3185   	fcall	_ENC28_Wcr8
  7257  06FF  0000               	nop
  7258                           
  7259                           ;ENC28J60.c: 176: ENC28_Wcr8(J60_MAADR6, eth_MAC->mac_array[5]); __nop();
  7260  0700  0023               	movlb	3	; select bank3
  7261  0701  0829               	movf	(_eth_MAC+1)^(0+384),w
  7262  0702  0020               	movlb	0	; select bank0
  7263  0703  00A6               	movwf	??_ETH_Init+1
  7264  0704  0023               	movlb	3	; select bank3
  7265  0705  0828               	movf	_eth_MAC^(0+384),w
  7266  0706  0020               	movlb	0	; select bank0
  7267  0707  00A5               	movwf	??_ETH_Init
  7268  0708  3005               	movlw	5
  7269  0709  0725               	addwf	??_ETH_Init,w
  7270  070A  0084               	movwf	4
  7271  070B  0826               	movf	??_ETH_Init+1,w
  7272  070C  1803               	skipnc
  7273  070D  0A26               	incf	??_ETH_Init+1,w
  7274  070E  0085               	movwf	5
  7275  070F  0800               	movf	0,w	;code access
  7276  0710  00A7               	movwf	??_ETH_Init+2
  7277  0711  0827               	movf	??_ETH_Init+2,w
  7278  0712  00F4               	movwf	ENC28_Wcr8@v
  7279  0713  30C1               	movlw	193
  7280  0714  3188  2000  3185   	fcall	_ENC28_Wcr8
  7281  0717  0000               	nop
  7282                           
  7283                           ;ENC28J60.c: 178: ENC28_Wcr8(J60_ECON1, 0x04);
  7284  0718  3004               	movlw	4
  7285  0719  0020               	movlb	0	; select bank0
  7286  071A  00A5               	movwf	??_ETH_Init
  7287  071B  0825               	movf	??_ETH_Init,w
  7288  071C  00F4               	movwf	ENC28_Wcr8@v
  7289  071D  30FF               	movlw	255
  7290  071E  3188  2000  3185   	fcall	_ENC28_Wcr8
  7291                           
  7292                           ;ENC28J60.c: 181: ENC28_PhyWrite(J60_PHCON1, 0x0000);
  7293  0721  3000               	movlw	0
  7294  0722  0020               	movlb	0	; select bank0
  7295  0723  00A0               	movwf	ENC28_PhyWrite@d
  7296  0724  00A1               	movwf	ENC28_PhyWrite@d+1
  7297  0725  3000               	movlw	0
  7298  0726  31AB  23E1  3185   	fcall	_ENC28_PhyWrite
  7299                           
  7300                           ;ENC28J60.c: 182: ENC28_PhyWrite(J60_PHCON2, 0x0100);
  7301  0729  3000               	movlw	0
  7302  072A  00A0               	movwf	ENC28_PhyWrite@d
  7303  072B  3001               	movlw	1
  7304  072C  00A1               	movwf	ENC28_PhyWrite@d+1
  7305  072D  3010               	movlw	16
  7306  072E  31AB  23E1  3185   	fcall	_ENC28_PhyWrite
  7307                           
  7308                           ;ENC28J60.c: 183: ENC28_PhyWrite(J60_PHLCON, 0x0472);
  7309  0731  3072               	movlw	114
  7310  0732  00A0               	movwf	ENC28_PhyWrite@d
  7311  0733  3004               	movlw	4
  7312  0734  00A1               	movwf	ENC28_PhyWrite@d+1
  7313  0735  3014               	movlw	20
  7314  0736  31AB  23E1  3185   	fcall	_ENC28_PhyWrite
  7315                           
  7316                           ;ENC28J60.c: 187: ENC28_Wcr8(J60_EIE, 0xDB);
  7317  0739  30DB               	movlw	219
  7318  073A  00A5               	movwf	??_ETH_Init
  7319  073B  0825               	movf	??_ETH_Init,w
  7320  073C  00F4               	movwf	ENC28_Wcr8@v
  7321  073D  30FB               	movlw	251
  7322  073E  3188  2000  3185   	fcall	_ENC28_Wcr8
  7323                           
  7324                           ;ENC28J60.c: 188: ENC28_Wcr16(J60_PHIE, 0x12);
  7325  0741  3012               	movlw	18
  7326  0742  00FA               	movwf	ENC28_Wcr16@v
  7327  0743  3000               	movlw	0
  7328  0744  00FB               	movwf	ENC28_Wcr16@v+1
  7329  0745  3012               	movlw	18
  7330  0746  31AC  2448  3185   	fcall	_ENC28_Wcr16
  7331                           
  7332                           ;ENC28J60.c: 191: ETH_CheckLinkUp();
  7333  0749  31AA  2238         	fcall	_ETH_CheckLinkUp
  7334  074B  0008               	return
  7335  074C                     __end_of_ETH_Init:
  7336                           
  7337                           	psect	text18
  7338  297A                     __ptext18:	
  7339 ;; *************** function _MAC_getAddress *****************
  7340 ;; Defined at:
  7341 ;;		line 46 in file "mcc_generated_files/TCPIPLibrary/mac_address.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;		None
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;		None
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  2    0[COMMON] PTR const struct .
  7348 ;; Registers used:
  7349 ;;		wreg
  7350 ;; Tracked objects:
  7351 ;;		On entry : 1F/2
  7352 ;;		On exit  : 1F/2
  7353 ;;		Unchanged: 1F/0
  7354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7359 ;;Total ram usage:        2 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    3
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_ETH_Init
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           
  7370                           ;psect for function _MAC_getAddress
  7371  297A                     _MAC_getAddress:
  7372                           
  7373                           ;mac_address.c: 48: return &macAddress;
  7374                           
  7375                           ;incstack = 0
  7376                           ; Regs used in _MAC_getAddress: [wreg]
  7377  297A  3069               	movlw	low (_macAddress| (0+32768))
  7378  297B  00F0               	movwf	?_MAC_getAddress
  7379  297C  30B0               	movlw	high (_macAddress| (0+32768))
  7380  297D  00F1               	movwf	?_MAC_getAddress+1
  7381  297E  0008               	return
  7382  297F                     __end_of_MAC_getAddress:
  7383                           
  7384                           	psect	text19
  7385  299D                     __ptext19:	
  7386 ;; *************** function _ETH_SendSystemReset *****************
  7387 ;; Defined at:
  7388 ;;		line 418 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0, pclath, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/3
  7399 ;;		On exit  : 1F/2
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    4
  7409 ;; This function calls:
  7410 ;;		_SPI1_Exchange8bit
  7411 ;; This function is called by:
  7412 ;;		_ETH_Init
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           
  7417                           ;psect for function _ETH_SendSystemReset
  7418  299D                     _ETH_SendSystemReset:
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in _ETH_SendSystemReset: [wreg+status,2+status,0+pclath+cstack]
  7422                           ;ENC28J60.c: 420: do{LATC6 = 0;} while(0);
  7423  299D  0022               	movlb	2	; select bank2
  7424  299E  130E               	bcf	14,6	;volatile
  7425                           
  7426                           ;ENC28J60.c: 421: SPI1_Exchange8bit(src_inst);
  7427  299F  30FF               	movlw	255
  7428  29A0  31A9  21A5         	fcall	_SPI1_Exchange8bit
  7429  29A2  0022               	movlb	2	; select bank2
  7430  29A3  170E               	bsf	14,6	;volatile
  7431  29A4  0008               	return
  7432  29A5                     __end_of_ETH_SendSystemReset:
  7433                           
  7434                           	psect	text20
  7435  2BE1                     __ptext20:	
  7436 ;; *************** function _ENC28_PhyWrite *****************
  7437 ;; Defined at:
  7438 ;;		line 388 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  a               1    wreg     enum E6745
  7441 ;;  d               2    0[BANK0 ] unsigned int 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  a               1    3[BANK0 ] enum E6745
  7444 ;;  v               1    4[BANK0 ] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg, status,2, status,0, pclath, cstack
  7449 ;; Tracked objects:
  7450 ;;		On entry : 1F/0
  7451 ;;		On exit  : 1F/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7454 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7457 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7458 ;;Total ram usage:        5 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:    6
  7461 ;; This function calls:
  7462 ;;		_ENC28_Rcr8
  7463 ;;		_ENC28_Wcr16
  7464 ;;		_ENC28_Wcr8
  7465 ;; This function is called by:
  7466 ;;		_ETH_Init
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           
  7471                           ;psect for function _ENC28_PhyWrite
  7472  2BE1                     _ENC28_PhyWrite:
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _ENC28_PhyWrite: [wreg+status,2+status,0+pclath+cstack]
  7476                           ;ENC28_PhyWrite@a stored from wreg
  7477  2BE1  00A3               	movwf	ENC28_PhyWrite@a
  7478                           
  7479                           ;ENC28J60.c: 390: uint8_t v=1;
  7480  2BE2  01A4               	clrf	ENC28_PhyWrite@v
  7481  2BE3  0AA4               	incf	ENC28_PhyWrite@v,f
  7482                           
  7483                           ;ENC28J60.c: 392: ENC28_Wcr8(J60_MIREGADR, a);
  7484  2BE4  0823               	movf	ENC28_PhyWrite@a,w
  7485  2BE5  00A2               	movwf	??_ENC28_PhyWrite
  7486  2BE6  0822               	movf	??_ENC28_PhyWrite,w
  7487  2BE7  00F4               	movwf	ENC28_Wcr8@v
  7488  2BE8  3094               	movlw	148
  7489  2BE9  3188  2000  31AB   	fcall	_ENC28_Wcr8
  7490                           
  7491                           ;ENC28J60.c: 393: ENC28_Wcr16(J60_MIWRL, d);
  7492  2BEC  0020               	movlb	0	; select bank0
  7493  2BED  0821               	movf	ENC28_PhyWrite@d+1,w
  7494  2BEE  00FB               	movwf	ENC28_Wcr16@v+1
  7495  2BEF  0820               	movf	ENC28_PhyWrite@d,w
  7496  2BF0  00FA               	movwf	ENC28_Wcr16@v
  7497  2BF1  3096               	movlw	150
  7498  2BF2  31AC  2448  31AB   	fcall	_ENC28_Wcr16
  7499  2BF5                     l6170:	
  7500                           ;ENC28J60.c: 394: while(v & 0x01)
  7501                           
  7502  2BF5  0020               	movlb	0	; select bank0
  7503  2BF6  1C24               	btfss	ENC28_PhyWrite@v,0
  7504  2BF7  0008               	return
  7505                           
  7506                           ;ENC28J60.c: 395: {;ENC28J60.c: 396: v = ENC28_Rcr8(J60_MISTAT);
  7507  2BF8  30CA               	movlw	202
  7508  2BF9  31AB  2325  31AB   	fcall	_ENC28_Rcr8
  7509  2BFC  0020               	movlb	0	; select bank0
  7510  2BFD  00A2               	movwf	??_ENC28_PhyWrite
  7511  2BFE  0822               	movf	??_ENC28_PhyWrite,w
  7512  2BFF  00A4               	movwf	ENC28_PhyWrite@v
  7513  2C00  2BF5               	goto	l6170
  7514  2C01                     __end_of_ENC28_PhyWrite:
  7515                           
  7516                           	psect	text21
  7517  2AA7                     __ptext21:	
  7518 ;; *************** function _ARPV4_Init *****************
  7519 ;; Defined at:
  7520 ;;		line 87 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;		None
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;  x               1   10[COMMON] unsigned char 
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 1B/0
  7531 ;;		On exit  : 1F/2
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7537 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7538 ;;Total ram usage:        2 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    7
  7541 ;; This function calls:
  7542 ;;		_ETH_GetMAC
  7543 ;; This function is called by:
  7544 ;;		_Network_Init
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function _ARPV4_Init
  7550  2AA7                     _ARPV4_Init:
  7551                           
  7552                           ;arpv4.c: 89: for(uint8_t x= 0 ; x < 8; x++)
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in _ARPV4_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7556  2AA7  01FA               	clrf	ARPV4_Init@x
  7557  2AA8                     l6178:
  7558                           
  7559                           ;arpv4.c: 90: {;arpv4.c: 91: ((char *)arpMap)[x] = 0;
  7560  2AA8  087A               	movf	ARPV4_Init@x,w
  7561  2AA9  3E88               	addlw	136
  7562  2AAA  0086               	movwf	6
  7563  2AAB  0187               	clrf	7
  7564  2AAC  3027               	movlw	39
  7565  2AAD  3D87               	addwfc	7,f
  7566  2AAE  0181               	clrf	1
  7567  2AAF  3001               	movlw	1
  7568  2AB0  00F9               	movwf	??_ARPV4_Init
  7569  2AB1  0879               	movf	??_ARPV4_Init,w
  7570  2AB2  07FA               	addwf	ARPV4_Init@x,f
  7571  2AB3  3008               	movlw	8
  7572  2AB4  027A               	subwf	ARPV4_Init@x,w
  7573  2AB5  1C03               	skipc
  7574  2AB6  2AA8               	goto	l6178
  7575                           
  7576                           ;arpv4.c: 92: };arpv4.c: 93: ETH_GetMAC((char*)&hostMacAddress);
  7577  2AB7  30E3               	movlw	(low (_hostMacAddress| (0+512)))& (0+255)
  7578  2AB8  31A1  215F         	fcall	_ETH_GetMAC
  7579  2ABA  0008               	return
  7580  2ABB                     __end_of_ARPV4_Init:
  7581                           
  7582                           	psect	text22
  7583  215F                     __ptext22:	
  7584 ;; *************** function _ETH_GetMAC *****************
  7585 ;; Defined at:
  7586 ;;		line 923 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  macAddr         1    wreg     PTR unsigned char 
  7589 ;;		 -> hostMacAddress(6), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;  macAddr         1    8[COMMON] PTR unsigned char 
  7592 ;;		 -> hostMacAddress(6), 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7597 ;; Tracked objects:
  7598 ;;		On entry : 1B/0
  7599 ;;		On exit  : 1F/2
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7606 ;;Total ram usage:        2 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    6
  7609 ;; This function calls:
  7610 ;;		_ENC28_Rcr8
  7611 ;; This function is called by:
  7612 ;;		_ARPV4_Init
  7613 ;; This function uses a non-reentrant model
  7614 ;;
  7615                           
  7616                           
  7617                           ;psect for function _ETH_GetMAC
  7618  215F                     _ETH_GetMAC:
  7619                           
  7620                           ;incstack = 0
  7621                           ; Regs used in _ETH_GetMAC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7622                           ;ETH_GetMAC@macAddr stored from wreg
  7623  215F  00F8               	movwf	ETH_GetMAC@macAddr
  7624                           
  7625                           ;ENC28J60.c: 925: *macAddr++ = ENC28_Rcr8(J60_MAADR1);
  7626  2160  30C4               	movlw	196
  7627  2161  31AB  2325  31A1   	fcall	_ENC28_Rcr8
  7628  2164  00F7               	movwf	??_ETH_GetMAC
  7629  2165  0878               	movf	ETH_GetMAC@macAddr,w
  7630  2166  0086               	movwf	6
  7631  2167  3002               	movlw	2	; select bank4/5
  7632  2168  0087               	movwf	7
  7633  2169  0877               	movf	??_ETH_GetMAC,w
  7634  216A  0081               	movwf	1
  7635  216B  3001               	movlw	1
  7636  216C  00F7               	movwf	??_ETH_GetMAC
  7637  216D  0877               	movf	??_ETH_GetMAC,w
  7638  216E  07F8               	addwf	ETH_GetMAC@macAddr,f
  7639                           
  7640                           ;ENC28J60.c: 926: *macAddr++ = ENC28_Rcr8(J60_MAADR2);
  7641  216F  30C5               	movlw	197
  7642  2170  31AB  2325  31A1   	fcall	_ENC28_Rcr8
  7643  2173  00F7               	movwf	??_ETH_GetMAC
  7644  2174  0878               	movf	ETH_GetMAC@macAddr,w
  7645  2175  0086               	movwf	6
  7646  2176  3002               	movlw	2	; select bank4/5
  7647  2177  0087               	movwf	7
  7648  2178  0877               	movf	??_ETH_GetMAC,w
  7649  2179  0081               	movwf	1
  7650  217A  3001               	movlw	1
  7651  217B  00F7               	movwf	??_ETH_GetMAC
  7652  217C  0877               	movf	??_ETH_GetMAC,w
  7653  217D  07F8               	addwf	ETH_GetMAC@macAddr,f
  7654                           
  7655                           ;ENC28J60.c: 927: *macAddr++ = ENC28_Rcr8(J60_MAADR3);
  7656  217E  30C2               	movlw	194
  7657  217F  31AB  2325  31A1   	fcall	_ENC28_Rcr8
  7658  2182  00F7               	movwf	??_ETH_GetMAC
  7659  2183  0878               	movf	ETH_GetMAC@macAddr,w
  7660  2184  0086               	movwf	6
  7661  2185  3002               	movlw	2	; select bank4/5
  7662  2186  0087               	movwf	7
  7663  2187  0877               	movf	??_ETH_GetMAC,w
  7664  2188  0081               	movwf	1
  7665  2189  3001               	movlw	1
  7666  218A  00F7               	movwf	??_ETH_GetMAC
  7667  218B  0877               	movf	??_ETH_GetMAC,w
  7668  218C  07F8               	addwf	ETH_GetMAC@macAddr,f
  7669                           
  7670                           ;ENC28J60.c: 928: *macAddr++ = ENC28_Rcr8(J60_MAADR4);
  7671  218D  30C3               	movlw	195
  7672  218E  31AB  2325  31A1   	fcall	_ENC28_Rcr8
  7673  2191  00F7               	movwf	??_ETH_GetMAC
  7674  2192  0878               	movf	ETH_GetMAC@macAddr,w
  7675  2193  0086               	movwf	6
  7676  2194  3002               	movlw	2	; select bank4/5
  7677  2195  0087               	movwf	7
  7678  2196  0877               	movf	??_ETH_GetMAC,w
  7679  2197  0081               	movwf	1
  7680  2198  3001               	movlw	1
  7681  2199  00F7               	movwf	??_ETH_GetMAC
  7682  219A  0877               	movf	??_ETH_GetMAC,w
  7683  219B  07F8               	addwf	ETH_GetMAC@macAddr,f
  7684                           
  7685                           ;ENC28J60.c: 929: *macAddr++ = ENC28_Rcr8(J60_MAADR5);
  7686  219C  30C0               	movlw	192
  7687  219D  31AB  2325  31A1   	fcall	_ENC28_Rcr8
  7688  21A0  00F7               	movwf	??_ETH_GetMAC
  7689  21A1  0878               	movf	ETH_GetMAC@macAddr,w
  7690  21A2  0086               	movwf	6
  7691  21A3  3002               	movlw	2	; select bank4/5
  7692  21A4  0087               	movwf	7
  7693  21A5  0877               	movf	??_ETH_GetMAC,w
  7694  21A6  0081               	movwf	1
  7695  21A7  3001               	movlw	1
  7696  21A8  00F7               	movwf	??_ETH_GetMAC
  7697  21A9  0877               	movf	??_ETH_GetMAC,w
  7698  21AA  07F8               	addwf	ETH_GetMAC@macAddr,f
  7699                           
  7700                           ;ENC28J60.c: 930: *macAddr++ = ENC28_Rcr8(J60_MAADR6);
  7701  21AB  30C1               	movlw	193
  7702  21AC  31AB  2325         	fcall	_ENC28_Rcr8
  7703  21AE  00F7               	movwf	??_ETH_GetMAC
  7704  21AF  0878               	movf	ETH_GetMAC@macAddr,w
  7705  21B0  0086               	movwf	6
  7706  21B1  3002               	movlw	2	; select bank4/5
  7707  21B2  0087               	movwf	7
  7708  21B3  0877               	movf	??_ETH_GetMAC,w
  7709  21B4  0081               	movwf	1
  7710  21B5  3001               	movlw	1
  7711  21B6  00F7               	movwf	??_ETH_GetMAC
  7712  21B7  0877               	movf	??_ETH_GetMAC,w
  7713  21B8  07F8               	addwf	ETH_GetMAC@macAddr,f
  7714  21B9  0008               	return
  7715  21BA                     __end_of_ETH_GetMAC:
  7716                           
  7717                           	psect	text23
  7718  29AE                     __ptext23:	
  7719 ;; *************** function _ADC_Initialize *****************
  7720 ;; Defined at:
  7721 ;;		line 64 in file "mcc_generated_files/adc.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2
  7730 ;; Tracked objects:
  7731 ;;		On entry : 1F/4
  7732 ;;		On exit  : 1F/1
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7739 ;;Total ram usage:        0 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; Hardware stack levels required when called:    3
  7742 ;; This function calls:
  7743 ;;		Nothing
  7744 ;; This function is called by:
  7745 ;;		_SYSTEM_Initialize
  7746 ;; This function uses a non-reentrant model
  7747 ;;
  7748                           
  7749                           
  7750                           ;psect for function _ADC_Initialize
  7751  29AE                     _ADC_Initialize:
  7752                           
  7753                           ;adc.c: 69: ADCON0 = 0x01;
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7757  29AE  3001               	movlw	1
  7758  29AF  0021               	movlb	1	; select bank1
  7759  29B0  009D               	movwf	29	;volatile
  7760                           
  7761                           ;adc.c: 72: ADCON1 = 0xC0;
  7762  29B1  30C0               	movlw	192
  7763  29B2  009E               	movwf	30	;volatile
  7764                           
  7765                           ;adc.c: 75: ADACT = 0x00;
  7766  29B3  019F               	clrf	31	;volatile
  7767                           
  7768                           ;adc.c: 78: ADRESL = 0x00;
  7769  29B4  019B               	clrf	27	;volatile
  7770                           
  7771                           ;adc.c: 81: ADRESH = 0x00;
  7772  29B5  019C               	clrf	28	;volatile
  7773  29B6  0008               	return
  7774  29B7                     __end_of_ADC_Initialize:
  7775                           
  7776                           	psect	text24
  7777  2218                     __ptext24:	
  7778 ;; *************** function _Network_Manage *****************
  7779 ;; Defined at:
  7780 ;;		line 76 in file "mcc_generated_files/TCPIPLibrary/network.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;  now             4    0[BANK3 ] long 
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 18/4
  7791 ;;		On exit  : 1F/4
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7795 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7796 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7797 ;;      Totals:         0       1       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7798 ;;Total ram usage:        5 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:   15
  7801 ;; This function calls:
  7802 ;;		_ARPV4_Update
  7803 ;;		_ETH_EventHandler
  7804 ;;		_Network_Read
  7805 ;;		_TCP_Update
  7806 ;;		_time
  7807 ;; This function is called by:
  7808 ;;		_main
  7809 ;; This function uses a non-reentrant model
  7810 ;;
  7811                           
  7812                           
  7813                           ;psect for function _Network_Manage
  7814  2218                     _Network_Manage:
  7815                           
  7816                           ;network.c: 78: time_t now;;network.c: 79: static time_t nowPv = 0;;network.c: 81: ETH_E
      +                          ventHandler();
  7817                           
  7818                           ;incstack = 0
  7819                           ; Regs used in _Network_Manage: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7820  2218  3198  2002  31A2   	fcall	_ETH_EventHandler
  7821                           
  7822                           ;network.c: 82: Network_Read();
  7823  221B  31A1  2104  31A2   	fcall	_Network_Read
  7824                           
  7825                           ;network.c: 85: time(&now);
  7826  221E  30E9               	movlw	low Network_Manage@now
  7827  221F  00F0               	movwf	time@t
  7828  2220  3001               	movlw	high Network_Manage@now
  7829  2221  00F1               	movwf	time@t+1
  7830  2222  31AD  2536  31A2   	fcall	_time
  7831                           
  7832                           ;network.c: 86: if(now >= arpTimer)
  7833  2225  0023               	movlb	3	; select bank3
  7834  2226  086C               	movf	(Network_Manage@now+3)^(0+384),w
  7835  2227  3A80               	xorlw	128
  7836  2228  0020               	movlb	0	; select bank0
  7837  2229  00EF               	movwf	??_Network_Manage
  7838  222A  0024               	movlb	4	; select bank4
  7839  222B  086B               	movf	(_arpTimer+3)^(0+512),w
  7840  222C  3A80               	xorlw	128
  7841  222D  0020               	movlb	0	; select bank0
  7842  222E  026F               	subwf	??_Network_Manage,w
  7843  222F  0023               	movlb	3	; select bank3
  7844  2230  1D03               	skipz
  7845  2231  2A42               	goto	u7643
  7846  2232  0024               	movlb	4	; select bank4
  7847  2233  086A               	movf	(_arpTimer+2)^(0+512),w
  7848  2234  0023               	movlb	3	; select bank3
  7849  2235  026B               	subwf	(Network_Manage@now+2)^(0+384),w
  7850  2236  1D03               	skipz
  7851  2237  2A42               	goto	u7643
  7852  2238  0024               	movlb	4	; select bank4
  7853  2239  0869               	movf	(_arpTimer+1)^(0+512),w
  7854  223A  0023               	movlb	3	; select bank3
  7855  223B  026A               	subwf	(Network_Manage@now+1)^(0+384),w
  7856  223C  1D03               	skipz
  7857  223D  2A42               	goto	u7643
  7858  223E  0024               	movlb	4	; select bank4
  7859  223F  0868               	movf	_arpTimer^(0+512),w
  7860  2240  0023               	movlb	3	; select bank3
  7861  2241  0269               	subwf	Network_Manage@now^(0+384),w
  7862  2242                     u7643:
  7863  2242  1C03               	skipc
  7864  2243  2A50               	goto	l8328
  7865                           
  7866                           ;network.c: 87: {;network.c: 88: ARPV4_Update();
  7867  2244  31AB  236E  31A2   	fcall	_ARPV4_Update
  7868                           
  7869                           ;network.c: 89: arpTimer += 10;
  7870  2247  300A               	movlw	10
  7871  2248  0024               	movlb	4	; select bank4
  7872  2249  07E8               	addwf	_arpTimer^(0+512),f
  7873  224A  3000               	movlw	0
  7874  224B  3DE9               	addwfc	(_arpTimer+1)^(0+512),f
  7875  224C  3000               	movlw	0
  7876  224D  3DEA               	addwfc	(_arpTimer+2)^(0+512),f
  7877  224E  3000               	movlw	0
  7878  224F  3DEB               	addwfc	(_arpTimer+3)^(0+512),f
  7879  2250                     l8328:
  7880                           
  7881                           ;network.c: 90: };network.c: 91: if(now > nowPv)
  7882  2250  0024               	movlb	4	; select bank4
  7883  2251  0859               	movf	(Network_Manage@nowPv+3)^(0+512),w
  7884  2252  3A80               	xorlw	128
  7885  2253  0020               	movlb	0	; select bank0
  7886  2254  00EF               	movwf	??_Network_Manage
  7887  2255  0023               	movlb	3	; select bank3
  7888  2256  086C               	movf	(Network_Manage@now+3)^(0+384),w
  7889  2257  3A80               	xorlw	128
  7890  2258  0020               	movlb	0	; select bank0
  7891  2259  026F               	subwf	??_Network_Manage,w
  7892  225A  0024               	movlb	4	; select bank4
  7893  225B  1D03               	skipz
  7894  225C  2A6D               	goto	u7653
  7895  225D  0023               	movlb	3	; select bank3
  7896  225E  086B               	movf	(Network_Manage@now+2)^(0+384),w
  7897  225F  0024               	movlb	4	; select bank4
  7898  2260  0258               	subwf	(Network_Manage@nowPv+2)^(0+512),w
  7899  2261  1D03               	skipz
  7900  2262  2A6D               	goto	u7653
  7901  2263  0023               	movlb	3	; select bank3
  7902  2264  086A               	movf	(Network_Manage@now+1)^(0+384),w
  7903  2265  0024               	movlb	4	; select bank4
  7904  2266  0257               	subwf	(Network_Manage@nowPv+1)^(0+512),w
  7905  2267  1D03               	skipz
  7906  2268  2A6D               	goto	u7653
  7907  2269  0023               	movlb	3	; select bank3
  7908  226A  0869               	movf	Network_Manage@now^(0+384),w
  7909  226B  0024               	movlb	4	; select bank4
  7910  226C  0256               	subwf	Network_Manage@nowPv^(0+512),w
  7911  226D                     u7653:
  7912  226D  1803               	skipnc
  7913  226E  2A71               	goto	l8332
  7914                           
  7915                           ;network.c: 92: {;network.c: 94: TCP_Update();
  7916  226F  3187  274C         	fcall	_TCP_Update
  7917  2271                     l8332:
  7918                           
  7919                           ;network.c: 96: };network.c: 97: nowPv = now;
  7920  2271  0023               	movlb	3	; select bank3
  7921  2272  086C               	movf	(Network_Manage@now+3)^(0+384),w
  7922  2273  0024               	movlb	4	; select bank4
  7923  2274  00D9               	movwf	(Network_Manage@nowPv+3)^(0+512)
  7924  2275  0023               	movlb	3	; select bank3
  7925  2276  086B               	movf	(Network_Manage@now+2)^(0+384),w
  7926  2277  0024               	movlb	4	; select bank4
  7927  2278  00D8               	movwf	(Network_Manage@nowPv+2)^(0+512)
  7928  2279  0023               	movlb	3	; select bank3
  7929  227A  086A               	movf	(Network_Manage@now+1)^(0+384),w
  7930  227B  0024               	movlb	4	; select bank4
  7931  227C  00D7               	movwf	(Network_Manage@nowPv+1)^(0+512)
  7932  227D  0023               	movlb	3	; select bank3
  7933  227E  0869               	movf	Network_Manage@now^(0+384),w
  7934  227F  0024               	movlb	4	; select bank4
  7935  2280  00D6               	movwf	Network_Manage@nowPv^(0+512)
  7936  2281  0008               	return
  7937  2282                     __end_of_Network_Manage:
  7938                           
  7939                           	psect	text25
  7940  074C                     __ptext25:	
  7941 ;; *************** function _TCP_Update *****************
  7942 ;; Defined at:
  7943 ;;		line 1391 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;		None
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;  count           2    4[BANK2 ] int 
  7948 ;;  tcbPtr          1    6[BANK2 ] PTR struct .
  7949 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  1    wreg      void 
  7952 ;; Registers used:
  7953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7954 ;; Tracked objects:
  7955 ;;		On entry : 1F/4
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7960 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7961 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7962 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7963 ;;Total ram usage:        7 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:   12
  7966 ;; This function calls:
  7967 ;;		_TCP_FiniteStateMachine
  7968 ;; This function is called by:
  7969 ;;		_Network_Manage
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973                           
  7974                           ;psect for function _TCP_Update
  7975  074C                     _TCP_Update:
  7976                           
  7977                           ;tcpv4.c: 1395: int count = 0;
  7978                           
  7979                           ;incstack = 0
  7980                           ; Regs used in _TCP_Update: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7981  074C  0022               	movlb	2	; select bank2
  7982  074D  01A4               	clrf	TCP_Update@count^(0+256)
  7983  074E  01A5               	clrf	(TCP_Update@count+1)^(0+256)
  7984                           
  7985                           ;tcpv4.c: 1399: nextSequenceNumber++;
  7986  074F  3001               	movlw	1
  7987  0750  0024               	movlb	4	; select bank4
  7988  0751  07DE               	addwf	_nextSequenceNumber^(0+512),f
  7989  0752  3000               	movlw	0
  7990  0753  3DDF               	addwfc	(_nextSequenceNumber+1)^(0+512),f
  7991  0754  3000               	movlw	0
  7992  0755  3DE0               	addwfc	(_nextSequenceNumber+2)^(0+512),f
  7993  0756  3000               	movlw	0
  7994  0757  3DE1               	addwfc	(_nextSequenceNumber+3)^(0+512),f
  7995                           
  7996                           ;tcpv4.c: 1402: nextAvailablePort = nextAvailablePort + 1;
  7997  0758  0023               	movlb	3	; select bank3
  7998  0759  0832               	movf	_nextAvailablePort^(0+384),w
  7999  075A  3E01               	addlw	1
  8000  075B  00B2               	movwf	_nextAvailablePort^(0+384)
  8001  075C  3000               	movlw	0
  8002  075D  3D33               	addwfc	(_nextAvailablePort+1)^(0+384),w
  8003  075E  00B3               	movwf	(_nextAvailablePort+1)^(0+384)
  8004                           
  8005                           ;tcpv4.c: 1403: if (nextAvailablePort < (1024u))
  8006  075F  3004               	movlw	4
  8007  0760  0233               	subwf	(_nextAvailablePort+1)^(0+384),w
  8008  0761  3000               	movlw	0
  8009  0762  1903               	skipnz
  8010  0763  0232               	subwf	_nextAvailablePort^(0+384),w
  8011  0764  1803               	skipnc
  8012  0765  2F6A               	goto	l437
  8013                           
  8014                           ;tcpv4.c: 1404: {;tcpv4.c: 1405: nextAvailablePort = (1024u);
  8015  0766  3000               	movlw	0
  8016  0767  00B2               	movwf	_nextAvailablePort^(0+384)
  8017  0768  3004               	movlw	4
  8018  0769  00B3               	movwf	(_nextAvailablePort^(0+384)+1)
  8019  076A                     l437:
  8020                           
  8021                           ;tcpv4.c: 1406: };tcpv4.c: 1409: tcbPtr = tcbList;
  8022  076A  0022               	movlb	2	; select bank2
  8023  076B  086F               	movf	_tcbList^(0+256),w
  8024  076C  00A0               	movwf	??_TCP_Update^(0+256)
  8025  076D  0820               	movf	??_TCP_Update^(0+256),w
  8026  076E  00A6               	movwf	TCP_Update@tcbPtr^(0+256)
  8027  076F                     l8262:	
  8028                           ;tcpv4.c: 1410: while((tcbPtr != (0)) && (count < tcbListSize))
  8029                           
  8030  076F  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8031  0770  1903               	btfsc	3,2
  8032  0771  0008               	return
  8033  0772  0023               	movlb	3	; select bank3
  8034  0773  0836               	movf	_tcbListSize^(0+384),w
  8035  0774  0022               	movlb	2	; select bank2
  8036  0775  00A0               	movwf	??_TCP_Update^(0+256)
  8037  0776  01A1               	clrf	(??_TCP_Update^(0+256)+1)
  8038  0777  1BA0               	btfsc	??_TCP_Update^(0+256),7
  8039  0778  03A1               	decf	(??_TCP_Update^(0+256)+1),f
  8040  0779  0825               	movf	(TCP_Update@count+1)^(0+256),w
  8041  077A  3A80               	xorlw	128
  8042  077B  00A2               	movwf	(??_TCP_Update+2)^(0+256)
  8043  077C  0821               	movf	(??_TCP_Update+1)^(0+256),w
  8044  077D  3A80               	xorlw	128
  8045  077E  0222               	subwf	(??_TCP_Update+2)^(0+256),w
  8046  077F  1D03               	skipz
  8047  0780  2F83               	goto	u7625
  8048  0781  0820               	movf	??_TCP_Update^(0+256),w
  8049  0782  0224               	subwf	TCP_Update@count^(0+256),w
  8050  0783                     u7625:
  8051  0783  1803               	btfsc	3,0
  8052  0784  0008               	return
  8053                           
  8054                           ;tcpv4.c: 1411: {;tcpv4.c: 1412: if (tcbPtr->timeout > 0)
  8055  0785  0022               	movlb	2	; select bank2
  8056  0786  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8057  0787  3E2D               	addlw	45
  8058  0788  0086               	movwf	6
  8059  0789  3002               	movlw	2	; select bank4/5
  8060  078A  0087               	movwf	7
  8061  078B  0016               	moviw fsr1++
  8062  078C  0401               	iorwf	1,w
  8063  078D  1903               	btfsc	3,2
  8064  078E  2FEE               	goto	l8258
  8065                           
  8066                           ;tcpv4.c: 1413: {;tcpv4.c: 1414: tcbPtr->timeout = tcbPtr->timeout - 1;
  8067  078F  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8068  0790  3E2D               	addlw	45
  8069  0791  0086               	movwf	6
  8070  0792  3002               	movlw	2	; select bank4/5
  8071  0793  0087               	movwf	7
  8072  0794  3F40               	moviw [0]fsr1
  8073  0795  00A0               	movwf	??_TCP_Update^(0+256)
  8074  0796  3F41               	moviw [1]fsr1
  8075  0797  00A1               	movwf	(??_TCP_Update^(0+256)+1)
  8076  0798  0820               	movf	??_TCP_Update^(0+256),w
  8077  0799  3EFF               	addlw	255
  8078  079A  00A2               	movwf	(??_TCP_Update+2)^(0+256)
  8079  079B  30FF               	movlw	255
  8080  079C  3D21               	addwfc	(??_TCP_Update+1)^(0+256),w
  8081  079D  00A3               	movwf	(??_TCP_Update+3)^(0+256)
  8082  079E  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8083  079F  3E2D               	addlw	45
  8084  07A0  0086               	movwf	6
  8085  07A1  3002               	movlw	2	; select bank4/5
  8086  07A2  0087               	movwf	7
  8087  07A3  0822               	movf	(??_TCP_Update+2)^(0+256),w
  8088  07A4  3FC0               	movwi [0]fsr1
  8089  07A5  0823               	movf	(??_TCP_Update+3)^(0+256),w
  8090  07A6  3FC1               	movwi [1]fsr1
  8091                           
  8092                           ;tcpv4.c: 1417: {;tcpv4.c: 1421: if (tcbPtr->timeoutsCount >= 0)
  8093  07A7  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8094  07A8  3E2D               	addlw	45
  8095  07A9  0086               	movwf	6
  8096  07AA  3002               	movlw	2	; select bank4/5
  8097  07AB  0087               	movwf	7
  8098  07AC  0016               	moviw fsr1++
  8099  07AD  0401               	iorwf	1,w
  8100  07AE  1D03               	btfss	3,2
  8101  07AF  2FEE               	goto	l8258
  8102                           
  8103                           ;tcpv4.c: 1422: {;tcpv4.c: 1424: if (tcbPtr->connectionEvent == NOP)
  8104  07B0  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8105  07B1  3E2A               	addlw	42
  8106  07B2  0086               	movwf	6
  8107  07B3  3002               	movlw	2	; select bank4/5
  8108  07B4  0087               	movwf	7
  8109  07B5  300D               	movlw	13
  8110  07B6  0601               	xorwf	1,w
  8111  07B7  1D03               	btfss	3,2
  8112  07B8  2FEE               	goto	l8258
  8113                           
  8114                           ;tcpv4.c: 1425: {;tcpv4.c: 1426: tcbPtr->timeout = tcbPtr->timeoutReloadValue;
  8115  07B9  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8116  07BA  3E2F               	addlw	47
  8117  07BB  0086               	movwf	6
  8118  07BC  3002               	movlw	2	; select bank4/5
  8119  07BD  0087               	movwf	7
  8120  07BE  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8121  07BF  3E2D               	addlw	45
  8122  07C0  0084               	movwf	4
  8123  07C1  3002               	movlw	2	; select bank4/5
  8124  07C2  0085               	movwf	5
  8125  07C3  3F40               	moviw [0]fsr1
  8126  07C4  3F80               	movwi [0]fsr0
  8127  07C5  3F41               	moviw [1]fsr1
  8128  07C6  3F81               	movwi [1]fsr0
  8129                           
  8130                           ;tcpv4.c: 1428: if (tcbPtr->timeoutsCount != 0)
  8131  07C7  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8132  07C8  3E31               	addlw	49
  8133  07C9  0086               	movwf	6
  8134  07CA  3002               	movlw	2	; select bank4/5
  8135  07CB  0087               	movwf	7
  8136  07CC  0801               	movf	1,w
  8137  07CD  1903               	btfsc	3,2
  8138  07CE  2FDE               	goto	l444
  8139                           
  8140                           ;tcpv4.c: 1429: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount - 1;
  8141  07CF  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8142  07D0  3E31               	addlw	49
  8143  07D1  0086               	movwf	6
  8144  07D2  3002               	movlw	2	; select bank4/5
  8145  07D3  0087               	movwf	7
  8146  07D4  0801               	movf	1,w
  8147  07D5  3EFF               	addlw	255
  8148  07D6  00A0               	movwf	??_TCP_Update^(0+256)
  8149  07D7  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8150  07D8  3E31               	addlw	49
  8151  07D9  0086               	movwf	6
  8152  07DA  3002               	movlw	2	; select bank4/5
  8153  07DB  0087               	movwf	7
  8154  07DC  0820               	movf	??_TCP_Update^(0+256),w
  8155  07DD  0081               	movwf	1
  8156  07DE                     l444:
  8157                           
  8158                           ;tcpv4.c: 1430: tcbPtr->connectionEvent = TIMEOUT;
  8159  07DE  300C               	movlw	12
  8160  07DF  00A0               	movwf	??_TCP_Update^(0+256)
  8161  07E0  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8162  07E1  3E2A               	addlw	42
  8163  07E2  0086               	movwf	6
  8164  07E3  3002               	movlw	2	; select bank4/5
  8165  07E4  0087               	movwf	7
  8166  07E5  0820               	movf	??_TCP_Update^(0+256),w
  8167  07E6  0081               	movwf	1
  8168                           
  8169                           ;tcpv4.c: 1431: currentTCB = tcbPtr;
  8170  07E7  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8171  07E8  00A0               	movwf	??_TCP_Update^(0+256)
  8172  07E9  0820               	movf	??_TCP_Update^(0+256),w
  8173  07EA  00EE               	movwf	_currentTCB^(0+256)
  8174                           
  8175                           ;tcpv4.c: 1432: TCP_FiniteStateMachine();
  8176  07EB  318A  2286  3187   	fcall	_TCP_FiniteStateMachine
  8177  07EE                     l8258:
  8178                           
  8179                           ;tcpv4.c: 1433: };tcpv4.c: 1434: };tcpv4.c: 1435: };tcpv4.c: 1436: };tcpv4.c: 1437: tcbP
      +                          tr = tcbPtr->nextTCB;
  8180  07EE  0022               	movlb	2	; select bank2
  8181  07EF  0826               	movf	TCP_Update@tcbPtr^(0+256),w
  8182  07F0  3E2B               	addlw	43
  8183  07F1  0086               	movwf	6
  8184  07F2  3002               	movlw	2	; select bank4/5
  8185  07F3  0087               	movwf	7
  8186  07F4  0801               	movf	1,w
  8187  07F5  00A0               	movwf	??_TCP_Update^(0+256)
  8188  07F6  0820               	movf	??_TCP_Update^(0+256),w
  8189  07F7  00A6               	movwf	TCP_Update@tcbPtr^(0+256)
  8190                           
  8191                           ;tcpv4.c: 1438: count ++;
  8192  07F8  3001               	movlw	1
  8193  07F9  07A4               	addwf	TCP_Update@count^(0+256),f
  8194  07FA  3000               	movlw	0
  8195  07FB  3DA5               	addwfc	(TCP_Update@count+1)^(0+256),f
  8196  07FC  2F6F               	goto	l8262
  8197  07FD                     __end_of_TCP_Update:
  8198                           
  8199                           	psect	text26
  8200  2104                     __ptext26:	
  8201 ;; *************** function _Network_Read *****************
  8202 ;; Defined at:
  8203 ;;		line 100 in file "mcc_generated_files/TCPIPLibrary/network.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;		None
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  debug_str      80    0        unsigned char [80]
  8208 ;;  header         14   64[BANK2 ] struct .
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8213 ;; Tracked objects:
  8214 ;;		On entry : 1D/0
  8215 ;;		On exit  : 19/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8219 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8220 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8221 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8222 ;;Total ram usage:       21 bytes
  8223 ;; Hardware stack levels used:    1
  8224 ;; Hardware stack levels required when called:   14
  8225 ;; This function calls:
  8226 ;;		_ARPV4_Packet
  8227 ;;		_ETH_Flush
  8228 ;;		_ETH_NextPacketUpdate
  8229 ;;		_ETH_ReadBlock
  8230 ;;		_IPV4_Packet
  8231 ;; This function is called by:
  8232 ;;		_Network_Manage
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           
  8237                           ;psect for function _Network_Read
  8238  2104                     _Network_Read:
  8239                           
  8240                           ;network.c: 102: ethernetFrame_t header;;network.c: 103: char debug_str[80];;network.c: 
      +                          105: if(ethData.pktReady)
  8241                           
  8242                           ;incstack = 0
  8243                           ; Regs used in _Network_Read: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8244  2104  0024               	movlb	4	; select bank4
  8245  2105  1CC4               	btfss	_ethData^(0+512),1	;volatile
  8246  2106  0008               	return
  8247                           
  8248                           ;network.c: 106: {;network.c: 107: ETH_NextPacketUpdate();
  8249  2107  31A1  21BA  31A1   	fcall	_ETH_NextPacketUpdate
  8250                           
  8251                           ;network.c: 108: ETH_ReadBlock((char *)&header, sizeof(header));
  8252  210A  3060               	movlw	low Network_Read@header
  8253  210B  00F1               	movwf	ETH_ReadBlock@buffer
  8254  210C  3001               	movlw	high Network_Read@header
  8255  210D  00F2               	movwf	ETH_ReadBlock@buffer+1
  8256  210E  300E               	movlw	14
  8257  210F  00F3               	movwf	ETH_ReadBlock@length
  8258  2110  3000               	movlw	0
  8259  2111  00F4               	movwf	ETH_ReadBlock@length+1
  8260  2112  31AF  273F  31A1   	fcall	_ETH_ReadBlock
  8261                           
  8262                           ;network.c: 109: header.id.type = ((((uint16_t)header.id.type & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)header.id.type & (uint16_t)0x00FF) << 8));
  8263  2115  30FF               	movlw	255
  8264  2116  056C               	andwf	(Network_Read@header^(0+256)+12),w
  8265  2117  00D9               	movwf	??_Network_Read^(0+256)
  8266  2118  3000               	movlw	0
  8267  2119  056D               	andwf	((Network_Read@header+1)^(0+256)+12),w
  8268  211A  00DA               	movwf	(??_Network_Read+1)^(0+256)
  8269  211B  0859               	movf	??_Network_Read^(0+256),w
  8270  211C  00DA               	movwf	(??_Network_Read^(0+256)+1)
  8271  211D  01D9               	clrf	??_Network_Read^(0+256)
  8272  211E  300C               	movlw	12
  8273  211F  3E60               	addlw	(low (Network_Read@header| (0+256)))& (0+255)
  8274  2120  0086               	movwf	6
  8275  2121  3001               	movlw	1	; select bank2/3
  8276  2122  0087               	movwf	7
  8277  2123  3F40               	moviw [0]fsr1
  8278  2124  00DC               	movwf	(??_Network_Read+3)^(0+256)
  8279  2125  3F41               	moviw [1]fsr1
  8280  2126  00DD               	movwf	((??_Network_Read+3)^(0+256)+1)
  8281  2127  085D               	movf	((??_Network_Read+3)^(0+256)+1),w
  8282  2128  00DC               	movwf	(??_Network_Read+3)^(0+256)
  8283  2129  01DD               	clrf	((??_Network_Read+3)^(0+256)+1)
  8284  212A  30FF               	movlw	255
  8285  212B  055C               	andwf	(??_Network_Read+3)^(0+256),w
  8286  212C  00DE               	movwf	(??_Network_Read+5)^(0+256)
  8287  212D  3000               	movlw	0
  8288  212E  055D               	andwf	(??_Network_Read+4)^(0+256),w
  8289  212F  00DF               	movwf	(??_Network_Read+6)^(0+256)
  8290  2130  0859               	movf	??_Network_Read^(0+256),w
  8291  2131  045E               	iorwf	(??_Network_Read+5)^(0+256),w
  8292  2132  00EC               	movwf	(Network_Read@header^(0+256)+12)
  8293  2133  085A               	movf	(??_Network_Read+1)^(0+256),w
  8294  2134  045F               	iorwf	(??_Network_Read+6)^(0+256),w
  8295  2135  00ED               	movwf	((Network_Read@header+1)^(0+256)+12)
  8296                           
  8297                           ;network.c: 110: switch (header.id.type)
  8298  2136  293F               	goto	l8294
  8299  2137                     l8288:
  8300                           
  8301                           ;network.c: 115: ARPV4_Packet();
  8302  2137  319D  2548  31A1   	fcall	_ARPV4_Packet
  8303                           
  8304                           ;network.c: 116: break;
  8305  213A  295C               	goto	l8296
  8306  213B                     l8290:
  8307                           
  8308                           ;network.c: 118: IPV4_Packet();
  8309  213B  3191  21D2  31A1   	fcall	_IPV4_Packet
  8310                           
  8311                           ;network.c: 119: break;
  8312  213E  295C               	goto	l8296
  8313  213F                     l8294:
  8314                           
  8315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  8316                           ; Switch size 1, requested type "simple"
  8317                           ; Number of cases is 3, Range of values is 8 to 134
  8318                           ; switch strategies available:
  8319                           ; Name         Instructions Cycles
  8320                           ; simple_byte           10     6 (average)
  8321                           ; direct_byte          263     9 (fixed)
  8322                           ; jumptable            263     9 (fixed)
  8323                           ;	Chosen strategy is simple_byte
  8324  213F  086D               	movf	((Network_Read@header+1)^(0+256)+12),w
  8325  2140  3A08               	xorlw	8	; case 8
  8326  2141  1903               	skipnz
  8327  2142  294A               	goto	l8564
  8328  2143  3A89               	xorlw	137	; case 129
  8329  2144  1903               	skipnz
  8330  2145  2952               	goto	l8566
  8331  2146  3A07               	xorlw	7	; case 134
  8332  2147  1903               	skipnz
  8333  2148  2957               	goto	l8568
  8334  2149  295C               	goto	l8296
  8335  214A                     l8564:
  8336                           
  8337                           ; Switch size 1, requested type "simple"
  8338                           ; Number of cases is 2, Range of values is 0 to 6
  8339                           ; switch strategies available:
  8340                           ; Name         Instructions Cycles
  8341                           ; simple_byte            7     4 (average)
  8342                           ; direct_byte           20     6 (fixed)
  8343                           ; jumptable            260     6 (fixed)
  8344                           ;	Chosen strategy is simple_byte
  8345  214A  086C               	movf	(Network_Read@header^(0+256)+12),w
  8346  214B  3A00               	xorlw	0	; case 0
  8347  214C  1903               	skipnz
  8348  214D  293B               	goto	l8290
  8349  214E  3A06               	xorlw	6	; case 6
  8350  214F  1903               	skipnz
  8351  2150  2937               	goto	l8288
  8352  2151  295C               	goto	l8296
  8353  2152                     l8566:
  8354                           
  8355                           ; Switch size 1, requested type "simple"
  8356                           ; Number of cases is 1, Range of values is 0 to 0
  8357                           ; switch strategies available:
  8358                           ; Name         Instructions Cycles
  8359                           ; simple_byte            4     3 (average)
  8360                           ; direct_byte            8     6 (fixed)
  8361                           ; jumptable            260     6 (fixed)
  8362                           ;	Chosen strategy is simple_byte
  8363  2152  086C               	movf	(Network_Read@header^(0+256)+12),w
  8364  2153  3A00               	xorlw	0	; case 0
  8365  2154  1903               	skipnz
  8366  2155  295C               	goto	l8296
  8367  2156  295C               	goto	l8296
  8368  2157                     l8568:
  8369                           
  8370                           ; Switch size 1, requested type "simple"
  8371                           ; Number of cases is 1, Range of values is 221 to 221
  8372                           ; switch strategies available:
  8373                           ; Name         Instructions Cycles
  8374                           ; simple_byte            4     3 (average)
  8375                           ; direct_byte           11     9 (fixed)
  8376                           ; jumptable            263     9 (fixed)
  8377                           ;	Chosen strategy is simple_byte
  8378  2157  086C               	movf	(Network_Read@header^(0+256)+12),w
  8379  2158  3ADD               	xorlw	221	; case 221
  8380  2159  1903               	skipnz
  8381  215A  295C               	goto	l8296
  8382  215B  295C               	goto	l8296
  8383  215C                     l8296:
  8384                           
  8385                           ;network.c: 125: ETH_Flush();
  8386  215C  31AC  24BB         	fcall	_ETH_Flush
  8387  215E  0008               	return
  8388  215F                     __end_of_Network_Read:
  8389                           
  8390                           	psect	text27
  8391  11D2                     __ptext27:	
  8392 ;; *************** function _IPV4_Packet *****************
  8393 ;; Defined at:
  8394 ;;		line 100 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;  msg            40    0        unsigned char [40]
  8399 ;;  addrTemp        4   53[BANK2 ] unsigned long 
  8400 ;;  cksm            2   51[BANK2 ] unsigned int 
  8401 ;;  length          2   49[BANK2 ] unsigned int 
  8402 ;;  hdrLen          1   48[BANK2 ] unsigned char 
  8403 ;; Return value:  Size  Location     Type
  8404 ;;                  1    wreg      enum E421
  8405 ;; Registers used:
  8406 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8407 ;; Tracked objects:
  8408 ;;		On entry : 1D/2
  8409 ;;		On exit  : 18/0
  8410 ;;		Unchanged: 0/0
  8411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8413 ;;      Locals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8414 ;;      Temps:          0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8415 ;;      Totals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8416 ;;Total ram usage:       27 bytes
  8417 ;; Hardware stack levels used:    1
  8418 ;; Hardware stack levels required when called:   13
  8419 ;; This function calls:
  8420 ;;		_ETH_Dump
  8421 ;;		_ETH_ReadBlock
  8422 ;;		_ETH_RxComputeChecksum
  8423 ;;		_ICMP_Receive
  8424 ;;		_IPV4_PseudoHeaderChecksum
  8425 ;;		_IPV4_SaveStartPosition
  8426 ;;		_TCP_Recv
  8427 ;; This function is called by:
  8428 ;;		_Network_Read
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function _IPV4_Packet
  8434  11D2                     _IPV4_Packet:
  8435                           
  8436                           ;ipv4.c: 103: uint16_t length = 0;
  8437                           
  8438                           ;incstack = 0
  8439                           ; Regs used in _IPV4_Packet: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8440  11D2  0022               	movlb	2	; select bank2
  8441  11D3  01D1               	clrf	IPV4_Packet@length^(0+256)
  8442  11D4  01D2               	clrf	(IPV4_Packet@length+1)^(0+256)
  8443                           
  8444                           ;ipv4.c: 104: uint32_t addrTemp;;ipv4.c: 105: char msg[40];;ipv4.c: 106: uint8_t hdrLen;
      +                          ;ipv4.c: 109: cksm = ETH_RxComputeChecksum(sizeof(ipv4Header_t), 0);
  8445  11D5  3014               	movlw	20
  8446  11D6  0020               	movlb	0	; select bank0
  8447  11D7  00A8               	movwf	ETH_RxComputeChecksum@len
  8448  11D8  3000               	movlw	0
  8449  11D9  00A9               	movwf	ETH_RxComputeChecksum@len+1
  8450  11DA  3000               	movlw	0
  8451  11DB  00AA               	movwf	ETH_RxComputeChecksum@seed
  8452  11DC  00AB               	movwf	ETH_RxComputeChecksum@seed+1
  8453  11DD  31AE  2693  3191   	fcall	_ETH_RxComputeChecksum
  8454  11E0  0829               	movf	?_ETH_RxComputeChecksum+1,w
  8455  11E1  0022               	movlb	2	; select bank2
  8456  11E2  00D4               	movwf	(IPV4_Packet@cksm+1)^(0+256)
  8457  11E3  0020               	movlb	0	; select bank0
  8458  11E4  0828               	movf	?_ETH_RxComputeChecksum,w
  8459  11E5  0022               	movlb	2	; select bank2
  8460  11E6  00D3               	movwf	IPV4_Packet@cksm^(0+256)
  8461                           
  8462                           ;ipv4.c: 110: if (cksm != 0)
  8463  11E7  0853               	movf	IPV4_Packet@cksm^(0+256),w
  8464  11E8  0454               	iorwf	(IPV4_Packet@cksm+1)^(0+256),w
  8465  11E9  1D03               	btfss	3,2
  8466  11EA  0008               	return
  8467                           
  8468                           ;ipv4.c: 113: };ipv4.c: 115: IPV4_SaveStartPosition();
  8469  11EB  31A9  2195  3191   	fcall	_IPV4_SaveStartPosition
  8470                           
  8471                           ;ipv4.c: 116: ETH_ReadBlock((char *)&ipv4Header, sizeof(ipv4Header_t));
  8472  11EE  30B9               	movlw	low _ipv4Header
  8473  11EF  00F1               	movwf	ETH_ReadBlock@buffer
  8474  11F0  3001               	movlw	high _ipv4Header
  8475  11F1  00F2               	movwf	ETH_ReadBlock@buffer+1
  8476  11F2  3014               	movlw	20
  8477  11F3  00F3               	movwf	ETH_ReadBlock@length
  8478  11F4  3000               	movlw	0
  8479  11F5  00F4               	movwf	ETH_ReadBlock@length+1
  8480  11F6  31AF  273F  3191   	fcall	_ETH_ReadBlock
  8481                           
  8482                           ;ipv4.c: 117: if(ipv4Header.version != 4)
  8483  11F9  0023               	movlb	3	; select bank3
  8484  11FA  0E39               	swapf	_ipv4Header^(0+384),w
  8485  11FB  390F               	andlw	15
  8486  11FC  3A04               	xorlw	4
  8487  11FD  1D03               	btfss	3,2
  8488  11FE  0008               	return
  8489                           
  8490                           ;ipv4.c: 120: };ipv4.c: 122: addrTemp = ipv4Header.dstIpAddress;
  8491  11FF  3010               	movlw	16
  8492  1200  3EB9               	addlw	(low (_ipv4Header| (0+256)))& (0+255)
  8493  1201  0086               	movwf	6
  8494  1202  3001               	movlw	1	; select bank3/4
  8495  1203  0087               	movwf	7
  8496  1204  3F40               	moviw [0]fsr1
  8497  1205  0022               	movlb	2	; select bank2
  8498  1206  00D5               	movwf	IPV4_Packet@addrTemp^(0+256)
  8499  1207  3F41               	moviw [1]fsr1
  8500  1208  00D6               	movwf	(IPV4_Packet@addrTemp+1)^(0+256)
  8501  1209  3F42               	moviw [2]fsr1
  8502  120A  00D7               	movwf	(IPV4_Packet@addrTemp+2)^(0+256)
  8503  120B  3F43               	moviw [3]fsr1
  8504  120C  00D8               	movwf	(IPV4_Packet@addrTemp+3)^(0+256)
  8505                           
  8506                           ;ipv4.c: 123: ipv4Header.dstIpAddress = ((((uint32_t)addrTemp&(uint32_t)0xff000000) >> 2
      +                          4) | (((uint32_t)addrTemp&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)addrTemp&(uint32_t)0
      +                          x0000ff00) << 8) | (((uint32_t)addrTemp&(uint32_t)0x000000ff) << 24) );
  8507  120D  30FF               	movlw	255
  8508  120E  0555               	andwf	IPV4_Packet@addrTemp^(0+256),w
  8509  120F  00BE               	movwf	??_IPV4_Packet^(0+256)
  8510  1210  3000               	movlw	0
  8511  1211  0556               	andwf	(IPV4_Packet@addrTemp+1)^(0+256),w
  8512  1212  00BF               	movwf	(??_IPV4_Packet^(0+256)+1)
  8513  1213  3000               	movlw	0
  8514  1214  0557               	andwf	(IPV4_Packet@addrTemp+2)^(0+256),w
  8515  1215  00C0               	movwf	(??_IPV4_Packet^(0+256)+2)
  8516  1216  3000               	movlw	0
  8517  1217  0558               	andwf	(IPV4_Packet@addrTemp+3)^(0+256),w
  8518  1218  00C1               	movwf	(??_IPV4_Packet^(0+256)+3)
  8519  1219  3018               	movlw	24
  8520  121A                     u7275:
  8521  121A  35BE               	lslf	??_IPV4_Packet^(0+256),f
  8522  121B  0DBF               	rlf	(??_IPV4_Packet^(0+256)+1),f
  8523  121C  0DC0               	rlf	(??_IPV4_Packet^(0+256)+2),f
  8524  121D  0DC1               	rlf	(??_IPV4_Packet^(0+256)+3),f
  8525  121E  0B89               	decfsz	9,f
  8526  121F  2A1A               	goto	u7275
  8527  1220  3000               	movlw	0
  8528  1221  0555               	andwf	IPV4_Packet@addrTemp^(0+256),w
  8529  1222  00C2               	movwf	(??_IPV4_Packet+4)^(0+256)
  8530  1223  30FF               	movlw	255
  8531  1224  0556               	andwf	(IPV4_Packet@addrTemp+1)^(0+256),w
  8532  1225  00C3               	movwf	((??_IPV4_Packet+4)^(0+256)+1)
  8533  1226  3000               	movlw	0
  8534  1227  0557               	andwf	(IPV4_Packet@addrTemp+2)^(0+256),w
  8535  1228  00C4               	movwf	((??_IPV4_Packet+4)^(0+256)+2)
  8536  1229  3000               	movlw	0
  8537  122A  0558               	andwf	(IPV4_Packet@addrTemp+3)^(0+256),w
  8538  122B  00C5               	movwf	((??_IPV4_Packet+4)^(0+256)+3)
  8539  122C  3008               	movlw	8
  8540  122D                     u7285:
  8541  122D  35C2               	lslf	(??_IPV4_Packet+4)^(0+256),f
  8542  122E  0DC3               	rlf	((??_IPV4_Packet+4)^(0+256)+1),f
  8543  122F  0DC4               	rlf	((??_IPV4_Packet+4)^(0+256)+2),f
  8544  1230  0DC5               	rlf	((??_IPV4_Packet+4)^(0+256)+3),f
  8545  1231  0B89               	decfsz	9,f
  8546  1232  2A2D               	goto	u7285
  8547  1233  3000               	movlw	0
  8548  1234  00C6               	movwf	(??_IPV4_Packet+8)^(0+256)
  8549  1235  30FF               	movlw	255
  8550  1236  00C7               	movwf	((??_IPV4_Packet+8)^(0+256)+1)
  8551  1237  3000               	movlw	0
  8552  1238  00C8               	movwf	((??_IPV4_Packet+8)^(0+256)+2)
  8553  1239  0856               	movf	(IPV4_Packet@addrTemp^(0+256)+1),w
  8554  123A  05C6               	andwf	(??_IPV4_Packet+8)^(0+256),f
  8555  123B  0857               	movf	((IPV4_Packet@addrTemp+1)^(0+256)+1),w
  8556  123C  05C7               	andwf	((??_IPV4_Packet+8)^(0+256)+1),f
  8557  123D  0858               	movf	((IPV4_Packet@addrTemp+2)^(0+256)+1),w
  8558  123E  05C8               	andwf	((??_IPV4_Packet+8)^(0+256)+2),f
  8559  123F  0858               	movf	(IPV4_Packet@addrTemp^(0+256)+3),w
  8560  1240  00C9               	movwf	(??_IPV4_Packet+11)^(0+256)
  8561  1241  01CA               	clrf	((??_IPV4_Packet+11)^(0+256)+1)
  8562  1242  01CB               	clrf	((??_IPV4_Packet+11)^(0+256)+2)
  8563  1243  0849               	movf	(??_IPV4_Packet+11)^(0+256),w
  8564  1244  04C6               	iorwf	(??_IPV4_Packet+8)^(0+256),f
  8565  1245  084A               	movf	(??_IPV4_Packet+12)^(0+256),w
  8566  1246  04C7               	iorwf	((??_IPV4_Packet+8)^(0+256)+1),f
  8567  1247  084B               	movf	(??_IPV4_Packet+13)^(0+256),w
  8568  1248  04C8               	iorwf	((??_IPV4_Packet+8)^(0+256)+2),f
  8569  1249  0846               	movf	(??_IPV4_Packet+8)^(0+256),w
  8570  124A  00CC               	movwf	(??_IPV4_Packet+14)^(0+256)
  8571  124B  0847               	movf	(??_IPV4_Packet+9)^(0+256),w
  8572  124C  00CD               	movwf	((??_IPV4_Packet+14)^(0+256)+1)
  8573  124D  0848               	movf	(??_IPV4_Packet+10)^(0+256),w
  8574  124E  00CE               	movwf	((??_IPV4_Packet+14)^(0+256)+2)
  8575  124F  01CF               	clrf	((??_IPV4_Packet+14)^(0+256)+3)
  8576  1250  084C               	movf	(??_IPV4_Packet+14)^(0+256),w
  8577  1251  04C2               	iorwf	(??_IPV4_Packet+4)^(0+256),f
  8578  1252  084D               	movf	(??_IPV4_Packet+15)^(0+256),w
  8579  1253  04C3               	iorwf	((??_IPV4_Packet+4)^(0+256)+1),f
  8580  1254  084E               	movf	(??_IPV4_Packet+16)^(0+256),w
  8581  1255  04C4               	iorwf	((??_IPV4_Packet+4)^(0+256)+2),f
  8582  1256  084F               	movf	(??_IPV4_Packet+17)^(0+256),w
  8583  1257  04C5               	iorwf	((??_IPV4_Packet+4)^(0+256)+3),f
  8584  1258  083E               	movf	??_IPV4_Packet^(0+256),w
  8585  1259  0442               	iorwf	(??_IPV4_Packet+4)^(0+256),w
  8586  125A  0023               	movlb	3	; select bank3
  8587  125B  00C9               	movwf	(_ipv4Header^(0+384)+16)
  8588  125C  0022               	movlb	2	; select bank2
  8589  125D  083F               	movf	(??_IPV4_Packet+1)^(0+256),w
  8590  125E  0443               	iorwf	(??_IPV4_Packet+5)^(0+256),w
  8591  125F  0023               	movlb	3	; select bank3
  8592  1260  00CA               	movwf	((_ipv4Header+1)^(0+384)+16)
  8593  1261  0022               	movlb	2	; select bank2
  8594  1262  0840               	movf	(??_IPV4_Packet+2)^(0+256),w
  8595  1263  0444               	iorwf	(??_IPV4_Packet+6)^(0+256),w
  8596  1264  0023               	movlb	3	; select bank3
  8597  1265  00CB               	movwf	((_ipv4Header+2)^(0+384)+16)
  8598  1266  0022               	movlb	2	; select bank2
  8599  1267  0841               	movf	(??_IPV4_Packet+3)^(0+256),w
  8600  1268  0445               	iorwf	(??_IPV4_Packet+7)^(0+256),w
  8601  1269  0023               	movlb	3	; select bank3
  8602  126A  00CC               	movwf	((_ipv4Header+3)^(0+384)+16)
  8603                           
  8604                           ;ipv4.c: 124: addrTemp++;
  8605  126B  3001               	movlw	1
  8606  126C  0022               	movlb	2	; select bank2
  8607  126D  07D5               	addwf	IPV4_Packet@addrTemp^(0+256),f
  8608  126E  3000               	movlw	0
  8609  126F  3DD6               	addwfc	(IPV4_Packet@addrTemp+1)^(0+256),f
  8610  1270  3000               	movlw	0
  8611  1271  3DD7               	addwfc	(IPV4_Packet@addrTemp+2)^(0+256),f
  8612  1272  3000               	movlw	0
  8613  1273  3DD8               	addwfc	(IPV4_Packet@addrTemp+3)^(0+256),f
  8614                           
  8615                           ;ipv4.c: 126: addrTemp = ipv4Header.srcIpAddress;
  8616  1274  300C               	movlw	12
  8617  1275  3EB9               	addlw	(low (_ipv4Header| (0+256)))& (0+255)
  8618  1276  0086               	movwf	6
  8619  1277  3001               	movlw	1	; select bank3/4
  8620  1278  0087               	movwf	7
  8621  1279  3F40               	moviw [0]fsr1
  8622  127A  00D5               	movwf	IPV4_Packet@addrTemp^(0+256)
  8623  127B  3F41               	moviw [1]fsr1
  8624  127C  00D6               	movwf	(IPV4_Packet@addrTemp+1)^(0+256)
  8625  127D  3F42               	moviw [2]fsr1
  8626  127E  00D7               	movwf	(IPV4_Packet@addrTemp+2)^(0+256)
  8627  127F  3F43               	moviw [3]fsr1
  8628  1280  00D8               	movwf	(IPV4_Packet@addrTemp+3)^(0+256)
  8629                           
  8630                           ;ipv4.c: 127: ipv4Header.srcIpAddress = ((((uint32_t)addrTemp&(uint32_t)0xff000000) >> 2
      +                          4) | (((uint32_t)addrTemp&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)addrTemp&(uint32_t)0
      +                          x0000ff00) << 8) | (((uint32_t)addrTemp&(uint32_t)0x000000ff) << 24) );
  8631  1281  30FF               	movlw	255
  8632  1282  0555               	andwf	IPV4_Packet@addrTemp^(0+256),w
  8633  1283  00BE               	movwf	??_IPV4_Packet^(0+256)
  8634  1284  3000               	movlw	0
  8635  1285  0556               	andwf	(IPV4_Packet@addrTemp+1)^(0+256),w
  8636  1286  00BF               	movwf	(??_IPV4_Packet^(0+256)+1)
  8637  1287  3000               	movlw	0
  8638  1288  0557               	andwf	(IPV4_Packet@addrTemp+2)^(0+256),w
  8639  1289  00C0               	movwf	(??_IPV4_Packet^(0+256)+2)
  8640  128A  3000               	movlw	0
  8641  128B  0558               	andwf	(IPV4_Packet@addrTemp+3)^(0+256),w
  8642  128C  00C1               	movwf	(??_IPV4_Packet^(0+256)+3)
  8643  128D  3018               	movlw	24
  8644  128E                     u7295:
  8645  128E  35BE               	lslf	??_IPV4_Packet^(0+256),f
  8646  128F  0DBF               	rlf	(??_IPV4_Packet^(0+256)+1),f
  8647  1290  0DC0               	rlf	(??_IPV4_Packet^(0+256)+2),f
  8648  1291  0DC1               	rlf	(??_IPV4_Packet^(0+256)+3),f
  8649  1292  0B89               	decfsz	9,f
  8650  1293  2A8E               	goto	u7295
  8651  1294  3000               	movlw	0
  8652  1295  0555               	andwf	IPV4_Packet@addrTemp^(0+256),w
  8653  1296  00C2               	movwf	(??_IPV4_Packet+4)^(0+256)
  8654  1297  30FF               	movlw	255
  8655  1298  0556               	andwf	(IPV4_Packet@addrTemp+1)^(0+256),w
  8656  1299  00C3               	movwf	((??_IPV4_Packet+4)^(0+256)+1)
  8657  129A  3000               	movlw	0
  8658  129B  0557               	andwf	(IPV4_Packet@addrTemp+2)^(0+256),w
  8659  129C  00C4               	movwf	((??_IPV4_Packet+4)^(0+256)+2)
  8660  129D  3000               	movlw	0
  8661  129E  0558               	andwf	(IPV4_Packet@addrTemp+3)^(0+256),w
  8662  129F  00C5               	movwf	((??_IPV4_Packet+4)^(0+256)+3)
  8663  12A0  3008               	movlw	8
  8664  12A1                     u7305:
  8665  12A1  35C2               	lslf	(??_IPV4_Packet+4)^(0+256),f
  8666  12A2  0DC3               	rlf	((??_IPV4_Packet+4)^(0+256)+1),f
  8667  12A3  0DC4               	rlf	((??_IPV4_Packet+4)^(0+256)+2),f
  8668  12A4  0DC5               	rlf	((??_IPV4_Packet+4)^(0+256)+3),f
  8669  12A5  0B89               	decfsz	9,f
  8670  12A6  2AA1               	goto	u7305
  8671  12A7  3000               	movlw	0
  8672  12A8  00C6               	movwf	(??_IPV4_Packet+8)^(0+256)
  8673  12A9  30FF               	movlw	255
  8674  12AA  00C7               	movwf	((??_IPV4_Packet+8)^(0+256)+1)
  8675  12AB  3000               	movlw	0
  8676  12AC  00C8               	movwf	((??_IPV4_Packet+8)^(0+256)+2)
  8677  12AD  0856               	movf	(IPV4_Packet@addrTemp^(0+256)+1),w
  8678  12AE  05C6               	andwf	(??_IPV4_Packet+8)^(0+256),f
  8679  12AF  0857               	movf	((IPV4_Packet@addrTemp+1)^(0+256)+1),w
  8680  12B0  05C7               	andwf	((??_IPV4_Packet+8)^(0+256)+1),f
  8681  12B1  0858               	movf	((IPV4_Packet@addrTemp+2)^(0+256)+1),w
  8682  12B2  05C8               	andwf	((??_IPV4_Packet+8)^(0+256)+2),f
  8683  12B3  0858               	movf	(IPV4_Packet@addrTemp^(0+256)+3),w
  8684  12B4  00C9               	movwf	(??_IPV4_Packet+11)^(0+256)
  8685  12B5  01CA               	clrf	((??_IPV4_Packet+11)^(0+256)+1)
  8686  12B6  01CB               	clrf	((??_IPV4_Packet+11)^(0+256)+2)
  8687  12B7  0849               	movf	(??_IPV4_Packet+11)^(0+256),w
  8688  12B8  04C6               	iorwf	(??_IPV4_Packet+8)^(0+256),f
  8689  12B9  084A               	movf	(??_IPV4_Packet+12)^(0+256),w
  8690  12BA  04C7               	iorwf	((??_IPV4_Packet+8)^(0+256)+1),f
  8691  12BB  084B               	movf	(??_IPV4_Packet+13)^(0+256),w
  8692  12BC  04C8               	iorwf	((??_IPV4_Packet+8)^(0+256)+2),f
  8693  12BD  0846               	movf	(??_IPV4_Packet+8)^(0+256),w
  8694  12BE  00CC               	movwf	(??_IPV4_Packet+14)^(0+256)
  8695  12BF  0847               	movf	(??_IPV4_Packet+9)^(0+256),w
  8696  12C0  00CD               	movwf	((??_IPV4_Packet+14)^(0+256)+1)
  8697  12C1  0848               	movf	(??_IPV4_Packet+10)^(0+256),w
  8698  12C2  00CE               	movwf	((??_IPV4_Packet+14)^(0+256)+2)
  8699  12C3  01CF               	clrf	((??_IPV4_Packet+14)^(0+256)+3)
  8700  12C4  084C               	movf	(??_IPV4_Packet+14)^(0+256),w
  8701  12C5  04C2               	iorwf	(??_IPV4_Packet+4)^(0+256),f
  8702  12C6  084D               	movf	(??_IPV4_Packet+15)^(0+256),w
  8703  12C7  04C3               	iorwf	((??_IPV4_Packet+4)^(0+256)+1),f
  8704  12C8  084E               	movf	(??_IPV4_Packet+16)^(0+256),w
  8705  12C9  04C4               	iorwf	((??_IPV4_Packet+4)^(0+256)+2),f
  8706  12CA  084F               	movf	(??_IPV4_Packet+17)^(0+256),w
  8707  12CB  04C5               	iorwf	((??_IPV4_Packet+4)^(0+256)+3),f
  8708  12CC  083E               	movf	??_IPV4_Packet^(0+256),w
  8709  12CD  0442               	iorwf	(??_IPV4_Packet+4)^(0+256),w
  8710  12CE  0023               	movlb	3	; select bank3
  8711  12CF  00C5               	movwf	(_ipv4Header^(0+384)+12)
  8712  12D0  0022               	movlb	2	; select bank2
  8713  12D1  083F               	movf	(??_IPV4_Packet+1)^(0+256),w
  8714  12D2  0443               	iorwf	(??_IPV4_Packet+5)^(0+256),w
  8715  12D3  0023               	movlb	3	; select bank3
  8716  12D4  00C6               	movwf	((_ipv4Header+1)^(0+384)+12)
  8717  12D5  0022               	movlb	2	; select bank2
  8718  12D6  0840               	movf	(??_IPV4_Packet+2)^(0+256),w
  8719  12D7  0444               	iorwf	(??_IPV4_Packet+6)^(0+256),w
  8720  12D8  0023               	movlb	3	; select bank3
  8721  12D9  00C7               	movwf	((_ipv4Header+2)^(0+384)+12)
  8722  12DA  0022               	movlb	2	; select bank2
  8723  12DB  0841               	movf	(??_IPV4_Packet+3)^(0+256),w
  8724  12DC  0445               	iorwf	(??_IPV4_Packet+7)^(0+256),w
  8725  12DD  0023               	movlb	3	; select bank3
  8726  12DE  00C8               	movwf	((_ipv4Header+3)^(0+384)+12)
  8727                           
  8728                           ;ipv4.c: 129: if(ipv4Header.srcIpAddress == 0xFFFFFFFF)
  8729  12DF  0A45               	incf	(_ipv4Header^(0+384)+12),w
  8730  12E0  1D03               	skipz
  8731  12E1  2AEA               	goto	l8106
  8732  12E2  0A46               	incf	((_ipv4Header+1)^(0+384)+12),w
  8733  12E3  1D03               	skipz
  8734  12E4  2AEA               	goto	l8106
  8735  12E5  0A47               	incf	((_ipv4Header+2)^(0+384)+12),w
  8736  12E6  1903               	btfsc	3,2
  8737  12E7  0A48               	incf	((_ipv4Header+3)^(0+384)+12),w
  8738  12E8  1903               	btfsc	3,2
  8739  12E9  0008               	return
  8740  12EA                     l8106:
  8741                           
  8742                           ;ipv4.c: 133: if(ipv4Header.dstIpAddress == (ip_database_info.ipv4_myAddress) || (ipv4He
      +                          ader.dstIpAddress == 0)||;ipv4.c: 134: ((ipv4Header.dstIpAddress == 0xFFFFFFFF);ipv4.c: 
      +                          135: ||((ipv4Header.dstIpAddress|0XFF000000 == 0xFFFFFFFF && (((ip_database_info.ipv4_my
      +                          Address)|0x00FFFFFF)== ipv4Header.dstIpAddress)));ipv4.c: 136: ||((ipv4Header.dstIpAddre
      +                          ss|0xFFFF0000 == 0xFFFFFFFF && (((ip_database_info.ipv4_myAddress)|0x0000FFFF)== ipv4Hea
      +                          der.dstIpAddress)));ipv4.c: 137: ||((ipv4Header.dstIpAddress|0xFFFFFF00 == 0xFFFFFFFF &&
      +                           (((ip_database_info.ipv4_myAddress)|0X000000FF)== ipv4Header.dstIpAddress))))
  8743  12EA  0024               	movlb	4	; select bank4
  8744  12EB  0823               	movf	(_ip_database_info+3)^(0+512),w
  8745  12EC  0023               	movlb	3	; select bank3
  8746  12ED  064C               	xorwf	((_ipv4Header+3)^(0+384)+16),w
  8747  12EE  1D03               	skipz
  8748  12EF  2B00               	goto	u7325
  8749  12F0  0024               	movlb	4	; select bank4
  8750  12F1  0822               	movf	(_ip_database_info+2)^(0+512),w
  8751  12F2  0023               	movlb	3	; select bank3
  8752  12F3  064B               	xorwf	((_ipv4Header+2)^(0+384)+16),w
  8753  12F4  1D03               	skipz
  8754  12F5  2B00               	goto	u7325
  8755  12F6  0024               	movlb	4	; select bank4
  8756  12F7  0821               	movf	(_ip_database_info+1)^(0+512),w
  8757  12F8  0023               	movlb	3	; select bank3
  8758  12F9  064A               	xorwf	((_ipv4Header+1)^(0+384)+16),w
  8759  12FA  1D03               	skipz
  8760  12FB  2B00               	goto	u7325
  8761  12FC  0024               	movlb	4	; select bank4
  8762  12FD  0820               	movf	_ip_database_info^(0+512),w
  8763  12FE  0023               	movlb	3	; select bank3
  8764  12FF  0649               	xorwf	(_ipv4Header^(0+384)+16),w
  8765  1300                     u7325:
  8766  1300  1903               	skipnz
  8767  1301  2BB4               	goto	l8126
  8768  1302  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8769  1303  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  8770  1304  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  8771  1305  0449               	iorwf	(_ipv4Header^(0+384)+16),w
  8772  1306  1903               	skipnz
  8773  1307  2BB4               	goto	l8126
  8774  1308  0A49               	incf	(_ipv4Header^(0+384)+16),w
  8775  1309  1D03               	skipz
  8776  130A  2B13               	goto	l8112
  8777  130B  0A4A               	incf	((_ipv4Header+1)^(0+384)+16),w
  8778  130C  1D03               	skipz
  8779  130D  2B13               	goto	l8112
  8780  130E  0A4B               	incf	((_ipv4Header+2)^(0+384)+16),w
  8781  130F  1903               	btfsc	3,2
  8782  1310  0A4C               	incf	((_ipv4Header+3)^(0+384)+16),w
  8783  1311  1903               	btfsc	3,2
  8784  1312  2BB4               	goto	l8126
  8785  1313                     l8112:
  8786  1313  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8787  1314  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  8788  1315  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  8789  1316  0449               	iorwf	(_ipv4Header^(0+384)+16),w
  8790  1317  1903               	skipnz
  8791  1318  2B45               	goto	l8116
  8792  1319  30FF               	movlw	255
  8793  131A  0024               	movlb	4	; select bank4
  8794  131B  0420               	iorwf	_ip_database_info^(0+512),w
  8795  131C  0022               	movlb	2	; select bank2
  8796  131D  00BE               	movwf	??_IPV4_Packet^(0+256)
  8797  131E  30FF               	movlw	255
  8798  131F  0024               	movlb	4	; select bank4
  8799  1320  0421               	iorwf	(_ip_database_info+1)^(0+512),w
  8800  1321  0022               	movlb	2	; select bank2
  8801  1322  00BF               	movwf	(??_IPV4_Packet^(0+256)+1)
  8802  1323  30FF               	movlw	255
  8803  1324  0024               	movlb	4	; select bank4
  8804  1325  0422               	iorwf	(_ip_database_info+2)^(0+512),w
  8805  1326  0022               	movlb	2	; select bank2
  8806  1327  00C0               	movwf	(??_IPV4_Packet^(0+256)+2)
  8807  1328  3000               	movlw	0
  8808  1329  0024               	movlb	4	; select bank4
  8809  132A  0423               	iorwf	(_ip_database_info+3)^(0+512),w
  8810  132B  0022               	movlb	2	; select bank2
  8811  132C  00C1               	movwf	(??_IPV4_Packet^(0+256)+3)
  8812  132D  0023               	movlb	3	; select bank3
  8813  132E  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8814  132F  0022               	movlb	2	; select bank2
  8815  1330  0641               	xorwf	(??_IPV4_Packet+3)^(0+256),w
  8816  1331  1D03               	skipz
  8817  1332  2B43               	goto	u7365
  8818  1333  0023               	movlb	3	; select bank3
  8819  1334  084B               	movf	((_ipv4Header+2)^(0+384)+16),w
  8820  1335  0022               	movlb	2	; select bank2
  8821  1336  0640               	xorwf	(??_IPV4_Packet+2)^(0+256),w
  8822  1337  1D03               	skipz
  8823  1338  2B43               	goto	u7365
  8824  1339  0023               	movlb	3	; select bank3
  8825  133A  084A               	movf	((_ipv4Header+1)^(0+384)+16),w
  8826  133B  0022               	movlb	2	; select bank2
  8827  133C  063F               	xorwf	(??_IPV4_Packet+1)^(0+256),w
  8828  133D  1D03               	skipz
  8829  133E  2B43               	goto	u7365
  8830  133F  0023               	movlb	3	; select bank3
  8831  1340  0849               	movf	(_ipv4Header^(0+384)+16),w
  8832  1341  0022               	movlb	2	; select bank2
  8833  1342  063E               	xorwf	??_IPV4_Packet^(0+256),w
  8834  1343                     u7365:
  8835  1343  1903               	skipnz
  8836  1344  2BB4               	goto	l8126
  8837  1345                     l8116:
  8838  1345  0023               	movlb	3	; select bank3
  8839  1346  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8840  1347  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  8841  1348  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  8842  1349  0449               	iorwf	(_ipv4Header^(0+384)+16),w
  8843  134A  1903               	skipnz
  8844  134B  2B78               	goto	l8120
  8845  134C  30FF               	movlw	255
  8846  134D  0024               	movlb	4	; select bank4
  8847  134E  0420               	iorwf	_ip_database_info^(0+512),w
  8848  134F  0022               	movlb	2	; select bank2
  8849  1350  00BE               	movwf	??_IPV4_Packet^(0+256)
  8850  1351  30FF               	movlw	255
  8851  1352  0024               	movlb	4	; select bank4
  8852  1353  0421               	iorwf	(_ip_database_info+1)^(0+512),w
  8853  1354  0022               	movlb	2	; select bank2
  8854  1355  00BF               	movwf	(??_IPV4_Packet^(0+256)+1)
  8855  1356  3000               	movlw	0
  8856  1357  0024               	movlb	4	; select bank4
  8857  1358  0422               	iorwf	(_ip_database_info+2)^(0+512),w
  8858  1359  0022               	movlb	2	; select bank2
  8859  135A  00C0               	movwf	(??_IPV4_Packet^(0+256)+2)
  8860  135B  3000               	movlw	0
  8861  135C  0024               	movlb	4	; select bank4
  8862  135D  0423               	iorwf	(_ip_database_info+3)^(0+512),w
  8863  135E  0022               	movlb	2	; select bank2
  8864  135F  00C1               	movwf	(??_IPV4_Packet^(0+256)+3)
  8865  1360  0023               	movlb	3	; select bank3
  8866  1361  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8867  1362  0022               	movlb	2	; select bank2
  8868  1363  0641               	xorwf	(??_IPV4_Packet+3)^(0+256),w
  8869  1364  1D03               	skipz
  8870  1365  2B76               	goto	u7385
  8871  1366  0023               	movlb	3	; select bank3
  8872  1367  084B               	movf	((_ipv4Header+2)^(0+384)+16),w
  8873  1368  0022               	movlb	2	; select bank2
  8874  1369  0640               	xorwf	(??_IPV4_Packet+2)^(0+256),w
  8875  136A  1D03               	skipz
  8876  136B  2B76               	goto	u7385
  8877  136C  0023               	movlb	3	; select bank3
  8878  136D  084A               	movf	((_ipv4Header+1)^(0+384)+16),w
  8879  136E  0022               	movlb	2	; select bank2
  8880  136F  063F               	xorwf	(??_IPV4_Packet+1)^(0+256),w
  8881  1370  1D03               	skipz
  8882  1371  2B76               	goto	u7385
  8883  1372  0023               	movlb	3	; select bank3
  8884  1373  0849               	movf	(_ipv4Header^(0+384)+16),w
  8885  1374  0022               	movlb	2	; select bank2
  8886  1375  063E               	xorwf	??_IPV4_Packet^(0+256),w
  8887  1376                     u7385:
  8888  1376  1903               	skipnz
  8889  1377  2BB4               	goto	l8126
  8890  1378                     l8120:
  8891  1378  0023               	movlb	3	; select bank3
  8892  1379  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8893  137A  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  8894  137B  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  8895  137C  0449               	iorwf	(_ipv4Header^(0+384)+16),w
  8896  137D  1903               	skipnz
  8897  137E  2BAB               	goto	l8124
  8898  137F  30FF               	movlw	255
  8899  1380  0024               	movlb	4	; select bank4
  8900  1381  0420               	iorwf	_ip_database_info^(0+512),w
  8901  1382  0022               	movlb	2	; select bank2
  8902  1383  00BE               	movwf	??_IPV4_Packet^(0+256)
  8903  1384  3000               	movlw	0
  8904  1385  0024               	movlb	4	; select bank4
  8905  1386  0421               	iorwf	(_ip_database_info+1)^(0+512),w
  8906  1387  0022               	movlb	2	; select bank2
  8907  1388  00BF               	movwf	(??_IPV4_Packet^(0+256)+1)
  8908  1389  3000               	movlw	0
  8909  138A  0024               	movlb	4	; select bank4
  8910  138B  0422               	iorwf	(_ip_database_info+2)^(0+512),w
  8911  138C  0022               	movlb	2	; select bank2
  8912  138D  00C0               	movwf	(??_IPV4_Packet^(0+256)+2)
  8913  138E  3000               	movlw	0
  8914  138F  0024               	movlb	4	; select bank4
  8915  1390  0423               	iorwf	(_ip_database_info+3)^(0+512),w
  8916  1391  0022               	movlb	2	; select bank2
  8917  1392  00C1               	movwf	(??_IPV4_Packet^(0+256)+3)
  8918  1393  0023               	movlb	3	; select bank3
  8919  1394  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  8920  1395  0022               	movlb	2	; select bank2
  8921  1396  0641               	xorwf	(??_IPV4_Packet+3)^(0+256),w
  8922  1397  1D03               	skipz
  8923  1398  2BA9               	goto	u7405
  8924  1399  0023               	movlb	3	; select bank3
  8925  139A  084B               	movf	((_ipv4Header+2)^(0+384)+16),w
  8926  139B  0022               	movlb	2	; select bank2
  8927  139C  0640               	xorwf	(??_IPV4_Packet+2)^(0+256),w
  8928  139D  1D03               	skipz
  8929  139E  2BA9               	goto	u7405
  8930  139F  0023               	movlb	3	; select bank3
  8931  13A0  084A               	movf	((_ipv4Header+1)^(0+384)+16),w
  8932  13A1  0022               	movlb	2	; select bank2
  8933  13A2  063F               	xorwf	(??_IPV4_Packet+1)^(0+256),w
  8934  13A3  1D03               	skipz
  8935  13A4  2BA9               	goto	u7405
  8936  13A5  0023               	movlb	3	; select bank3
  8937  13A6  0849               	movf	(_ipv4Header^(0+384)+16),w
  8938  13A7  0022               	movlb	2	; select bank2
  8939  13A8  063E               	xorwf	??_IPV4_Packet^(0+256),w
  8940  13A9                     u7405:
  8941  13A9  1903               	skipnz
  8942  13AA  2BB4               	goto	l8126
  8943  13AB                     l8124:
  8944  13AB  0023               	movlb	3	; select bank3
  8945  13AC  0349               	decf	(_ipv4Header^(0+384)+16),w
  8946  13AD  30E0               	movlw	224
  8947  13AE  1903               	skipnz
  8948  13AF  064C               	xorwf	((_ipv4Header+3)^(0+384)+16),w
  8949  13B0  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  8950  13B1  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  8951  13B2  1D03               	btfss	3,2
  8952  13B3  0008               	return
  8953  13B4                     l8126:
  8954                           
  8955                           ;ipv4.c: 139: {;ipv4.c: 140: ipv4Header.length = ((((uint16_t)ipv4Header.length & (uint1
      +                          6_t)0xFF00) >> 8) | (((uint16_t)ipv4Header.length & (uint16_t)0x00FF) << 8));
  8956  13B4  30FF               	movlw	255
  8957  13B5  0023               	movlb	3	; select bank3
  8958  13B6  053B               	andwf	(_ipv4Header^(0+384)+2),w
  8959  13B7  0022               	movlb	2	; select bank2
  8960  13B8  00BE               	movwf	??_IPV4_Packet^(0+256)
  8961  13B9  3000               	movlw	0
  8962  13BA  0023               	movlb	3	; select bank3
  8963  13BB  053C               	andwf	((_ipv4Header+1)^(0+384)+2),w
  8964  13BC  0022               	movlb	2	; select bank2
  8965  13BD  00BF               	movwf	(??_IPV4_Packet+1)^(0+256)
  8966  13BE  083E               	movf	??_IPV4_Packet^(0+256),w
  8967  13BF  00BF               	movwf	(??_IPV4_Packet^(0+256)+1)
  8968  13C0  01BE               	clrf	??_IPV4_Packet^(0+256)
  8969  13C1  3002               	movlw	2
  8970  13C2  3EB9               	addlw	(low (_ipv4Header| (0+256)))& (0+255)
  8971  13C3  0086               	movwf	6
  8972  13C4  3001               	movlw	1	; select bank3/4
  8973  13C5  0087               	movwf	7
  8974  13C6  3F40               	moviw [0]fsr1
  8975  13C7  00C1               	movwf	(??_IPV4_Packet+3)^(0+256)
  8976  13C8  3F41               	moviw [1]fsr1
  8977  13C9  00C2               	movwf	((??_IPV4_Packet+3)^(0+256)+1)
  8978  13CA  0842               	movf	((??_IPV4_Packet+3)^(0+256)+1),w
  8979  13CB  00C1               	movwf	(??_IPV4_Packet+3)^(0+256)
  8980  13CC  01C2               	clrf	((??_IPV4_Packet+3)^(0+256)+1)
  8981  13CD  30FF               	movlw	255
  8982  13CE  0541               	andwf	(??_IPV4_Packet+3)^(0+256),w
  8983  13CF  00C3               	movwf	(??_IPV4_Packet+5)^(0+256)
  8984  13D0  3000               	movlw	0
  8985  13D1  0542               	andwf	(??_IPV4_Packet+4)^(0+256),w
  8986  13D2  00C4               	movwf	(??_IPV4_Packet+6)^(0+256)
  8987  13D3  083E               	movf	??_IPV4_Packet^(0+256),w
  8988  13D4  0443               	iorwf	(??_IPV4_Packet+5)^(0+256),w
  8989  13D5  0023               	movlb	3	; select bank3
  8990  13D6  00BB               	movwf	(_ipv4Header^(0+384)+2)
  8991  13D7  0022               	movlb	2	; select bank2
  8992  13D8  083F               	movf	(??_IPV4_Packet+1)^(0+256),w
  8993  13D9  0444               	iorwf	(??_IPV4_Packet+6)^(0+256),w
  8994  13DA  0023               	movlb	3	; select bank3
  8995  13DB  00BC               	movwf	((_ipv4Header+1)^(0+384)+2)
  8996                           
  8997                           ;ipv4.c: 142: hdrLen = (uint8_t)(ipv4Header.ihl << 2);
  8998  13DC  0839               	movf	_ipv4Header^(0+384),w
  8999  13DD  390F               	andlw	15
  9000  13DE  0022               	movlb	2	; select bank2
  9001  13DF  00BE               	movwf	??_IPV4_Packet^(0+256)
  9002  13E0  3001               	movlw	1
  9003  13E1                     u7425:
  9004  13E1  35BE               	lslf	??_IPV4_Packet^(0+256),f
  9005  13E2  3EFF               	addlw	-1
  9006  13E3  1D03               	skipz
  9007  13E4  2BE1               	goto	u7425
  9008  13E5  353E               	lslf	??_IPV4_Packet^(0+256),w
  9009  13E6  00BF               	movwf	(??_IPV4_Packet+1)^(0+256)
  9010  13E7  083F               	movf	(??_IPV4_Packet+1)^(0+256),w
  9011  13E8  00D0               	movwf	IPV4_Packet@hdrLen^(0+256)
  9012                           
  9013                           ;ipv4.c: 144: if(ipv4Header.ihl < 5)
  9014  13E9  0023               	movlb	3	; select bank3
  9015  13EA  0839               	movf	_ipv4Header^(0+384),w
  9016  13EB  390F               	andlw	15
  9017  13EC  0022               	movlb	2	; select bank2
  9018  13ED  00BE               	movwf	??_IPV4_Packet^(0+256)
  9019  13EE  3005               	movlw	5
  9020  13EF  023E               	subwf	??_IPV4_Packet^(0+256),w
  9021  13F0  1C03               	btfss	3,0
  9022  13F1  0008               	return
  9023                           
  9024                           ;ipv4.c: 147: if (ipv4Header.ihl > 5)
  9025  13F2  0023               	movlb	3	; select bank3
  9026  13F3  0839               	movf	_ipv4Header^(0+384),w
  9027  13F4  390F               	andlw	15
  9028  13F5  0022               	movlb	2	; select bank2
  9029  13F6  00BE               	movwf	??_IPV4_Packet^(0+256)
  9030  13F7  3006               	movlw	6
  9031  13F8  023E               	subwf	??_IPV4_Packet^(0+256),w
  9032  13F9  1C03               	skipc
  9033  13FA  2CAD               	goto	l8172
  9034                           
  9035                           ;ipv4.c: 148: {;ipv4.c: 150: ETH_Dump((uint16_t)(hdrLen - sizeof(ipv4Header_t)));
  9036  13FB  0850               	movf	IPV4_Packet@hdrLen^(0+256),w
  9037  13FC  3EEC               	addlw	236
  9038  13FD  0020               	movlb	0	; select bank0
  9039  13FE  00A0               	movwf	ETH_Dump@length
  9040  13FF  30FF               	movlw	255
  9041  1400  1803               	skipnc
  9042  1401  3000               	movlw	0
  9043  1402  00A1               	movwf	ETH_Dump@length+1
  9044  1403  31AE  2628         	fcall	_ETH_Dump
  9045  1405  0008               	return
  9046  1406                     l8140:
  9047                           
  9048                           ;ipv4.c: 157: {;ipv4.c: 159: if((ipv4Header.dstIpAddress == 0))
  9049  1406  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  9050  1407  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  9051  1408  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  9052  1409  0449               	iorwf	(_ipv4Header^(0+384)+16),w
  9053  140A  1903               	btfsc	3,2
  9054  140B  0008               	return
  9055                           
  9056                           ;ipv4.c: 162: };ipv4.c: 163: length = ipv4Header.length - hdrLen;
  9057  140C  0022               	movlb	2	; select bank2
  9058  140D  0850               	movf	IPV4_Packet@hdrLen^(0+256),w
  9059  140E  00BE               	movwf	??_IPV4_Packet^(0+256)
  9060  140F  01BF               	clrf	(??_IPV4_Packet^(0+256)+1)
  9061  1410  083E               	movf	??_IPV4_Packet^(0+256),w
  9062  1411  0023               	movlb	3	; select bank3
  9063  1412  023B               	subwf	(_ipv4Header^(0+384)+2),w
  9064  1413  0022               	movlb	2	; select bank2
  9065  1414  00D1               	movwf	IPV4_Packet@length^(0+256)
  9066  1415  083F               	movf	(??_IPV4_Packet+1)^(0+256),w
  9067  1416  0023               	movlb	3	; select bank3
  9068  1417  3B3C               	subwfb	((_ipv4Header+1)^(0+384)+2),w
  9069  1418  0022               	movlb	2	; select bank2
  9070  1419  00D2               	movwf	(IPV4_Packet@length+1)^(0+256)
  9071                           
  9072                           ;ipv4.c: 164: cksm = ETH_RxComputeChecksum(length, 0);
  9073  141A  0852               	movf	(IPV4_Packet@length+1)^(0+256),w
  9074  141B  0020               	movlb	0	; select bank0
  9075  141C  00A9               	movwf	ETH_RxComputeChecksum@len+1
  9076  141D  0022               	movlb	2	; select bank2
  9077  141E  0851               	movf	IPV4_Packet@length^(0+256),w
  9078  141F  0020               	movlb	0	; select bank0
  9079  1420  00A8               	movwf	ETH_RxComputeChecksum@len
  9080  1421  3000               	movlw	0
  9081  1422  00AA               	movwf	ETH_RxComputeChecksum@seed
  9082  1423  00AB               	movwf	ETH_RxComputeChecksum@seed+1
  9083  1424  31AE  2693  3191   	fcall	_ETH_RxComputeChecksum
  9084  1427  0829               	movf	?_ETH_RxComputeChecksum+1,w
  9085  1428  0022               	movlb	2	; select bank2
  9086  1429  00D4               	movwf	(IPV4_Packet@cksm+1)^(0+256)
  9087  142A  0020               	movlb	0	; select bank0
  9088  142B  0828               	movf	?_ETH_RxComputeChecksum,w
  9089  142C  0022               	movlb	2	; select bank2
  9090  142D  00D3               	movwf	IPV4_Packet@cksm^(0+256)
  9091                           
  9092                           ;ipv4.c: 166: if (cksm == 0)
  9093  142E  0853               	movf	IPV4_Packet@cksm^(0+256),w
  9094  142F  0454               	iorwf	(IPV4_Packet@cksm+1)^(0+256),w
  9095  1430  1D03               	btfss	3,2
  9096  1431  0008               	return
  9097                           
  9098                           ;ipv4.c: 167: {;ipv4.c: 168: ICMP_Receive(&ipv4Header);
  9099  1432  30B9               	movlw	(low (_ipv4Header| (0+256)))& (0+255)
  9100  1433  31A3  23C7         	fcall	_ICMP_Receive
  9101                           
  9102                           ;ipv4.c: 169: }
  9103  1435  0008               	return
  9104  1436                     l8152:
  9105                           
  9106                           ;ipv4.c: 179: length = ipv4Header.length - hdrLen;
  9107  1436  0022               	movlb	2	; select bank2
  9108  1437  0850               	movf	IPV4_Packet@hdrLen^(0+256),w
  9109  1438  00BE               	movwf	??_IPV4_Packet^(0+256)
  9110  1439  01BF               	clrf	(??_IPV4_Packet^(0+256)+1)
  9111  143A  083E               	movf	??_IPV4_Packet^(0+256),w
  9112  143B  0023               	movlb	3	; select bank3
  9113  143C  023B               	subwf	(_ipv4Header^(0+384)+2),w
  9114  143D  0022               	movlb	2	; select bank2
  9115  143E  00D1               	movwf	IPV4_Packet@length^(0+256)
  9116  143F  083F               	movf	(??_IPV4_Packet+1)^(0+256),w
  9117  1440  0023               	movlb	3	; select bank3
  9118  1441  3B3C               	subwfb	((_ipv4Header+1)^(0+384)+2),w
  9119  1442  0022               	movlb	2	; select bank2
  9120  1443  00D2               	movwf	(IPV4_Packet@length+1)^(0+256)
  9121                           
  9122                           ;ipv4.c: 180: cksm = IPV4_PseudoHeaderChecksum(length);
  9123  1444  0852               	movf	(IPV4_Packet@length+1)^(0+256),w
  9124  1445  00F1               	movwf	IPV4_PseudoHeaderChecksum@payloadLen+1
  9125  1446  0851               	movf	IPV4_Packet@length^(0+256),w
  9126  1447  00F0               	movwf	IPV4_PseudoHeaderChecksum@payloadLen
  9127  1448  31A4  24B0  3191   	fcall	_IPV4_PseudoHeaderChecksum
  9128  144B  0871               	movf	?_IPV4_PseudoHeaderChecksum+1,w
  9129  144C  0022               	movlb	2	; select bank2
  9130  144D  00D4               	movwf	(IPV4_Packet@cksm+1)^(0+256)
  9131  144E  0870               	movf	?_IPV4_PseudoHeaderChecksum,w
  9132  144F  00D3               	movwf	IPV4_Packet@cksm^(0+256)
  9133                           
  9134                           ;ipv4.c: 181: cksm = ETH_RxComputeChecksum(length, cksm);
  9135  1450  0852               	movf	(IPV4_Packet@length+1)^(0+256),w
  9136  1451  0020               	movlb	0	; select bank0
  9137  1452  00A9               	movwf	ETH_RxComputeChecksum@len+1
  9138  1453  0022               	movlb	2	; select bank2
  9139  1454  0851               	movf	IPV4_Packet@length^(0+256),w
  9140  1455  0020               	movlb	0	; select bank0
  9141  1456  00A8               	movwf	ETH_RxComputeChecksum@len
  9142  1457  0022               	movlb	2	; select bank2
  9143  1458  0854               	movf	(IPV4_Packet@cksm+1)^(0+256),w
  9144  1459  0020               	movlb	0	; select bank0
  9145  145A  00AB               	movwf	ETH_RxComputeChecksum@seed+1
  9146  145B  0022               	movlb	2	; select bank2
  9147  145C  0853               	movf	IPV4_Packet@cksm^(0+256),w
  9148  145D  0020               	movlb	0	; select bank0
  9149  145E  00AA               	movwf	ETH_RxComputeChecksum@seed
  9150  145F  31AE  2693  3191   	fcall	_ETH_RxComputeChecksum
  9151  1462  0829               	movf	?_ETH_RxComputeChecksum+1,w
  9152  1463  0022               	movlb	2	; select bank2
  9153  1464  00D4               	movwf	(IPV4_Packet@cksm+1)^(0+256)
  9154  1465  0020               	movlb	0	; select bank0
  9155  1466  0828               	movf	?_ETH_RxComputeChecksum,w
  9156  1467  0022               	movlb	2	; select bank2
  9157  1468  00D3               	movwf	IPV4_Packet@cksm^(0+256)
  9158                           
  9159                           ;ipv4.c: 184: if (cksm == 0 && (ipv4Header.dstIpAddress != 0xFFFFFFFF) && (ipv4Header.ds
      +                          tIpAddress != 0))
  9160  1469  0853               	movf	IPV4_Packet@cksm^(0+256),w
  9161  146A  0454               	iorwf	(IPV4_Packet@cksm+1)^(0+256),w
  9162  146B  1D03               	btfss	3,2
  9163  146C  0008               	return
  9164  146D  0023               	movlb	3	; select bank3
  9165  146E  0A49               	incf	(_ipv4Header^(0+384)+16),w
  9166  146F  1D03               	skipz
  9167  1470  2C79               	goto	l8162
  9168  1471  0A4A               	incf	((_ipv4Header+1)^(0+384)+16),w
  9169  1472  1D03               	skipz
  9170  1473  2C79               	goto	l8162
  9171  1474  0A4B               	incf	((_ipv4Header+2)^(0+384)+16),w
  9172  1475  1903               	btfsc	3,2
  9173  1476  0A4C               	incf	((_ipv4Header+3)^(0+384)+16),w
  9174  1477  1903               	btfsc	3,2
  9175  1478  0008               	return
  9176  1479                     l8162:
  9177  1479  084C               	movf	((_ipv4Header+3)^(0+384)+16),w
  9178  147A  044B               	iorwf	((_ipv4Header+2)^(0+384)+16),w
  9179  147B  044A               	iorwf	((_ipv4Header+1)^(0+384)+16),w
  9180  147C  0449               	iorwf	(_ipv4Header^(0+384)+16),w
  9181  147D  1903               	skipnz
  9182  147E  0008               	return
  9183                           
  9184                           ;ipv4.c: 185: {;ipv4.c: 186: remoteIpv4Address = ipv4Header.srcIpAddress;
  9185  147F  300C               	movlw	12
  9186  1480  3EB9               	addlw	(low (_ipv4Header| (0+256)))& (0+255)
  9187  1481  0086               	movwf	6
  9188  1482  3001               	movlw	1	; select bank3/4
  9189  1483  0087               	movwf	7
  9190  1484  3F40               	moviw [0]fsr1
  9191  1485  0024               	movlb	4	; select bank4
  9192  1486  00D2               	movwf	_remoteIpv4Address^(0+512)
  9193  1487  3F41               	moviw [1]fsr1
  9194  1488  00D3               	movwf	(_remoteIpv4Address+1)^(0+512)
  9195  1489  3F42               	moviw [2]fsr1
  9196  148A  00D4               	movwf	(_remoteIpv4Address+2)^(0+512)
  9197  148B  3F43               	moviw [3]fsr1
  9198  148C  00D5               	movwf	(_remoteIpv4Address+3)^(0+512)
  9199                           
  9200                           ;ipv4.c: 187: TCP_Recv(remoteIpv4Address, length);
  9201  148D  0855               	movf	(_remoteIpv4Address+3)^(0+512),w
  9202  148E  0022               	movlb	2	; select bank2
  9203  148F  00A3               	movwf	(TCP_Recv@remoteAddress+3)^(0+256)
  9204  1490  0024               	movlb	4	; select bank4
  9205  1491  0854               	movf	(_remoteIpv4Address+2)^(0+512),w
  9206  1492  0022               	movlb	2	; select bank2
  9207  1493  00A2               	movwf	(TCP_Recv@remoteAddress+2)^(0+256)
  9208  1494  0024               	movlb	4	; select bank4
  9209  1495  0853               	movf	(_remoteIpv4Address+1)^(0+512),w
  9210  1496  0022               	movlb	2	; select bank2
  9211  1497  00A1               	movwf	(TCP_Recv@remoteAddress+1)^(0+256)
  9212  1498  0024               	movlb	4	; select bank4
  9213  1499  0852               	movf	_remoteIpv4Address^(0+512),w
  9214  149A  0022               	movlb	2	; select bank2
  9215  149B  00A0               	movwf	TCP_Recv@remoteAddress^(0+256)
  9216  149C  0852               	movf	(IPV4_Packet@length+1)^(0+256),w
  9217  149D  00A5               	movwf	(TCP_Recv@length+1)^(0+256)
  9218  149E  0851               	movf	IPV4_Packet@length^(0+256),w
  9219  149F  00A4               	movwf	TCP_Recv@length^(0+256)
  9220  14A0  3188  2013         	fcall	_TCP_Recv
  9221  14A2  0008               	return
  9222  14A3                     l8168:
  9223                           
  9224                           ;ipv4.c: 191: ETH_Dump(ipv4Header.length);
  9225  14A3  083C               	movf	((_ipv4Header+1)^(0+384)+2),w
  9226  14A4  0020               	movlb	0	; select bank0
  9227  14A5  00A1               	movwf	ETH_Dump@length+1
  9228  14A6  0023               	movlb	3	; select bank3
  9229  14A7  083B               	movf	(_ipv4Header^(0+384)+2),w
  9230  14A8  0020               	movlb	0	; select bank0
  9231  14A9  00A0               	movwf	ETH_Dump@length
  9232  14AA  31AE  2628         	fcall	_ETH_Dump
  9233                           
  9234                           ;ipv4.c: 192: break;
  9235  14AC  0008               	return
  9236  14AD                     l8172:
  9237  14AD  0023               	movlb	3	; select bank3
  9238  14AE  0842               	movf	(_ipv4Header^(0+384)+9),w
  9239                           
  9240                           ; Switch size 1, requested type "simple"
  9241                           ; Number of cases is 2, Range of values is 1 to 6
  9242                           ; switch strategies available:
  9243                           ; Name         Instructions Cycles
  9244                           ; simple_byte            7     4 (average)
  9245                           ; direct_byte           21     9 (fixed)
  9246                           ; jumptable            263     9 (fixed)
  9247                           ;	Chosen strategy is simple_byte
  9248  14AF  3A01               	xorlw	1	; case 1
  9249  14B0  1903               	skipnz
  9250  14B1  2C06               	goto	l8140
  9251  14B2  3A07               	xorlw	7	; case 6
  9252  14B3  1903               	skipnz
  9253  14B4  2C36               	goto	l8152
  9254  14B5  2CA3               	goto	l8168
  9255  14B6  0008               	return
  9256  14B7                     __end_of_IPV4_Packet:
  9257                           
  9258                           	psect	text28
  9259  0813                     __ptext28:	
  9260 ;; *************** function _TCP_Recv *****************
  9261 ;; Defined at:
  9262 ;;		line 486 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  remoteAddres    4    0[BANK2 ] unsigned long 
  9265 ;;  length          2    4[BANK2 ] unsigned int 
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  tcbPtr          1   79[BANK1 ] PTR struct .
  9268 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
  9269 ;;  count           1   78[BANK1 ] char 
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 1F/2
  9276 ;;		On exit  : 1C/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9279 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9280 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9281 ;;      Temps:          0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9282 ;;      Totals:         0       0       2      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9283 ;;Total ram usage:       32 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:   12
  9286 ;; This function calls:
  9287 ;;		_ETH_ReadBlock
  9288 ;;		_TCP_FiniteStateMachine
  9289 ;;		_TCP_ParseTCPOptions
  9290 ;; This function is called by:
  9291 ;;		_IPV4_Packet
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _TCP_Recv
  9297  0813                     _TCP_Recv:
  9298                           
  9299                           ;tcpv4.c: 488: tcpTCB_t *tcbPtr;;tcpv4.c: 489: socklistsize_t count = 0;
  9300                           
  9301                           ;incstack = 0
  9302                           ; Regs used in _TCP_Recv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9303  0813  0021               	movlb	1	; select bank1
  9304  0814  01EE               	clrf	TCP_Recv@count^(0+128)
  9305                           
  9306                           ;tcpv4.c: 493: receivedRemoteAddress = 0;
  9307  0815  3000               	movlw	0
  9308  0816  0023               	movlb	3	; select bank3
  9309  0817  00A3               	movwf	(_receivedRemoteAddress+3)^(0+384)
  9310  0818  3000               	movlw	0
  9311  0819  00A2               	movwf	(_receivedRemoteAddress+2)^(0+384)
  9312  081A  3000               	movlw	0
  9313  081B  00A1               	movwf	(_receivedRemoteAddress+1)^(0+384)
  9314  081C  3000               	movlw	0
  9315  081D  00A0               	movwf	_receivedRemoteAddress^(0+384)
  9316                           
  9317                           ;tcpv4.c: 494: rcvPayloadLen = 0;
  9318  081E  01B0               	clrf	_rcvPayloadLen^(0+384)
  9319  081F  01B1               	clrf	(_rcvPayloadLen+1)^(0+384)
  9320                           
  9321                           ;tcpv4.c: 496: ETH_ReadBlock((char *)&tcpHeader,sizeof(tcpHeader_t));
  9322  0820  30CD               	movlw	low _tcpHeader
  9323  0821  00F1               	movwf	ETH_ReadBlock@buffer
  9324  0822  3001               	movlw	high _tcpHeader
  9325  0823  00F2               	movwf	ETH_ReadBlock@buffer+1
  9326  0824  3014               	movlw	20
  9327  0825  00F3               	movwf	ETH_ReadBlock@length
  9328  0826  3000               	movlw	0
  9329  0827  00F4               	movwf	ETH_ReadBlock@length+1
  9330  0828  31AF  273F  3188   	fcall	_ETH_ReadBlock
  9331                           
  9332                           ;tcpv4.c: 498: currentTCB = (0);
  9333  082B  01EE               	clrf	_currentTCB^(0+256)
  9334                           
  9335                           ;tcpv4.c: 501: if ((tcpHeader.destPort != 0) && (tcpHeader.sourcePort != 0))
  9336  082C  0023               	movlb	3	; select bank3
  9337  082D  084F               	movf	(_tcpHeader^(0+384)+2),w
  9338  082E  0450               	iorwf	((_tcpHeader+1)^(0+384)+2),w
  9339  082F  1903               	btfsc	3,2
  9340  0830  0008               	return
  9341  0831  084D               	movf	_tcpHeader^(0+384),w
  9342  0832  044E               	iorwf	(_tcpHeader+1)^(0+384),w
  9343  0833  1903               	btfsc	3,2
  9344  0834  0008               	return
  9345                           
  9346                           ;tcpv4.c: 502: {;tcpv4.c: 503: tcpHeader.sourcePort = ((((uint16_t)tcpHeader.sourcePort 
      +                          & (uint16_t)0xFF00) >> 8) | (((uint16_t)tcpHeader.sourcePort & (uint16_t)0x00FF) << 8));
  9347  0835  30FF               	movlw	255
  9348  0836  054D               	andwf	_tcpHeader^(0+384),w
  9349  0837  0022               	movlb	2	; select bank2
  9350  0838  00A6               	movwf	??_TCP_Recv^(0+256)
  9351  0839  3000               	movlw	0
  9352  083A  0023               	movlb	3	; select bank3
  9353  083B  054E               	andwf	(_tcpHeader+1)^(0+384),w
  9354  083C  0022               	movlb	2	; select bank2
  9355  083D  00A7               	movwf	(??_TCP_Recv+1)^(0+256)
  9356  083E  0826               	movf	??_TCP_Recv^(0+256),w
  9357  083F  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9358  0840  01A6               	clrf	??_TCP_Recv^(0+256)
  9359  0841  0826               	movf	??_TCP_Recv^(0+256),w
  9360  0842  0023               	movlb	3	; select bank3
  9361  0843  044E               	iorwf	(_tcpHeader^(0+384)+1),w
  9362  0844  00CD               	movwf	_tcpHeader^(0+384)
  9363  0845  0022               	movlb	2	; select bank2
  9364  0846  0827               	movf	(??_TCP_Recv+1)^(0+256),w
  9365  0847  0023               	movlb	3	; select bank3
  9366  0848  00CE               	movwf	(_tcpHeader+1)^(0+384)
  9367                           
  9368                           ;tcpv4.c: 504: tcpHeader.destPort = ((((uint16_t)tcpHeader.destPort & (uint16_t)0xFF00) 
      +                          >> 8) | (((uint16_t)tcpHeader.destPort & (uint16_t)0x00FF) << 8));
  9369  0849  30FF               	movlw	255
  9370  084A  054F               	andwf	(_tcpHeader^(0+384)+2),w
  9371  084B  0022               	movlb	2	; select bank2
  9372  084C  00A6               	movwf	??_TCP_Recv^(0+256)
  9373  084D  3000               	movlw	0
  9374  084E  0023               	movlb	3	; select bank3
  9375  084F  0550               	andwf	((_tcpHeader+1)^(0+384)+2),w
  9376  0850  0022               	movlb	2	; select bank2
  9377  0851  00A7               	movwf	(??_TCP_Recv+1)^(0+256)
  9378  0852  0826               	movf	??_TCP_Recv^(0+256),w
  9379  0853  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9380  0854  01A6               	clrf	??_TCP_Recv^(0+256)
  9381  0855  3002               	movlw	2
  9382  0856  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
  9383  0857  0086               	movwf	6
  9384  0858  3001               	movlw	1	; select bank3/4
  9385  0859  0087               	movwf	7
  9386  085A  3F40               	moviw [0]fsr1
  9387  085B  00A9               	movwf	(??_TCP_Recv+3)^(0+256)
  9388  085C  3F41               	moviw [1]fsr1
  9389  085D  00AA               	movwf	((??_TCP_Recv+3)^(0+256)+1)
  9390  085E  082A               	movf	((??_TCP_Recv+3)^(0+256)+1),w
  9391  085F  00A9               	movwf	(??_TCP_Recv+3)^(0+256)
  9392  0860  01AA               	clrf	((??_TCP_Recv+3)^(0+256)+1)
  9393  0861  30FF               	movlw	255
  9394  0862  0529               	andwf	(??_TCP_Recv+3)^(0+256),w
  9395  0863  00AB               	movwf	(??_TCP_Recv+5)^(0+256)
  9396  0864  3000               	movlw	0
  9397  0865  052A               	andwf	(??_TCP_Recv+4)^(0+256),w
  9398  0866  00AC               	movwf	(??_TCP_Recv+6)^(0+256)
  9399  0867  0826               	movf	??_TCP_Recv^(0+256),w
  9400  0868  042B               	iorwf	(??_TCP_Recv+5)^(0+256),w
  9401  0869  0023               	movlb	3	; select bank3
  9402  086A  00CF               	movwf	(_tcpHeader^(0+384)+2)
  9403  086B  0022               	movlb	2	; select bank2
  9404  086C  0827               	movf	(??_TCP_Recv+1)^(0+256),w
  9405  086D  042C               	iorwf	(??_TCP_Recv+6)^(0+256),w
  9406  086E  0023               	movlb	3	; select bank3
  9407  086F  00D0               	movwf	((_tcpHeader+1)^(0+384)+2)
  9408                           
  9409                           ;tcpv4.c: 507: tcbPtr = tcbList;
  9410  0870  0022               	movlb	2	; select bank2
  9411  0871  086F               	movf	_tcbList^(0+256),w
  9412  0872  00A6               	movwf	??_TCP_Recv^(0+256)
  9413  0873  0826               	movf	??_TCP_Recv^(0+256),w
  9414  0874  0021               	movlb	1	; select bank1
  9415  0875  00EF               	movwf	TCP_Recv@tcbPtr^(0+128)
  9416                           
  9417                           ;tcpv4.c: 508: while((tcbPtr != (0)) && (count < tcbListSize))
  9418  0876  28A5               	goto	l7914
  9419  0877                     l7904:
  9420                           
  9421                           ;tcpv4.c: 509: {;tcpv4.c: 510: if (tcpHeader.destPort == tcbPtr->localPort)
  9422  0877  0021               	movlb	1	; select bank1
  9423  0878  086F               	movf	TCP_Recv@tcbPtr^(0+128),w
  9424  0879  0086               	movwf	6
  9425  087A  3002               	movlw	2	; select bank4/5
  9426  087B  0087               	movwf	7
  9427  087C  3F40               	moviw [0]fsr1
  9428  087D  0022               	movlb	2	; select bank2
  9429  087E  00A6               	movwf	??_TCP_Recv^(0+256)
  9430  087F  3F41               	moviw [1]fsr1
  9431  0880  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9432  0881  0827               	movf	(??_TCP_Recv+1)^(0+256),w
  9433  0882  0023               	movlb	3	; select bank3
  9434  0883  0650               	xorwf	((_tcpHeader+1)^(0+384)+2),w
  9435  0884  1D03               	skipz
  9436  0885  288A               	goto	u6765
  9437  0886  0022               	movlb	2	; select bank2
  9438  0887  0826               	movf	??_TCP_Recv^(0+256),w
  9439  0888  0023               	movlb	3	; select bank3
  9440  0889  064F               	xorwf	(_tcpHeader^(0+384)+2),w
  9441  088A                     u6765:
  9442  088A  1D03               	skipz
  9443  088B  2893               	goto	l7910
  9444                           
  9445                           ;tcpv4.c: 511: {;tcpv4.c: 512: currentTCB = tcbPtr;
  9446  088C  0021               	movlb	1	; select bank1
  9447  088D  086F               	movf	TCP_Recv@tcbPtr^(0+128),w
  9448  088E  0022               	movlb	2	; select bank2
  9449  088F  00A6               	movwf	??_TCP_Recv^(0+256)
  9450  0890  0826               	movf	??_TCP_Recv^(0+256),w
  9451  0891  00EE               	movwf	_currentTCB^(0+256)
  9452                           
  9453                           ;tcpv4.c: 513: break;
  9454  0892  28B3               	goto	l7918
  9455  0893                     l7910:
  9456                           
  9457                           ;tcpv4.c: 515: else;tcpv4.c: 516: {;tcpv4.c: 517: tcbPtr = tcbPtr->nextTCB;
  9458  0893  0021               	movlb	1	; select bank1
  9459  0894  086F               	movf	TCP_Recv@tcbPtr^(0+128),w
  9460  0895  3E2B               	addlw	43
  9461  0896  0086               	movwf	6
  9462  0897  3002               	movlw	2	; select bank4/5
  9463  0898  0087               	movwf	7
  9464  0899  0801               	movf	1,w
  9465  089A  0022               	movlb	2	; select bank2
  9466  089B  00A6               	movwf	??_TCP_Recv^(0+256)
  9467  089C  0826               	movf	??_TCP_Recv^(0+256),w
  9468  089D  0021               	movlb	1	; select bank1
  9469  089E  00EF               	movwf	TCP_Recv@tcbPtr^(0+128)
  9470                           
  9471                           ;tcpv4.c: 518: count ++;
  9472  089F  3001               	movlw	1
  9473  08A0  0022               	movlb	2	; select bank2
  9474  08A1  00A6               	movwf	??_TCP_Recv^(0+256)
  9475  08A2  0826               	movf	??_TCP_Recv^(0+256),w
  9476  08A3  0021               	movlb	1	; select bank1
  9477  08A4  07EE               	addwf	TCP_Recv@count^(0+128),f
  9478  08A5                     l7914:
  9479  08A5  086F               	movf	TCP_Recv@tcbPtr^(0+128),w
  9480  08A6  1903               	btfsc	3,2
  9481  08A7  28B3               	goto	l7918
  9482  08A8  086E               	movf	TCP_Recv@count^(0+128),w
  9483  08A9  3A80               	xorlw	128
  9484  08AA  0022               	movlb	2	; select bank2
  9485  08AB  00A6               	movwf	??_TCP_Recv^(0+256)
  9486  08AC  0023               	movlb	3	; select bank3
  9487  08AD  0836               	movf	_tcbListSize^(0+384),w
  9488  08AE  3A80               	xorlw	128
  9489  08AF  0022               	movlb	2	; select bank2
  9490  08B0  02A6               	subwf	??_TCP_Recv^(0+256),f
  9491  08B1  1C03               	skipc
  9492  08B2  2877               	goto	l7904
  9493  08B3                     l7918:
  9494                           
  9495                           ;tcpv4.c: 519: };tcpv4.c: 520: };tcpv4.c: 522: if (currentTCB != (0))
  9496  08B3  0022               	movlb	2	; select bank2
  9497  08B4  086E               	movf	_currentTCB^(0+256),w
  9498  08B5  1903               	btfsc	3,2
  9499  08B6  0008               	return
  9500                           
  9501                           ;tcpv4.c: 523: {;tcpv4.c: 524: if((tcpHeader.sourcePort == currentTCB->destPort) ||;tcpv
      +                          4.c: 525: (currentTCB->destIP == 0))
  9502  08B7  086E               	movf	_currentTCB^(0+256),w
  9503  08B8  3E06               	addlw	6
  9504  08B9  0086               	movwf	6
  9505  08BA  3002               	movlw	2	; select bank4/5
  9506  08BB  0087               	movwf	7
  9507  08BC  3F40               	moviw [0]fsr1
  9508  08BD  00A6               	movwf	??_TCP_Recv^(0+256)
  9509  08BE  3F41               	moviw [1]fsr1
  9510  08BF  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9511  08C0  0023               	movlb	3	; select bank3
  9512  08C1  084E               	movf	(_tcpHeader+1)^(0+384),w
  9513  08C2  0022               	movlb	2	; select bank2
  9514  08C3  0627               	xorwf	(??_TCP_Recv+1)^(0+256),w
  9515  08C4  1D03               	skipz
  9516  08C5  28CA               	goto	u6805
  9517  08C6  0023               	movlb	3	; select bank3
  9518  08C7  084D               	movf	_tcpHeader^(0+384),w
  9519  08C8  0022               	movlb	2	; select bank2
  9520  08C9  0626               	xorwf	??_TCP_Recv^(0+256),w
  9521  08CA                     u6805:
  9522  08CA  1903               	skipnz
  9523  08CB  28DF               	goto	l7924
  9524  08CC  086E               	movf	_currentTCB^(0+256),w
  9525  08CD  3E02               	addlw	2
  9526  08CE  0086               	movwf	6
  9527  08CF  3002               	movlw	2	; select bank4/5
  9528  08D0  0087               	movwf	7
  9529  08D1  3F40               	moviw [0]fsr1
  9530  08D2  00A6               	movwf	??_TCP_Recv^(0+256)
  9531  08D3  3F41               	moviw [1]fsr1
  9532  08D4  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9533  08D5  3F42               	moviw [2]fsr1
  9534  08D6  00A8               	movwf	(??_TCP_Recv^(0+256)+2)
  9535  08D7  3F43               	moviw [3]fsr1
  9536  08D8  00A9               	movwf	(??_TCP_Recv^(0+256)+3)
  9537  08D9  0829               	movf	(??_TCP_Recv+3)^(0+256),w
  9538  08DA  0428               	iorwf	(??_TCP_Recv+2)^(0+256),w
  9539  08DB  0427               	iorwf	(??_TCP_Recv+1)^(0+256),w
  9540  08DC  0426               	iorwf	??_TCP_Recv^(0+256),w
  9541  08DD  1D03               	skipz
  9542  08DE  0008               	return
  9543  08DF                     l7924:
  9544                           
  9545                           ;tcpv4.c: 526: {;tcpv4.c: 529: receivedRemoteAddress = remoteAddress;
  9546  08DF  0823               	movf	(TCP_Recv@remoteAddress+3)^(0+256),w
  9547  08E0  0023               	movlb	3	; select bank3
  9548  08E1  00A3               	movwf	(_receivedRemoteAddress+3)^(0+384)
  9549  08E2  0022               	movlb	2	; select bank2
  9550  08E3  0822               	movf	(TCP_Recv@remoteAddress+2)^(0+256),w
  9551  08E4  0023               	movlb	3	; select bank3
  9552  08E5  00A2               	movwf	(_receivedRemoteAddress+2)^(0+384)
  9553  08E6  0022               	movlb	2	; select bank2
  9554  08E7  0821               	movf	(TCP_Recv@remoteAddress+1)^(0+256),w
  9555  08E8  0023               	movlb	3	; select bank3
  9556  08E9  00A1               	movwf	(_receivedRemoteAddress+1)^(0+384)
  9557  08EA  0022               	movlb	2	; select bank2
  9558  08EB  0820               	movf	TCP_Recv@remoteAddress^(0+256),w
  9559  08EC  0023               	movlb	3	; select bank3
  9560  08ED  00A0               	movwf	_receivedRemoteAddress^(0+384)
  9561                           
  9562                           ;tcpv4.c: 530: rcvPayloadLen = length - (uint16_t)(tcpHeader.dataOffset << 2);
  9563  08EE  0E59               	swapf	(_tcpHeader^(0+384)+12),w
  9564  08EF  390F               	andlw	15
  9565  08F0  0022               	movlb	2	; select bank2
  9566  08F1  00A6               	movwf	??_TCP_Recv^(0+256)
  9567  08F2  01A7               	clrf	(??_TCP_Recv^(0+256)+1)
  9568  08F3  35A6               	lslf	??_TCP_Recv^(0+256),f
  9569  08F4  0DA7               	rlf	(??_TCP_Recv^(0+256)+1),f
  9570  08F5  35A6               	lslf	??_TCP_Recv^(0+256),f
  9571  08F6  0DA7               	rlf	(??_TCP_Recv^(0+256)+1),f
  9572  08F7  0826               	movf	??_TCP_Recv^(0+256),w
  9573  08F8  0224               	subwf	TCP_Recv@length^(0+256),w
  9574  08F9  0023               	movlb	3	; select bank3
  9575  08FA  00B0               	movwf	_rcvPayloadLen^(0+384)
  9576  08FB  0022               	movlb	2	; select bank2
  9577  08FC  0827               	movf	(??_TCP_Recv+1)^(0+256),w
  9578  08FD  3B25               	subwfb	(TCP_Recv@length+1)^(0+256),w
  9579  08FE  0023               	movlb	3	; select bank3
  9580  08FF  00B1               	movwf	(_rcvPayloadLen+1)^(0+384)
  9581                           
  9582                           ;tcpv4.c: 533: if (TCP_ParseTCPOptions() == 1)
  9583  0900  31A7  273F  3188   	fcall	_TCP_ParseTCPOptions
  9584  0903  3A01               	xorlw	1
  9585  0904  1D03               	skipz
  9586  0905  0008               	return
  9587                           
  9588                           ;tcpv4.c: 534: {;tcpv4.c: 537: if(tcpHeader.syn)
  9589  0906  0023               	movlb	3	; select bank3
  9590  0907  1CDA               	btfss	(_tcpHeader^(0+384)+13),1
  9591  0908  290F               	goto	l229
  9592                           
  9593                           ;tcpv4.c: 538: {;tcpv4.c: 539: if(tcpHeader.ack)
  9594  0909  1E5A               	btfss	(_tcpHeader^(0+384)+13),4
  9595  090A  290D               	goto	l7936
  9596                           
  9597                           ;tcpv4.c: 540: {;tcpv4.c: 541: currentTCB->connectionEvent = RCV_SYNACK;
  9598  090B  3005               	movlw	5
  9599  090C  2922               	goto	L1
  9600  090D                     l7936:	
  9601                           ;tcpv4.c: 542: } else
  9602                           
  9603                           
  9604                           ;tcpv4.c: 543: {;tcpv4.c: 544: currentTCB->connectionEvent = RCV_SYN;
  9605  090D  3003               	movlw	3
  9606  090E  2922               	goto	L1
  9607  090F                     l229:
  9608  090F  1C5A               	btfss	(_tcpHeader^(0+384)+13),0
  9609  0910  2917               	goto	l233
  9610                           
  9611                           ;tcpv4.c: 547: {;tcpv4.c: 548: if(tcpHeader.ack)
  9612  0911  1E5A               	btfss	(_tcpHeader^(0+384)+13),4
  9613  0912  2915               	goto	l7942
  9614                           
  9615                           ;tcpv4.c: 549: {;tcpv4.c: 550: currentTCB->connectionEvent = RCV_FINACK;
  9616  0913  3007               	movlw	7
  9617  0914  2922               	goto	L1
  9618  0915                     l7942:	
  9619                           ;tcpv4.c: 551: } else
  9620                           
  9621                           
  9622                           ;tcpv4.c: 552: {;tcpv4.c: 553: currentTCB->connectionEvent = RCV_FIN;
  9623  0915  3006               	movlw	6
  9624  0916  2922               	goto	L1
  9625  0917                     l233:
  9626  0917  1D5A               	btfss	(_tcpHeader^(0+384)+13),2
  9627  0918  291F               	goto	l237
  9628                           
  9629                           ;tcpv4.c: 556: {;tcpv4.c: 557: if(tcpHeader.ack)
  9630  0919  1E5A               	btfss	(_tcpHeader^(0+384)+13),4
  9631  091A  291D               	goto	l7948
  9632                           
  9633                           ;tcpv4.c: 558: {;tcpv4.c: 559: currentTCB->connectionEvent = RCV_RSTACK;
  9634  091B  300A               	movlw	10
  9635  091C  2922               	goto	L1
  9636  091D                     l7948:	
  9637                           ;tcpv4.c: 560: } else
  9638                           
  9639                           
  9640                           ;tcpv4.c: 561: {;tcpv4.c: 562: currentTCB->connectionEvent = RCV_RST;
  9641  091D  3009               	movlw	9
  9642  091E  2922               	goto	L1
  9643  091F                     l237:
  9644  091F  1E5A               	btfss	(_tcpHeader^(0+384)+13),4
  9645  0920  292B               	goto	l7952
  9646                           
  9647                           ;tcpv4.c: 565: {;tcpv4.c: 566: currentTCB->connectionEvent = RCV_ACK;
  9648  0921  3004               	movlw	4
  9649  0922                     L1:
  9650  0922  0022               	movlb	2	; select bank2
  9651  0923  00A6               	movwf	??_TCP_Recv^(0+256)
  9652  0924  086E               	movf	_currentTCB^(0+256),w
  9653  0925  3E2A               	addlw	42
  9654  0926  0086               	movwf	6
  9655  0927  3002               	movlw	2	; select bank4/5
  9656  0928  0087               	movwf	7
  9657  0929  0826               	movf	??_TCP_Recv^(0+256),w
  9658  092A  0081               	movwf	1
  9659  092B                     l7952:	
  9660                           ;tcpv4.c: 567: }
  9661                           
  9662                           
  9663                           ;tcpv4.c: 570: };tcpv4.c: 572: tcpHeader.ackNumber = ((((uint32_t)tcpHeader.ackNumber&(u
      +                          int32_t)0xff000000) >> 24) | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x00ff0000) >> 8)
      +                           | (((uint32_t)tcpHeader.ackNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHeader.a
      +                          ckNumber&(uint32_
  9664  092B  3008               	movlw	8
  9665  092C  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
  9666  092D  0086               	movwf	6
  9667  092E  3001               	movlw	1	; select bank3/4
  9668  092F  0087               	movwf	7
  9669  0930  30FF               	movlw	255
  9670  0931  0501               	andwf	1,w
  9671  0932  0022               	movlb	2	; select bank2
  9672  0933  00A6               	movwf	??_TCP_Recv^(0+256)
  9673  0934  3141               	addfsr 1,1
  9674  0935  3000               	movlw	0
  9675  0936  0501               	andwf	1,w
  9676  0937  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9677  0938  3141               	addfsr 1,1
  9678  0939  3000               	movlw	0
  9679  093A  0501               	andwf	1,w
  9680  093B  00A8               	movwf	(??_TCP_Recv^(0+256)+2)
  9681  093C  3141               	addfsr 1,1
  9682  093D  3000               	movlw	0
  9683  093E  0501               	andwf	1,w
  9684  093F  00A9               	movwf	(??_TCP_Recv^(0+256)+3)
  9685  0940  3018               	movlw	24
  9686  0941                     u6905:
  9687  0941  35A6               	lslf	??_TCP_Recv^(0+256),f
  9688  0942  0DA7               	rlf	(??_TCP_Recv^(0+256)+1),f
  9689  0943  0DA8               	rlf	(??_TCP_Recv^(0+256)+2),f
  9690  0944  0DA9               	rlf	(??_TCP_Recv^(0+256)+3),f
  9691  0945  0B89               	decfsz	9,f
  9692  0946  2941               	goto	u6905
  9693  0947  3008               	movlw	8
  9694  0948  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
  9695  0949  0086               	movwf	6
  9696  094A  3001               	movlw	1	; select bank3/4
  9697  094B  0087               	movwf	7
  9698  094C  3000               	movlw	0
  9699  094D  0501               	andwf	1,w
  9700  094E  00AA               	movwf	(??_TCP_Recv+4)^(0+256)
  9701  094F  3141               	addfsr 1,1
  9702  0950  30FF               	movlw	255
  9703  0951  0501               	andwf	1,w
  9704  0952  00AB               	movwf	((??_TCP_Recv+4)^(0+256)+1)
  9705  0953  3141               	addfsr 1,1
  9706  0954  3000               	movlw	0
  9707  0955  0501               	andwf	1,w
  9708  0956  00AC               	movwf	((??_TCP_Recv+4)^(0+256)+2)
  9709  0957  3141               	addfsr 1,1
  9710  0958  3000               	movlw	0
  9711  0959  0501               	andwf	1,w
  9712  095A  00AD               	movwf	((??_TCP_Recv+4)^(0+256)+3)
  9713  095B  3008               	movlw	8
  9714  095C                     u6915:
  9715  095C  35AA               	lslf	(??_TCP_Recv+4)^(0+256),f
  9716  095D  0DAB               	rlf	((??_TCP_Recv+4)^(0+256)+1),f
  9717  095E  0DAC               	rlf	((??_TCP_Recv+4)^(0+256)+2),f
  9718  095F  0DAD               	rlf	((??_TCP_Recv+4)^(0+256)+3),f
  9719  0960  0B89               	decfsz	9,f
  9720  0961  295C               	goto	u6915
  9721  0962  3000               	movlw	0
  9722  0963  00AE               	movwf	(??_TCP_Recv+8)^(0+256)
  9723  0964  30FF               	movlw	255
  9724  0965  00AF               	movwf	((??_TCP_Recv+8)^(0+256)+1)
  9725  0966  3000               	movlw	0
  9726  0967  00B0               	movwf	((??_TCP_Recv+8)^(0+256)+2)
  9727  0968  3000               	movlw	0
  9728  0969  00B1               	movwf	((??_TCP_Recv+8)^(0+256)+3)
  9729  096A  0023               	movlb	3	; select bank3
  9730  096B  0855               	movf	(_tcpHeader^(0+384)+8),w
  9731  096C  0022               	movlb	2	; select bank2
  9732  096D  00B2               	movwf	(??_TCP_Recv+12)^(0+256)
  9733  096E  0023               	movlb	3	; select bank3
  9734  096F  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
  9735  0970  0022               	movlb	2	; select bank2
  9736  0971  00B3               	movwf	((??_TCP_Recv+12)^(0+256)+1)
  9737  0972  0023               	movlb	3	; select bank3
  9738  0973  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
  9739  0974  0022               	movlb	2	; select bank2
  9740  0975  00B4               	movwf	((??_TCP_Recv+12)^(0+256)+2)
  9741  0976  0023               	movlb	3	; select bank3
  9742  0977  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
  9743  0978  0022               	movlb	2	; select bank2
  9744  0979  00B5               	movwf	((??_TCP_Recv+12)^(0+256)+3)
  9745  097A  3008               	movlw	8
  9746  097B                     u6925:
  9747  097B  36B5               	lsrf	((??_TCP_Recv+12)^(0+256)+3),f
  9748  097C  0CB4               	rrf	((??_TCP_Recv+12)^(0+256)+2),f
  9749  097D  0CB3               	rrf	((??_TCP_Recv+12)^(0+256)+1),f
  9750  097E  0CB2               	rrf	(??_TCP_Recv+12)^(0+256),f
  9751  097F  0B89               	decfsz	9,f
  9752  0980  297B               	goto	u6925
  9753  0981  0832               	movf	(??_TCP_Recv+12)^(0+256),w
  9754  0982  05AE               	andwf	(??_TCP_Recv+8)^(0+256),f
  9755  0983  0833               	movf	(??_TCP_Recv+13)^(0+256),w
  9756  0984  05AF               	andwf	((??_TCP_Recv+8)^(0+256)+1),f
  9757  0985  0834               	movf	(??_TCP_Recv+14)^(0+256),w
  9758  0986  05B0               	andwf	((??_TCP_Recv+8)^(0+256)+2),f
  9759  0987  0835               	movf	(??_TCP_Recv+15)^(0+256),w
  9760  0988  05B1               	andwf	((??_TCP_Recv+8)^(0+256)+3),f
  9761  0989  30FF               	movlw	255
  9762  098A  00B6               	movwf	(??_TCP_Recv+16)^(0+256)
  9763  098B  3000               	movlw	0
  9764  098C  00B7               	movwf	((??_TCP_Recv+16)^(0+256)+1)
  9765  098D  3000               	movlw	0
  9766  098E  00B8               	movwf	((??_TCP_Recv+16)^(0+256)+2)
  9767  098F  3000               	movlw	0
  9768  0990  00B9               	movwf	((??_TCP_Recv+16)^(0+256)+3)
  9769  0991  0023               	movlb	3	; select bank3
  9770  0992  0855               	movf	(_tcpHeader^(0+384)+8),w
  9771  0993  0022               	movlb	2	; select bank2
  9772  0994  00BA               	movwf	(??_TCP_Recv+20)^(0+256)
  9773  0995  0023               	movlb	3	; select bank3
  9774  0996  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
  9775  0997  0022               	movlb	2	; select bank2
  9776  0998  00BB               	movwf	((??_TCP_Recv+20)^(0+256)+1)
  9777  0999  0023               	movlb	3	; select bank3
  9778  099A  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
  9779  099B  0022               	movlb	2	; select bank2
  9780  099C  00BC               	movwf	((??_TCP_Recv+20)^(0+256)+2)
  9781  099D  0023               	movlb	3	; select bank3
  9782  099E  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
  9783  099F  0022               	movlb	2	; select bank2
  9784  09A0  00BD               	movwf	((??_TCP_Recv+20)^(0+256)+3)
  9785  09A1  3018               	movlw	24
  9786  09A2                     u6935:
  9787  09A2  36BD               	lsrf	((??_TCP_Recv+20)^(0+256)+3),f
  9788  09A3  0CBC               	rrf	((??_TCP_Recv+20)^(0+256)+2),f
  9789  09A4  0CBB               	rrf	((??_TCP_Recv+20)^(0+256)+1),f
  9790  09A5  0CBA               	rrf	(??_TCP_Recv+20)^(0+256),f
  9791  09A6  0B89               	decfsz	9,f
  9792  09A7  29A2               	goto	u6935
  9793  09A8  083A               	movf	(??_TCP_Recv+20)^(0+256),w
  9794  09A9  05B6               	andwf	(??_TCP_Recv+16)^(0+256),f
  9795  09AA  083B               	movf	(??_TCP_Recv+21)^(0+256),w
  9796  09AB  05B7               	andwf	((??_TCP_Recv+16)^(0+256)+1),f
  9797  09AC  083C               	movf	(??_TCP_Recv+22)^(0+256),w
  9798  09AD  05B8               	andwf	((??_TCP_Recv+16)^(0+256)+2),f
  9799  09AE  083D               	movf	(??_TCP_Recv+23)^(0+256),w
  9800  09AF  05B9               	andwf	((??_TCP_Recv+16)^(0+256)+3),f
  9801  09B0  0836               	movf	(??_TCP_Recv+16)^(0+256),w
  9802  09B1  04AE               	iorwf	(??_TCP_Recv+8)^(0+256),f
  9803  09B2  0837               	movf	(??_TCP_Recv+17)^(0+256),w
  9804  09B3  04AF               	iorwf	((??_TCP_Recv+8)^(0+256)+1),f
  9805  09B4  0838               	movf	(??_TCP_Recv+18)^(0+256),w
  9806  09B5  04B0               	iorwf	((??_TCP_Recv+8)^(0+256)+2),f
  9807  09B6  0839               	movf	(??_TCP_Recv+19)^(0+256),w
  9808  09B7  04B1               	iorwf	((??_TCP_Recv+8)^(0+256)+3),f
  9809  09B8  082E               	movf	(??_TCP_Recv+8)^(0+256),w
  9810  09B9  04AA               	iorwf	(??_TCP_Recv+4)^(0+256),f
  9811  09BA  082F               	movf	(??_TCP_Recv+9)^(0+256),w
  9812  09BB  04AB               	iorwf	((??_TCP_Recv+4)^(0+256)+1),f
  9813  09BC  0830               	movf	(??_TCP_Recv+10)^(0+256),w
  9814  09BD  04AC               	iorwf	((??_TCP_Recv+4)^(0+256)+2),f
  9815  09BE  0831               	movf	(??_TCP_Recv+11)^(0+256),w
  9816  09BF  04AD               	iorwf	((??_TCP_Recv+4)^(0+256)+3),f
  9817  09C0  082A               	movf	(??_TCP_Recv+4)^(0+256),w
  9818  09C1  04A6               	iorwf	??_TCP_Recv^(0+256),f
  9819  09C2  082B               	movf	(??_TCP_Recv+5)^(0+256),w
  9820  09C3  04A7               	iorwf	(??_TCP_Recv^(0+256)+1),f
  9821  09C4  082C               	movf	(??_TCP_Recv+6)^(0+256),w
  9822  09C5  04A8               	iorwf	(??_TCP_Recv^(0+256)+2),f
  9823  09C6  082D               	movf	(??_TCP_Recv+7)^(0+256),w
  9824  09C7  04A9               	iorwf	(??_TCP_Recv^(0+256)+3),f
  9825  09C8  0829               	movf	(??_TCP_Recv+3)^(0+256),w
  9826  09C9  0023               	movlb	3	; select bank3
  9827  09CA  00D8               	movwf	((_tcpHeader+3)^(0+384)+8)
  9828  09CB  0022               	movlb	2	; select bank2
  9829  09CC  0828               	movf	(??_TCP_Recv+2)^(0+256),w
  9830  09CD  0023               	movlb	3	; select bank3
  9831  09CE  00D7               	movwf	((_tcpHeader+2)^(0+384)+8)
  9832  09CF  0022               	movlb	2	; select bank2
  9833  09D0  0827               	movf	(??_TCP_Recv+1)^(0+256),w
  9834  09D1  0023               	movlb	3	; select bank3
  9835  09D2  00D6               	movwf	((_tcpHeader+1)^(0+384)+8)
  9836  09D3  0022               	movlb	2	; select bank2
  9837  09D4  0826               	movf	??_TCP_Recv^(0+256),w
  9838  09D5  0023               	movlb	3	; select bank3
  9839  09D6  00D5               	movwf	(_tcpHeader^(0+384)+8)
  9840                           
  9841                           ;tcpv4.c: 573: tcpHeader.sequenceNumber = ((((uint32_t)tcpHeader.sequenceNumber&(uint32_
      +                          t)0xff000000) >> 24) | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x00ff0000) >> 8) 
      +                          | (((uint32_t)tcpHeader.sequenceNumber&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcpHead
      +                          e
  9842  09D7  3004               	movlw	4
  9843  09D8  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
  9844  09D9  0086               	movwf	6
  9845  09DA  3001               	movlw	1	; select bank3/4
  9846  09DB  0087               	movwf	7
  9847  09DC  30FF               	movlw	255
  9848  09DD  0501               	andwf	1,w
  9849  09DE  0022               	movlb	2	; select bank2
  9850  09DF  00A6               	movwf	??_TCP_Recv^(0+256)
  9851  09E0  3141               	addfsr 1,1
  9852  09E1  3000               	movlw	0
  9853  09E2  0501               	andwf	1,w
  9854  09E3  00A7               	movwf	(??_TCP_Recv^(0+256)+1)
  9855  09E4  3141               	addfsr 1,1
  9856  09E5  3000               	movlw	0
  9857  09E6  0501               	andwf	1,w
  9858  09E7  00A8               	movwf	(??_TCP_Recv^(0+256)+2)
  9859  09E8  3141               	addfsr 1,1
  9860  09E9  3000               	movlw	0
  9861  09EA  0501               	andwf	1,w
  9862  09EB  00A9               	movwf	(??_TCP_Recv^(0+256)+3)
  9863  09EC  3018               	movlw	24
  9864  09ED                     u6945:
  9865  09ED  35A6               	lslf	??_TCP_Recv^(0+256),f
  9866  09EE  0DA7               	rlf	(??_TCP_Recv^(0+256)+1),f
  9867  09EF  0DA8               	rlf	(??_TCP_Recv^(0+256)+2),f
  9868  09F0  0DA9               	rlf	(??_TCP_Recv^(0+256)+3),f
  9869  09F1  0B89               	decfsz	9,f
  9870  09F2  29ED               	goto	u6945
  9871  09F3  3004               	movlw	4
  9872  09F4  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
  9873  09F5  0086               	movwf	6
  9874  09F6  3001               	movlw	1	; select bank3/4
  9875  09F7  0087               	movwf	7
  9876  09F8  3000               	movlw	0
  9877  09F9  0501               	andwf	1,w
  9878  09FA  00AA               	movwf	(??_TCP_Recv+4)^(0+256)
  9879  09FB  3141               	addfsr 1,1
  9880  09FC  30FF               	movlw	255
  9881  09FD  0501               	andwf	1,w
  9882  09FE  00AB               	movwf	((??_TCP_Recv+4)^(0+256)+1)
  9883  09FF  3141               	addfsr 1,1
  9884  0A00  3000               	movlw	0
  9885  0A01  0501               	andwf	1,w
  9886  0A02  00AC               	movwf	((??_TCP_Recv+4)^(0+256)+2)
  9887  0A03  3141               	addfsr 1,1
  9888  0A04  3000               	movlw	0
  9889  0A05  0501               	andwf	1,w
  9890  0A06  00AD               	movwf	((??_TCP_Recv+4)^(0+256)+3)
  9891  0A07  3008               	movlw	8
  9892  0A08                     u6955:
  9893  0A08  35AA               	lslf	(??_TCP_Recv+4)^(0+256),f
  9894  0A09  0DAB               	rlf	((??_TCP_Recv+4)^(0+256)+1),f
  9895  0A0A  0DAC               	rlf	((??_TCP_Recv+4)^(0+256)+2),f
  9896  0A0B  0DAD               	rlf	((??_TCP_Recv+4)^(0+256)+3),f
  9897  0A0C  0B89               	decfsz	9,f
  9898  0A0D  2A08               	goto	u6955
  9899  0A0E  3000               	movlw	0
  9900  0A0F  00AE               	movwf	(??_TCP_Recv+8)^(0+256)
  9901  0A10  30FF               	movlw	255
  9902  0A11  00AF               	movwf	((??_TCP_Recv+8)^(0+256)+1)
  9903  0A12  3000               	movlw	0
  9904  0A13  00B0               	movwf	((??_TCP_Recv+8)^(0+256)+2)
  9905  0A14  3000               	movlw	0
  9906  0A15  00B1               	movwf	((??_TCP_Recv+8)^(0+256)+3)
  9907  0A16  0023               	movlb	3	; select bank3
  9908  0A17  0851               	movf	(_tcpHeader^(0+384)+4),w
  9909  0A18  0022               	movlb	2	; select bank2
  9910  0A19  00B2               	movwf	(??_TCP_Recv+12)^(0+256)
  9911  0A1A  0023               	movlb	3	; select bank3
  9912  0A1B  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
  9913  0A1C  0022               	movlb	2	; select bank2
  9914  0A1D  00B3               	movwf	((??_TCP_Recv+12)^(0+256)+1)
  9915  0A1E  0023               	movlb	3	; select bank3
  9916  0A1F  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
  9917  0A20  0022               	movlb	2	; select bank2
  9918  0A21  00B4               	movwf	((??_TCP_Recv+12)^(0+256)+2)
  9919  0A22  0023               	movlb	3	; select bank3
  9920  0A23  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
  9921  0A24  0022               	movlb	2	; select bank2
  9922  0A25  00B5               	movwf	((??_TCP_Recv+12)^(0+256)+3)
  9923  0A26  3008               	movlw	8
  9924  0A27                     u6965:
  9925  0A27  36B5               	lsrf	((??_TCP_Recv+12)^(0+256)+3),f
  9926  0A28  0CB4               	rrf	((??_TCP_Recv+12)^(0+256)+2),f
  9927  0A29  0CB3               	rrf	((??_TCP_Recv+12)^(0+256)+1),f
  9928  0A2A  0CB2               	rrf	(??_TCP_Recv+12)^(0+256),f
  9929  0A2B  0B89               	decfsz	9,f
  9930  0A2C  2A27               	goto	u6965
  9931  0A2D  0832               	movf	(??_TCP_Recv+12)^(0+256),w
  9932  0A2E  05AE               	andwf	(??_TCP_Recv+8)^(0+256),f
  9933  0A2F  0833               	movf	(??_TCP_Recv+13)^(0+256),w
  9934  0A30  05AF               	andwf	((??_TCP_Recv+8)^(0+256)+1),f
  9935  0A31  0834               	movf	(??_TCP_Recv+14)^(0+256),w
  9936  0A32  05B0               	andwf	((??_TCP_Recv+8)^(0+256)+2),f
  9937  0A33  0835               	movf	(??_TCP_Recv+15)^(0+256),w
  9938  0A34  05B1               	andwf	((??_TCP_Recv+8)^(0+256)+3),f
  9939  0A35  30FF               	movlw	255
  9940  0A36  00B6               	movwf	(??_TCP_Recv+16)^(0+256)
  9941  0A37  3000               	movlw	0
  9942  0A38  00B7               	movwf	((??_TCP_Recv+16)^(0+256)+1)
  9943  0A39  3000               	movlw	0
  9944  0A3A  00B8               	movwf	((??_TCP_Recv+16)^(0+256)+2)
  9945  0A3B  3000               	movlw	0
  9946  0A3C  00B9               	movwf	((??_TCP_Recv+16)^(0+256)+3)
  9947  0A3D  0023               	movlb	3	; select bank3
  9948  0A3E  0851               	movf	(_tcpHeader^(0+384)+4),w
  9949  0A3F  0022               	movlb	2	; select bank2
  9950  0A40  00BA               	movwf	(??_TCP_Recv+20)^(0+256)
  9951  0A41  0023               	movlb	3	; select bank3
  9952  0A42  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
  9953  0A43  0022               	movlb	2	; select bank2
  9954  0A44  00BB               	movwf	((??_TCP_Recv+20)^(0+256)+1)
  9955  0A45  0023               	movlb	3	; select bank3
  9956  0A46  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
  9957  0A47  0022               	movlb	2	; select bank2
  9958  0A48  00BC               	movwf	((??_TCP_Recv+20)^(0+256)+2)
  9959  0A49  0023               	movlb	3	; select bank3
  9960  0A4A  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
  9961  0A4B  0022               	movlb	2	; select bank2
  9962  0A4C  00BD               	movwf	((??_TCP_Recv+20)^(0+256)+3)
  9963  0A4D  3018               	movlw	24
  9964  0A4E                     u6975:
  9965  0A4E  36BD               	lsrf	((??_TCP_Recv+20)^(0+256)+3),f
  9966  0A4F  0CBC               	rrf	((??_TCP_Recv+20)^(0+256)+2),f
  9967  0A50  0CBB               	rrf	((??_TCP_Recv+20)^(0+256)+1),f
  9968  0A51  0CBA               	rrf	(??_TCP_Recv+20)^(0+256),f
  9969  0A52  0B89               	decfsz	9,f
  9970  0A53  2A4E               	goto	u6975
  9971  0A54  083A               	movf	(??_TCP_Recv+20)^(0+256),w
  9972  0A55  05B6               	andwf	(??_TCP_Recv+16)^(0+256),f
  9973  0A56  083B               	movf	(??_TCP_Recv+21)^(0+256),w
  9974  0A57  05B7               	andwf	((??_TCP_Recv+16)^(0+256)+1),f
  9975  0A58  083C               	movf	(??_TCP_Recv+22)^(0+256),w
  9976  0A59  05B8               	andwf	((??_TCP_Recv+16)^(0+256)+2),f
  9977  0A5A  083D               	movf	(??_TCP_Recv+23)^(0+256),w
  9978  0A5B  05B9               	andwf	((??_TCP_Recv+16)^(0+256)+3),f
  9979  0A5C  0836               	movf	(??_TCP_Recv+16)^(0+256),w
  9980  0A5D  04AE               	iorwf	(??_TCP_Recv+8)^(0+256),f
  9981  0A5E  0837               	movf	(??_TCP_Recv+17)^(0+256),w
  9982  0A5F  04AF               	iorwf	((??_TCP_Recv+8)^(0+256)+1),f
  9983  0A60  0838               	movf	(??_TCP_Recv+18)^(0+256),w
  9984  0A61  04B0               	iorwf	((??_TCP_Recv+8)^(0+256)+2),f
  9985  0A62  0839               	movf	(??_TCP_Recv+19)^(0+256),w
  9986  0A63  04B1               	iorwf	((??_TCP_Recv+8)^(0+256)+3),f
  9987  0A64  082E               	movf	(??_TCP_Recv+8)^(0+256),w
  9988  0A65  04AA               	iorwf	(??_TCP_Recv+4)^(0+256),f
  9989  0A66  082F               	movf	(??_TCP_Recv+9)^(0+256),w
  9990  0A67  04AB               	iorwf	((??_TCP_Recv+4)^(0+256)+1),f
  9991  0A68  0830               	movf	(??_TCP_Recv+10)^(0+256),w
  9992  0A69  04AC               	iorwf	((??_TCP_Recv+4)^(0+256)+2),f
  9993  0A6A  0831               	movf	(??_TCP_Recv+11)^(0+256),w
  9994  0A6B  04AD               	iorwf	((??_TCP_Recv+4)^(0+256)+3),f
  9995  0A6C  082A               	movf	(??_TCP_Recv+4)^(0+256),w
  9996  0A6D  04A6               	iorwf	??_TCP_Recv^(0+256),f
  9997  0A6E  082B               	movf	(??_TCP_Recv+5)^(0+256),w
  9998  0A6F  04A7               	iorwf	(??_TCP_Recv^(0+256)+1),f
  9999  0A70  082C               	movf	(??_TCP_Recv+6)^(0+256),w
 10000  0A71  04A8               	iorwf	(??_TCP_Recv^(0+256)+2),f
 10001  0A72  082D               	movf	(??_TCP_Recv+7)^(0+256),w
 10002  0A73  04A9               	iorwf	(??_TCP_Recv^(0+256)+3),f
 10003  0A74  0829               	movf	(??_TCP_Recv+3)^(0+256),w
 10004  0A75  0023               	movlb	3	; select bank3
 10005  0A76  00D4               	movwf	((_tcpHeader+3)^(0+384)+4)
 10006  0A77  0022               	movlb	2	; select bank2
 10007  0A78  0828               	movf	(??_TCP_Recv+2)^(0+256),w
 10008  0A79  0023               	movlb	3	; select bank3
 10009  0A7A  00D3               	movwf	((_tcpHeader+2)^(0+384)+4)
 10010  0A7B  0022               	movlb	2	; select bank2
 10011  0A7C  0827               	movf	(??_TCP_Recv+1)^(0+256),w
 10012  0A7D  0023               	movlb	3	; select bank3
 10013  0A7E  00D2               	movwf	((_tcpHeader+1)^(0+384)+4)
 10014  0A7F  0022               	movlb	2	; select bank2
 10015  0A80  0826               	movf	??_TCP_Recv^(0+256),w
 10016  0A81  0023               	movlb	3	; select bank3
 10017  0A82  00D1               	movwf	(_tcpHeader^(0+384)+4)
 10018                           
 10019                           ;tcpv4.c: 575: TCP_FiniteStateMachine();
 10020  0A83  318A  2286         	fcall	_TCP_FiniteStateMachine
 10021                           
 10022                           ;tcpv4.c: 576: }else
 10023  0A85  0008               	return
 10024  0A86                     __end_of_TCP_Recv:
 10025                           
 10026                           	psect	text29
 10027  273F                     __ptext29:	
 10028 ;; *************** function _TCP_ParseTCPOptions *****************
 10029 ;; Defined at:
 10030 ;;		line 362 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;		None
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;  tcpOptionsSi    2    8[BANK0 ] unsigned int 
 10035 ;;  opt             1    7[BANK0 ] unsigned char 
 10036 ;;  ret             1    6[BANK0 ] unsigned char 
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  1    wreg      unsigned char 
 10039 ;; Registers used:
 10040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10041 ;; Tracked objects:
 10042 ;;		On entry : 1F/3
 10043 ;;		On exit  : 1F/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10049 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10050 ;;Total ram usage:        6 bytes
 10051 ;; Hardware stack levels used:    1
 10052 ;; Hardware stack levels required when called:    7
 10053 ;; This function calls:
 10054 ;;		_ETH_Dump
 10055 ;;		_ETH_Read16
 10056 ;;		_ETH_Read8
 10057 ;; This function is called by:
 10058 ;;		_TCP_Recv
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           
 10063                           ;psect for function _TCP_ParseTCPOptions
 10064  273F                     _TCP_ParseTCPOptions:
 10065                           
 10066                           ;tcpv4.c: 364: uint8_t opt;;tcpv4.c: 365: uint16_t tcpOptionsSize;;tcpv4.c: 366: bool re
      +                          t;;tcpv4.c: 368: ret = 0;
 10067                           
 10068                           ;incstack = 0
 10069                           ; Regs used in _TCP_ParseTCPOptions: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10070  273F  0020               	movlb	0	; select bank0
 10071  2740  01A6               	clrf	TCP_ParseTCPOptions@ret
 10072                           
 10073                           ;tcpv4.c: 370: tcpOptionsSize = (uint16_t)((tcpHeader.dataOffset << 2) - sizeof(tcpHeade
      +                          r_t));
 10074  2741  0023               	movlb	3	; select bank3
 10075  2742  0E59               	swapf	(_tcpHeader^(0+384)+12),w
 10076  2743  390F               	andlw	15
 10077  2744  0020               	movlb	0	; select bank0
 10078  2745  00A4               	movwf	??_TCP_ParseTCPOptions
 10079  2746  01A5               	clrf	??_TCP_ParseTCPOptions+1
 10080  2747  35A4               	lslf	??_TCP_ParseTCPOptions,f
 10081  2748  0DA5               	rlf	??_TCP_ParseTCPOptions+1,f
 10082  2749  35A4               	lslf	??_TCP_ParseTCPOptions,f
 10083  274A  0DA5               	rlf	??_TCP_ParseTCPOptions+1,f
 10084  274B  0824               	movf	??_TCP_ParseTCPOptions,w
 10085  274C  3EEC               	addlw	236
 10086  274D  00A8               	movwf	TCP_ParseTCPOptions@tcpOptionsSize
 10087  274E  30FF               	movlw	255
 10088  274F  3D25               	addwfc	??_TCP_ParseTCPOptions+1,w
 10089  2750  00A9               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1
 10090                           
 10091                           ;tcpv4.c: 372: if (tcpOptionsSize > 0)
 10092  2751  0828               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10093  2752  0429               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10094  2753  1903               	btfsc	3,2
 10095  2754  2FFB               	goto	l5496
 10096                           
 10097                           ;tcpv4.c: 373: {;tcpv4.c: 376: tcpMss = 536;
 10098  2755  3018               	movlw	24
 10099  2756  0023               	movlb	3	; select bank3
 10100  2757  00E5               	movwf	_tcpMss^(0+384)
 10101  2758  3002               	movlw	2
 10102  2759  00E6               	movwf	(_tcpMss^(0+384)+1)
 10103                           
 10104                           ;tcpv4.c: 378: if(tcpHeader.syn)
 10105  275A  18DA               	btfsc	(_tcpHeader^(0+384)+13),1
 10106  275B  2FE8               	goto	l5492
 10107  275C  2FF4               	goto	l5494
 10108  275D                     l5438:
 10109                           
 10110                           ;tcpv4.c: 382: {;tcpv4.c: 383: opt = ETH_Read8();
 10111  275D  31AA  2218  31A7   	fcall	_ETH_Read8
 10112  2760  0020               	movlb	0	; select bank0
 10113  2761  00A4               	movwf	??_TCP_ParseTCPOptions
 10114  2762  0824               	movf	??_TCP_ParseTCPOptions,w
 10115  2763  00A7               	movwf	TCP_ParseTCPOptions@opt
 10116                           
 10117                           ;tcpv4.c: 384: switch (opt)
 10118  2764  2FDD               	goto	l5490
 10119  2765                     l5440:
 10120                           
 10121                           ;tcpv4.c: 388: if (tcpOptionsSize)
 10122  2765  0828               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10123  2766  0429               	iorwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10124  2767  1903               	btfsc	3,2
 10125  2768  2F73               	goto	l5446
 10126                           
 10127                           ;tcpv4.c: 389: {;tcpv4.c: 391: ETH_Dump(tcpOptionsSize);
 10128  2769  0829               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10129  276A  00A1               	movwf	ETH_Dump@length+1
 10130  276B  0828               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10131  276C  00A0               	movwf	ETH_Dump@length
 10132  276D  31AE  2628  31A7   	fcall	_ETH_Dump
 10133                           
 10134                           ;tcpv4.c: 392: tcpOptionsSize = 0;
 10135  2770  0020               	movlb	0	; select bank0
 10136  2771  01A8               	clrf	TCP_ParseTCPOptions@tcpOptionsSize
 10137  2772  01A9               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1
 10138  2773                     l5446:
 10139                           
 10140                           ;tcpv4.c: 393: };tcpv4.c: 394: ret = 1;
 10141  2773  0020               	movlb	0	; select bank0
 10142  2774  01A6               	clrf	TCP_ParseTCPOptions@ret
 10143  2775  0AA6               	incf	TCP_ParseTCPOptions@ret,f
 10144                           
 10145                           ;tcpv4.c: 395: break;
 10146  2776  2FE8               	goto	l5492
 10147  2777                     l5448:
 10148                           
 10149                           ;tcpv4.c: 400: if (tcpOptionsSize >= 3)
 10150  2777  3000               	movlw	0
 10151  2778  0229               	subwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10152  2779  3003               	movlw	3
 10153  277A  1903               	skipnz
 10154  277B  0228               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10155  277C  1C03               	skipc
 10156  277D  2FA5               	goto	l5464
 10157                           
 10158                           ;tcpv4.c: 401: {;tcpv4.c: 402: opt = ETH_Read8();
 10159  277E  31AA  2218  31A7   	fcall	_ETH_Read8
 10160  2781  0020               	movlb	0	; select bank0
 10161  2782  00A4               	movwf	??_TCP_ParseTCPOptions
 10162  2783  0824               	movf	??_TCP_ParseTCPOptions,w
 10163  2784  00A7               	movwf	TCP_ParseTCPOptions@opt
 10164                           
 10165                           ;tcpv4.c: 403: if (opt == 0x04)
 10166  2785  3004               	movlw	4
 10167  2786  0627               	xorwf	TCP_ParseTCPOptions@opt,w
 10168  2787  1D03               	btfss	3,2
 10169  2788  2FA5               	goto	l5464
 10170                           
 10171                           ;tcpv4.c: 404: {;tcpv4.c: 406: tcpMss = ETH_Read16();
 10172  2789  31AC  2401  31A7   	fcall	_ETH_Read16
 10173  278C  0872               	movf	?_ETH_Read16+1,w
 10174  278D  0023               	movlb	3	; select bank3
 10175  278E  00E6               	movwf	(_tcpMss+1)^(0+384)
 10176  278F  0871               	movf	?_ETH_Read16,w
 10177  2790  00E5               	movwf	_tcpMss^(0+384)
 10178                           
 10179                           ;tcpv4.c: 408: tcpOptionsSize = tcpOptionsSize - 3;
 10180  2791  0020               	movlb	0	; select bank0
 10181  2792  0828               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10182  2793  3EFD               	addlw	253
 10183  2794  00A8               	movwf	TCP_ParseTCPOptions@tcpOptionsSize
 10184  2795  30FF               	movlw	255
 10185  2796  3D29               	addwfc	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10186  2797  00A9               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1
 10187                           
 10188                           ;tcpv4.c: 411: if (tcpMss > 1460u)
 10189  2798  3005               	movlw	5
 10190  2799  0023               	movlb	3	; select bank3
 10191  279A  0266               	subwf	(_tcpMss+1)^(0+384),w
 10192  279B  30B5               	movlw	181
 10193  279C  1903               	skipnz
 10194  279D  0265               	subwf	_tcpMss^(0+384),w
 10195  279E  1C03               	skipc
 10196  279F  2F73               	goto	l5446
 10197                           
 10198                           ;tcpv4.c: 412: {;tcpv4.c: 413: tcpMss = 1460u;
 10199  27A0  30B4               	movlw	180
 10200  27A1  00E5               	movwf	_tcpMss^(0+384)
 10201  27A2  3005               	movlw	5
 10202  27A3  00E6               	movwf	(_tcpMss^(0+384)+1)
 10203  27A4  2F73               	goto	l5446
 10204  27A5                     l5464:
 10205                           
 10206                           ;tcpv4.c: 418: {;tcpv4.c: 421: tcpOptionsSize = 0;
 10207  27A5  01A8               	clrf	TCP_ParseTCPOptions@tcpOptionsSize
 10208  27A6  01A9               	clrf	TCP_ParseTCPOptions@tcpOptionsSize+1
 10209                           
 10210                           ;tcpv4.c: 422: ret = 0;
 10211  27A7  01A6               	clrf	TCP_ParseTCPOptions@ret
 10212  27A8  2FE8               	goto	l5492
 10213  27A9                     l5468:
 10214                           
 10215                           ;tcpv4.c: 432: opt = ETH_Read8();
 10216  27A9  31AA  2218  31A7   	fcall	_ETH_Read8
 10217  27AC  0020               	movlb	0	; select bank0
 10218  27AD  00A4               	movwf	??_TCP_ParseTCPOptions
 10219  27AE  0824               	movf	??_TCP_ParseTCPOptions,w
 10220  27AF  00A7               	movwf	TCP_ParseTCPOptions@opt
 10221                           
 10222                           ;tcpv4.c: 433: tcpOptionsSize--;
 10223  27B0  3001               	movlw	1
 10224  27B1  02A8               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f
 10225  27B2  3000               	movlw	0
 10226  27B3  3BA9               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f
 10227                           
 10228                           ;tcpv4.c: 435: if (opt > 1)
 10229  27B4  3002               	movlw	2
 10230  27B5  0227               	subwf	TCP_ParseTCPOptions@opt,w
 10231  27B6  1C03               	skipc
 10232  27B7  2FA5               	goto	l5464
 10233                           
 10234                           ;tcpv4.c: 436: {;tcpv4.c: 438: opt = opt - 2;
 10235  27B8  0827               	movf	TCP_ParseTCPOptions@opt,w
 10236  27B9  3EFE               	addlw	254
 10237  27BA  00A4               	movwf	??_TCP_ParseTCPOptions
 10238  27BB  0824               	movf	??_TCP_ParseTCPOptions,w
 10239  27BC  00A7               	movwf	TCP_ParseTCPOptions@opt
 10240                           
 10241                           ;tcpv4.c: 439: if (opt <= tcpOptionsSize)
 10242  27BD  0827               	movf	TCP_ParseTCPOptions@opt,w
 10243  27BE  00A4               	movwf	??_TCP_ParseTCPOptions
 10244  27BF  01A5               	clrf	??_TCP_ParseTCPOptions+1
 10245  27C0  0825               	movf	??_TCP_ParseTCPOptions+1,w
 10246  27C1  0229               	subwf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10247  27C2  1D03               	skipz
 10248  27C3  2FC6               	goto	u3595
 10249  27C4  0824               	movf	??_TCP_ParseTCPOptions,w
 10250  27C5  0228               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10251  27C6                     u3595:
 10252  27C6  1C03               	skipc
 10253  27C7  2FA5               	goto	l5464
 10254                           
 10255                           ;tcpv4.c: 440: {;tcpv4.c: 442: ETH_Dump(opt);
 10256  27C8  0827               	movf	TCP_ParseTCPOptions@opt,w
 10257  27C9  00A4               	movwf	??_TCP_ParseTCPOptions
 10258  27CA  01A5               	clrf	??_TCP_ParseTCPOptions+1
 10259  27CB  0824               	movf	??_TCP_ParseTCPOptions,w
 10260  27CC  00A0               	movwf	ETH_Dump@length
 10261  27CD  0825               	movf	??_TCP_ParseTCPOptions+1,w
 10262  27CE  00A1               	movwf	ETH_Dump@length+1
 10263  27CF  31AE  2628  31A7   	fcall	_ETH_Dump
 10264                           
 10265                           ;tcpv4.c: 443: tcpOptionsSize = tcpOptionsSize - opt;
 10266  27D2  0020               	movlb	0	; select bank0
 10267  27D3  0827               	movf	TCP_ParseTCPOptions@opt,w
 10268  27D4  00A4               	movwf	??_TCP_ParseTCPOptions
 10269  27D5  01A5               	clrf	??_TCP_ParseTCPOptions+1
 10270  27D6  0824               	movf	??_TCP_ParseTCPOptions,w
 10271  27D7  0228               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10272  27D8  00A8               	movwf	TCP_ParseTCPOptions@tcpOptionsSize
 10273  27D9  0825               	movf	??_TCP_ParseTCPOptions+1,w
 10274  27DA  3B29               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10275  27DB  00A9               	movwf	TCP_ParseTCPOptions@tcpOptionsSize+1
 10276  27DC  2F73               	goto	l5446
 10277  27DD                     l5490:
 10278  27DD  0827               	movf	TCP_ParseTCPOptions@opt,w
 10279                           
 10280                           ; Switch size 1, requested type "simple"
 10281                           ; Number of cases is 3, Range of values is 0 to 2
 10282                           ; switch strategies available:
 10283                           ; Name         Instructions Cycles
 10284                           ; simple_byte           10     6 (average)
 10285                           ; direct_byte           12     6 (fixed)
 10286                           ; jumptable            260     6 (fixed)
 10287                           ;	Chosen strategy is simple_byte
 10288  27DE  3A00               	xorlw	0	; case 0
 10289  27DF  1903               	skipnz
 10290  27E0  2F65               	goto	l5440
 10291  27E1  3A01               	xorlw	1	; case 1
 10292  27E2  1903               	skipnz
 10293  27E3  2FE8               	goto	l5492
 10294  27E4  3A03               	xorlw	3	; case 2
 10295  27E5  1903               	skipnz
 10296  27E6  2F77               	goto	l5448
 10297  27E7  2FA9               	goto	l5468
 10298  27E8                     l5492:
 10299  27E8  3001               	movlw	1
 10300  27E9  0020               	movlb	0	; select bank0
 10301  27EA  02A8               	subwf	TCP_ParseTCPOptions@tcpOptionsSize,f
 10302  27EB  3000               	movlw	0
 10303  27EC  3BA9               	subwfb	TCP_ParseTCPOptions@tcpOptionsSize+1,f
 10304  27ED  0A28               	incf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10305  27EE  1D03               	skipz
 10306  27EF  2F5D               	goto	l5438
 10307  27F0  0A29               	incf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10308  27F1  1903               	btfsc	3,2
 10309  27F2  2FFE               	goto	l5498
 10310  27F3  2F5D               	goto	l5438
 10311  27F4                     l5494:
 10312                           
 10313                           ;tcpv4.c: 462: {;tcpv4.c: 463: ETH_Dump(tcpOptionsSize);
 10314  27F4  0020               	movlb	0	; select bank0
 10315  27F5  0829               	movf	TCP_ParseTCPOptions@tcpOptionsSize+1,w
 10316  27F6  00A1               	movwf	ETH_Dump@length+1
 10317  27F7  0828               	movf	TCP_ParseTCPOptions@tcpOptionsSize,w
 10318  27F8  00A0               	movwf	ETH_Dump@length
 10319  27F9  31AE  2628         	fcall	_ETH_Dump
 10320  27FB                     l5496:
 10321                           
 10322                           ;tcpv4.c: 464: ret = 1;
 10323  27FB  0020               	movlb	0	; select bank0
 10324  27FC  01A6               	clrf	TCP_ParseTCPOptions@ret
 10325  27FD  0AA6               	incf	TCP_ParseTCPOptions@ret,f
 10326  27FE                     l5498:
 10327                           
 10328                           ;tcpv4.c: 469: };tcpv4.c: 471: return ret;
 10329  27FE  0826               	movf	TCP_ParseTCPOptions@ret,w
 10330  27FF  0008               	return
 10331  2800                     __end_of_TCP_ParseTCPOptions:
 10332                           
 10333                           	psect	text30
 10334  2995                     __ptext30:	
 10335 ;; *************** function _IPV4_SaveStartPosition *****************
 10336 ;; Defined at:
 10337 ;;		line 278 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;		None
 10340 ;; Auto vars:     Size  Location     Type
 10341 ;;		None
 10342 ;; Return value:  Size  Location     Type
 10343 ;;                  1    wreg      void 
 10344 ;; Registers used:
 10345 ;;		wreg, status,2, status,0, pclath, cstack
 10346 ;; Tracked objects:
 10347 ;;		On entry : 1F/2
 10348 ;;		On exit  : 1F/3
 10349 ;;		Unchanged: 0/0
 10350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10355 ;;Total ram usage:        0 bytes
 10356 ;; Hardware stack levels used:    1
 10357 ;; Hardware stack levels required when called:    7
 10358 ;; This function calls:
 10359 ;;		_ETH_GetReadPtr
 10360 ;; This function is called by:
 10361 ;;		_IPV4_Packet
 10362 ;; This function uses a non-reentrant model
 10363 ;;
 10364                           
 10365                           
 10366                           ;psect for function _IPV4_SaveStartPosition
 10367  2995                     _IPV4_SaveStartPosition:
 10368                           
 10369                           ;ipv4.c: 280: ipv4StartPosition = ETH_GetReadPtr();
 10370                           
 10371                           ;incstack = 0
 10372                           ; Regs used in _IPV4_SaveStartPosition: [wreg+status,2+status,0+pclath+cstack]
 10373  2995  31A9  218D         	fcall	_ETH_GetReadPtr
 10374  2997  087B               	movf	?_ETH_GetReadPtr+1,w
 10375  2998  0023               	movlb	3	; select bank3
 10376  2999  00AF               	movwf	(_ipv4StartPosition+1)^(0+384)
 10377  299A  087A               	movf	?_ETH_GetReadPtr,w
 10378  299B  00AE               	movwf	_ipv4StartPosition^(0+384)
 10379  299C  0008               	return
 10380  299D                     __end_of_IPV4_SaveStartPosition:
 10381                           
 10382                           	psect	text31
 10383  298D                     __ptext31:	
 10384 ;; *************** function _ETH_GetReadPtr *****************
 10385 ;; Defined at:
 10386 ;;		line 952 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 10387 ;; Parameters:    Size  Location     Type
 10388 ;;		None
 10389 ;; Auto vars:     Size  Location     Type
 10390 ;;		None
 10391 ;; Return value:  Size  Location     Type
 10392 ;;                  2   10[COMMON] unsigned int 
 10393 ;; Registers used:
 10394 ;;		wreg, status,2, status,0, pclath, cstack
 10395 ;; Tracked objects:
 10396 ;;		On entry : 1F/2
 10397 ;;		On exit  : 1F/2
 10398 ;;		Unchanged: 0/0
 10399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10404 ;;Total ram usage:        2 bytes
 10405 ;; Hardware stack levels used:    1
 10406 ;; Hardware stack levels required when called:    6
 10407 ;; This function calls:
 10408 ;;		_ENC28_Rcr16
 10409 ;; This function is called by:
 10410 ;;		_IPV4_SaveStartPosition
 10411 ;; This function uses a non-reentrant model
 10412 ;;
 10413                           
 10414                           
 10415                           ;psect for function _ETH_GetReadPtr
 10416  298D                     _ETH_GetReadPtr:
 10417                           
 10418                           ;ENC28J60.c: 954: return ENC28_Rcr16(J60_ERDPTL);
 10419                           
 10420                           ;incstack = 0
 10421                           ; Regs used in _ETH_GetReadPtr: [wreg+status,2+status,0+pclath+cstack]
 10422  298D  3000               	movlw	0
 10423  298E  31AD  2562         	fcall	_ENC28_Rcr16
 10424  2990  0875               	movf	?_ENC28_Rcr16+1,w
 10425  2991  00FB               	movwf	?_ETH_GetReadPtr+1
 10426  2992  0874               	movf	?_ENC28_Rcr16,w
 10427  2993  00FA               	movwf	?_ETH_GetReadPtr
 10428  2994  0008               	return
 10429  2995                     __end_of_ETH_GetReadPtr:
 10430                           
 10431                           	psect	text32
 10432  24B0                     __ptext32:	
 10433 ;; *************** function _IPV4_PseudoHeaderChecksum *****************
 10434 ;; Defined at:
 10435 ;;		line 68 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 10436 ;; Parameters:    Size  Location     Type
 10437 ;;  payloadLen      2    0[COMMON] unsigned int 
 10438 ;; Auto vars:     Size  Location     Type
 10439 ;;  tmp            12    6[BANK0 ] struct .
 10440 ;;  cksm            4    2[BANK0 ] unsigned long 
 10441 ;;  len             1    1[BANK0 ] unsigned char 
 10442 ;;  v               1    0[BANK0 ] PTR unsigned int 
 10443 ;;		 -> IPV4_PseudoHeaderChecksum@tmp(12), 
 10444 ;; Return value:  Size  Location     Type
 10445 ;;                  2    0[COMMON] unsigned int 
 10446 ;; Registers used:
 10447 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10448 ;; Tracked objects:
 10449 ;;		On entry : 1F/2
 10450 ;;		On exit  : 1F/0
 10451 ;;		Unchanged: 0/0
 10452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10453 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10454 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10455 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10456 ;;      Totals:        10      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10457 ;;Total ram usage:       28 bytes
 10458 ;; Hardware stack levels used:    1
 10459 ;; Hardware stack levels required when called:    3
 10460 ;; This function calls:
 10461 ;;		Nothing
 10462 ;; This function is called by:
 10463 ;;		_IPV4_Packet
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           
 10468                           ;psect for function _IPV4_PseudoHeaderChecksum
 10469  24B0                     _IPV4_PseudoHeaderChecksum:
 10470                           
 10471                           ;ipv4.c: 70: ipv4_pseudo_header_t tmp;;ipv4.c: 71: uint8_t len;;ipv4.c: 72: uint32_t cks
      +                          m = 0;
 10472                           
 10473                           ;incstack = 0
 10474                           ; Regs used in _IPV4_PseudoHeaderChecksum: [wreg+fsr1l+fsr1h+status,2+status,0]
 10475  24B0  3000               	movlw	0
 10476  24B1  0020               	movlb	0	; select bank0
 10477  24B2  00A5               	movwf	IPV4_PseudoHeaderChecksum@cksm+3
 10478  24B3  3000               	movlw	0
 10479  24B4  00A4               	movwf	IPV4_PseudoHeaderChecksum@cksm+2
 10480  24B5  3000               	movlw	0
 10481  24B6  00A3               	movwf	IPV4_PseudoHeaderChecksum@cksm+1
 10482  24B7  3000               	movlw	0
 10483  24B8  00A2               	movwf	IPV4_PseudoHeaderChecksum@cksm
 10484                           
 10485                           ;ipv4.c: 73: uint16_t *v;;ipv4.c: 75: tmp.srcIpAddress = ipv4Header.srcIpAddress;
 10486  24B9  300C               	movlw	12
 10487  24BA  3EB9               	addlw	(low (_ipv4Header| (0+256)))& (0+255)
 10488  24BB  0086               	movwf	6
 10489  24BC  3001               	movlw	1	; select bank3/4
 10490  24BD  0087               	movwf	7
 10491  24BE  3F40               	moviw [0]fsr1
 10492  24BF  00A6               	movwf	IPV4_PseudoHeaderChecksum@tmp
 10493  24C0  3F41               	moviw [1]fsr1
 10494  24C1  00A7               	movwf	IPV4_PseudoHeaderChecksum@tmp+1
 10495  24C2  3F42               	moviw [2]fsr1
 10496  24C3  00A8               	movwf	IPV4_PseudoHeaderChecksum@tmp+2
 10497  24C4  3F43               	moviw [3]fsr1
 10498  24C5  00A9               	movwf	IPV4_PseudoHeaderChecksum@tmp+3
 10499                           
 10500                           ;ipv4.c: 76: tmp.dstIpAddress = ipv4Header.dstIpAddress;
 10501  24C6  3010               	movlw	16
 10502  24C7  3EB9               	addlw	(low (_ipv4Header| (0+256)))& (0+255)
 10503  24C8  0086               	movwf	6
 10504  24C9  3001               	movlw	1	; select bank3/4
 10505  24CA  0087               	movwf	7
 10506  24CB  3F40               	moviw [0]fsr1
 10507  24CC  00AA               	movwf	IPV4_PseudoHeaderChecksum@tmp+4
 10508  24CD  3F41               	moviw [1]fsr1
 10509  24CE  00AB               	movwf	IPV4_PseudoHeaderChecksum@tmp+5
 10510  24CF  3F42               	moviw [2]fsr1
 10511  24D0  00AC               	movwf	IPV4_PseudoHeaderChecksum@tmp+6
 10512  24D1  3F43               	moviw [3]fsr1
 10513  24D2  00AD               	movwf	IPV4_PseudoHeaderChecksum@tmp+7
 10514                           
 10515                           ;ipv4.c: 77: tmp.protocol = ipv4Header.protocol;
 10516  24D3  0023               	movlb	3	; select bank3
 10517  24D4  0842               	movf	(_ipv4Header^(0+384)+9),w
 10518  24D5  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10519  24D6  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10520  24D7  0020               	movlb	0	; select bank0
 10521  24D8  00AE               	movwf	IPV4_PseudoHeaderChecksum@tmp+8
 10522                           
 10523                           ;ipv4.c: 78: tmp.z = 0;
 10524  24D9  01AF               	clrf	IPV4_PseudoHeaderChecksum@tmp+9
 10525                           
 10526                           ;ipv4.c: 79: tmp.length = payloadLen;
 10527  24DA  0871               	movf	IPV4_PseudoHeaderChecksum@payloadLen+1,w
 10528  24DB  00B1               	movwf	IPV4_PseudoHeaderChecksum@tmp+11
 10529  24DC  0870               	movf	IPV4_PseudoHeaderChecksum@payloadLen,w
 10530  24DD  00B0               	movwf	IPV4_PseudoHeaderChecksum@tmp+10
 10531                           
 10532                           ;ipv4.c: 81: len = sizeof(tmp);
 10533  24DE  300C               	movlw	12
 10534  24DF  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10535  24E0  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10536  24E1  00A1               	movwf	IPV4_PseudoHeaderChecksum@len
 10537                           
 10538                           ;ipv4.c: 82: len = len >> 1;
 10539  24E2  3621               	lsrf	IPV4_PseudoHeaderChecksum@len,w
 10540  24E3  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10541  24E4  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10542  24E5  00A1               	movwf	IPV4_PseudoHeaderChecksum@len
 10543                           
 10544                           ;ipv4.c: 84: v = (uint16_t *) &tmp;
 10545  24E6  3026               	movlw	(low (IPV4_PseudoHeaderChecksum@tmp| 0))& (0+255)
 10546  24E7  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10547  24E8  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10548  24E9  00A0               	movwf	IPV4_PseudoHeaderChecksum@v
 10549  24EA                     l6112:	
 10550                           ;ipv4.c: 86: while(len)
 10551                           
 10552  24EA  0821               	movf	IPV4_PseudoHeaderChecksum@len,w
 10553  24EB  1903               	btfsc	3,2
 10554  24EC  2D02               	goto	l6114
 10555                           
 10556                           ;ipv4.c: 87: {;ipv4.c: 88: cksm += *v;
 10557  24ED  0820               	movf	IPV4_PseudoHeaderChecksum@v,w
 10558  24EE  0086               	movwf	6
 10559  24EF  0187               	clrf	7
 10560  24F0  3F40               	moviw [0]fsr1
 10561  24F1  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10562  24F2  3F41               	moviw [1]fsr1
 10563  24F3  00F3               	movwf	??_IPV4_PseudoHeaderChecksum+1
 10564  24F4  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10565  24F5  07A2               	addwf	IPV4_PseudoHeaderChecksum@cksm,f
 10566  24F6  0873               	movf	??_IPV4_PseudoHeaderChecksum+1,w
 10567  24F7  3DA3               	addwfc	IPV4_PseudoHeaderChecksum@cksm+1,f
 10568  24F8  3000               	movlw	0
 10569  24F9  3DA4               	addwfc	IPV4_PseudoHeaderChecksum@cksm+2,f
 10570  24FA  3DA5               	addwfc	IPV4_PseudoHeaderChecksum@cksm+3,f
 10571                           
 10572                           ;ipv4.c: 89: len--;
 10573  24FB  3001               	movlw	1
 10574  24FC  02A1               	subwf	IPV4_PseudoHeaderChecksum@len,f
 10575                           
 10576                           ;ipv4.c: 90: v++;
 10577  24FD  3002               	movlw	2
 10578  24FE  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10579  24FF  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10580  2500  07A0               	addwf	IPV4_PseudoHeaderChecksum@v,f
 10581  2501  2CEA               	goto	l6112
 10582  2502                     l6114:
 10583                           
 10584                           ;ipv4.c: 91: };ipv4.c: 94: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 10585  2502  0824               	movf	IPV4_PseudoHeaderChecksum@cksm+2,w
 10586  2503  00F2               	movwf	??_IPV4_PseudoHeaderChecksum
 10587  2504  0825               	movf	IPV4_PseudoHeaderChecksum@cksm+3,w
 10588  2505  00F3               	movwf	??_IPV4_PseudoHeaderChecksum+1
 10589  2506  01F4               	clrf	??_IPV4_PseudoHeaderChecksum+2
 10590  2507  01F5               	clrf	??_IPV4_PseudoHeaderChecksum+3
 10591  2508  30FF               	movlw	255
 10592  2509  0522               	andwf	IPV4_PseudoHeaderChecksum@cksm,w
 10593  250A  00F6               	movwf	??_IPV4_PseudoHeaderChecksum+4
 10594  250B  30FF               	movlw	255
 10595  250C  0523               	andwf	IPV4_PseudoHeaderChecksum@cksm+1,w
 10596  250D  00F7               	movwf	??_IPV4_PseudoHeaderChecksum+5
 10597  250E  3000               	movlw	0
 10598  250F  0524               	andwf	IPV4_PseudoHeaderChecksum@cksm+2,w
 10599  2510  00F8               	movwf	??_IPV4_PseudoHeaderChecksum+6
 10600  2511  3000               	movlw	0
 10601  2512  0525               	andwf	IPV4_PseudoHeaderChecksum@cksm+3,w
 10602  2513  00F9               	movwf	??_IPV4_PseudoHeaderChecksum+7
 10603  2514  0876               	movf	??_IPV4_PseudoHeaderChecksum+4,w
 10604  2515  07F2               	addwf	??_IPV4_PseudoHeaderChecksum,f
 10605  2516  0877               	movf	??_IPV4_PseudoHeaderChecksum+5,w
 10606  2517  3DF3               	addwfc	??_IPV4_PseudoHeaderChecksum+1,f
 10607  2518  0878               	movf	??_IPV4_PseudoHeaderChecksum+6,w
 10608  2519  3DF4               	addwfc	??_IPV4_PseudoHeaderChecksum+2,f
 10609  251A  0879               	movf	??_IPV4_PseudoHeaderChecksum+7,w
 10610  251B  3DF5               	addwfc	??_IPV4_PseudoHeaderChecksum+3,f
 10611  251C  0875               	movf	??_IPV4_PseudoHeaderChecksum+3,w
 10612  251D  00A5               	movwf	IPV4_PseudoHeaderChecksum@cksm+3
 10613  251E  0874               	movf	??_IPV4_PseudoHeaderChecksum+2,w
 10614  251F  00A4               	movwf	IPV4_PseudoHeaderChecksum@cksm+2
 10615  2520  0873               	movf	??_IPV4_PseudoHeaderChecksum+1,w
 10616  2521  00A3               	movwf	IPV4_PseudoHeaderChecksum@cksm+1
 10617  2522  0872               	movf	??_IPV4_PseudoHeaderChecksum,w
 10618  2523  00A2               	movwf	IPV4_PseudoHeaderChecksum@cksm
 10619                           
 10620                           ;ipv4.c: 97: return cksm;
 10621  2524  0823               	movf	IPV4_PseudoHeaderChecksum@cksm+1,w
 10622  2525  00F1               	movwf	?_IPV4_PseudoHeaderChecksum+1
 10623  2526  0822               	movf	IPV4_PseudoHeaderChecksum@cksm,w
 10624  2527  00F0               	movwf	?_IPV4_PseudoHeaderChecksum
 10625  2528  0008               	return
 10626  2529                     __end_of_IPV4_PseudoHeaderChecksum:
 10627                           
 10628                           	psect	text33
 10629  23C7                     __ptext33:	
 10630 ;; *************** function _ICMP_Receive *****************
 10631 ;; Defined at:
 10632 ;;		line 58 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  ipv4Hdr         1    wreg     PTR struct .
 10635 ;;		 -> ipv4Header(20), 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  ipv4Hdr         1   26[BANK1 ] PTR struct .
 10638 ;;		 -> ipv4Header(20), 
 10639 ;;  icmpHdr         4   22[BANK1 ] struct .
 10640 ;;  ret             1    0        enum E390
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      enum E390
 10643 ;; Registers used:
 10644 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 1F/2
 10647 ;;		On exit  : 1D/1
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10651 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10652 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10653 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10654 ;;Total ram usage:       11 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:   10
 10657 ;; This function calls:
 10658 ;;		_ETH_Dump
 10659 ;;		_ETH_Read16
 10660 ;;		_ETH_ReadBlock
 10661 ;;		_ICMP_EchoReply
 10662 ;; This function is called by:
 10663 ;;		_IPV4_Packet
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           
 10668                           ;psect for function _ICMP_Receive
 10669  23C7                     _ICMP_Receive:
 10670                           
 10671                           ;incstack = 0
 10672                           ; Regs used in _ICMP_Receive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10673                           ;ICMP_Receive@ipv4Hdr stored from wreg
 10674  23C7  0021               	movlb	1	; select bank1
 10675  23C8  00BA               	movwf	ICMP_Receive@ipv4Hdr^(0+128)
 10676                           
 10677                           ;icmp.c: 62: ETH_ReadBlock(&icmpHdr, sizeof(icmpHeader_t));
 10678  23C9  30B6               	movlw	low ICMP_Receive@icmpHdr
 10679  23CA  00F1               	movwf	ETH_ReadBlock@buffer
 10680  23CB  3000               	movlw	high ICMP_Receive@icmpHdr
 10681  23CC  00F2               	movwf	ETH_ReadBlock@buffer+1
 10682  23CD  3004               	movlw	4
 10683  23CE  00F3               	movwf	ETH_ReadBlock@length
 10684  23CF  3000               	movlw	0
 10685  23D0  00F4               	movwf	ETH_ReadBlock@length+1
 10686  23D1  31AF  273F  31A3   	fcall	_ETH_ReadBlock
 10687                           
 10688                           ;icmp.c: 64: if(ipv4Hdr->dstIpAddress == 0xFFFFFFFF)
 10689  23D4  0021               	movlb	1	; select bank1
 10690  23D5  083A               	movf	ICMP_Receive@ipv4Hdr^(0+128),w
 10691  23D6  3E10               	addlw	16
 10692  23D7  0086               	movwf	6
 10693  23D8  3001               	movlw	1	; select bank2/3
 10694  23D9  0087               	movwf	7
 10695  23DA  0016               	moviw fsr1++
 10696  23DB  3AFF               	xorlw	255
 10697  23DC  00B0               	movwf	??_ICMP_Receive^(0+128)
 10698  23DD  0016               	moviw fsr1++
 10699  23DE  3AFF               	xorlw	255
 10700  23DF  04B0               	iorwf	??_ICMP_Receive^(0+128),f
 10701  23E0  0016               	moviw fsr1++
 10702  23E1  3AFF               	xorlw	255
 10703  23E2  04B0               	iorwf	??_ICMP_Receive^(0+128),f
 10704  23E3  0016               	moviw fsr1++
 10705  23E4  3AFF               	xorlw	255
 10706  23E5  04B0               	iorwf	??_ICMP_Receive^(0+128),f
 10707  23E6  1903               	btfsc	3,2
 10708  23E7  0008               	return
 10709  23E8  2C13               	goto	l7976
 10710  23E9                     l7964:
 10711  23E9  083A               	movf	ICMP_Receive@ipv4Hdr^(0+128),w
 10712  23EA  3199  2125         	fcall	_ICMP_EchoReply
 10713                           
 10714                           ;icmp.c: 73: };icmp.c: 74: break;
 10715  23EC  0008               	return
 10716  23ED                     l7966:
 10717                           
 10718                           ;icmp.c: 76: ETH_Dump(4);
 10719  23ED  3004               	movlw	4
 10720  23EE  0020               	movlb	0	; select bank0
 10721  23EF  00A0               	movwf	ETH_Dump@length
 10722  23F0  3000               	movlw	0
 10723  23F1  00A1               	movwf	ETH_Dump@length+1
 10724  23F2  31AE  2628  31A3   	fcall	_ETH_Dump
 10725                           
 10726                           ;icmp.c: 77: ETH_ReadBlock(ipv4Hdr,sizeof(ipv4Header_t));
 10727  23F5  0021               	movlb	1	; select bank1
 10728  23F6  083A               	movf	ICMP_Receive@ipv4Hdr^(0+128),w
 10729  23F7  00F1               	movwf	ETH_ReadBlock@buffer
 10730  23F8  3001               	movlw	1
 10731  23F9  00F2               	movwf	ETH_ReadBlock@buffer+1
 10732  23FA  3014               	movlw	20
 10733  23FB  00F3               	movwf	ETH_ReadBlock@length
 10734  23FC  3000               	movlw	0
 10735  23FD  00F4               	movwf	ETH_ReadBlock@length+1
 10736  23FE  31AF  273F  31A3   	fcall	_ETH_ReadBlock
 10737                           
 10738                           ;icmp.c: 78: if(5 == ipv4Hdr->ihl)
 10739  2401  0021               	movlb	1	; select bank1
 10740  2402  083A               	movf	ICMP_Receive@ipv4Hdr^(0+128),w
 10741  2403  0086               	movwf	6
 10742  2404  3001               	movlw	1	; select bank2/3
 10743  2405  0087               	movwf	7
 10744  2406  0801               	movf	1,w
 10745  2407  390F               	andlw	15
 10746  2408  3A05               	xorlw	5
 10747  2409  1D03               	skipz
 10748  240A  0008               	return
 10749                           
 10750                           ;icmp.c: 79: {;icmp.c: 80: portUnreachable = ETH_Read16();
 10751  240B  31AC  2401         	fcall	_ETH_Read16
 10752  240D  0872               	movf	?_ETH_Read16+1,w
 10753  240E  0023               	movlb	3	; select bank3
 10754  240F  00AB               	movwf	(_portUnreachable+1)^(0+384)
 10755  2410  0871               	movf	?_ETH_Read16,w
 10756  2411  00AA               	movwf	_portUnreachable^(0+384)
 10757  2412  0008               	return
 10758  2413                     l7976:
 10759  2413  30FF               	movlw	255
 10760  2414  0536               	andwf	ICMP_Receive@icmpHdr^(0+128),w
 10761  2415  00B0               	movwf	??_ICMP_Receive^(0+128)
 10762  2416  3000               	movlw	0
 10763  2417  0537               	andwf	(ICMP_Receive@icmpHdr+1)^(0+128),w
 10764  2418  00B1               	movwf	(??_ICMP_Receive+1)^(0+128)
 10765  2419  0830               	movf	??_ICMP_Receive^(0+128),w
 10766  241A  00B1               	movwf	(??_ICMP_Receive^(0+128)+1)
 10767  241B  01B0               	clrf	??_ICMP_Receive^(0+128)
 10768  241C  0830               	movf	??_ICMP_Receive^(0+128),w
 10769  241D  0437               	iorwf	(ICMP_Receive@icmpHdr^(0+128)+1),w
 10770  241E  00B3               	movwf	(??_ICMP_Receive+3)^(0+128)
 10771  241F  0831               	movf	(??_ICMP_Receive+1)^(0+128),w
 10772  2420  00B4               	movwf	(??_ICMP_Receive+4)^(0+128)
 10773                           
 10774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10775                           ; Switch size 1, requested type "simple"
 10776                           ; Number of cases is 2, Range of values is 3 to 8
 10777                           ; switch strategies available:
 10778                           ; Name         Instructions Cycles
 10779                           ; simple_byte            7     4 (average)
 10780                           ; direct_byte           21     9 (fixed)
 10781                           ; jumptable            263     9 (fixed)
 10782                           ;	Chosen strategy is simple_byte
 10783  2421  0834               	movf	(??_ICMP_Receive+4)^(0+128),w
 10784  2422  3A03               	xorlw	3	; case 3
 10785  2423  1903               	skipnz
 10786  2424  2C29               	goto	l8570
 10787  2425  3A0B               	xorlw	11	; case 8
 10788  2426  1903               	skipnz
 10789  2427  2C2E               	goto	l8572
 10790  2428  2C39               	goto	l909
 10791  2429                     l8570:
 10792                           
 10793                           ; Switch size 1, requested type "simple"
 10794                           ; Number of cases is 1, Range of values is 3 to 3
 10795                           ; switch strategies available:
 10796                           ; Name         Instructions Cycles
 10797                           ; simple_byte            4     3 (average)
 10798                           ; direct_byte           11     9 (fixed)
 10799                           ; jumptable            263     9 (fixed)
 10800                           ;	Chosen strategy is simple_byte
 10801  2429  0833               	movf	(??_ICMP_Receive+3)^(0+128),w
 10802  242A  3A03               	xorlw	3	; case 3
 10803  242B  1903               	skipnz
 10804  242C  2BED               	goto	l7966
 10805  242D  2C39               	goto	l909
 10806  242E                     l8572:
 10807                           
 10808                           ; Switch size 1, requested type "simple"
 10809                           ; Number of cases is 3, Range of values is 0 to 252
 10810                           ; switch strategies available:
 10811                           ; Name         Instructions Cycles
 10812                           ; simple_byte           10     6 (average)
 10813                           ; jumptable            260     6 (fixed)
 10814                           ;	Chosen strategy is simple_byte
 10815  242E  0833               	movf	(??_ICMP_Receive+3)^(0+128),w
 10816  242F  3A00               	xorlw	0	; case 0
 10817  2430  1903               	skipnz
 10818  2431  2BE9               	goto	l7964
 10819  2432  3A2A               	xorlw	42	; case 42
 10820  2433  1903               	skipnz
 10821  2434  2BE9               	goto	l7964
 10822  2435  3AD6               	xorlw	214	; case 252
 10823  2436  1903               	skipnz
 10824  2437  2BE9               	goto	l7964
 10825  2438  2C39               	goto	l909
 10826  2439                     l909:
 10827  2439  0008               	return
 10828  243A                     __end_of_ICMP_Receive:
 10829                           
 10830                           	psect	text34
 10831  1925                     __ptext34:	
 10832 ;; *************** function _ICMP_EchoReply *****************
 10833 ;; Defined at:
 10834 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  ipv4Hdr         1    wreg     PTR struct .
 10837 ;;		 -> ipv4Header(20), 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  ipv4Hdr         1   15[BANK1 ] PTR struct .
 10840 ;;		 -> ipv4Header(20), 
 10841 ;;  ipv4PayloadL    2   12[BANK1 ] unsigned int 
 10842 ;;  icmp_cksm_st    2    8[BANK1 ] unsigned int 
 10843 ;;  cksm            2   10[BANK1 ] unsigned int 
 10844 ;;  sequence        2    6[BANK1 ] unsigned int 
 10845 ;;  identifier      2    4[BANK1 ] unsigned int 
 10846 ;;  ret             1   14[BANK1 ] enum E390
 10847 ;; Return value:  Size  Location     Type
 10848 ;;                  1    wreg      enum E390
 10849 ;; Registers used:
 10850 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10851 ;; Tracked objects:
 10852 ;;		On entry : 1F/1
 10853 ;;		On exit  : 1F/1
 10854 ;;		Unchanged: 0/0
 10855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10857 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10859 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10860 ;;Total ram usage:       16 bytes
 10861 ;; Hardware stack levels used:    1
 10862 ;; Hardware stack levels required when called:    9
 10863 ;; This function calls:
 10864 ;;		_ETH_Copy
 10865 ;;		_ETH_Insert
 10866 ;;		_ETH_Read16
 10867 ;;		_ETH_TxComputeChecksum
 10868 ;;		_ETH_Write16
 10869 ;;		_IPV4_Send
 10870 ;;		_IPv4_Start
 10871 ;; This function is called by:
 10872 ;;		_ICMP_Receive
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           
 10877                           ;psect for function _ICMP_EchoReply
 10878  1925                     _ICMP_EchoReply:
 10879                           
 10880                           ;incstack = 0
 10881                           ; Regs used in _ICMP_EchoReply: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10882                           ;ICMP_EchoReply@ipv4Hdr stored from wreg
 10883  1925  00AF               	movwf	ICMP_EchoReply@ipv4Hdr^(0+128)
 10884                           
 10885                           ;icmp.c: 102: error_msg ret = ERROR;
 10886  1926  01AE               	clrf	ICMP_EchoReply@ret^(0+128)
 10887                           
 10888                           ;icmp.c: 103: uint16_t identifier;;icmp.c: 104: uint16_t sequence;;icmp.c: 106: identifi
      +                          er = ETH_Read16();
 10889  1927  31AC  2401  3199   	fcall	_ETH_Read16
 10890  192A  0872               	movf	?_ETH_Read16+1,w
 10891  192B  0021               	movlb	1	; select bank1
 10892  192C  00A5               	movwf	(ICMP_EchoReply@identifier+1)^(0+128)
 10893  192D  0871               	movf	?_ETH_Read16,w
 10894  192E  00A4               	movwf	ICMP_EchoReply@identifier^(0+128)
 10895                           
 10896                           ;icmp.c: 107: sequence = ETH_Read16();
 10897  192F  31AC  2401  3199   	fcall	_ETH_Read16
 10898  1932  0872               	movf	?_ETH_Read16+1,w
 10899  1933  0021               	movlb	1	; select bank1
 10900  1934  00A7               	movwf	(ICMP_EchoReply@sequence+1)^(0+128)
 10901  1935  0871               	movf	?_ETH_Read16,w
 10902  1936  00A6               	movwf	ICMP_EchoReply@sequence^(0+128)
 10903                           
 10904                           ;icmp.c: 108: ret = IPv4_Start(ipv4Hdr->srcIpAddress, ipv4Hdr->protocol);
 10905  1937  082F               	movf	ICMP_EchoReply@ipv4Hdr^(0+128),w
 10906  1938  3E0C               	addlw	12
 10907  1939  0086               	movwf	6
 10908  193A  3001               	movlw	1	; select bank2/3
 10909  193B  0087               	movwf	7
 10910  193C  3F40               	moviw [0]fsr1
 10911  193D  0020               	movlb	0	; select bank0
 10912  193E  00D9               	movwf	IPv4_Start@destAddress
 10913  193F  3F41               	moviw [1]fsr1
 10914  1940  00DA               	movwf	IPv4_Start@destAddress+1
 10915  1941  3F42               	moviw [2]fsr1
 10916  1942  00DB               	movwf	IPv4_Start@destAddress+2
 10917  1943  3F43               	moviw [3]fsr1
 10918  1944  00DC               	movwf	IPv4_Start@destAddress+3
 10919  1945  0021               	movlb	1	; select bank1
 10920  1946  082F               	movf	ICMP_EchoReply@ipv4Hdr^(0+128),w
 10921  1947  0086               	movwf	6
 10922  1948  3001               	movlw	1	; select bank2/3
 10923  1949  0087               	movwf	7
 10924  194A  3001               	movlw	1	; select bank2/3
 10925  194B  3F49               	moviw [9]fsr1
 10926  194C  0020               	movlb	0	; select bank0
 10927  194D  00DD               	movwf	IPv4_Start@protocol
 10928  194E  3190  2084  3199   	fcall	_IPv4_Start
 10929  1951  0021               	movlb	1	; select bank1
 10930  1952  00A0               	movwf	??_ICMP_EchoReply^(0+128)
 10931  1953  0820               	movf	??_ICMP_EchoReply^(0+128),w
 10932  1954  00AE               	movwf	ICMP_EchoReply@ret^(0+128)
 10933                           
 10934                           ;icmp.c: 109: if(ret == SUCCESS)
 10935  1955  032E               	decf	ICMP_EchoReply@ret^(0+128),w
 10936  1956  1D03               	btfss	3,2
 10937  1957  29EB               	goto	l7864
 10938                           
 10939                           ;icmp.c: 110: {;icmp.c: 111: uint16_t icmp_cksm_start;;icmp.c: 112: uint16_t ipv4Payload
      +                          Length = ipv4Hdr->length - sizeof(ipv4Header_t);
 10940  1958  082F               	movf	ICMP_EchoReply@ipv4Hdr^(0+128),w
 10941  1959  3E02               	addlw	2
 10942  195A  0086               	movwf	6
 10943  195B  3001               	movlw	1	; select bank2/3
 10944  195C  0087               	movwf	7
 10945  195D  3F40               	moviw [0]fsr1
 10946  195E  00A0               	movwf	??_ICMP_EchoReply^(0+128)
 10947  195F  3F41               	moviw [1]fsr1
 10948  1960  00A1               	movwf	(??_ICMP_EchoReply^(0+128)+1)
 10949  1961  0820               	movf	??_ICMP_EchoReply^(0+128),w
 10950  1962  3EEC               	addlw	236
 10951  1963  00AC               	movwf	ICMP_EchoReply@ipv4PayloadLength^(0+128)
 10952  1964  30FF               	movlw	255
 10953  1965  3D21               	addwfc	(??_ICMP_EchoReply+1)^(0+128),w
 10954  1966  00AD               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)^(0+128)
 10955                           
 10956                           ;icmp.c: 114: ipv4PayloadLength = ipv4Hdr->length - (uint16_t)(ipv4Hdr->ihl << 2);
 10957  1967  082F               	movf	ICMP_EchoReply@ipv4Hdr^(0+128),w
 10958  1968  0086               	movwf	6
 10959  1969  3001               	movlw	1	; select bank2/3
 10960  196A  0087               	movwf	7
 10961  196B  0801               	movf	1,w
 10962  196C  390F               	andlw	15
 10963  196D  00A0               	movwf	??_ICMP_EchoReply^(0+128)
 10964  196E  01A1               	clrf	(??_ICMP_EchoReply^(0+128)+1)
 10965  196F  35A0               	lslf	??_ICMP_EchoReply^(0+128),f
 10966  1970  0DA1               	rlf	(??_ICMP_EchoReply^(0+128)+1),f
 10967  1971  35A0               	lslf	??_ICMP_EchoReply^(0+128),f
 10968  1972  0DA1               	rlf	(??_ICMP_EchoReply^(0+128)+1),f
 10969  1973  082F               	movf	ICMP_EchoReply@ipv4Hdr^(0+128),w
 10970  1974  3E02               	addlw	2
 10971  1975  0086               	movwf	6
 10972  1976  3001               	movlw	1	; select bank2/3
 10973  1977  0087               	movwf	7
 10974  1978  3F40               	moviw [0]fsr1
 10975  1979  00A2               	movwf	(??_ICMP_EchoReply+2)^(0+128)
 10976  197A  3F41               	moviw [1]fsr1
 10977  197B  00A3               	movwf	((??_ICMP_EchoReply+2)^(0+128)+1)
 10978  197C  0820               	movf	??_ICMP_EchoReply^(0+128),w
 10979  197D  0222               	subwf	(??_ICMP_EchoReply+2)^(0+128),w
 10980  197E  00AC               	movwf	ICMP_EchoReply@ipv4PayloadLength^(0+128)
 10981  197F  0821               	movf	(??_ICMP_EchoReply+1)^(0+128),w
 10982  1980  3B23               	subwfb	(??_ICMP_EchoReply+3)^(0+128),w
 10983  1981  00AD               	movwf	(ICMP_EchoReply@ipv4PayloadLength+1)^(0+128)
 10984                           
 10985                           ;icmp.c: 116: ETH_Write16(ECHO_REPLY);
 10986  1982  3000               	movlw	0
 10987  1983  00F1               	movwf	ETH_Write16@data
 10988  1984  00F2               	movwf	ETH_Write16@data+1
 10989  1985  31AA  22BB  3199   	fcall	_ETH_Write16
 10990                           
 10991                           ;icmp.c: 117: ETH_Write16(0);
 10992  1988  3000               	movlw	0
 10993  1989  00F1               	movwf	ETH_Write16@data
 10994  198A  00F2               	movwf	ETH_Write16@data+1
 10995  198B  31AA  22BB  3199   	fcall	_ETH_Write16
 10996                           
 10997                           ;icmp.c: 119: ETH_Write16(identifier);
 10998  198E  0021               	movlb	1	; select bank1
 10999  198F  0825               	movf	(ICMP_EchoReply@identifier+1)^(0+128),w
 11000  1990  00F2               	movwf	ETH_Write16@data+1
 11001  1991  0824               	movf	ICMP_EchoReply@identifier^(0+128),w
 11002  1992  00F1               	movwf	ETH_Write16@data
 11003  1993  31AA  22BB  3199   	fcall	_ETH_Write16
 11004                           
 11005                           ;icmp.c: 120: ETH_Write16(sequence);
 11006  1996  0021               	movlb	1	; select bank1
 11007  1997  0827               	movf	(ICMP_EchoReply@sequence+1)^(0+128),w
 11008  1998  00F2               	movwf	ETH_Write16@data+1
 11009  1999  0826               	movf	ICMP_EchoReply@sequence^(0+128),w
 11010  199A  00F1               	movwf	ETH_Write16@data
 11011  199B  31AA  22BB  3199   	fcall	_ETH_Write16
 11012                           
 11013                           ;icmp.c: 123: ret = ETH_Copy(ipv4PayloadLength - sizeof(icmpHeader_t) - 4);
 11014  199E  0021               	movlb	1	; select bank1
 11015  199F  082C               	movf	ICMP_EchoReply@ipv4PayloadLength^(0+128),w
 11016  19A0  3EF8               	addlw	248
 11017  19A1  0020               	movlb	0	; select bank0
 11018  19A2  00A0               	movwf	ETH_Copy@len
 11019  19A3  30FF               	movlw	255
 11020  19A4  0021               	movlb	1	; select bank1
 11021  19A5  3D2D               	addwfc	(ICMP_EchoReply@ipv4PayloadLength+1)^(0+128),w
 11022  19A6  0020               	movlb	0	; select bank0
 11023  19A7  00A1               	movwf	ETH_Copy@len+1
 11024  19A8  31A5  25D1  3199   	fcall	_ETH_Copy
 11025  19AB  0021               	movlb	1	; select bank1
 11026  19AC  00A0               	movwf	??_ICMP_EchoReply^(0+128)
 11027  19AD  0820               	movf	??_ICMP_EchoReply^(0+128),w
 11028  19AE  00AE               	movwf	ICMP_EchoReply@ret^(0+128)
 11029                           
 11030                           ;icmp.c: 124: if(ret==SUCCESS)
 11031  19AF  032E               	decf	ICMP_EchoReply@ret^(0+128),w
 11032  19B0  1D03               	btfss	3,2
 11033  19B1  29EB               	goto	l7864
 11034                           
 11035                           ;icmp.c: 128: icmp_cksm_start = sizeof(ethernetFrame_t) + sizeof(ipv4Header_t);
 11036  19B2  3022               	movlw	34
 11037  19B3  00A8               	movwf	ICMP_EchoReply@icmp_cksm_start^(0+128)
 11038  19B4  3000               	movlw	0
 11039  19B5  00A9               	movwf	(ICMP_EchoReply@icmp_cksm_start^(0+128)+1)
 11040                           
 11041                           ;icmp.c: 129: cksm = ETH_TxComputeChecksum(icmp_cksm_start, ipv4PayloadLength, 0);
 11042  19B6  3022               	movlw	34
 11043  19B7  0020               	movlb	0	; select bank0
 11044  19B8  00A0               	movwf	ETH_TxComputeChecksum@position
 11045  19B9  3000               	movlw	0
 11046  19BA  00A1               	movwf	ETH_TxComputeChecksum@position+1
 11047  19BB  0021               	movlb	1	; select bank1
 11048  19BC  082D               	movf	(ICMP_EchoReply@ipv4PayloadLength+1)^(0+128),w
 11049  19BD  0020               	movlb	0	; select bank0
 11050  19BE  00A3               	movwf	ETH_TxComputeChecksum@length+1
 11051  19BF  0021               	movlb	1	; select bank1
 11052  19C0  082C               	movf	ICMP_EchoReply@ipv4PayloadLength^(0+128),w
 11053  19C1  0020               	movlb	0	; select bank0
 11054  19C2  00A2               	movwf	ETH_TxComputeChecksum@length
 11055  19C3  3000               	movlw	0
 11056  19C4  00A4               	movwf	ETH_TxComputeChecksum@seed
 11057  19C5  00A5               	movwf	ETH_TxComputeChecksum@seed+1
 11058  19C6  31A5  2529  3199   	fcall	_ETH_TxComputeChecksum
 11059  19C9  0821               	movf	?_ETH_TxComputeChecksum+1,w
 11060  19CA  0021               	movlb	1	; select bank1
 11061  19CB  00AB               	movwf	(ICMP_EchoReply@cksm+1)^(0+128)
 11062  19CC  0020               	movlb	0	; select bank0
 11063  19CD  0820               	movf	?_ETH_TxComputeChecksum,w
 11064  19CE  0021               	movlb	1	; select bank1
 11065  19CF  00AA               	movwf	ICMP_EchoReply@cksm^(0+128)
 11066                           
 11067                           ;icmp.c: 130: ETH_Insert((char *)&cksm,sizeof(cksm),sizeof(ethernetFrame_t) + sizeof(ipv
      +                          4Header_t) + (size_t)(((char*)&((icmpHeader_t *)1)->checksum)-1));
 11068  19D0  3002               	movlw	2
 11069  19D1  0020               	movlb	0	; select bank0
 11070  19D2  00A0               	movwf	ETH_Insert@len
 11071  19D3  3000               	movlw	0
 11072  19D4  00A1               	movwf	ETH_Insert@len+1
 11073  19D5  3024               	movlw	36
 11074  19D6  00A2               	movwf	ETH_Insert@offset
 11075  19D7  3000               	movlw	0
 11076  19D8  00A3               	movwf	ETH_Insert@offset+1
 11077  19D9  30AA               	movlw	(low (ICMP_EchoReply@cksm| 0))& (0+255)
 11078  19DA  31AF  277E  3199   	fcall	_ETH_Insert
 11079                           
 11080                           ;icmp.c: 131: ret = IPV4_Send(ipv4PayloadLength);
 11081  19DD  0021               	movlb	1	; select bank1
 11082  19DE  082D               	movf	(ICMP_EchoReply@ipv4PayloadLength+1)^(0+128),w
 11083  19DF  0020               	movlb	0	; select bank0
 11084  19E0  00B4               	movwf	IPV4_Send@payloadLength+1
 11085  19E1  0021               	movlb	1	; select bank1
 11086  19E2  082C               	movf	ICMP_EchoReply@ipv4PayloadLength^(0+128),w
 11087  19E3  0020               	movlb	0	; select bank0
 11088  19E4  00B3               	movwf	IPV4_Send@payloadLength
 11089  19E5  31A0  2018         	fcall	_IPV4_Send
 11090  19E7  0021               	movlb	1	; select bank1
 11091  19E8  00A0               	movwf	??_ICMP_EchoReply^(0+128)
 11092  19E9  0820               	movf	??_ICMP_EchoReply^(0+128),w
 11093  19EA  00AE               	movwf	ICMP_EchoReply@ret^(0+128)
 11094  19EB                     l7864:
 11095                           
 11096                           ;icmp.c: 132: };icmp.c: 133: };icmp.c: 134: return ret;
 11097  19EB  082E               	movf	ICMP_EchoReply@ret^(0+128),w
 11098  19EC  0008               	return
 11099  19ED                     __end_of_ICMP_EchoReply:
 11100                           
 11101                           	psect	text35
 11102  2C01                     __ptext35:	
 11103 ;; *************** function _ETH_Read16 *****************
 11104 ;; Defined at:
 11105 ;;		line 465 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;		None
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;  b               2    6[COMMON] unsigned int 
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  2    1[COMMON] unsigned int 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2, status,0, pclath, cstack
 11114 ;; Tracked objects:
 11115 ;;		On entry : 1E/0
 11116 ;;		On exit  : 1F/2
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;Total ram usage:        7 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; Hardware stack levels required when called:    4
 11126 ;; This function calls:
 11127 ;;		_SPI1_Exchange8bit
 11128 ;; This function is called by:
 11129 ;;		_TCP_ParseTCPOptions
 11130 ;;		_ICMP_Receive
 11131 ;;		_ICMP_EchoReply
 11132 ;; This function uses a non-reentrant model
 11133 ;;
 11134                           
 11135                           
 11136                           ;psect for function _ETH_Read16
 11137  2C01                     _ETH_Read16:
 11138                           
 11139                           ;incstack = 0
 11140                           ; Regs used in _ETH_Read16: [wreg+status,2+status,0+pclath+cstack]
 11141                           ;ENC28J60.c: 467: uint16_t b;;ENC28J60.c: 469: do{LATC6 = 0;} while(0);
 11142  2C01  0022               	movlb	2	; select bank2
 11143  2C02  130E               	bcf	14,6	;volatile
 11144                           
 11145                           ;ENC28J60.c: 470: SPI1_Exchange8bit(rbm_inst);
 11146  2C03  303A               	movlw	58
 11147  2C04  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 11148                           
 11149                           ;ENC28J60.c: 471: b = SPI1_Exchange8bit(0)<< 8;
 11150  2C07  3000               	movlw	0
 11151  2C08  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 11152  2C0B  00F3               	movwf	??_ETH_Read16
 11153  2C0C  01F4               	clrf	??_ETH_Read16+1
 11154  2C0D  0873               	movf	??_ETH_Read16,w
 11155  2C0E  00F4               	movwf	??_ETH_Read16+1
 11156  2C0F  01F3               	clrf	??_ETH_Read16
 11157  2C10  0873               	movf	??_ETH_Read16,w
 11158  2C11  00F6               	movwf	ETH_Read16@b
 11159  2C12  0874               	movf	??_ETH_Read16+1,w
 11160  2C13  00F7               	movwf	ETH_Read16@b+1
 11161                           
 11162                           ;ENC28J60.c: 472: b |= SPI1_Exchange8bit(0);
 11163  2C14  3000               	movlw	0
 11164  2C15  31A9  21A5         	fcall	_SPI1_Exchange8bit
 11165  2C17  00F3               	movwf	??_ETH_Read16
 11166  2C18  01F4               	clrf	??_ETH_Read16+1
 11167  2C19  0873               	movf	??_ETH_Read16,w
 11168  2C1A  04F6               	iorwf	ETH_Read16@b,f
 11169  2C1B  0874               	movf	??_ETH_Read16+1,w
 11170  2C1C  04F7               	iorwf	ETH_Read16@b+1,f
 11171  2C1D  0022               	movlb	2	; select bank2
 11172  2C1E  170E               	bsf	14,6	;volatile
 11173                           
 11174                           ;ENC28J60.c: 475: return b;
 11175  2C1F  0877               	movf	ETH_Read16@b+1,w
 11176  2C20  00F2               	movwf	?_ETH_Read16+1
 11177  2C21  0876               	movf	ETH_Read16@b,w
 11178  2C22  00F1               	movwf	?_ETH_Read16
 11179  2C23  0008               	return
 11180  2C24                     __end_of_ETH_Read16:
 11181                           
 11182                           	psect	text36
 11183  25D1                     __ptext36:	
 11184 ;; *************** function _ETH_Copy *****************
 11185 ;; Defined at:
 11186 ;;		line 770 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11187 ;; Parameters:    Size  Location     Type
 11188 ;;  len             2    0[BANK0 ] unsigned int 
 11189 ;; Auto vars:     Size  Location     Type
 11190 ;;  temp_len        2    7[BANK0 ] unsigned int 
 11191 ;;  timer           2    5[BANK0 ] unsigned int 
 11192 ;;  tx_buffer_ad    2    3[BANK0 ] unsigned int 
 11193 ;; Return value:  Size  Location     Type
 11194 ;;                  1    wreg      enum E390
 11195 ;; Registers used:
 11196 ;;		wreg, status,2, status,0, pclath, cstack
 11197 ;; Tracked objects:
 11198 ;;		On entry : 1F/0
 11199 ;;		On exit  : 0/0
 11200 ;;		Unchanged: 0/0
 11201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11203 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11204 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11205 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11206 ;;Total ram usage:        9 bytes
 11207 ;; Hardware stack levels used:    1
 11208 ;; Hardware stack levels required when called:    6
 11209 ;; This function calls:
 11210 ;;		_ENC28_Bfc
 11211 ;;		_ENC28_Bfs
 11212 ;;		_ENC28_Rcr16
 11213 ;;		_ENC28_Rcr8
 11214 ;;		_ENC28_Wcr16
 11215 ;;		___wmul
 11216 ;; This function is called by:
 11217 ;;		_ICMP_EchoReply
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           
 11222                           ;psect for function _ETH_Copy
 11223  25D1                     _ETH_Copy:
 11224                           
 11225                           ;ENC28J60.c: 772: uint16_t tx_buffer_address;;ENC28J60.c: 773: uint16_t timer;;ENC28J60.
      +                          c: 774: uint16_t temp_len;;ENC28J60.c: 776: timer = 2 * len;
 11226                           
 11227                           ;incstack = 0
 11228                           ; Regs used in _ETH_Copy: [wreg+status,2+status,0+pclath+cstack]
 11229  25D1  3520               	lslf	ETH_Copy@len,w
 11230  25D2  00A5               	movwf	ETH_Copy@timer
 11231  25D3  0D21               	rlf	ETH_Copy@len+1,w
 11232  25D4  00A6               	movwf	ETH_Copy@timer+1
 11233                           
 11234                           ;ENC28J60.c: 778: while ((ENC28_Rcr8(J60_ECON1) & 0x20) != 0 && --timer) __nop();
 11235  25D5  2DE0               	goto	l5384
 11236  25D6                     l5386:
 11237  25D6  3001               	movlw	1
 11238  25D7  0020               	movlb	0	; select bank0
 11239  25D8  02A5               	subwf	ETH_Copy@timer,f
 11240  25D9  3000               	movlw	0
 11241  25DA  3BA6               	subwfb	ETH_Copy@timer+1,f
 11242  25DB  0825               	movf	ETH_Copy@timer,w
 11243  25DC  0426               	iorwf	ETH_Copy@timer+1,w
 11244  25DD  1903               	btfsc	3,2
 11245  25DE  2DE7               	goto	l5388
 11246  25DF  0000               	nop
 11247  25E0                     l5384:
 11248  25E0  30FF               	movlw	255
 11249  25E1  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 11250  25E4  3920               	andlw	32
 11251  25E5  1D03               	btfss	3,2
 11252  25E6  2DD6               	goto	l5386
 11253  25E7                     l5388:
 11254                           
 11255                           ;ENC28J60.c: 780: if((ENC28_Rcr8(J60_ECON1) & 0x20) == 0)
 11256  25E7  30FF               	movlw	255
 11257  25E8  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 11258  25EB  3920               	andlw	32
 11259  25EC  1D03               	btfss	3,2
 11260  25ED  2E7D               	goto	l1293
 11261                           
 11262                           ;ENC28J60.c: 781: {;ENC28J60.c: 782: tx_buffer_address = ENC28_Rcr16(J60_EWRPTL);
 11263  25EE  3002               	movlw	2
 11264  25EF  31AD  2562  31A5   	fcall	_ENC28_Rcr16
 11265  25F2  0875               	movf	?_ENC28_Rcr16+1,w
 11266  25F3  0020               	movlb	0	; select bank0
 11267  25F4  00A4               	movwf	ETH_Copy@tx_buffer_address+1
 11268  25F5  0874               	movf	?_ENC28_Rcr16,w
 11269  25F6  00A3               	movwf	ETH_Copy@tx_buffer_address
 11270                           
 11271                           ;ENC28J60.c: 784: ENC28_Wcr16(J60_EDMADSTL, tx_buffer_address);
 11272  25F7  0824               	movf	ETH_Copy@tx_buffer_address+1,w
 11273  25F8  00FB               	movwf	ENC28_Wcr16@v+1
 11274  25F9  0823               	movf	ETH_Copy@tx_buffer_address,w
 11275  25FA  00FA               	movwf	ENC28_Wcr16@v
 11276  25FB  3014               	movlw	20
 11277  25FC  31AC  2448  31A5   	fcall	_ENC28_Wcr16
 11278                           
 11279                           ;ENC28J60.c: 785: ENC28_Wcr16(J60_EDMASTL, ENC28_Rcr16(J60_ERDPTL));
 11280  25FF  3000               	movlw	0
 11281  2600  31AD  2562  31A5   	fcall	_ENC28_Rcr16
 11282  2603  0875               	movf	?_ENC28_Rcr16+1,w
 11283  2604  00FB               	movwf	ENC28_Wcr16@v+1
 11284  2605  0874               	movf	?_ENC28_Rcr16,w
 11285  2606  00FA               	movwf	ENC28_Wcr16@v
 11286  2607  3010               	movlw	16
 11287  2608  31AC  2448  31A5   	fcall	_ENC28_Wcr16
 11288                           
 11289                           ;ENC28J60.c: 787: tx_buffer_address += len;
 11290  260B  0020               	movlb	0	; select bank0
 11291  260C  0820               	movf	ETH_Copy@len,w
 11292  260D  07A3               	addwf	ETH_Copy@tx_buffer_address,f
 11293  260E  0821               	movf	ETH_Copy@len+1,w
 11294  260F  3DA4               	addwfc	ETH_Copy@tx_buffer_address+1,f
 11295                           
 11296                           ;ENC28J60.c: 788: temp_len = ENC28_Rcr16(J60_ERDPTL) + len;
 11297  2610  3000               	movlw	0
 11298  2611  31AD  2562  31A5   	fcall	_ENC28_Rcr16
 11299  2614  0020               	movlb	0	; select bank0
 11300  2615  0820               	movf	ETH_Copy@len,w
 11301  2616  0774               	addwf	?_ENC28_Rcr16,w
 11302  2617  00A7               	movwf	ETH_Copy@temp_len
 11303  2618  0821               	movf	ETH_Copy@len+1,w
 11304  2619  3D75               	addwfc	?_ENC28_Rcr16+1,w
 11305  261A  00A8               	movwf	ETH_Copy@temp_len+1
 11306                           
 11307                           ;ENC28J60.c: 790: if(temp_len > ((0x1FFF - (1500)) - 2))
 11308  261B  301A               	movlw	26
 11309  261C  0228               	subwf	ETH_Copy@temp_len+1,w
 11310  261D  3022               	movlw	34
 11311  261E  1903               	skipnz
 11312  261F  0227               	subwf	ETH_Copy@temp_len,w
 11313  2620  1C03               	skipc
 11314  2621  2E28               	goto	l5400
 11315                           
 11316                           ;ENC28J60.c: 791: {;ENC28J60.c: 792: temp_len = temp_len - (((0x1FFF - (1500)) - 2)) + (
      +                          0);
 11317  2622  0827               	movf	ETH_Copy@temp_len,w
 11318  2623  3EDF               	addlw	223
 11319  2624  00A7               	movwf	ETH_Copy@temp_len
 11320  2625  30E5               	movlw	229
 11321  2626  3D28               	addwfc	ETH_Copy@temp_len+1,w
 11322  2627  00A8               	movwf	ETH_Copy@temp_len+1
 11323  2628                     l5400:	
 11324                           ;ENC28J60.c: 794: }else
 11325                           
 11326                           ;ENC28J60.c: 793: ENC28_Wcr16(J60_EDMANDL, temp_len);
 11327                           
 11328                           
 11329                           ;ENC28J60.c: 795: {;ENC28J60.c: 796: ENC28_Wcr16(J60_EDMANDL, temp_len);
 11330  2628  0828               	movf	ETH_Copy@temp_len+1,w
 11331  2629  00FB               	movwf	ENC28_Wcr16@v+1
 11332  262A  0827               	movf	ETH_Copy@temp_len,w
 11333  262B  00FA               	movwf	ENC28_Wcr16@v
 11334  262C  3012               	movlw	18
 11335  262D  31AC  2448  31A5   	fcall	_ENC28_Wcr16
 11336                           
 11337                           ;ENC28J60.c: 797: };ENC28J60.c: 800: ENC28_Bfc(J60_ECON1, 0x10);
 11338  2630  3010               	movlw	16
 11339  2631  0020               	movlb	0	; select bank0
 11340  2632  00A2               	movwf	??_ETH_Copy
 11341  2633  0822               	movf	??_ETH_Copy,w
 11342  2634  00F4               	movwf	ENC28_Bfc@bits
 11343  2635  30FF               	movlw	255
 11344  2636  31AA  2280  31A5   	fcall	_ENC28_Bfc
 11345                           
 11346                           ;ENC28J60.c: 802: ENC28_Bfs(J60_ECON1, 0x20);
 11347  2639  3020               	movlw	32
 11348  263A  0020               	movlb	0	; select bank0
 11349  263B  00A2               	movwf	??_ETH_Copy
 11350  263C  0822               	movf	??_ETH_Copy,w
 11351  263D  00F4               	movwf	ENC28_Bfs@bits
 11352  263E  30FF               	movlw	255
 11353  263F  31AA  226D  31A5   	fcall	_ENC28_Bfs
 11354                           
 11355                           ;ENC28J60.c: 803: timer = 40 * len;
 11356  2642  0020               	movlb	0	; select bank0
 11357  2643  0821               	movf	ETH_Copy@len+1,w
 11358  2644  00F1               	movwf	___wmul@multiplier+1
 11359  2645  0820               	movf	ETH_Copy@len,w
 11360  2646  00F0               	movwf	___wmul@multiplier
 11361  2647  3028               	movlw	40
 11362  2648  00F2               	movwf	___wmul@multiplicand
 11363  2649  3000               	movlw	0
 11364  264A  00F3               	movwf	___wmul@multiplicand+1
 11365  264B  31AB  2389  31A5   	fcall	___wmul
 11366  264E  0871               	movf	?___wmul+1,w
 11367  264F  00A6               	movwf	ETH_Copy@timer+1
 11368  2650  0870               	movf	?___wmul,w
 11369  2651  00A5               	movwf	ETH_Copy@timer
 11370                           
 11371                           ;ENC28J60.c: 804: while ((ENC28_Rcr8(J60_ECON1) & 0x20)!=0 && --timer) __nop();
 11372  2652  2E5D               	goto	l5402
 11373  2653                     l5404:
 11374  2653  3001               	movlw	1
 11375  2654  0020               	movlb	0	; select bank0
 11376  2655  02A5               	subwf	ETH_Copy@timer,f
 11377  2656  3000               	movlw	0
 11378  2657  3BA6               	subwfb	ETH_Copy@timer+1,f
 11379  2658  0825               	movf	ETH_Copy@timer,w
 11380  2659  0426               	iorwf	ETH_Copy@timer+1,w
 11381  265A  1903               	btfsc	3,2
 11382  265B  2E64               	goto	l5406
 11383  265C  0000               	nop
 11384  265D                     l5402:
 11385  265D  30FF               	movlw	255
 11386  265E  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 11387  2661  3920               	andlw	32
 11388  2662  1D03               	btfss	3,2
 11389  2663  2E53               	goto	l5404
 11390  2664                     l5406:
 11391                           
 11392                           ;ENC28J60.c: 805: if((ENC28_Rcr8(J60_ECON1) & 0x20)==0)
 11393  2664  30FF               	movlw	255
 11394  2665  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 11395  2668  3920               	andlw	32
 11396  2669  1D03               	btfss	3,2
 11397  266A  2E7D               	goto	l1293
 11398                           
 11399                           ;ENC28J60.c: 806: {;ENC28J60.c: 808: ENC28_Wcr16(J60_EWRPTL, tx_buffer_address);
 11400  266B  0020               	movlb	0	; select bank0
 11401  266C  0824               	movf	ETH_Copy@tx_buffer_address+1,w
 11402  266D  00FB               	movwf	ENC28_Wcr16@v+1
 11403  266E  0823               	movf	ETH_Copy@tx_buffer_address,w
 11404  266F  00FA               	movwf	ENC28_Wcr16@v
 11405  2670  3002               	movlw	2
 11406  2671  31AC  2448         	fcall	_ENC28_Wcr16
 11407                           
 11408                           ;ENC28J60.c: 810: TXPacketSize += len;
 11409  2673  0020               	movlb	0	; select bank0
 11410  2674  0820               	movf	ETH_Copy@len,w
 11411  2675  0023               	movlb	3	; select bank3
 11412  2676  07A4               	addwf	_TXPacketSize^(0+384),f
 11413  2677  0020               	movlb	0	; select bank0
 11414  2678  0821               	movf	ETH_Copy@len+1,w
 11415  2679  0023               	movlb	3	; select bank3
 11416  267A  3DA5               	addwfc	(_TXPacketSize+1)^(0+384),f
 11417                           
 11418                           ;ENC28J60.c: 811: return SUCCESS;
 11419  267B  3001               	movlw	1
 11420  267C  0008               	return
 11421  267D                     l1293:
 11422  267D  0001               	reset	;# 
 11423                           
 11424                           ;ENC28J60.c: 815: return DMA_TIMEOUT;
 11425  267E  300C               	movlw	12
 11426  267F  0008               	return
 11427  2680                     __end_of_ETH_Copy:
 11428                           
 11429                           	psect	text37
 11430  2B89                     __ptext37:	
 11431 ;; *************** function ___wmul *****************
 11432 ;; Defined at:
 11433 ;;		line 15 in file "C:\Program Files\Microchip\xc8v220\pic\sources\c90\common\Umul16.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;  multiplier      2    0[COMMON] unsigned int 
 11436 ;;  multiplicand    2    2[COMMON] unsigned int 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  product         2    4[COMMON] unsigned int 
 11439 ;; Return value:  Size  Location     Type
 11440 ;;                  2    0[COMMON] unsigned int 
 11441 ;; Registers used:
 11442 ;;		wreg, status,2, status,0
 11443 ;; Tracked objects:
 11444 ;;		On entry : 1F/0
 11445 ;;		On exit  : 1F/0
 11446 ;;		Unchanged: 1F/0
 11447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11452 ;;Total ram usage:        6 bytes
 11453 ;; Hardware stack levels used:    1
 11454 ;; Hardware stack levels required when called:    3
 11455 ;; This function calls:
 11456 ;;		Nothing
 11457 ;; This function is called by:
 11458 ;;		_ETH_Copy
 11459 ;; This function uses a non-reentrant model
 11460 ;;
 11461                           
 11462                           
 11463                           ;psect for function ___wmul
 11464  2B89                     ___wmul:
 11465                           
 11466                           ;incstack = 0
 11467                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11468  2B89  01F4               	clrf	___wmul@product
 11469  2B8A  01F5               	clrf	___wmul@product+1
 11470  2B8B                     l5280:
 11471  2B8B  1C70               	btfss	___wmul@multiplier,0
 11472  2B8C  2B91               	goto	l1650
 11473  2B8D  0872               	movf	___wmul@multiplicand,w
 11474  2B8E  07F4               	addwf	___wmul@product,f
 11475  2B8F  0873               	movf	___wmul@multiplicand+1,w
 11476  2B90  3DF5               	addwfc	___wmul@product+1,f
 11477  2B91                     l1650:
 11478  2B91  3001               	movlw	1
 11479  2B92                     u3375:
 11480  2B92  35F2               	lslf	___wmul@multiplicand,f
 11481  2B93  0DF3               	rlf	___wmul@multiplicand+1,f
 11482  2B94  0B89               	decfsz	9,f
 11483  2B95  2B92               	goto	u3375
 11484  2B96  3001               	movlw	1
 11485  2B97                     u3385:
 11486  2B97  36F1               	lsrf	___wmul@multiplier+1,f
 11487  2B98  0CF0               	rrf	___wmul@multiplier,f
 11488  2B99  0B89               	decfsz	9,f
 11489  2B9A  2B97               	goto	u3385
 11490  2B9B  0870               	movf	___wmul@multiplier,w
 11491  2B9C  0471               	iorwf	___wmul@multiplier+1,w
 11492  2B9D  1D03               	btfss	3,2
 11493  2B9E  2B8B               	goto	l5280
 11494  2B9F  0875               	movf	___wmul@product+1,w
 11495  2BA0  00F1               	movwf	?___wmul+1
 11496  2BA1  0874               	movf	___wmul@product,w
 11497  2BA2  00F0               	movwf	?___wmul
 11498  2BA3  0008               	return
 11499  2BA4                     __end_of___wmul:
 11500                           
 11501                           	psect	text38
 11502  2E28                     __ptext38:	
 11503 ;; *************** function _ETH_Dump *****************
 11504 ;; Defined at:
 11505 ;;		line 714 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  length          2    0[BANK0 ] unsigned int 
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  newRXTail       2    2[BANK0 ] unsigned int 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  1    wreg      void 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0, pclath, cstack
 11514 ;; Tracked objects:
 11515 ;;		On entry : 1F/0
 11516 ;;		On exit  : 1B/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11519 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11520 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11522 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11523 ;;Total ram usage:        4 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; Hardware stack levels required when called:    6
 11526 ;; This function calls:
 11527 ;;		_ENC28_Rcr16
 11528 ;;		_ENC28_Wcr16
 11529 ;; This function is called by:
 11530 ;;		_TCP_ParseTCPOptions
 11531 ;;		_IPV4_Packet
 11532 ;;		_ICMP_Receive
 11533 ;; This function uses a non-reentrant model
 11534 ;;
 11535                           
 11536                           
 11537                           ;psect for function _ETH_Dump
 11538  2E28                     _ETH_Dump:
 11539                           
 11540                           ;ENC28J60.c: 716: uint16_t newRXTail;;ENC28J60.c: 718: length = (rxPacketStatusVector.by
      +                          teCount <= length) ? rxPacketStatusVector.byteCount : length;
 11541                           
 11542                           ;incstack = 0
 11543                           ; Regs used in _ETH_Dump: [wreg+status,2+status,0+pclath+cstack]
 11544  2E28  0024               	movlb	4	; select bank4
 11545  2E29  084F               	movf	(_rxPacketStatusVector+1)^(0+512),w
 11546  2E2A  0020               	movlb	0	; select bank0
 11547  2E2B  0221               	subwf	ETH_Dump@length+1,w
 11548  2E2C  1D03               	skipz
 11549  2E2D  2E32               	goto	u3425
 11550  2E2E  0024               	movlb	4	; select bank4
 11551  2E2F  084E               	movf	_rxPacketStatusVector^(0+512),w
 11552  2E30  0020               	movlb	0	; select bank0
 11553  2E31  0220               	subwf	ETH_Dump@length,w
 11554  2E32                     u3425:
 11555  2E32  1C03               	btfss	3,0
 11556  2E33  2E3C               	goto	l5348
 11557  2E34  0024               	movlb	4	; select bank4
 11558  2E35  084F               	movf	(_rxPacketStatusVector+1)^(0+512),w
 11559  2E36  0020               	movlb	0	; select bank0
 11560  2E37  00A1               	movwf	ETH_Dump@length+1
 11561  2E38  0024               	movlb	4	; select bank4
 11562  2E39  084E               	movf	_rxPacketStatusVector^(0+512),w
 11563  2E3A  0020               	movlb	0	; select bank0
 11564  2E3B  00A0               	movwf	ETH_Dump@length
 11565  2E3C                     l5348:
 11566                           
 11567                           ;ENC28J60.c: 719: if (length) {;
 11568  2E3C  0820               	movf	ETH_Dump@length,w
 11569  2E3D  0421               	iorwf	ETH_Dump@length+1,w
 11570  2E3E  1903               	btfsc	3,2
 11571  2E3F  0008               	return
 11572                           
 11573                           ;ENC28J60.c: 720: newRXTail = ENC28_Rcr16(J60_ERDPTL);
 11574  2E40  3000               	movlw	0
 11575  2E41  31AD  2562  31AE   	fcall	_ENC28_Rcr16
 11576  2E44  0875               	movf	?_ENC28_Rcr16+1,w
 11577  2E45  0020               	movlb	0	; select bank0
 11578  2E46  00A3               	movwf	ETH_Dump@newRXTail+1
 11579  2E47  0874               	movf	?_ENC28_Rcr16,w
 11580  2E48  00A2               	movwf	ETH_Dump@newRXTail
 11581                           
 11582                           ;ENC28J60.c: 721: newRXTail += length;
 11583  2E49  0820               	movf	ETH_Dump@length,w
 11584  2E4A  07A2               	addwf	ETH_Dump@newRXTail,f
 11585  2E4B  0821               	movf	ETH_Dump@length+1,w
 11586  2E4C  3DA3               	addwfc	ETH_Dump@newRXTail+1,f
 11587                           
 11588                           ;ENC28J60.c: 723: ENC28_Wcr16(J60_ERDPTL, newRXTail);
 11589  2E4D  0823               	movf	ETH_Dump@newRXTail+1,w
 11590  2E4E  00FB               	movwf	ENC28_Wcr16@v+1
 11591  2E4F  0822               	movf	ETH_Dump@newRXTail,w
 11592  2E50  00FA               	movwf	ENC28_Wcr16@v
 11593  2E51  3000               	movlw	0
 11594  2E52  31AC  2448         	fcall	_ENC28_Wcr16
 11595                           
 11596                           ;ENC28J60.c: 725: rxPacketStatusVector.byteCount -= length;
 11597  2E54  0020               	movlb	0	; select bank0
 11598  2E55  0820               	movf	ETH_Dump@length,w
 11599  2E56  0024               	movlb	4	; select bank4
 11600  2E57  02CE               	subwf	_rxPacketStatusVector^(0+512),f
 11601  2E58  0020               	movlb	0	; select bank0
 11602  2E59  0821               	movf	ETH_Dump@length+1,w
 11603  2E5A  0024               	movlb	4	; select bank4
 11604  2E5B  3BCF               	subwfb	(_rxPacketStatusVector+1)^(0+512),f
 11605  2E5C  0008               	return
 11606  2E5D                     __end_of_ETH_Dump:
 11607                           
 11608                           	psect	text39
 11609  2E93                     __ptext39:	
 11610 ;; *************** function _ETH_RxComputeChecksum *****************
 11611 ;; Defined at:
 11612 ;;		line 902 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;  len             2    8[BANK0 ] unsigned int 
 11615 ;;  seed            2   10[BANK0 ] unsigned int 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;  cksm            4   19[BANK0 ] unsigned long 
 11618 ;;  rxptr           2   17[BANK0 ] unsigned int 
 11619 ;; Return value:  Size  Location     Type
 11620 ;;                  2    8[BANK0 ] unsigned int 
 11621 ;; Registers used:
 11622 ;;		wreg, status,2, status,0, pclath, cstack
 11623 ;; Tracked objects:
 11624 ;;		On entry : 1F/0
 11625 ;;		On exit  : 1F/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11628 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11629 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11630 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11631 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11632 ;;Total ram usage:       15 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:    6
 11635 ;; This function calls:
 11636 ;;		_ENC28_Rcr16
 11637 ;;		_ENC28_Wcr16
 11638 ;;		_ETH_ComputeChecksum
 11639 ;; This function is called by:
 11640 ;;		_IPV4_Packet
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           
 11645                           ;psect for function _ETH_RxComputeChecksum
 11646  2E93                     _ETH_RxComputeChecksum:
 11647                           
 11648                           ;ENC28J60.c: 904: uint16_t rxptr;;ENC28J60.c: 905: uint32_t cksm;;ENC28J60.c: 908: rxptr
      +                           = ENC28_Rcr16(J60_ERDPTL);;
 11649                           
 11650                           ;incstack = 0
 11651                           ; Regs used in _ETH_RxComputeChecksum: [wreg+status,2+status,0+pclath+cstack]
 11652  2E93  3000               	movlw	0
 11653  2E94  31AD  2562  31AE   	fcall	_ENC28_Rcr16
 11654  2E97  0875               	movf	?_ENC28_Rcr16+1,w
 11655  2E98  0020               	movlb	0	; select bank0
 11656  2E99  00B2               	movwf	ETH_RxComputeChecksum@rxptr+1
 11657  2E9A  0874               	movf	?_ENC28_Rcr16,w
 11658  2E9B  00B1               	movwf	ETH_RxComputeChecksum@rxptr
 11659                           
 11660                           ;ENC28J60.c: 910: cksm = ETH_ComputeChecksum( len, seed);
 11661  2E9C  0829               	movf	ETH_RxComputeChecksum@len+1,w
 11662  2E9D  00F4               	movwf	ETH_ComputeChecksum@len+1
 11663  2E9E  0828               	movf	ETH_RxComputeChecksum@len,w
 11664  2E9F  00F3               	movwf	ETH_ComputeChecksum@len
 11665  2EA0  082B               	movf	ETH_RxComputeChecksum@seed+1,w
 11666  2EA1  00F6               	movwf	ETH_ComputeChecksum@seed+1
 11667  2EA2  082A               	movf	ETH_RxComputeChecksum@seed,w
 11668  2EA3  00F5               	movwf	ETH_ComputeChecksum@seed
 11669  2EA4  31A3  2359  31AE   	fcall	_ETH_ComputeChecksum
 11670  2EA7  0873               	movf	?_ETH_ComputeChecksum,w
 11671  2EA8  00B3               	movwf	ETH_RxComputeChecksum@cksm
 11672  2EA9  0874               	movf	?_ETH_ComputeChecksum+1,w
 11673  2EAA  00B4               	movwf	ETH_RxComputeChecksum@cksm+1
 11674  2EAB  01B5               	clrf	ETH_RxComputeChecksum@cksm+2
 11675  2EAC  01B6               	clrf	ETH_RxComputeChecksum@cksm+3
 11676                           
 11677                           ;ENC28J60.c: 913: ENC28_Wcr16(J60_ERDPTL,rxptr);
 11678  2EAD  0832               	movf	ETH_RxComputeChecksum@rxptr+1,w
 11679  2EAE  00FB               	movwf	ENC28_Wcr16@v+1
 11680  2EAF  0831               	movf	ETH_RxComputeChecksum@rxptr,w
 11681  2EB0  00FA               	movwf	ENC28_Wcr16@v
 11682  2EB1  3000               	movlw	0
 11683  2EB2  31AC  2448         	fcall	_ENC28_Wcr16
 11684                           
 11685                           ;ENC28J60.c: 916: return ((cksm & 0xFF00) >> 8) | ((cksm & 0x00FF) << 8);
 11686  2EB4  30FF               	movlw	255
 11687  2EB5  0020               	movlb	0	; select bank0
 11688  2EB6  0533               	andwf	ETH_RxComputeChecksum@cksm,w
 11689  2EB7  00AC               	movwf	??_ETH_RxComputeChecksum
 11690  2EB8  3000               	movlw	0
 11691  2EB9  0534               	andwf	ETH_RxComputeChecksum@cksm+1,w
 11692  2EBA  00AD               	movwf	??_ETH_RxComputeChecksum+1
 11693  2EBB  082C               	movf	??_ETH_RxComputeChecksum,w
 11694  2EBC  00AD               	movwf	??_ETH_RxComputeChecksum+1
 11695  2EBD  01AC               	clrf	??_ETH_RxComputeChecksum
 11696  2EBE  30FF               	movlw	255
 11697  2EBF  0534               	andwf	ETH_RxComputeChecksum@cksm+1,w
 11698  2EC0  00AF               	movwf	??_ETH_RxComputeChecksum+3
 11699  2EC1  3000               	movlw	0
 11700  2EC2  0535               	andwf	ETH_RxComputeChecksum@cksm+2,w
 11701  2EC3  00B0               	movwf	??_ETH_RxComputeChecksum+4
 11702  2EC4  082C               	movf	??_ETH_RxComputeChecksum,w
 11703  2EC5  042F               	iorwf	??_ETH_RxComputeChecksum+3,w
 11704  2EC6  00A8               	movwf	?_ETH_RxComputeChecksum
 11705  2EC7  082D               	movf	??_ETH_RxComputeChecksum+1,w
 11706  2EC8  0430               	iorwf	??_ETH_RxComputeChecksum+4,w
 11707  2EC9  00A9               	movwf	?_ETH_RxComputeChecksum+1
 11708  2ECA  0008               	return
 11709  2ECB                     __end_of_ETH_RxComputeChecksum:
 11710                           
 11711                           	psect	text40
 11712  2359                     __ptext40:	
 11713 ;; *************** function _ETH_ComputeChecksum *****************
 11714 ;; Defined at:
 11715 ;;		line 819 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  len             2    3[COMMON] unsigned int 
 11718 ;;  seed            2    5[COMMON] unsigned int 
 11719 ;; Auto vars:     Size  Location     Type
 11720 ;;  cksm            4    9[COMMON] unsigned long 
 11721 ;;  v               2    7[COMMON] unsigned int 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  2    3[COMMON] unsigned int 
 11724 ;; Registers used:
 11725 ;;		wreg, status,2, status,0, pclath, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 1F/0
 11728 ;;		On exit  : 1F/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11732 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11733 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11734 ;;      Totals:        10       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11735 ;;Total ram usage:       18 bytes
 11736 ;; Hardware stack levels used:    1
 11737 ;; Hardware stack levels required when called:    5
 11738 ;; This function calls:
 11739 ;;		_ETH_Read8
 11740 ;; This function is called by:
 11741 ;;		_ETH_RxComputeChecksum
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745                           
 11746                           ;psect for function _ETH_ComputeChecksum
 11747  2359                     _ETH_ComputeChecksum:
 11748                           
 11749                           ;ENC28J60.c: 821: uint32_t cksm;;ENC28J60.c: 822: uint16_t v;;ENC28J60.c: 824: cksm = se
      +                          ed;
 11750                           
 11751                           ;incstack = 0
 11752                           ; Regs used in _ETH_ComputeChecksum: [wreg+status,2+status,0+pclath+cstack]
 11753  2359  0875               	movf	ETH_ComputeChecksum@seed,w
 11754  235A  00F9               	movwf	ETH_ComputeChecksum@cksm
 11755  235B  0876               	movf	ETH_ComputeChecksum@seed+1,w
 11756  235C  00FA               	movwf	ETH_ComputeChecksum@cksm+1
 11757  235D  01FB               	clrf	ETH_ComputeChecksum@cksm+2
 11758  235E  01FC               	clrf	ETH_ComputeChecksum@cksm+3
 11759  235F                     l5904:	
 11760                           ;ENC28J60.c: 826: while(len > 1)
 11761                           
 11762  235F  3000               	movlw	0
 11763  2360  0274               	subwf	ETH_ComputeChecksum@len+1,w
 11764  2361  3002               	movlw	2
 11765  2362  1903               	skipnz
 11766  2363  0273               	subwf	ETH_ComputeChecksum@len,w
 11767  2364  1C03               	btfss	3,0
 11768  2365  2B82               	goto	l5906
 11769                           
 11770                           ;ENC28J60.c: 827: {;ENC28J60.c: 828: v = 0;
 11771  2366  01F7               	clrf	ETH_ComputeChecksum@v
 11772  2367  01F8               	clrf	ETH_ComputeChecksum@v+1
 11773                           
 11774                           ;ENC28J60.c: 829: ((char *)&v)[1] = ETH_Read8();
 11775  2368  31AA  2218  31A3   	fcall	_ETH_Read8
 11776  236B  0020               	movlb	0	; select bank0
 11777  236C  00A0               	movwf	??_ETH_ComputeChecksum
 11778  236D  0820               	movf	??_ETH_ComputeChecksum,w
 11779  236E  00F8               	movwf	ETH_ComputeChecksum@v+1
 11780                           
 11781                           ;ENC28J60.c: 830: ((char *)&v)[0] = ETH_Read8();
 11782  236F  31AA  2218  31A3   	fcall	_ETH_Read8
 11783  2372  0020               	movlb	0	; select bank0
 11784  2373  00A0               	movwf	??_ETH_ComputeChecksum
 11785  2374  0820               	movf	??_ETH_ComputeChecksum,w
 11786  2375  00F7               	movwf	ETH_ComputeChecksum@v
 11787                           
 11788                           ;ENC28J60.c: 831: cksm += v;
 11789  2376  0877               	movf	ETH_ComputeChecksum@v,w
 11790  2377  07F9               	addwf	ETH_ComputeChecksum@cksm,f
 11791  2378  0878               	movf	ETH_ComputeChecksum@v+1,w
 11792  2379  3DFA               	addwfc	ETH_ComputeChecksum@cksm+1,f
 11793  237A  3000               	movlw	0
 11794  237B  3DFB               	addwfc	ETH_ComputeChecksum@cksm+2,f
 11795  237C  3DFC               	addwfc	ETH_ComputeChecksum@cksm+3,f
 11796                           
 11797                           ;ENC28J60.c: 832: len -= 2;
 11798  237D  3002               	movlw	2
 11799  237E  02F3               	subwf	ETH_ComputeChecksum@len,f
 11800  237F  3000               	movlw	0
 11801  2380  3BF4               	subwfb	ETH_ComputeChecksum@len+1,f
 11802  2381  2B5F               	goto	l5904
 11803  2382                     l5906:
 11804                           
 11805                           ;ENC28J60.c: 833: };ENC28J60.c: 835: if(len)
 11806  2382  0873               	movf	ETH_ComputeChecksum@len,w
 11807  2383  0474               	iorwf	ETH_ComputeChecksum@len+1,w
 11808  2384  1903               	btfsc	3,2
 11809  2385  2B97               	goto	l5918
 11810                           
 11811                           ;ENC28J60.c: 836: {;ENC28J60.c: 837: v = 0;
 11812  2386  01F7               	clrf	ETH_ComputeChecksum@v
 11813  2387  01F8               	clrf	ETH_ComputeChecksum@v+1
 11814                           
 11815                           ;ENC28J60.c: 838: ((char *)&v)[1] = ETH_Read8();
 11816  2388  31AA  2218  31A3   	fcall	_ETH_Read8
 11817  238B  0020               	movlb	0	; select bank0
 11818  238C  00A0               	movwf	??_ETH_ComputeChecksum
 11819  238D  0820               	movf	??_ETH_ComputeChecksum,w
 11820  238E  00F8               	movwf	ETH_ComputeChecksum@v+1
 11821                           
 11822                           ;ENC28J60.c: 839: ((char *)&v)[0] = 0;
 11823  238F  01F7               	clrf	ETH_ComputeChecksum@v
 11824                           
 11825                           ;ENC28J60.c: 840: cksm += v;
 11826  2390  0877               	movf	ETH_ComputeChecksum@v,w
 11827  2391  07F9               	addwf	ETH_ComputeChecksum@cksm,f
 11828  2392  0878               	movf	ETH_ComputeChecksum@v+1,w
 11829  2393  3DFA               	addwfc	ETH_ComputeChecksum@cksm+1,f
 11830  2394  3000               	movlw	0
 11831  2395  3DFB               	addwfc	ETH_ComputeChecksum@cksm+2,f
 11832  2396  3DFC               	addwfc	ETH_ComputeChecksum@cksm+3,f
 11833  2397                     l5918:
 11834  2397  087B               	movf	ETH_ComputeChecksum@cksm+2,w
 11835  2398  047C               	iorwf	ETH_ComputeChecksum@cksm+3,w
 11836  2399  1903               	btfsc	3,2
 11837  239A  2BBE               	goto	l1311
 11838                           
 11839                           ;ENC28J60.c: 845: {;ENC28J60.c: 846: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 11840  239B  087B               	movf	ETH_ComputeChecksum@cksm+2,w
 11841  239C  00A0               	movwf	??_ETH_ComputeChecksum
 11842  239D  087C               	movf	ETH_ComputeChecksum@cksm+3,w
 11843  239E  00A1               	movwf	??_ETH_ComputeChecksum+1
 11844  239F  01A2               	clrf	??_ETH_ComputeChecksum+2
 11845  23A0  01A3               	clrf	??_ETH_ComputeChecksum+3
 11846  23A1  30FF               	movlw	255
 11847  23A2  0579               	andwf	ETH_ComputeChecksum@cksm,w
 11848  23A3  00A4               	movwf	??_ETH_ComputeChecksum+4
 11849  23A4  30FF               	movlw	255
 11850  23A5  057A               	andwf	ETH_ComputeChecksum@cksm+1,w
 11851  23A6  00A5               	movwf	??_ETH_ComputeChecksum+5
 11852  23A7  3000               	movlw	0
 11853  23A8  057B               	andwf	ETH_ComputeChecksum@cksm+2,w
 11854  23A9  00A6               	movwf	??_ETH_ComputeChecksum+6
 11855  23AA  3000               	movlw	0
 11856  23AB  057C               	andwf	ETH_ComputeChecksum@cksm+3,w
 11857  23AC  00A7               	movwf	??_ETH_ComputeChecksum+7
 11858  23AD  0824               	movf	??_ETH_ComputeChecksum+4,w
 11859  23AE  07A0               	addwf	??_ETH_ComputeChecksum,f
 11860  23AF  0825               	movf	??_ETH_ComputeChecksum+5,w
 11861  23B0  3DA1               	addwfc	??_ETH_ComputeChecksum+1,f
 11862  23B1  0826               	movf	??_ETH_ComputeChecksum+6,w
 11863  23B2  3DA2               	addwfc	??_ETH_ComputeChecksum+2,f
 11864  23B3  0827               	movf	??_ETH_ComputeChecksum+7,w
 11865  23B4  3DA3               	addwfc	??_ETH_ComputeChecksum+3,f
 11866  23B5  0823               	movf	??_ETH_ComputeChecksum+3,w
 11867  23B6  00FC               	movwf	ETH_ComputeChecksum@cksm+3
 11868  23B7  0822               	movf	??_ETH_ComputeChecksum+2,w
 11869  23B8  00FB               	movwf	ETH_ComputeChecksum@cksm+2
 11870  23B9  0821               	movf	??_ETH_ComputeChecksum+1,w
 11871  23BA  00FA               	movwf	ETH_ComputeChecksum@cksm+1
 11872  23BB  0820               	movf	??_ETH_ComputeChecksum,w
 11873  23BC  00F9               	movwf	ETH_ComputeChecksum@cksm
 11874  23BD  2B97               	goto	l5918
 11875  23BE                     l1311:
 11876                           
 11877                           ;ENC28J60.c: 847: };ENC28J60.c: 850: cksm = ~cksm;
 11878  23BE  09F9               	comf	ETH_ComputeChecksum@cksm,f
 11879  23BF  09FA               	comf	ETH_ComputeChecksum@cksm+1,f
 11880  23C0  09FB               	comf	ETH_ComputeChecksum@cksm+2,f
 11881  23C1  09FC               	comf	ETH_ComputeChecksum@cksm+3,f
 11882                           
 11883                           ;ENC28J60.c: 853: return cksm;
 11884  23C2  087A               	movf	ETH_ComputeChecksum@cksm+1,w
 11885  23C3  00F4               	movwf	?_ETH_ComputeChecksum+1
 11886  23C4  0879               	movf	ETH_ComputeChecksum@cksm,w
 11887  23C5  00F3               	movwf	?_ETH_ComputeChecksum
 11888  23C6  0008               	return
 11889  23C7                     __end_of_ETH_ComputeChecksum:
 11890                           
 11891                           	psect	text41
 11892  2A18                     __ptext41:	
 11893 ;; *************** function _ETH_Read8 *****************
 11894 ;; Defined at:
 11895 ;;		line 449 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;		None
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;  b               1    2[COMMON] unsigned char 
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1    wreg      unsigned char 
 11902 ;; Registers used:
 11903 ;;		wreg, status,2, status,0, pclath, cstack
 11904 ;; Tracked objects:
 11905 ;;		On entry : 1C/0
 11906 ;;		On exit  : 1F/2
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11913 ;;Total ram usage:        2 bytes
 11914 ;; Hardware stack levels used:    1
 11915 ;; Hardware stack levels required when called:    4
 11916 ;; This function calls:
 11917 ;;		_SPI1_Exchange8bit
 11918 ;; This function is called by:
 11919 ;;		_TCP_ParseTCPOptions
 11920 ;;		_ETH_ComputeChecksum
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           
 11925                           ;psect for function _ETH_Read8
 11926  2A18                     _ETH_Read8:
 11927                           
 11928                           ;incstack = 0
 11929                           ; Regs used in _ETH_Read8: [wreg+status,2+status,0+pclath+cstack]
 11930                           ;ENC28J60.c: 451: uint8_t b;;ENC28J60.c: 453: do{LATC6 = 0;} while(0);
 11931  2A18  0022               	movlb	2	; select bank2
 11932  2A19  130E               	bcf	14,6	;volatile
 11933                           
 11934                           ;ENC28J60.c: 454: SPI1_Exchange8bit(rbm_inst);
 11935  2A1A  303A               	movlw	58
 11936  2A1B  31A9  21A5  31AA   	fcall	_SPI1_Exchange8bit
 11937                           
 11938                           ;ENC28J60.c: 455: b = SPI1_Exchange8bit(0);
 11939  2A1E  3000               	movlw	0
 11940  2A1F  31A9  21A5         	fcall	_SPI1_Exchange8bit
 11941  2A21  00F1               	movwf	??_ETH_Read8
 11942  2A22  0871               	movf	??_ETH_Read8,w
 11943  2A23  00F2               	movwf	ETH_Read8@b
 11944  2A24  0022               	movlb	2	; select bank2
 11945  2A25  170E               	bsf	14,6	;volatile
 11946                           
 11947                           ;ENC28J60.c: 458: return b;
 11948  2A26  0872               	movf	ETH_Read8@b,w
 11949  2A27  0008               	return
 11950  2A28                     __end_of_ETH_Read8:
 11951                           
 11952                           	psect	text42
 11953  21BA                     __ptext42:	
 11954 ;; *************** function _ETH_NextPacketUpdate *****************
 11955 ;; Defined at:
 11956 ;;		line 253 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;		None
 11959 ;; Auto vars:     Size  Location     Type
 11960 ;;		None
 11961 ;; Return value:  Size  Location     Type
 11962 ;;                  1    wreg      void 
 11963 ;; Registers used:
 11964 ;;		wreg, status,2, status,0, pclath, cstack
 11965 ;; Tracked objects:
 11966 ;;		On entry : 1F/4
 11967 ;;		On exit  : 1F/4
 11968 ;;		Unchanged: 0/0
 11969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11974 ;;Total ram usage:        1 bytes
 11975 ;; Hardware stack levels used:    1
 11976 ;; Hardware stack levels required when called:    6
 11977 ;; This function calls:
 11978 ;;		_ENC28_Wcr16
 11979 ;;		_SPI1_Exchange8bit
 11980 ;; This function is called by:
 11981 ;;		_Network_Read
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           
 11986                           ;psect for function _ETH_NextPacketUpdate
 11987  21BA                     _ETH_NextPacketUpdate:
 11988                           
 11989                           ;ENC28J60.c: 257: if (nextPacketPointer == (0))
 11990                           
 11991                           ;incstack = 0
 11992                           ; Regs used in _ETH_NextPacketUpdate: [wreg+status,2+status,0+pclath+cstack]
 11993  21BA  0023               	movlb	3	; select bank3
 11994  21BB  0826               	movf	_nextPacketPointer^(0+384),w
 11995  21BC  0427               	iorwf	(_nextPacketPointer+1)^(0+384),w
 11996  21BD  1D03               	btfss	3,2
 11997  21BE  29C3               	goto	l6410
 11998                           
 11999                           ;ENC28J60.c: 258: ENC28_Wcr16(J60_ERXRDPTL, ((0x1FFF - (1500)) - 2));
 12000  21BF  3021               	movlw	33
 12001  21C0  00FA               	movwf	ENC28_Wcr16@v
 12002  21C1  301A               	movlw	26
 12003  21C2  29C8               	goto	L2
 12004  21C3                     l6410:
 12005                           
 12006                           ;ENC28J60.c: 259: else;ENC28J60.c: 260: ENC28_Wcr16(J60_ERXRDPTL, nextPacketPointer-1);
 12007  21C3  0826               	movf	_nextPacketPointer^(0+384),w
 12008  21C4  3EFF               	addlw	255
 12009  21C5  00FA               	movwf	ENC28_Wcr16@v
 12010  21C6  30FF               	movlw	255
 12011  21C7  3D27               	addwfc	(_nextPacketPointer+1)^(0+384),w
 12012  21C8                     L2:
 12013  21C8  00FB               	movwf	ENC28_Wcr16@v+1
 12014  21C9  300C               	movlw	12
 12015  21CA  31AC  2448  31A1   	fcall	_ENC28_Wcr16
 12016                           
 12017                           ;ENC28J60.c: 262: ENC28_Wcr16(J60_ERDPTL, nextPacketPointer);
 12018  21CD  0023               	movlb	3	; select bank3
 12019  21CE  0827               	movf	(_nextPacketPointer+1)^(0+384),w
 12020  21CF  00FB               	movwf	ENC28_Wcr16@v+1
 12021  21D0  0826               	movf	_nextPacketPointer^(0+384),w
 12022  21D1  00FA               	movwf	ENC28_Wcr16@v
 12023  21D2  3000               	movlw	0
 12024  21D3  31AC  2448  31A1   	fcall	_ENC28_Wcr16
 12025  21D6  130E               	bcf	14,6	;volatile
 12026                           
 12027                           ;ENC28J60.c: 265: SPI1_Exchange8bit(rbm_inst);
 12028  21D7  303A               	movlw	58
 12029  21D8  31A9  21A5  31A1   	fcall	_SPI1_Exchange8bit
 12030                           
 12031                           ;ENC28J60.c: 266: ((char *) &nextPacketPointer)[0] = SPI1_Exchange8bit(0);
 12032  21DB  3000               	movlw	0
 12033  21DC  31A9  21A5  31A1   	fcall	_SPI1_Exchange8bit
 12034  21DF  0020               	movlb	0	; select bank0
 12035  21E0  00A0               	movwf	??_ETH_NextPacketUpdate
 12036  21E1  0820               	movf	??_ETH_NextPacketUpdate,w
 12037  21E2  0023               	movlb	3	; select bank3
 12038  21E3  00A6               	movwf	_nextPacketPointer^(0+384)
 12039                           
 12040                           ;ENC28J60.c: 267: ((char *) &nextPacketPointer)[1] = SPI1_Exchange8bit(0);
 12041  21E4  3000               	movlw	0
 12042  21E5  31A9  21A5  31A1   	fcall	_SPI1_Exchange8bit
 12043  21E8  0020               	movlb	0	; select bank0
 12044  21E9  00A0               	movwf	??_ETH_NextPacketUpdate
 12045  21EA  0820               	movf	??_ETH_NextPacketUpdate,w
 12046  21EB  0023               	movlb	3	; select bank3
 12047  21EC  00A7               	movwf	(_nextPacketPointer^(0+384)+1)
 12048                           
 12049                           ;ENC28J60.c: 268: ((char *) &rxPacketStatusVector)[0] = SPI1_Exchange8bit(0);
 12050  21ED  3000               	movlw	0
 12051  21EE  31A9  21A5  31A1   	fcall	_SPI1_Exchange8bit
 12052  21F1  0020               	movlb	0	; select bank0
 12053  21F2  00A0               	movwf	??_ETH_NextPacketUpdate
 12054  21F3  0820               	movf	??_ETH_NextPacketUpdate,w
 12055  21F4  0024               	movlb	4	; select bank4
 12056  21F5  00CE               	movwf	_rxPacketStatusVector^(0+512)
 12057                           
 12058                           ;ENC28J60.c: 269: ((char *) &rxPacketStatusVector)[1] = SPI1_Exchange8bit(0);
 12059  21F6  3000               	movlw	0
 12060  21F7  31A9  21A5  31A1   	fcall	_SPI1_Exchange8bit
 12061  21FA  0020               	movlb	0	; select bank0
 12062  21FB  00A0               	movwf	??_ETH_NextPacketUpdate
 12063  21FC  0820               	movf	??_ETH_NextPacketUpdate,w
 12064  21FD  0024               	movlb	4	; select bank4
 12065  21FE  00CF               	movwf	(_rxPacketStatusVector^(0+512)+1)
 12066                           
 12067                           ;ENC28J60.c: 270: ((char *) &rxPacketStatusVector)[2] = SPI1_Exchange8bit(0);
 12068  21FF  3000               	movlw	0
 12069  2200  31A9  21A5  31A1   	fcall	_SPI1_Exchange8bit
 12070  2203  0020               	movlb	0	; select bank0
 12071  2204  00A0               	movwf	??_ETH_NextPacketUpdate
 12072  2205  0820               	movf	??_ETH_NextPacketUpdate,w
 12073  2206  0024               	movlb	4	; select bank4
 12074  2207  00D0               	movwf	(_rxPacketStatusVector^(0+512)+2)
 12075                           
 12076                           ;ENC28J60.c: 271: ((char *) &rxPacketStatusVector)[3] = SPI1_Exchange8bit(0);
 12077  2208  3000               	movlw	0
 12078  2209  31A9  21A5         	fcall	_SPI1_Exchange8bit
 12079  220B  0020               	movlb	0	; select bank0
 12080  220C  00A0               	movwf	??_ETH_NextPacketUpdate
 12081  220D  0820               	movf	??_ETH_NextPacketUpdate,w
 12082  220E  0024               	movlb	4	; select bank4
 12083  220F  00D1               	movwf	(_rxPacketStatusVector^(0+512)+3)
 12084  2210  0022               	movlb	2	; select bank2
 12085  2211  170E               	bsf	14,6	;volatile
 12086                           
 12087                           ;ENC28J60.c: 273: rxPacketStatusVector.byteCount -= 4;
 12088  2212  3004               	movlw	4
 12089  2213  0024               	movlb	4	; select bank4
 12090  2214  02CE               	subwf	_rxPacketStatusVector^(0+512),f
 12091  2215  3000               	movlw	0
 12092  2216  3BCF               	subwfb	(_rxPacketStatusVector+1)^(0+512),f
 12093  2217  0008               	return
 12094  2218                     __end_of_ETH_NextPacketUpdate:
 12095                           
 12096                           	psect	text43
 12097  2CBB                     __ptext43:	
 12098 ;; *************** function _ETH_Flush *****************
 12099 ;; Defined at:
 12100 ;;		line 732 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 12101 ;; Parameters:    Size  Location     Type
 12102 ;;		None
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;                  1    wreg      void 
 12107 ;; Registers used:
 12108 ;;		wreg, status,2, status,0, pclath, cstack
 12109 ;; Tracked objects:
 12110 ;;		On entry : 18/0
 12111 ;;		On exit  : 1F/2
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12117 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12118 ;;Total ram usage:        1 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    6
 12121 ;; This function calls:
 12122 ;;		_ENC28_Bfs
 12123 ;;		_ENC28_Wcr16
 12124 ;; This function is called by:
 12125 ;;		_Network_Read
 12126 ;; This function uses a non-reentrant model
 12127 ;;
 12128                           
 12129                           
 12130                           ;psect for function _ETH_Flush
 12131  2CBB                     _ETH_Flush:
 12132                           
 12133                           ;ENC28J60.c: 734: ethData.pktReady = 0;
 12134                           
 12135                           ;incstack = 0
 12136                           ; Regs used in _ETH_Flush: [wreg+status,2+status,0+pclath+cstack]
 12137  2CBB  0024               	movlb	4	; select bank4
 12138  2CBC  10C4               	bcf	_ethData^(0+512),1	;volatile
 12139                           
 12140                           ;ENC28J60.c: 735: if (nextPacketPointer == (0))ENC28_Wcr16(J60_ERXRDPTL, ((0x1FFF - (150
      +                          0)) - 2));
 12141  2CBD  0023               	movlb	3	; select bank3
 12142  2CBE  0826               	movf	_nextPacketPointer^(0+384),w
 12143  2CBF  0427               	iorwf	(_nextPacketPointer+1)^(0+384),w
 12144  2CC0  1D03               	btfss	3,2
 12145  2CC1  2CC6               	goto	l6536
 12146  2CC2  3021               	movlw	33
 12147  2CC3  00FA               	movwf	ENC28_Wcr16@v
 12148  2CC4  301A               	movlw	26
 12149  2CC5  2CCB               	goto	L3
 12150  2CC6                     l6536:
 12151                           
 12152                           ;ENC28J60.c: 736: else ENC28_Wcr16(J60_ERXRDPTL,nextPacketPointer-1);
 12153  2CC6  0826               	movf	_nextPacketPointer^(0+384),w
 12154  2CC7  3EFF               	addlw	255
 12155  2CC8  00FA               	movwf	ENC28_Wcr16@v
 12156  2CC9  30FF               	movlw	255
 12157  2CCA  3D27               	addwfc	(_nextPacketPointer+1)^(0+384),w
 12158  2CCB                     L3:
 12159  2CCB  00FB               	movwf	ENC28_Wcr16@v+1
 12160  2CCC  300C               	movlw	12
 12161  2CCD  31AC  2448  31AC   	fcall	_ENC28_Wcr16
 12162                           
 12163                           ;ENC28J60.c: 737: ENC28_Wcr16(J60_ERDPTL, nextPacketPointer);
 12164  2CD0  0023               	movlb	3	; select bank3
 12165  2CD1  0827               	movf	(_nextPacketPointer+1)^(0+384),w
 12166  2CD2  00FB               	movwf	ENC28_Wcr16@v+1
 12167  2CD3  0826               	movf	_nextPacketPointer^(0+384),w
 12168  2CD4  00FA               	movwf	ENC28_Wcr16@v
 12169  2CD5  3000               	movlw	0
 12170  2CD6  31AC  2448  31AC   	fcall	_ENC28_Wcr16
 12171                           
 12172                           ;ENC28J60.c: 739: ENC28_Bfs(J60_ECON2, 0x40);
 12173  2CD9  3040               	movlw	64
 12174  2CDA  0020               	movlb	0	; select bank0
 12175  2CDB  00A0               	movwf	??_ETH_Flush
 12176  2CDC  0820               	movf	??_ETH_Flush,w
 12177  2CDD  00F4               	movwf	ENC28_Bfs@bits
 12178  2CDE  30FE               	movlw	254
 12179  2CDF  31AA  226D         	fcall	_ENC28_Bfs
 12180  2CE1  0008               	return
 12181  2CE2                     __end_of_ETH_Flush:
 12182                           
 12183                           	psect	text44
 12184  1D48                     __ptext44:	
 12185 ;; *************** function _ARPV4_Packet *****************
 12186 ;; Defined at:
 12187 ;;		line 101 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 12188 ;; Parameters:    Size  Location     Type
 12189 ;;		None
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;  x               1   37[BANK0 ] unsigned char 
 12192 ;;  arpPtr          2   34[BANK0 ] PTR struct .
 12193 ;;		 -> arpMap(104), 
 12194 ;;  x               1   36[BANK0 ] unsigned char 
 12195 ;;  header         28   40[BANK0 ] struct .
 12196 ;;  entryPointer    2   38[BANK0 ] PTR struct .
 12197 ;;		 -> arpMap(104), 
 12198 ;;  length          2   30[BANK0 ] unsigned int 
 12199 ;;  ret             1   33[BANK0 ] enum E478
 12200 ;;  mergeFlag       1   32[BANK0 ] unsigned char 
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      enum E478
 12203 ;; Registers used:
 12204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 1D/2
 12207 ;;		On exit  : 1B/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;Total ram usage:       62 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; Hardware stack levels required when called:    7
 12217 ;; This function calls:
 12218 ;;		_ETH_ReadBlock
 12219 ;;		_ETH_Send
 12220 ;;		_ETH_WriteBlock
 12221 ;;		_ETH_WriteStart
 12222 ;; This function is called by:
 12223 ;;		_Network_Read
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _ARPV4_Packet
 12229  1D48                     _ARPV4_Packet:
 12230                           
 12231                           ;arpv4.c: 111: length = ETH_ReadBlock((char*)&header,sizeof(arpHeader_t));
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _ARPV4_Packet: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12235  1D48  3048               	movlw	low ARPV4_Packet@header
 12236  1D49  00F1               	movwf	ETH_ReadBlock@buffer
 12237  1D4A  3000               	movlw	high ARPV4_Packet@header
 12238  1D4B  00F2               	movwf	ETH_ReadBlock@buffer+1
 12239  1D4C  301C               	movlw	28
 12240  1D4D  00F3               	movwf	ETH_ReadBlock@length
 12241  1D4E  3000               	movlw	0
 12242  1D4F  00F4               	movwf	ETH_ReadBlock@length+1
 12243  1D50  31AF  273F  319D   	fcall	_ETH_ReadBlock
 12244  1D53  0872               	movf	?_ETH_ReadBlock+1,w
 12245  1D54  0020               	movlb	0	; select bank0
 12246  1D55  00BF               	movwf	ARPV4_Packet@length+1
 12247  1D56  0871               	movf	?_ETH_ReadBlock,w
 12248  1D57  00BE               	movwf	ARPV4_Packet@length
 12249                           
 12250                           ;arpv4.c: 112: if(length == sizeof(arpHeader_t))
 12251  1D58  301C               	movlw	28
 12252  1D59  063E               	xorwf	ARPV4_Packet@length,w
 12253  1D5A  043F               	iorwf	ARPV4_Packet@length+1,w
 12254  1D5B  1D03               	btfss	3,2
 12255  1D5C  0008               	return
 12256                           
 12257                           ;arpv4.c: 113: {;arpv4.c: 115: mergeFlag = 0;
 12258  1D5D  01C0               	clrf	ARPV4_Packet@mergeFlag
 12259                           
 12260                           ;arpv4.c: 116: entryPointer = arpMap;
 12261  1D5E  3088               	movlw	136
 12262  1D5F  00C6               	movwf	ARPV4_Packet@entryPointer
 12263  1D60  3027               	movlw	39
 12264  1D61  00C7               	movwf	ARPV4_Packet@entryPointer+1
 12265                           
 12266                           ;arpv4.c: 118: for(uint8_t x=8; x > 0; x--)
 12267  1D62  3008               	movlw	8
 12268  1D63  00A6               	movwf	??_ARPV4_Packet
 12269  1D64  0826               	movf	??_ARPV4_Packet,w
 12270  1D65  00C4               	movwf	ARPV4_Packet@x
 12271  1D66                     l8006:
 12272                           
 12273                           ;arpv4.c: 119: {;arpv4.c: 120: if( (header.spa == entryPointer->ipAddress) && (header.pt
      +                          ype == entryPointer->protocolType) )
 12274  1D66  0846               	movf	ARPV4_Packet@entryPointer,w
 12275  1D67  0086               	movwf	6
 12276  1D68  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12277  1D69  0087               	movwf	7
 12278  1D6A  3146               	addfsr 1,6
 12279  1D6B  3F40               	moviw [0]fsr1
 12280  1D6C  00A6               	movwf	??_ARPV4_Packet
 12281  1D6D  3F41               	moviw [1]fsr1
 12282  1D6E  00A7               	movwf	??_ARPV4_Packet+1
 12283  1D6F  3F42               	moviw [2]fsr1
 12284  1D70  00A8               	movwf	??_ARPV4_Packet+2
 12285  1D71  3F43               	moviw [3]fsr1
 12286  1D72  00A9               	movwf	??_ARPV4_Packet+3
 12287  1D73  0829               	movf	??_ARPV4_Packet+3,w
 12288  1D74  0659               	xorwf	ARPV4_Packet@header+17,w
 12289  1D75  1D03               	skipz
 12290  1D76  2D81               	goto	u7015
 12291  1D77  0828               	movf	??_ARPV4_Packet+2,w
 12292  1D78  0658               	xorwf	ARPV4_Packet@header+16,w
 12293  1D79  1D03               	skipz
 12294  1D7A  2D81               	goto	u7015
 12295  1D7B  0827               	movf	??_ARPV4_Packet+1,w
 12296  1D7C  0657               	xorwf	ARPV4_Packet@header+15,w
 12297  1D7D  1D03               	skipz
 12298  1D7E  2D81               	goto	u7015
 12299  1D7F  0826               	movf	??_ARPV4_Packet,w
 12300  1D80  0656               	xorwf	ARPV4_Packet@header+14,w
 12301  1D81                     u7015:
 12302  1D81  1D03               	skipz
 12303  1D82  2DAB               	goto	l8016
 12304  1D83  0846               	movf	ARPV4_Packet@entryPointer,w
 12305  1D84  0086               	movwf	6
 12306  1D85  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12307  1D86  0087               	movwf	7
 12308  1D87  314A               	addfsr 1,10
 12309  1D88  3F40               	moviw [0]fsr1
 12310  1D89  00A6               	movwf	??_ARPV4_Packet
 12311  1D8A  3F41               	moviw [1]fsr1
 12312  1D8B  00A7               	movwf	??_ARPV4_Packet+1
 12313  1D8C  0827               	movf	??_ARPV4_Packet+1,w
 12314  1D8D  064B               	xorwf	ARPV4_Packet@header+3,w
 12315  1D8E  1D03               	skipz
 12316  1D8F  2D92               	goto	u7025
 12317  1D90  0826               	movf	??_ARPV4_Packet,w
 12318  1D91  064A               	xorwf	ARPV4_Packet@header+2,w
 12319  1D92                     u7025:
 12320  1D92  1D03               	skipz
 12321  1D93  2DAB               	goto	l8016
 12322                           
 12323                           ;arpv4.c: 121: {;arpv4.c: 122: entryPointer->age = 0;
 12324  1D94  0846               	movf	ARPV4_Packet@entryPointer,w
 12325  1D95  0086               	movwf	6
 12326  1D96  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12327  1D97  0087               	movwf	7
 12328  1D98  314C               	addfsr 1,12
 12329  1D99  0181               	clrf	1
 12330                           
 12331                           ;arpv4.c: 123: entryPointer->macAddress.s = header.sha.s;
 12332  1D9A  3008               	movlw	8
 12333  1D9B  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12334  1D9C  0086               	movwf	6
 12335  1D9D  0187               	clrf	7
 12336  1D9E  0846               	movf	ARPV4_Packet@entryPointer,w
 12337  1D9F  0084               	movwf	4
 12338  1DA0  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12339  1DA1  0085               	movwf	5
 12340  1DA2  3006               	movlw	6
 12341  1DA3  00A6               	movwf	??_ARPV4_Packet
 12342  1DA4                     u7030:
 12343  1DA4  0016               	moviw fsr1++
 12344  1DA5  001A               	movwi fsr0++
 12345  1DA6  0BA6               	decfsz	??_ARPV4_Packet,f
 12346  1DA7  2DA4               	goto	u7030
 12347                           
 12348                           ;arpv4.c: 124: mergeFlag = 1;
 12349  1DA8  01C0               	clrf	ARPV4_Packet@mergeFlag
 12350  1DA9  0AC0               	incf	ARPV4_Packet@mergeFlag,f
 12351                           
 12352                           ;arpv4.c: 125: break;
 12353  1DAA  2DB4               	goto	l8022
 12354  1DAB                     l8016:
 12355                           
 12356                           ;arpv4.c: 126: };arpv4.c: 127: entryPointer++;
 12357  1DAB  300D               	movlw	13
 12358  1DAC  07C6               	addwf	ARPV4_Packet@entryPointer,f
 12359  1DAD  3000               	movlw	0
 12360  1DAE  3DC7               	addwfc	ARPV4_Packet@entryPointer+1,f
 12361  1DAF  3001               	movlw	1
 12362  1DB0  02C4               	subwf	ARPV4_Packet@x,f
 12363  1DB1  0844               	movf	ARPV4_Packet@x,w
 12364  1DB2  1D03               	btfss	3,2
 12365  1DB3  2D66               	goto	l8006
 12366  1DB4                     l8022:
 12367                           
 12368                           ;arpv4.c: 128: };arpv4.c: 130: if((ip_database_info.ipv4_myAddress) && ((ip_database_inf
      +                          o.ipv4_myAddress) == ((((uint32_t)header.tpa&(uint32_t)0xff000000) >> 24) | (((uint32_t)
      +                          header.tpa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.tpa&(uint32_t)0x0000ff00) <<
      +                           8) | (((uint32_t
 12369  1DB4  0024               	movlb	4	; select bank4
 12370  1DB5  0823               	movf	(_ip_database_info+3)^(0+512),w
 12371  1DB6  0422               	iorwf	(_ip_database_info+2)^(0+512),w
 12372  1DB7  0421               	iorwf	(_ip_database_info+1)^(0+512),w
 12373  1DB8  0420               	iorwf	_ip_database_info^(0+512),w
 12374  1DB9  1903               	skipnz
 12375  1DBA  0008               	return
 12376  1DBB  3018               	movlw	24
 12377  1DBC  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12378  1DBD  0086               	movwf	6
 12379  1DBE  0187               	clrf	7
 12380  1DBF  30FF               	movlw	255
 12381  1DC0  0501               	andwf	1,w
 12382  1DC1  0020               	movlb	0	; select bank0
 12383  1DC2  00A6               	movwf	??_ARPV4_Packet
 12384  1DC3  3141               	addfsr 1,1
 12385  1DC4  3000               	movlw	0
 12386  1DC5  0501               	andwf	1,w
 12387  1DC6  00A7               	movwf	??_ARPV4_Packet+1
 12388  1DC7  3141               	addfsr 1,1
 12389  1DC8  3000               	movlw	0
 12390  1DC9  0501               	andwf	1,w
 12391  1DCA  00A8               	movwf	??_ARPV4_Packet+2
 12392  1DCB  3141               	addfsr 1,1
 12393  1DCC  3000               	movlw	0
 12394  1DCD  0501               	andwf	1,w
 12395  1DCE  00A9               	movwf	??_ARPV4_Packet+3
 12396  1DCF  3018               	movlw	24
 12397  1DD0                     u7065:
 12398  1DD0  35A6               	lslf	??_ARPV4_Packet,f
 12399  1DD1  0DA7               	rlf	??_ARPV4_Packet+1,f
 12400  1DD2  0DA8               	rlf	??_ARPV4_Packet+2,f
 12401  1DD3  0DA9               	rlf	??_ARPV4_Packet+3,f
 12402  1DD4  0B89               	decfsz	9,f
 12403  1DD5  2DD0               	goto	u7065
 12404  1DD6  3018               	movlw	24
 12405  1DD7  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12406  1DD8  0086               	movwf	6
 12407  1DD9  0187               	clrf	7
 12408  1DDA  3000               	movlw	0
 12409  1DDB  0501               	andwf	1,w
 12410  1DDC  00AA               	movwf	??_ARPV4_Packet+4
 12411  1DDD  3141               	addfsr 1,1
 12412  1DDE  30FF               	movlw	255
 12413  1DDF  0501               	andwf	1,w
 12414  1DE0  00AB               	movwf	??_ARPV4_Packet+5
 12415  1DE1  3141               	addfsr 1,1
 12416  1DE2  3000               	movlw	0
 12417  1DE3  0501               	andwf	1,w
 12418  1DE4  00AC               	movwf	??_ARPV4_Packet+6
 12419  1DE5  3141               	addfsr 1,1
 12420  1DE6  3000               	movlw	0
 12421  1DE7  0501               	andwf	1,w
 12422  1DE8  00AD               	movwf	??_ARPV4_Packet+7
 12423  1DE9  3008               	movlw	8
 12424  1DEA                     u7075:
 12425  1DEA  35AA               	lslf	??_ARPV4_Packet+4,f
 12426  1DEB  0DAB               	rlf	??_ARPV4_Packet+5,f
 12427  1DEC  0DAC               	rlf	??_ARPV4_Packet+6,f
 12428  1DED  0DAD               	rlf	??_ARPV4_Packet+7,f
 12429  1DEE  0B89               	decfsz	9,f
 12430  1DEF  2DEA               	goto	u7075
 12431  1DF0  3000               	movlw	0
 12432  1DF1  00AE               	movwf	??_ARPV4_Packet+8
 12433  1DF2  30FF               	movlw	255
 12434  1DF3  00AF               	movwf	??_ARPV4_Packet+9
 12435  1DF4  3000               	movlw	0
 12436  1DF5  00B0               	movwf	??_ARPV4_Packet+10
 12437  1DF6  3000               	movlw	0
 12438  1DF7  00B1               	movwf	??_ARPV4_Packet+11
 12439  1DF8  0860               	movf	ARPV4_Packet@header+24,w
 12440  1DF9  00B2               	movwf	??_ARPV4_Packet+12
 12441  1DFA  0861               	movf	ARPV4_Packet@header+25,w
 12442  1DFB  00B3               	movwf	??_ARPV4_Packet+13
 12443  1DFC  0862               	movf	ARPV4_Packet@header+26,w
 12444  1DFD  00B4               	movwf	??_ARPV4_Packet+14
 12445  1DFE  0863               	movf	ARPV4_Packet@header+27,w
 12446  1DFF  00B5               	movwf	??_ARPV4_Packet+15
 12447  1E00  3008               	movlw	8
 12448  1E01                     u7085:
 12449  1E01  36B5               	lsrf	??_ARPV4_Packet+15,f
 12450  1E02  0CB4               	rrf	??_ARPV4_Packet+14,f
 12451  1E03  0CB3               	rrf	??_ARPV4_Packet+13,f
 12452  1E04  0CB2               	rrf	??_ARPV4_Packet+12,f
 12453  1E05  0B89               	decfsz	9,f
 12454  1E06  2E01               	goto	u7085
 12455  1E07  0832               	movf	??_ARPV4_Packet+12,w
 12456  1E08  05AE               	andwf	??_ARPV4_Packet+8,f
 12457  1E09  0833               	movf	??_ARPV4_Packet+13,w
 12458  1E0A  05AF               	andwf	??_ARPV4_Packet+9,f
 12459  1E0B  0834               	movf	??_ARPV4_Packet+14,w
 12460  1E0C  05B0               	andwf	??_ARPV4_Packet+10,f
 12461  1E0D  0835               	movf	??_ARPV4_Packet+15,w
 12462  1E0E  05B1               	andwf	??_ARPV4_Packet+11,f
 12463  1E0F  30FF               	movlw	255
 12464  1E10  00B6               	movwf	??_ARPV4_Packet+16
 12465  1E11  3000               	movlw	0
 12466  1E12  00B7               	movwf	??_ARPV4_Packet+17
 12467  1E13  3000               	movlw	0
 12468  1E14  00B8               	movwf	??_ARPV4_Packet+18
 12469  1E15  3000               	movlw	0
 12470  1E16  00B9               	movwf	??_ARPV4_Packet+19
 12471  1E17  0860               	movf	ARPV4_Packet@header+24,w
 12472  1E18  00BA               	movwf	??_ARPV4_Packet+20
 12473  1E19  0861               	movf	ARPV4_Packet@header+25,w
 12474  1E1A  00BB               	movwf	??_ARPV4_Packet+21
 12475  1E1B  0862               	movf	ARPV4_Packet@header+26,w
 12476  1E1C  00BC               	movwf	??_ARPV4_Packet+22
 12477  1E1D  0863               	movf	ARPV4_Packet@header+27,w
 12478  1E1E  00BD               	movwf	??_ARPV4_Packet+23
 12479  1E1F  3018               	movlw	24
 12480  1E20                     u7095:
 12481  1E20  36BD               	lsrf	??_ARPV4_Packet+23,f
 12482  1E21  0CBC               	rrf	??_ARPV4_Packet+22,f
 12483  1E22  0CBB               	rrf	??_ARPV4_Packet+21,f
 12484  1E23  0CBA               	rrf	??_ARPV4_Packet+20,f
 12485  1E24  0B89               	decfsz	9,f
 12486  1E25  2E20               	goto	u7095
 12487  1E26  083A               	movf	??_ARPV4_Packet+20,w
 12488  1E27  05B6               	andwf	??_ARPV4_Packet+16,f
 12489  1E28  083B               	movf	??_ARPV4_Packet+21,w
 12490  1E29  05B7               	andwf	??_ARPV4_Packet+17,f
 12491  1E2A  083C               	movf	??_ARPV4_Packet+22,w
 12492  1E2B  05B8               	andwf	??_ARPV4_Packet+18,f
 12493  1E2C  083D               	movf	??_ARPV4_Packet+23,w
 12494  1E2D  05B9               	andwf	??_ARPV4_Packet+19,f
 12495  1E2E  0836               	movf	??_ARPV4_Packet+16,w
 12496  1E2F  04AE               	iorwf	??_ARPV4_Packet+8,f
 12497  1E30  0837               	movf	??_ARPV4_Packet+17,w
 12498  1E31  04AF               	iorwf	??_ARPV4_Packet+9,f
 12499  1E32  0838               	movf	??_ARPV4_Packet+18,w
 12500  1E33  04B0               	iorwf	??_ARPV4_Packet+10,f
 12501  1E34  0839               	movf	??_ARPV4_Packet+19,w
 12502  1E35  04B1               	iorwf	??_ARPV4_Packet+11,f
 12503  1E36  082E               	movf	??_ARPV4_Packet+8,w
 12504  1E37  04AA               	iorwf	??_ARPV4_Packet+4,f
 12505  1E38  082F               	movf	??_ARPV4_Packet+9,w
 12506  1E39  04AB               	iorwf	??_ARPV4_Packet+5,f
 12507  1E3A  0830               	movf	??_ARPV4_Packet+10,w
 12508  1E3B  04AC               	iorwf	??_ARPV4_Packet+6,f
 12509  1E3C  0831               	movf	??_ARPV4_Packet+11,w
 12510  1E3D  04AD               	iorwf	??_ARPV4_Packet+7,f
 12511  1E3E  082A               	movf	??_ARPV4_Packet+4,w
 12512  1E3F  04A6               	iorwf	??_ARPV4_Packet,f
 12513  1E40  082B               	movf	??_ARPV4_Packet+5,w
 12514  1E41  04A7               	iorwf	??_ARPV4_Packet+1,f
 12515  1E42  082C               	movf	??_ARPV4_Packet+6,w
 12516  1E43  04A8               	iorwf	??_ARPV4_Packet+2,f
 12517  1E44  082D               	movf	??_ARPV4_Packet+7,w
 12518  1E45  04A9               	iorwf	??_ARPV4_Packet+3,f
 12519  1E46  0024               	movlb	4	; select bank4
 12520  1E47  0823               	movf	(_ip_database_info+3)^(0+512),w
 12521  1E48  0020               	movlb	0	; select bank0
 12522  1E49  0629               	xorwf	??_ARPV4_Packet+3,w
 12523  1E4A  1D03               	skipz
 12524  1E4B  2E5C               	goto	u7105
 12525  1E4C  0024               	movlb	4	; select bank4
 12526  1E4D  0822               	movf	(_ip_database_info+2)^(0+512),w
 12527  1E4E  0020               	movlb	0	; select bank0
 12528  1E4F  0628               	xorwf	??_ARPV4_Packet+2,w
 12529  1E50  1D03               	skipz
 12530  1E51  2E5C               	goto	u7105
 12531  1E52  0024               	movlb	4	; select bank4
 12532  1E53  0821               	movf	(_ip_database_info+1)^(0+512),w
 12533  1E54  0020               	movlb	0	; select bank0
 12534  1E55  0627               	xorwf	??_ARPV4_Packet+1,w
 12535  1E56  1D03               	skipz
 12536  1E57  2E5C               	goto	u7105
 12537  1E58  0024               	movlb	4	; select bank4
 12538  1E59  0820               	movf	_ip_database_info^(0+512),w
 12539  1E5A  0020               	movlb	0	; select bank0
 12540  1E5B  0626               	xorwf	??_ARPV4_Packet,w
 12541  1E5C                     u7105:
 12542  1E5C  1D03               	skipz
 12543  1E5D  0008               	return
 12544                           
 12545                           ;arpv4.c: 131: {;arpv4.c: 132: if(!mergeFlag)
 12546  1E5E  0840               	movf	ARPV4_Packet@mergeFlag,w
 12547  1E5F  1D03               	btfss	3,2
 12548  1E60  2F3C               	goto	l8050
 12549                           
 12550                           ;arpv4.c: 133: {;arpv4.c: 135: entryPointer = arpMap;
 12551  1E61  3088               	movlw	136
 12552  1E62  00C6               	movwf	ARPV4_Packet@entryPointer
 12553  1E63  3027               	movlw	39
 12554  1E64  00C7               	movwf	ARPV4_Packet@entryPointer+1
 12555                           
 12556                           ;arpv4.c: 136: arpMap_t *arpPtr = arpMap;
 12557  1E65  3088               	movlw	136
 12558  1E66  00C2               	movwf	ARPV4_Packet@arpPtr
 12559  1E67  3027               	movlw	39
 12560  1E68  00C3               	movwf	ARPV4_Packet@arpPtr+1
 12561                           
 12562                           ;arpv4.c: 137: for(uint8_t x=8; x !=0; x--)
 12563  1E69  3008               	movlw	8
 12564  1E6A  00A6               	movwf	??_ARPV4_Packet
 12565  1E6B  0826               	movf	??_ARPV4_Packet,w
 12566  1E6C  00C5               	movwf	ARPV4_Packet@x_219
 12567  1E6D                     l8034:
 12568                           
 12569                           ;arpv4.c: 138: {;arpv4.c: 139: if(entryPointer->age < arpPtr->age)
 12570  1E6D  0846               	movf	ARPV4_Packet@entryPointer,w
 12571  1E6E  0086               	movwf	6
 12572  1E6F  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12573  1E70  0087               	movwf	7
 12574  1E71  314C               	addfsr 1,12
 12575  1E72  0842               	movf	ARPV4_Packet@arpPtr,w
 12576  1E73  0084               	movwf	4
 12577  1E74  0843               	movf	ARPV4_Packet@arpPtr+1,w
 12578  1E75  0085               	movwf	5
 12579  1E76  310C               	addfsr 0,12
 12580  1E77  0800               	movf	0,w
 12581  1E78  0201               	subwf	1,w
 12582  1E79  1803               	skipnc
 12583  1E7A  2E7F               	goto	l72
 12584                           
 12585                           ;arpv4.c: 140: {;arpv4.c: 141: entryPointer = arpPtr;
 12586  1E7B  0843               	movf	ARPV4_Packet@arpPtr+1,w
 12587  1E7C  00C7               	movwf	ARPV4_Packet@entryPointer+1
 12588  1E7D  0842               	movf	ARPV4_Packet@arpPtr,w
 12589  1E7E  00C6               	movwf	ARPV4_Packet@entryPointer
 12590  1E7F                     l72:
 12591                           
 12592                           ;arpv4.c: 142: };arpv4.c: 144: arpPtr++;
 12593  1E7F  300D               	movlw	13
 12594  1E80  07C2               	addwf	ARPV4_Packet@arpPtr,f
 12595  1E81  3000               	movlw	0
 12596  1E82  3DC3               	addwfc	ARPV4_Packet@arpPtr+1,f
 12597  1E83  3001               	movlw	1
 12598  1E84  02C5               	subwf	ARPV4_Packet@x_219,f
 12599  1E85  0845               	movf	ARPV4_Packet@x_219,w
 12600  1E86  1D03               	btfss	3,2
 12601  1E87  2E6D               	goto	l8034
 12602                           
 12603                           ;arpv4.c: 145: };arpv4.c: 148: entryPointer->age = 0;
 12604  1E88  0846               	movf	ARPV4_Packet@entryPointer,w
 12605  1E89  0086               	movwf	6
 12606  1E8A  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12607  1E8B  0087               	movwf	7
 12608  1E8C  314C               	addfsr 1,12
 12609  1E8D  0181               	clrf	1
 12610                           
 12611                           ;arpv4.c: 149: entryPointer->macAddress.s = header.sha.s;
 12612  1E8E  3008               	movlw	8
 12613  1E8F  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12614  1E90  0086               	movwf	6
 12615  1E91  0187               	clrf	7
 12616  1E92  0846               	movf	ARPV4_Packet@entryPointer,w
 12617  1E93  0084               	movwf	4
 12618  1E94  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12619  1E95  0085               	movwf	5
 12620  1E96  3006               	movlw	6
 12621  1E97  00A6               	movwf	??_ARPV4_Packet
 12622  1E98                     u7140:
 12623  1E98  0016               	moviw fsr1++
 12624  1E99  001A               	movwi fsr0++
 12625  1E9A  0BA6               	decfsz	??_ARPV4_Packet,f
 12626  1E9B  2E98               	goto	u7140
 12627                           
 12628                           ;arpv4.c: 150: entryPointer->ipAddress = ((((uint32_t)header.spa&(uint32_t)0xff000000) >
      +                          > 24) | (((uint32_t)header.spa&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)header.spa&(uin
      +                          t32_t)0x0000ff00) << 8) | (((uint32_t)header.spa&(uint32_t)0x000000ff) << 24) );
 12629  1E9C  300E               	movlw	14
 12630  1E9D  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12631  1E9E  0086               	movwf	6
 12632  1E9F  0187               	clrf	7
 12633  1EA0  30FF               	movlw	255
 12634  1EA1  0501               	andwf	1,w
 12635  1EA2  00A6               	movwf	??_ARPV4_Packet
 12636  1EA3  3141               	addfsr 1,1
 12637  1EA4  3000               	movlw	0
 12638  1EA5  0501               	andwf	1,w
 12639  1EA6  00A7               	movwf	??_ARPV4_Packet+1
 12640  1EA7  3141               	addfsr 1,1
 12641  1EA8  3000               	movlw	0
 12642  1EA9  0501               	andwf	1,w
 12643  1EAA  00A8               	movwf	??_ARPV4_Packet+2
 12644  1EAB  3141               	addfsr 1,1
 12645  1EAC  3000               	movlw	0
 12646  1EAD  0501               	andwf	1,w
 12647  1EAE  00A9               	movwf	??_ARPV4_Packet+3
 12648  1EAF  3018               	movlw	24
 12649  1EB0                     u7155:
 12650  1EB0  35A6               	lslf	??_ARPV4_Packet,f
 12651  1EB1  0DA7               	rlf	??_ARPV4_Packet+1,f
 12652  1EB2  0DA8               	rlf	??_ARPV4_Packet+2,f
 12653  1EB3  0DA9               	rlf	??_ARPV4_Packet+3,f
 12654  1EB4  0B89               	decfsz	9,f
 12655  1EB5  2EB0               	goto	u7155
 12656  1EB6  300E               	movlw	14
 12657  1EB7  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12658  1EB8  0086               	movwf	6
 12659  1EB9  0187               	clrf	7
 12660  1EBA  3000               	movlw	0
 12661  1EBB  0501               	andwf	1,w
 12662  1EBC  00AA               	movwf	??_ARPV4_Packet+4
 12663  1EBD  3141               	addfsr 1,1
 12664  1EBE  30FF               	movlw	255
 12665  1EBF  0501               	andwf	1,w
 12666  1EC0  00AB               	movwf	??_ARPV4_Packet+5
 12667  1EC1  3141               	addfsr 1,1
 12668  1EC2  3000               	movlw	0
 12669  1EC3  0501               	andwf	1,w
 12670  1EC4  00AC               	movwf	??_ARPV4_Packet+6
 12671  1EC5  3141               	addfsr 1,1
 12672  1EC6  3000               	movlw	0
 12673  1EC7  0501               	andwf	1,w
 12674  1EC8  00AD               	movwf	??_ARPV4_Packet+7
 12675  1EC9  3008               	movlw	8
 12676  1ECA                     u7165:
 12677  1ECA  35AA               	lslf	??_ARPV4_Packet+4,f
 12678  1ECB  0DAB               	rlf	??_ARPV4_Packet+5,f
 12679  1ECC  0DAC               	rlf	??_ARPV4_Packet+6,f
 12680  1ECD  0DAD               	rlf	??_ARPV4_Packet+7,f
 12681  1ECE  0B89               	decfsz	9,f
 12682  1ECF  2ECA               	goto	u7165
 12683  1ED0  3000               	movlw	0
 12684  1ED1  00AE               	movwf	??_ARPV4_Packet+8
 12685  1ED2  30FF               	movlw	255
 12686  1ED3  00AF               	movwf	??_ARPV4_Packet+9
 12687  1ED4  3000               	movlw	0
 12688  1ED5  00B0               	movwf	??_ARPV4_Packet+10
 12689  1ED6  3000               	movlw	0
 12690  1ED7  00B1               	movwf	??_ARPV4_Packet+11
 12691  1ED8  0856               	movf	ARPV4_Packet@header+14,w
 12692  1ED9  00B2               	movwf	??_ARPV4_Packet+12
 12693  1EDA  0857               	movf	ARPV4_Packet@header+15,w
 12694  1EDB  00B3               	movwf	??_ARPV4_Packet+13
 12695  1EDC  0858               	movf	ARPV4_Packet@header+16,w
 12696  1EDD  00B4               	movwf	??_ARPV4_Packet+14
 12697  1EDE  0859               	movf	ARPV4_Packet@header+17,w
 12698  1EDF  00B5               	movwf	??_ARPV4_Packet+15
 12699  1EE0  3008               	movlw	8
 12700  1EE1                     u7175:
 12701  1EE1  36B5               	lsrf	??_ARPV4_Packet+15,f
 12702  1EE2  0CB4               	rrf	??_ARPV4_Packet+14,f
 12703  1EE3  0CB3               	rrf	??_ARPV4_Packet+13,f
 12704  1EE4  0CB2               	rrf	??_ARPV4_Packet+12,f
 12705  1EE5  0B89               	decfsz	9,f
 12706  1EE6  2EE1               	goto	u7175
 12707  1EE7  0832               	movf	??_ARPV4_Packet+12,w
 12708  1EE8  05AE               	andwf	??_ARPV4_Packet+8,f
 12709  1EE9  0833               	movf	??_ARPV4_Packet+13,w
 12710  1EEA  05AF               	andwf	??_ARPV4_Packet+9,f
 12711  1EEB  0834               	movf	??_ARPV4_Packet+14,w
 12712  1EEC  05B0               	andwf	??_ARPV4_Packet+10,f
 12713  1EED  0835               	movf	??_ARPV4_Packet+15,w
 12714  1EEE  05B1               	andwf	??_ARPV4_Packet+11,f
 12715  1EEF  30FF               	movlw	255
 12716  1EF0  00B6               	movwf	??_ARPV4_Packet+16
 12717  1EF1  3000               	movlw	0
 12718  1EF2  00B7               	movwf	??_ARPV4_Packet+17
 12719  1EF3  3000               	movlw	0
 12720  1EF4  00B8               	movwf	??_ARPV4_Packet+18
 12721  1EF5  3000               	movlw	0
 12722  1EF6  00B9               	movwf	??_ARPV4_Packet+19
 12723  1EF7  0856               	movf	ARPV4_Packet@header+14,w
 12724  1EF8  00BA               	movwf	??_ARPV4_Packet+20
 12725  1EF9  0857               	movf	ARPV4_Packet@header+15,w
 12726  1EFA  00BB               	movwf	??_ARPV4_Packet+21
 12727  1EFB  0858               	movf	ARPV4_Packet@header+16,w
 12728  1EFC  00BC               	movwf	??_ARPV4_Packet+22
 12729  1EFD  0859               	movf	ARPV4_Packet@header+17,w
 12730  1EFE  00BD               	movwf	??_ARPV4_Packet+23
 12731  1EFF  3018               	movlw	24
 12732  1F00                     u7185:
 12733  1F00  36BD               	lsrf	??_ARPV4_Packet+23,f
 12734  1F01  0CBC               	rrf	??_ARPV4_Packet+22,f
 12735  1F02  0CBB               	rrf	??_ARPV4_Packet+21,f
 12736  1F03  0CBA               	rrf	??_ARPV4_Packet+20,f
 12737  1F04  0B89               	decfsz	9,f
 12738  1F05  2F00               	goto	u7185
 12739  1F06  083A               	movf	??_ARPV4_Packet+20,w
 12740  1F07  05B6               	andwf	??_ARPV4_Packet+16,f
 12741  1F08  083B               	movf	??_ARPV4_Packet+21,w
 12742  1F09  05B7               	andwf	??_ARPV4_Packet+17,f
 12743  1F0A  083C               	movf	??_ARPV4_Packet+22,w
 12744  1F0B  05B8               	andwf	??_ARPV4_Packet+18,f
 12745  1F0C  083D               	movf	??_ARPV4_Packet+23,w
 12746  1F0D  05B9               	andwf	??_ARPV4_Packet+19,f
 12747  1F0E  0836               	movf	??_ARPV4_Packet+16,w
 12748  1F0F  04AE               	iorwf	??_ARPV4_Packet+8,f
 12749  1F10  0837               	movf	??_ARPV4_Packet+17,w
 12750  1F11  04AF               	iorwf	??_ARPV4_Packet+9,f
 12751  1F12  0838               	movf	??_ARPV4_Packet+18,w
 12752  1F13  04B0               	iorwf	??_ARPV4_Packet+10,f
 12753  1F14  0839               	movf	??_ARPV4_Packet+19,w
 12754  1F15  04B1               	iorwf	??_ARPV4_Packet+11,f
 12755  1F16  082E               	movf	??_ARPV4_Packet+8,w
 12756  1F17  04AA               	iorwf	??_ARPV4_Packet+4,f
 12757  1F18  082F               	movf	??_ARPV4_Packet+9,w
 12758  1F19  04AB               	iorwf	??_ARPV4_Packet+5,f
 12759  1F1A  0830               	movf	??_ARPV4_Packet+10,w
 12760  1F1B  04AC               	iorwf	??_ARPV4_Packet+6,f
 12761  1F1C  0831               	movf	??_ARPV4_Packet+11,w
 12762  1F1D  04AD               	iorwf	??_ARPV4_Packet+7,f
 12763  1F1E  082A               	movf	??_ARPV4_Packet+4,w
 12764  1F1F  04A6               	iorwf	??_ARPV4_Packet,f
 12765  1F20  082B               	movf	??_ARPV4_Packet+5,w
 12766  1F21  04A7               	iorwf	??_ARPV4_Packet+1,f
 12767  1F22  082C               	movf	??_ARPV4_Packet+6,w
 12768  1F23  04A8               	iorwf	??_ARPV4_Packet+2,f
 12769  1F24  082D               	movf	??_ARPV4_Packet+7,w
 12770  1F25  04A9               	iorwf	??_ARPV4_Packet+3,f
 12771  1F26  0846               	movf	ARPV4_Packet@entryPointer,w
 12772  1F27  0086               	movwf	6
 12773  1F28  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12774  1F29  0087               	movwf	7
 12775  1F2A  3146               	addfsr 1,6
 12776  1F2B  0826               	movf	??_ARPV4_Packet,w
 12777  1F2C  3FC0               	movwi [0]fsr1
 12778  1F2D  0827               	movf	??_ARPV4_Packet+1,w
 12779  1F2E  3FC1               	movwi [1]fsr1
 12780  1F2F  0828               	movf	??_ARPV4_Packet+2,w
 12781  1F30  3FC2               	movwi [2]fsr1
 12782  1F31  0829               	movf	??_ARPV4_Packet+3,w
 12783  1F32  3FC3               	movwi [3]fsr1
 12784                           
 12785                           ;arpv4.c: 151: entryPointer->protocolType = header.ptype;
 12786  1F33  0846               	movf	ARPV4_Packet@entryPointer,w
 12787  1F34  0086               	movwf	6
 12788  1F35  0847               	movf	ARPV4_Packet@entryPointer+1,w
 12789  1F36  0087               	movwf	7
 12790  1F37  314A               	addfsr 1,10
 12791  1F38  084A               	movf	ARPV4_Packet@header+2,w
 12792  1F39  3FC0               	movwi [0]fsr1
 12793  1F3A  084B               	movf	ARPV4_Packet@header+3,w
 12794  1F3B  3FC1               	movwi [1]fsr1
 12795  1F3C                     l8050:
 12796                           
 12797                           ;arpv4.c: 152: };arpv4.c: 153: if(header.oper == ((((uint16_t)1 & (uint16_t)0xFF00) >> 8
      +                          ) | (((uint16_t)1 & (uint16_t)0x00FF) << 8)))
 12798  1F3C  034F               	decf	ARPV4_Packet@header+7,w
 12799  1F3D  044E               	iorwf	ARPV4_Packet@header+6,w
 12800  1F3E  1D03               	btfss	3,2
 12801  1F3F  0008               	return
 12802                           
 12803                           ;arpv4.c: 154: {;arpv4.c: 155: ret = ETH_WriteStart(&header.sha ,0x0806);
 12804  1F40  3050               	movlw	low (ARPV4_Packet@header+8)
 12805  1F41  00A0               	movwf	ETH_WriteStart@dest_mac
 12806  1F42  3000               	movlw	high (ARPV4_Packet@header+8)
 12807  1F43  00A1               	movwf	ETH_WriteStart@dest_mac+1
 12808  1F44  3006               	movlw	6
 12809  1F45  00A2               	movwf	ETH_WriteStart@type
 12810  1F46  3008               	movlw	8
 12811  1F47  00A3               	movwf	ETH_WriteStart@type+1
 12812  1F48  3199  21ED  319D   	fcall	_ETH_WriteStart
 12813  1F4B  0020               	movlb	0	; select bank0
 12814  1F4C  00A6               	movwf	??_ARPV4_Packet
 12815  1F4D  0826               	movf	??_ARPV4_Packet,w
 12816  1F4E  00C1               	movwf	ARPV4_Packet@ret
 12817                           
 12818                           ;arpv4.c: 156: if(ret == SUCCESS)
 12819  1F4F  0341               	decf	ARPV4_Packet@ret,w
 12820  1F50  1D03               	btfss	3,2
 12821  1F51  0008               	return
 12822                           
 12823                           ;arpv4.c: 157: {;arpv4.c: 159: header.tha.s = header.sha.s;
 12824  1F52  3008               	movlw	8
 12825  1F53  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12826  1F54  0086               	movwf	6
 12827  1F55  0187               	clrf	7
 12828  1F56  3012               	movlw	18
 12829  1F57  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12830  1F58  0084               	movwf	4
 12831  1F59  0185               	clrf	5
 12832  1F5A  3006               	movlw	6
 12833  1F5B  00A6               	movwf	??_ARPV4_Packet
 12834  1F5C                     u7210:
 12835  1F5C  0016               	moviw fsr1++
 12836  1F5D  001A               	movwi fsr0++
 12837  1F5E  0BA6               	decfsz	??_ARPV4_Packet,f
 12838  1F5F  2F5C               	goto	u7210
 12839                           
 12840                           ;arpv4.c: 160: __builtin_memcpy((void*)&header.sha.s,(void*)&hostMacAddress.s,sizeof(mac
      +                          48Address_t));
 12841  1F60  3008               	movlw	8
 12842  1F61  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12843  1F62  0086               	movwf	6
 12844  1F63  0187               	clrf	7
 12845  1F64  30E3               	movlw	low (_hostMacAddress| (0+512))
 12846  1F65  0084               	movwf	4
 12847  1F66  3002               	movlw	2	; select bank5/6
 12848  1F67  0085               	movwf	5
 12849  1F68  3006               	movlw	6
 12850  1F69  0020               	movlb	0	; select bank0
 12851  1F6A  00A6               	movwf	??_ARPV4_Packet
 12852  1F6B  0826               	movf	??_ARPV4_Packet,w
 12853  1F6C  1903               	skipnz
 12854  1F6D  2F72               	goto	l8058
 12855  1F6E                     u722m0:
 12856  1F6E  0012               	moviw fsr0++
 12857  1F6F  001E               	movwi fsr1++
 12858  1F70  0BA6               	decfsz	??_ARPV4_Packet,f
 12859  1F71  2F6E               	goto	u722m0
 12860  1F72                     l8058:
 12861                           
 12862                           ;arpv4.c: 161: header.tpa = header.spa;
 12863  1F72  300E               	movlw	14
 12864  1F73  3E48               	addlw	(low (ARPV4_Packet@header| 0))& (0+255)
 12865  1F74  0086               	movwf	6
 12866  1F75  0187               	clrf	7
 12867  1F76  3F40               	moviw [0]fsr1
 12868  1F77  0020               	movlb	0	; select bank0
 12869  1F78  00E0               	movwf	ARPV4_Packet@header+24
 12870  1F79  3F41               	moviw [1]fsr1
 12871  1F7A  00E1               	movwf	ARPV4_Packet@header+25
 12872  1F7B  3F42               	moviw [2]fsr1
 12873  1F7C  00E2               	movwf	ARPV4_Packet@header+26
 12874  1F7D  3F43               	moviw [3]fsr1
 12875  1F7E  00E3               	movwf	ARPV4_Packet@header+27
 12876                           
 12877                           ;arpv4.c: 162: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 12878  1F7F  30FF               	movlw	255
 12879  1F80  0024               	movlb	4	; select bank4
 12880  1F81  0520               	andwf	_ip_database_info^(0+512),w
 12881  1F82  0020               	movlb	0	; select bank0
 12882  1F83  00A6               	movwf	??_ARPV4_Packet
 12883  1F84  3000               	movlw	0
 12884  1F85  0024               	movlb	4	; select bank4
 12885  1F86  0521               	andwf	(_ip_database_info+1)^(0+512),w
 12886  1F87  0020               	movlb	0	; select bank0
 12887  1F88  00A7               	movwf	??_ARPV4_Packet+1
 12888  1F89  3000               	movlw	0
 12889  1F8A  0024               	movlb	4	; select bank4
 12890  1F8B  0522               	andwf	(_ip_database_info+2)^(0+512),w
 12891  1F8C  0020               	movlb	0	; select bank0
 12892  1F8D  00A8               	movwf	??_ARPV4_Packet+2
 12893  1F8E  3000               	movlw	0
 12894  1F8F  0024               	movlb	4	; select bank4
 12895  1F90  0523               	andwf	(_ip_database_info+3)^(0+512),w
 12896  1F91  0020               	movlb	0	; select bank0
 12897  1F92  00A9               	movwf	??_ARPV4_Packet+3
 12898  1F93  3018               	movlw	24
 12899  1F94                     u7235:
 12900  1F94  35A6               	lslf	??_ARPV4_Packet,f
 12901  1F95  0DA7               	rlf	??_ARPV4_Packet+1,f
 12902  1F96  0DA8               	rlf	??_ARPV4_Packet+2,f
 12903  1F97  0DA9               	rlf	??_ARPV4_Packet+3,f
 12904  1F98  0B89               	decfsz	9,f
 12905  1F99  2F94               	goto	u7235
 12906  1F9A  3000               	movlw	0
 12907  1F9B  0024               	movlb	4	; select bank4
 12908  1F9C  0520               	andwf	_ip_database_info^(0+512),w
 12909  1F9D  0020               	movlb	0	; select bank0
 12910  1F9E  00AA               	movwf	??_ARPV4_Packet+4
 12911  1F9F  30FF               	movlw	255
 12912  1FA0  0024               	movlb	4	; select bank4
 12913  1FA1  0521               	andwf	(_ip_database_info+1)^(0+512),w
 12914  1FA2  0020               	movlb	0	; select bank0
 12915  1FA3  00AB               	movwf	??_ARPV4_Packet+5
 12916  1FA4  3000               	movlw	0
 12917  1FA5  0024               	movlb	4	; select bank4
 12918  1FA6  0522               	andwf	(_ip_database_info+2)^(0+512),w
 12919  1FA7  0020               	movlb	0	; select bank0
 12920  1FA8  00AC               	movwf	??_ARPV4_Packet+6
 12921  1FA9  3000               	movlw	0
 12922  1FAA  0024               	movlb	4	; select bank4
 12923  1FAB  0523               	andwf	(_ip_database_info+3)^(0+512),w
 12924  1FAC  0020               	movlb	0	; select bank0
 12925  1FAD  00AD               	movwf	??_ARPV4_Packet+7
 12926  1FAE  3008               	movlw	8
 12927  1FAF                     u7245:
 12928  1FAF  35AA               	lslf	??_ARPV4_Packet+4,f
 12929  1FB0  0DAB               	rlf	??_ARPV4_Packet+5,f
 12930  1FB1  0DAC               	rlf	??_ARPV4_Packet+6,f
 12931  1FB2  0DAD               	rlf	??_ARPV4_Packet+7,f
 12932  1FB3  0B89               	decfsz	9,f
 12933  1FB4  2FAF               	goto	u7245
 12934  1FB5  3000               	movlw	0
 12935  1FB6  00AE               	movwf	??_ARPV4_Packet+8
 12936  1FB7  30FF               	movlw	255
 12937  1FB8  00AF               	movwf	??_ARPV4_Packet+9
 12938  1FB9  3000               	movlw	0
 12939  1FBA  00B0               	movwf	??_ARPV4_Packet+10
 12940  1FBB  0024               	movlb	4	; select bank4
 12941  1FBC  0821               	movf	(_ip_database_info^(0+512)+1),w
 12942  1FBD  0020               	movlb	0	; select bank0
 12943  1FBE  05AE               	andwf	??_ARPV4_Packet+8,f
 12944  1FBF  0024               	movlb	4	; select bank4
 12945  1FC0  0822               	movf	((_ip_database_info+1)^(0+512)+1),w
 12946  1FC1  0020               	movlb	0	; select bank0
 12947  1FC2  05AF               	andwf	??_ARPV4_Packet+9,f
 12948  1FC3  0024               	movlb	4	; select bank4
 12949  1FC4  0823               	movf	((_ip_database_info+2)^(0+512)+1),w
 12950  1FC5  0020               	movlb	0	; select bank0
 12951  1FC6  05B0               	andwf	??_ARPV4_Packet+10,f
 12952  1FC7  0024               	movlb	4	; select bank4
 12953  1FC8  0823               	movf	(_ip_database_info^(0+512)+3),w
 12954  1FC9  0020               	movlb	0	; select bank0
 12955  1FCA  00B1               	movwf	??_ARPV4_Packet+11
 12956  1FCB  01B2               	clrf	??_ARPV4_Packet+12
 12957  1FCC  01B3               	clrf	??_ARPV4_Packet+13
 12958  1FCD  0831               	movf	??_ARPV4_Packet+11,w
 12959  1FCE  04AE               	iorwf	??_ARPV4_Packet+8,f
 12960  1FCF  0832               	movf	??_ARPV4_Packet+12,w
 12961  1FD0  04AF               	iorwf	??_ARPV4_Packet+9,f
 12962  1FD1  0833               	movf	??_ARPV4_Packet+13,w
 12963  1FD2  04B0               	iorwf	??_ARPV4_Packet+10,f
 12964  1FD3  082E               	movf	??_ARPV4_Packet+8,w
 12965  1FD4  00B4               	movwf	??_ARPV4_Packet+14
 12966  1FD5  082F               	movf	??_ARPV4_Packet+9,w
 12967  1FD6  00B5               	movwf	??_ARPV4_Packet+15
 12968  1FD7  0830               	movf	??_ARPV4_Packet+10,w
 12969  1FD8  00B6               	movwf	??_ARPV4_Packet+16
 12970  1FD9  01B7               	clrf	??_ARPV4_Packet+17
 12971  1FDA  0834               	movf	??_ARPV4_Packet+14,w
 12972  1FDB  04AA               	iorwf	??_ARPV4_Packet+4,f
 12973  1FDC  0835               	movf	??_ARPV4_Packet+15,w
 12974  1FDD  04AB               	iorwf	??_ARPV4_Packet+5,f
 12975  1FDE  0836               	movf	??_ARPV4_Packet+16,w
 12976  1FDF  04AC               	iorwf	??_ARPV4_Packet+6,f
 12977  1FE0  0837               	movf	??_ARPV4_Packet+17,w
 12978  1FE1  04AD               	iorwf	??_ARPV4_Packet+7,f
 12979  1FE2  0826               	movf	??_ARPV4_Packet,w
 12980  1FE3  042A               	iorwf	??_ARPV4_Packet+4,w
 12981  1FE4  00D6               	movwf	ARPV4_Packet@header+14
 12982  1FE5  0827               	movf	??_ARPV4_Packet+1,w
 12983  1FE6  042B               	iorwf	??_ARPV4_Packet+5,w
 12984  1FE7  00D7               	movwf	ARPV4_Packet@header+15
 12985  1FE8  0828               	movf	??_ARPV4_Packet+2,w
 12986  1FE9  042C               	iorwf	??_ARPV4_Packet+6,w
 12987  1FEA  00D8               	movwf	ARPV4_Packet@header+16
 12988  1FEB  0829               	movf	??_ARPV4_Packet+3,w
 12989  1FEC  042D               	iorwf	??_ARPV4_Packet+7,w
 12990  1FED  00D9               	movwf	ARPV4_Packet@header+17
 12991                           
 12992                           ;arpv4.c: 163: header.oper = ((((uint16_t)2 & (uint16_t)0xFF00) >> 8) | (((uint16_t)2 & 
      +                          (uint16_t)0x00FF) << 8));
 12993  1FEE  3000               	movlw	0
 12994  1FEF  00CE               	movwf	ARPV4_Packet@header+6
 12995  1FF0  3002               	movlw	2
 12996  1FF1  00CF               	movwf	ARPV4_Packet@header+7
 12997                           
 12998                           ;arpv4.c: 164: ETH_WriteBlock((char*)&header,sizeof(header));
 12999  1FF2  3048               	movlw	low ARPV4_Packet@header
 13000  1FF3  00F1               	movwf	ETH_WriteBlock@data
 13001  1FF4  3000               	movlw	high ARPV4_Packet@header
 13002  1FF5  00F2               	movwf	ETH_WriteBlock@data+1
 13003  1FF6  301C               	movlw	28
 13004  1FF7  00F3               	movwf	ETH_WriteBlock@length
 13005  1FF8  3000               	movlw	0
 13006  1FF9  00F4               	movwf	ETH_WriteBlock@length+1
 13007  1FFA  31AC  24E2  319D   	fcall	_ETH_WriteBlock
 13008  1FFD  31AB  23C1         	fcall	_ETH_Send
 13009  1FFF  0008               	return
 13010  2000                     __end_of_ARPV4_Packet:
 13011                           
 13012                           	psect	text45
 13013  1802                     __ptext45:	
 13014 ;; *************** function _ETH_EventHandler *****************
 13015 ;; Defined at:
 13016 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 13017 ;; Parameters:    Size  Location     Type
 13018 ;;		None
 13019 ;; Auto vars:     Size  Location     Type
 13020 ;;  phstat2_val     3    3[BANK0 ] struct .
 13021 ;;  eir_val         1    6[BANK0 ] struct .
 13022 ;; Return value:  Size  Location     Type
 13023 ;;                  1    wreg      void 
 13024 ;; Registers used:
 13025 ;;		wreg, status,2, status,0, pclath, cstack
 13026 ;; Tracked objects:
 13027 ;;		On entry : 18/4
 13028 ;;		On exit  : 1D/0
 13029 ;;		Unchanged: 0/0
 13030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13032 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13033 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13034 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13035 ;;Total ram usage:        5 bytes
 13036 ;; Hardware stack levels used:    1
 13037 ;; Hardware stack levels required when called:    8
 13038 ;; This function calls:
 13039 ;;		_ENC28_Bfc
 13040 ;;		_ENC28_Bfs
 13041 ;;		_ENC28_Rcr16
 13042 ;;		_ENC28_Rcr8
 13043 ;;		_ENC28_Wcr16
 13044 ;;		_ENC28_Wcr8
 13045 ;;		_ETH_CheckLinkUp
 13046 ;; This function is called by:
 13047 ;;		_Network_Manage
 13048 ;; This function uses a non-reentrant model
 13049 ;;
 13050                           
 13051                           
 13052                           ;psect for function _ETH_EventHandler
 13053  1802                     _ETH_EventHandler:
 13054                           
 13055                           ;ENC28J60.c: 200: eir_t eir_val;;ENC28J60.c: 201: phstat2_t phstat2_val;;ENC28J60.c: 204
      +                          : if (((PORTAbits.RA2 == 0)?1:0))
 13056                           
 13057                           ;incstack = 0
 13058                           ; Regs used in _ETH_EventHandler: [wreg+status,2+status,0+pclath+cstack]
 13059  1802  0020               	movlb	0	; select bank0
 13060  1803  190C               	btfsc	12,2	;volatile
 13061  1804  0008               	return
 13062                           
 13063                           ;ENC28J60.c: 205: {;ENC28J60.c: 208: eir_val.val = ENC28_Rcr8(J60_EIR);
 13064  1805  30FC               	movlw	252
 13065  1806  31AB  2325  3198   	fcall	_ENC28_Rcr8
 13066  1809  0020               	movlb	0	; select bank0
 13067  180A  00A2               	movwf	??_ETH_EventHandler
 13068  180B  0822               	movf	??_ETH_EventHandler,w
 13069  180C  00A6               	movwf	ETH_EventHandler@eir_val
 13070                           
 13071                           ;ENC28J60.c: 209: phstat2_val.val = ENC28_Rcr16(J60_PHSTAT2);
 13072  180D  3011               	movlw	17
 13073  180E  31AD  2562  3198   	fcall	_ENC28_Rcr16
 13074  1811  0875               	movf	?_ENC28_Rcr16+1,w
 13075  1812  0020               	movlb	0	; select bank0
 13076  1813  00A4               	movwf	ETH_EventHandler@phstat2_val+1
 13077  1814  0874               	movf	?_ENC28_Rcr16,w
 13078  1815  00A3               	movwf	ETH_EventHandler@phstat2_val
 13079                           
 13080                           ;ENC28J60.c: 211: if (eir_val.LINKIF)
 13081  1816  1E26               	btfss	ETH_EventHandler@eir_val,4
 13082  1817  283E               	goto	l6812
 13083                           
 13084                           ;ENC28J60.c: 212: {;ENC28J60.c: 213: ethData.linkChange = 1;
 13085  1818  0024               	movlb	4	; select bank4
 13086  1819  1644               	bsf	_ethData^(0+512),4	;volatile
 13087                           
 13088                           ;ENC28J60.c: 214: ethData.up = 0;
 13089  181A  1144               	bcf	_ethData^(0+512),2	;volatile
 13090                           
 13091                           ;ENC28J60.c: 215: if(ETH_CheckLinkUp())
 13092  181B  31AA  2238  3198   	fcall	_ETH_CheckLinkUp
 13093                           
 13094                           ;ENC28J60.c: 217: };ENC28J60.c: 218: if (phstat2_val.DPXSTAT)
 13095                           
 13096                           ;ENC28J60.c: 216: {
 13097  181E  0020               	movlb	0	; select bank0
 13098  181F  1DA4               	btfss	ETH_EventHandler@phstat2_val+1,3
 13099  1820  2830               	goto	l6810
 13100                           
 13101                           ;ENC28J60.c: 219: {;ENC28J60.c: 220: ENC28_Wcr16(J60_MABBIPG, 0x15);
 13102  1821  3015               	movlw	21
 13103  1822  00FA               	movwf	ENC28_Wcr16@v
 13104  1823  3000               	movlw	0
 13105  1824  00FB               	movwf	ENC28_Wcr16@v+1
 13106  1825  3084               	movlw	132
 13107  1826  31AC  2448  3198   	fcall	_ENC28_Wcr16
 13108                           
 13109                           ;ENC28J60.c: 221: ENC28_Bfs(J60_PHSTAT2,0x01);
 13110  1829  01F4               	clrf	ENC28_Bfs@bits
 13111  182A  0AF4               	incf	ENC28_Bfs@bits,f
 13112  182B  3011               	movlw	17
 13113  182C  31AA  226D  3198   	fcall	_ENC28_Bfs
 13114                           
 13115                           ;ENC28J60.c: 222: }
 13116  182F  283E               	goto	l6812
 13117  1830                     l6810:
 13118                           
 13119                           ;ENC28J60.c: 223: else;ENC28J60.c: 224: {;ENC28J60.c: 225: ENC28_Wcr16(J60_MABBIPG, 0x12
      +                          );
 13120  1830  3012               	movlw	18
 13121  1831  00FA               	movwf	ENC28_Wcr16@v
 13122  1832  3000               	movlw	0
 13123  1833  00FB               	movwf	ENC28_Wcr16@v+1
 13124  1834  3084               	movlw	132
 13125  1835  31AC  2448  3198   	fcall	_ENC28_Wcr16
 13126                           
 13127                           ;ENC28J60.c: 226: ENC28_Bfc(J60_PHSTAT2,0x01);
 13128  1838  01F4               	clrf	ENC28_Bfc@bits
 13129  1839  0AF4               	incf	ENC28_Bfc@bits,f
 13130  183A  3011               	movlw	17
 13131  183B  31AA  2280  3198   	fcall	_ENC28_Bfc
 13132  183E                     l6812:
 13133                           
 13134                           ;ENC28J60.c: 227: };ENC28J60.c: 228: };ENC28J60.c: 229: if(eir_val.TXIF)
 13135  183E  0020               	movlb	0	; select bank0
 13136  183F  1DA6               	btfss	ETH_EventHandler@eir_val,3
 13137  1840  284C               	goto	l6818
 13138                           
 13139                           ;ENC28J60.c: 230: {;ENC28J60.c: 231: ethData.bufferBusy = 0;
 13140  1841  0024               	movlb	4	; select bank4
 13141  1842  12C4               	bcf	_ethData^(0+512),5	;volatile
 13142                           
 13143                           ;ENC28J60.c: 232: ENC28_Bfc(J60_EIR,0x08);
 13144  1843  3008               	movlw	8
 13145  1844  0020               	movlb	0	; select bank0
 13146  1845  00A2               	movwf	??_ETH_EventHandler
 13147  1846  0822               	movf	??_ETH_EventHandler,w
 13148  1847  00F4               	movwf	ENC28_Bfc@bits
 13149  1848  30FC               	movlw	252
 13150  1849  31AA  2280  3198   	fcall	_ENC28_Bfc
 13151  184C                     l6818:
 13152                           
 13153                           ;ENC28J60.c: 233: };ENC28J60.c: 234: if (eir_val.PKTIF || ENC28_Rcr8(J60_EPKTCNT))
 13154  184C  0020               	movlb	0	; select bank0
 13155  184D  1B26               	btfsc	ETH_EventHandler@eir_val,6
 13156  184E  2856               	goto	l1071
 13157  184F  3059               	movlw	89
 13158  1850  31AB  2325  3198   	fcall	_ENC28_Rcr8
 13159  1853  3A00               	xorlw	0
 13160  1854  1903               	skipnz
 13161  1855  2858               	goto	l6822
 13162  1856                     l1071:
 13163                           
 13164                           ;ENC28J60.c: 235: {;ENC28J60.c: 236: ethData.pktReady = 1;
 13165  1856  0024               	movlb	4	; select bank4
 13166  1857  14C4               	bsf	_ethData^(0+512),1	;volatile
 13167  1858                     l6822:
 13168                           
 13169                           ;ENC28J60.c: 237: };ENC28J60.c: 238: ENC28_Wcr8(J60_EIR, eir_val.val);
 13170  1858  0020               	movlb	0	; select bank0
 13171  1859  0826               	movf	ETH_EventHandler@eir_val,w
 13172  185A  00A2               	movwf	??_ETH_EventHandler
 13173  185B  0822               	movf	??_ETH_EventHandler,w
 13174  185C  00F4               	movwf	ENC28_Wcr8@v
 13175  185D  30FC               	movlw	252
 13176  185E  3188  2000         	fcall	_ENC28_Wcr8
 13177  1860  0008               	return
 13178  1861                     __end_of_ETH_EventHandler:
 13179                           
 13180                           	psect	text46
 13181  2A38                     __ptext46:	
 13182 ;; *************** function _ETH_CheckLinkUp *****************
 13183 ;; Defined at:
 13184 ;;		line 429 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;		None
 13187 ;; Auto vars:     Size  Location     Type
 13188 ;;  phstat2         2    0[BANK0 ] unsigned int 
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  1    wreg      unsigned char 
 13191 ;; Registers used:
 13192 ;;		wreg, status,2, status,0, pclath, cstack
 13193 ;; Tracked objects:
 13194 ;;		On entry : 19/4
 13195 ;;		On exit  : 1B/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13202 ;;Total ram usage:        2 bytes
 13203 ;; Hardware stack levels used:    1
 13204 ;; Hardware stack levels required when called:    7
 13205 ;; This function calls:
 13206 ;;		_ENC28_PhyRead
 13207 ;; This function is called by:
 13208 ;;		_Network_WaitForLink
 13209 ;;		_ETH_Init
 13210 ;;		_ETH_EventHandler
 13211 ;; This function uses a non-reentrant model
 13212 ;;
 13213                           
 13214                           
 13215                           ;psect for function _ETH_CheckLinkUp
 13216  2A38                     _ETH_CheckLinkUp:
 13217                           
 13218                           ;ENC28J60.c: 431: uint16_t phstat2;;ENC28J60.c: 433: phstat2 = ENC28_PhyRead(J60_PHSTAT2
      +                          );
 13219                           
 13220                           ;incstack = 0
 13221                           ; Regs used in _ETH_CheckLinkUp: [wreg+status,2+status,0+pclath+cstack]
 13222  2A38  3011               	movlw	17
 13223  2A39  31AC  2424  31AA   	fcall	_ENC28_PhyRead
 13224  2A3C  087B               	movf	?_ENC28_PhyRead+1,w
 13225  2A3D  0020               	movlb	0	; select bank0
 13226  2A3E  00A1               	movwf	ETH_CheckLinkUp@phstat2+1
 13227  2A3F  087A               	movf	?_ENC28_PhyRead,w
 13228  2A40  00A0               	movwf	ETH_CheckLinkUp@phstat2
 13229                           
 13230                           ;ENC28J60.c: 435: if(phstat2 & 0x0400)
 13231  2A41  1D21               	btfss	ETH_CheckLinkUp@phstat2+1,2
 13232  2A42  2A47               	goto	l6070
 13233                           
 13234                           ;ENC28J60.c: 436: {;ENC28J60.c: 437: ethData.up = 1;
 13235  2A43  0024               	movlb	4	; select bank4
 13236  2A44  1544               	bsf	_ethData^(0+512),2	;volatile
 13237                           
 13238                           ;ENC28J60.c: 438: return 1;
 13239  2A45  3001               	movlw	1
 13240  2A46  0008               	return
 13241  2A47                     l6070:
 13242                           
 13243                           ;ENC28J60.c: 440: else;ENC28J60.c: 441: return 0;
 13244  2A47  3000               	movlw	0
 13245  2A48  0008               	return
 13246  2A49                     __end_of_ETH_CheckLinkUp:
 13247                           
 13248                           	psect	text47
 13249  2C24                     __ptext47:	
 13250 ;; *************** function _ENC28_PhyRead *****************
 13251 ;; Defined at:
 13252 ;;		line 405 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  a               1    wreg     enum E6745
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;  a               1   13[COMMON] enum E6745
 13257 ;; Return value:  Size  Location     Type
 13258 ;;                  2   10[COMMON] unsigned int 
 13259 ;; Registers used:
 13260 ;;		wreg, status,2, status,0, pclath, cstack
 13261 ;; Tracked objects:
 13262 ;;		On entry : 19/4
 13263 ;;		On exit  : 1F/2
 13264 ;;		Unchanged: 0/0
 13265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13267 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13270 ;;Total ram usage:        4 bytes
 13271 ;; Hardware stack levels used:    1
 13272 ;; Hardware stack levels required when called:    6
 13273 ;; This function calls:
 13274 ;;		_ENC28_Bfc
 13275 ;;		_ENC28_Bfs
 13276 ;;		_ENC28_Rcr16
 13277 ;;		_ENC28_Rcr8
 13278 ;;		_ENC28_Wcr8
 13279 ;; This function is called by:
 13280 ;;		_ETH_CheckLinkUp
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           
 13285                           ;psect for function _ENC28_PhyRead
 13286  2C24                     _ENC28_PhyRead:
 13287                           
 13288                           ;incstack = 0
 13289                           ; Regs used in _ENC28_PhyRead: [wreg+status,2+status,0+pclath+cstack]
 13290                           ;ENC28_PhyRead@a stored from wreg
 13291  2C24  00FD               	movwf	ENC28_PhyRead@a
 13292                           
 13293                           ;ENC28J60.c: 407: ENC28_Wcr8(J60_MIREGADR, a);
 13294  2C25  087D               	movf	ENC28_PhyRead@a,w
 13295  2C26  00FC               	movwf	??_ENC28_PhyRead
 13296  2C27  087C               	movf	??_ENC28_PhyRead,w
 13297  2C28  00F4               	movwf	ENC28_Wcr8@v
 13298  2C29  3094               	movlw	148
 13299  2C2A  3188  2000  31AC   	fcall	_ENC28_Wcr8
 13300                           
 13301                           ;ENC28J60.c: 408: ENC28_Bfs(J60_MICMD, 0x01);
 13302  2C2D  01F4               	clrf	ENC28_Bfs@bits
 13303  2C2E  0AF4               	incf	ENC28_Bfs@bits,f
 13304  2C2F  3092               	movlw	146
 13305  2C30  31AA  226D  31AC   	fcall	_ENC28_Bfs
 13306  2C33                     l5886:	
 13307                           ;ENC28J60.c: 409: while (ENC28_Rcr8(J60_MISTAT) & 0x01);
 13308                           
 13309  2C33  30CA               	movlw	202
 13310  2C34  31AB  2325  31AC   	fcall	_ENC28_Rcr8
 13311  2C37  3901               	andlw	1
 13312  2C38  1D03               	btfss	3,2
 13313  2C39  2C33               	goto	l5886
 13314                           
 13315                           ;ENC28J60.c: 410: ENC28_Bfc(J60_MICMD, 0x01);
 13316  2C3A  01F4               	clrf	ENC28_Bfc@bits
 13317  2C3B  0AF4               	incf	ENC28_Bfc@bits,f
 13318  2C3C  3092               	movlw	146
 13319  2C3D  31AA  2280  31AC   	fcall	_ENC28_Bfc
 13320                           
 13321                           ;ENC28J60.c: 412: return ENC28_Rcr16(J60_MIRDL);
 13322  2C40  3098               	movlw	152
 13323  2C41  31AD  2562         	fcall	_ENC28_Rcr16
 13324  2C43  0875               	movf	?_ENC28_Rcr16+1,w
 13325  2C44  00FB               	movwf	?_ENC28_PhyRead+1
 13326  2C45  0874               	movf	?_ENC28_Rcr16,w
 13327  2C46  00FA               	movwf	?_ENC28_PhyRead
 13328  2C47  0008               	return
 13329  2C48                     __end_of_ENC28_PhyRead:
 13330                           
 13331                           	psect	text48
 13332  0800                     __ptext48:	
 13333 ;; *************** function _ENC28_Wcr8 *****************
 13334 ;; Defined at:
 13335 ;;		line 325 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 13336 ;; Parameters:    Size  Location     Type
 13337 ;;  a               1    wreg     enum E6630
 13338 ;;  v               1    4[COMMON] unsigned char 
 13339 ;; Auto vars:     Size  Location     Type
 13340 ;;  a               1    5[COMMON] enum E6630
 13341 ;; Return value:  Size  Location     Type
 13342 ;;                  1    wreg      void 
 13343 ;; Registers used:
 13344 ;;		wreg, status,2, status,0, pclath, cstack
 13345 ;; Tracked objects:
 13346 ;;		On entry : 19/0
 13347 ;;		On exit  : 1F/2
 13348 ;;		Unchanged: 0/0
 13349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13350 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13353 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13354 ;;Total ram usage:        2 bytes
 13355 ;; Hardware stack levels used:    1
 13356 ;; Hardware stack levels required when called:    5
 13357 ;; This function calls:
 13358 ;;		_ENC28_BankSel
 13359 ;;		_SPI1_Exchange8bit
 13360 ;; This function is called by:
 13361 ;;		_ETH_Init
 13362 ;;		_ETH_EventHandler
 13363 ;;		_ENC28_PhyWrite
 13364 ;;		_ENC28_PhyRead
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           
 13369                           ;psect for function _ENC28_Wcr8
 13370  0800                     _ENC28_Wcr8:
 13371                           
 13372                           ;incstack = 0
 13373                           ; Regs used in _ENC28_Wcr8: [wreg+status,2+status,0+pclath+cstack]
 13374                           ;ENC28_Wcr8@a stored from wreg
 13375  0800  00F5               	movwf	ENC28_Wcr8@a
 13376                           
 13377                           ;ENC28J60.c: 327: ENC28_BankSel(a);
 13378  0801  0875               	movf	ENC28_Wcr8@a,w
 13379  0802  31AD  25C1  3188   	fcall	_ENC28_BankSel
 13380  0805  0022               	movlb	2	; select bank2
 13381  0806  130E               	bcf	14,6	;volatile
 13382                           
 13383                           ;ENC28J60.c: 329: SPI1_Exchange8bit(wcr_inst | (a & 0x1F));
 13384  0807  0875               	movf	ENC28_Wcr8@a,w
 13385  0808  391F               	andlw	31
 13386  0809  3840               	iorlw	64
 13387  080A  31A9  21A5  3188   	fcall	_SPI1_Exchange8bit
 13388                           
 13389                           ;ENC28J60.c: 330: SPI1_Exchange8bit(v);
 13390  080D  0874               	movf	ENC28_Wcr8@v,w
 13391  080E  31A9  21A5         	fcall	_SPI1_Exchange8bit
 13392  0810  0022               	movlb	2	; select bank2
 13393  0811  170E               	bsf	14,6	;volatile
 13394  0812  0008               	return
 13395  0813                     __end_of_ENC28_Wcr8:
 13396                           
 13397                           	psect	text49
 13398  2B6E                     __ptext49:	
 13399 ;; *************** function _ARPV4_Update *****************
 13400 ;; Defined at:
 13401 ;;		line 183 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;		None
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;  x               1    3[COMMON] unsigned char 
 13406 ;;  entryPointer    2    1[COMMON] PTR struct .
 13407 ;;		 -> arpMap(104), 
 13408 ;; Return value:  Size  Location     Type
 13409 ;;                  1    wreg      void 
 13410 ;; Registers used:
 13411 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13412 ;; Tracked objects:
 13413 ;;		On entry : 1F/3
 13414 ;;		On exit  : 1F/3
 13415 ;;		Unchanged: 1E/0
 13416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13418 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13420 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13421 ;;Total ram usage:        4 bytes
 13422 ;; Hardware stack levels used:    1
 13423 ;; Hardware stack levels required when called:    3
 13424 ;; This function calls:
 13425 ;;		Nothing
 13426 ;; This function is called by:
 13427 ;;		_Network_Manage
 13428 ;; This function uses a non-reentrant model
 13429 ;;
 13430                           
 13431                           
 13432                           ;psect for function _ARPV4_Update
 13433  2B6E                     _ARPV4_Update:
 13434                           
 13435                           ;arpv4.c: 185: arpMap_t *entryPointer = arpMap;
 13436                           
 13437                           ;incstack = 0
 13438                           ; Regs used in _ARPV4_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
 13439  2B6E  3088               	movlw	136
 13440  2B6F  00F1               	movwf	ARPV4_Update@entryPointer
 13441  2B70  3027               	movlw	39
 13442  2B71  00F2               	movwf	ARPV4_Update@entryPointer+1
 13443                           
 13444                           ;arpv4.c: 186: for(uint8_t x=0; x < 8; x++)
 13445  2B72  01F3               	clrf	ARPV4_Update@x
 13446  2B73                     l6596:
 13447                           
 13448                           ;arpv4.c: 187: {;arpv4.c: 188: entryPointer->age ++;
 13449  2B73  3001               	movlw	1
 13450  2B74  00F0               	movwf	??_ARPV4_Update
 13451  2B75  0871               	movf	ARPV4_Update@entryPointer,w
 13452  2B76  0086               	movwf	6
 13453  2B77  0872               	movf	ARPV4_Update@entryPointer+1,w
 13454  2B78  0087               	movwf	7
 13455  2B79  314C               	addfsr 1,12
 13456  2B7A  0870               	movf	??_ARPV4_Update,w
 13457  2B7B  0781               	addwf	1,f
 13458                           
 13459                           ;arpv4.c: 189: entryPointer ++;
 13460  2B7C  300D               	movlw	13
 13461  2B7D  07F1               	addwf	ARPV4_Update@entryPointer,f
 13462  2B7E  3000               	movlw	0
 13463  2B7F  3DF2               	addwfc	ARPV4_Update@entryPointer+1,f
 13464  2B80  3001               	movlw	1
 13465  2B81  00F0               	movwf	??_ARPV4_Update
 13466  2B82  0870               	movf	??_ARPV4_Update,w
 13467  2B83  07F3               	addwf	ARPV4_Update@x,f
 13468  2B84  3008               	movlw	8
 13469  2B85  0273               	subwf	ARPV4_Update@x,w
 13470  2B86  1803               	btfsc	3,0
 13471  2B87  0008               	return
 13472  2B88  2B73               	goto	l6596
 13473  2B89                     __end_of_ARPV4_Update:
 13474                           
 13475                           	psect	text50
 13476  1C0A                     __ptext50:	
 13477 ;; *************** function _DEMO_TCP_Client *****************
 13478 ;; Defined at:
 13479 ;;		line 13 in file "tcp_client_demo.c"
 13480 ;; Parameters:    Size  Location     Type
 13481 ;;		None
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  strTmp         17    0        unsigned char [17]
 13484 ;;  rx_len          2   11[BANK2 ] unsigned int 
 13485 ;;  pot             2    8[BANK2 ] unsigned int 
 13486 ;;  socketState     1   10[BANK2 ] enum E7241
 13487 ;; Return value:  Size  Location     Type
 13488 ;;                  1    wreg      void 
 13489 ;; Registers used:
 13490 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13491 ;; Tracked objects:
 13492 ;;		On entry : 1F/4
 13493 ;;		On exit  : 1C/0
 13494 ;;		Unchanged: 0/0
 13495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13498 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13499 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13500 ;;Total ram usage:        7 bytes
 13501 ;; Hardware stack levels used:    1
 13502 ;; Hardware stack levels required when called:   13
 13503 ;; This function calls:
 13504 ;;		_ADC_GetConversion
 13505 ;;		_TCP_Close
 13506 ;;		_TCP_Connect
 13507 ;;		_TCP_GetReceivedData
 13508 ;;		_TCP_InsertRxBuffer
 13509 ;;		_TCP_Send
 13510 ;;		_TCP_SendDone
 13511 ;;		_TCP_SocketInit
 13512 ;;		_TCP_SocketPoll
 13513 ;;		_TCP_SocketRemove
 13514 ;;		_sprintf
 13515 ;;		_strlen
 13516 ;;		_time
 13517 ;; This function is called by:
 13518 ;;		_main
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           
 13523                           ;psect for function _DEMO_TCP_Client
 13524  1C0A                     _DEMO_TCP_Client:
 13525                           
 13526                           ;tcp_client_demo.c: 29: uint16_t pot;;tcp_client_demo.c: 30: char strTmp[17];;tcp_client
      +                          _demo.c: 32: socketState = TCP_SocketPoll(&port60TCB);
 13527                           
 13528                           ;incstack = 0
 13529                           ; Regs used in _DEMO_TCP_Client: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13530  1C0A  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13531  1C0B  31AA  2293  319C   	fcall	_TCP_SocketPoll
 13532  1C0E  0022               	movlb	2	; select bank2
 13533  1C0F  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13534  1C10  0826               	movf	??_DEMO_TCP_Client^(0+256),w
 13535  1C11  00AA               	movwf	DEMO_TCP_Client@socketState^(0+256)
 13536                           
 13537                           ;tcp_client_demo.c: 34: time(&t_client);
 13538  1C12  30E1               	movlw	low DEMO_TCP_Client@t_client
 13539  1C13  00F0               	movwf	time@t
 13540  1C14  3001               	movlw	high DEMO_TCP_Client@t_client
 13541  1C15  00F1               	movwf	time@t+1
 13542  1C16  31AD  2536  319C   	fcall	_time
 13543                           
 13544                           ;tcp_client_demo.c: 36: switch(socketState)
 13545  1C19  2D35               	goto	l8400
 13546  1C1A                     l8344:
 13547                           
 13548                           ;tcp_client_demo.c: 40: TCP_SocketInit(&port60TCB);
 13549  1C1A  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13550  1C1B  31A2  2282         	fcall	_TCP_SocketInit
 13551                           
 13552                           ;tcp_client_demo.c: 41: break;
 13553  1C1D  0008               	return
 13554  1C1E                     l8346:
 13555                           
 13556                           ;tcp_client_demo.c: 45: socketTimeout = t_client + 2;
 13557  1C1E  3002               	movlw	2
 13558  1C1F  0023               	movlb	3	; select bank3
 13559  1C20  0761               	addwf	DEMO_TCP_Client@t_client^(0+384),w
 13560  1C21  0024               	movlb	4	; select bank4
 13561  1C22  00CA               	movwf	DEMO_TCP_Client@socketTimeout^(0+512)
 13562  1C23  3000               	movlw	0
 13563  1C24  0023               	movlb	3	; select bank3
 13564  1C25  3D62               	addwfc	(DEMO_TCP_Client@t_client+1)^(0+384),w
 13565  1C26  0024               	movlb	4	; select bank4
 13566  1C27  00CB               	movwf	(DEMO_TCP_Client@socketTimeout+1)^(0+512)
 13567  1C28  3000               	movlw	0
 13568  1C29  0023               	movlb	3	; select bank3
 13569  1C2A  3D63               	addwfc	(DEMO_TCP_Client@t_client+2)^(0+384),w
 13570  1C2B  0024               	movlb	4	; select bank4
 13571  1C2C  00CC               	movwf	(DEMO_TCP_Client@socketTimeout+2)^(0+512)
 13572  1C2D  3000               	movlw	0
 13573  1C2E  0023               	movlb	3	; select bank3
 13574  1C2F  3D64               	addwfc	(DEMO_TCP_Client@t_client+3)^(0+384),w
 13575  1C30  0024               	movlb	4	; select bank4
 13576  1C31  00CD               	movwf	(DEMO_TCP_Client@socketTimeout+3)^(0+512)
 13577                           
 13578                           ;tcp_client_demo.c: 46: TCP_InsertRxBuffer(&port60TCB, rxdataPort60, sizeof(rxdataPort60
      +                          ));
 13579  1C32  3020               	movlw	(low (DEMO_TCP_Client@rxdataPort60| (0+768)))& (0+255)
 13580  1C33  0022               	movlb	2	; select bank2
 13581  1C34  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13582  1C35  0826               	movf	??_DEMO_TCP_Client^(0+256),w
 13583  1C36  00F5               	movwf	TCP_InsertRxBuffer@data
 13584  1C37  3032               	movlw	50
 13585  1C38  00F6               	movwf	TCP_InsertRxBuffer@data_len
 13586  1C39  3000               	movlw	0
 13587  1C3A  00F7               	movwf	TCP_InsertRxBuffer@data_len+1
 13588  1C3B  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13589  1C3C  31AF  2704  319C   	fcall	_TCP_InsertRxBuffer
 13590                           
 13591                           ;tcp_client_demo.c: 47: TCP_Connect(&port60TCB, &remoteSocket);
 13592  1C3F  3062               	movlw	(low (_remoteSocket| (0+512)))& (0+255)
 13593  1C40  0022               	movlb	2	; select bank2
 13594  1C41  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13595  1C42  0826               	movf	??_DEMO_TCP_Client^(0+256),w
 13596  1C43  0021               	movlb	1	; select bank1
 13597  1C44  00EE               	movwf	TCP_Connect@srvaddr^(0+128)
 13598  1C45  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13599  1C46  31A4  243A         	fcall	_TCP_Connect
 13600                           
 13601                           ;tcp_client_demo.c: 48: break;
 13602  1C48  0008               	return
 13603  1C49                     l8352:
 13604                           
 13605                           ;tcp_client_demo.c: 51: if(t_client >= socketTimeout)
 13606  1C49  0023               	movlb	3	; select bank3
 13607  1C4A  0864               	movf	(DEMO_TCP_Client@t_client+3)^(0+384),w
 13608  1C4B  3A80               	xorlw	128
 13609  1C4C  0022               	movlb	2	; select bank2
 13610  1C4D  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13611  1C4E  0024               	movlb	4	; select bank4
 13612  1C4F  084D               	movf	(DEMO_TCP_Client@socketTimeout+3)^(0+512),w
 13613  1C50  3A80               	xorlw	128
 13614  1C51  0022               	movlb	2	; select bank2
 13615  1C52  0226               	subwf	??_DEMO_TCP_Client^(0+256),w
 13616  1C53  0023               	movlb	3	; select bank3
 13617  1C54  1D03               	skipz
 13618  1C55  2C66               	goto	u7663
 13619  1C56  0024               	movlb	4	; select bank4
 13620  1C57  084C               	movf	(DEMO_TCP_Client@socketTimeout+2)^(0+512),w
 13621  1C58  0023               	movlb	3	; select bank3
 13622  1C59  0263               	subwf	(DEMO_TCP_Client@t_client+2)^(0+384),w
 13623  1C5A  1D03               	skipz
 13624  1C5B  2C66               	goto	u7663
 13625  1C5C  0024               	movlb	4	; select bank4
 13626  1C5D  084B               	movf	(DEMO_TCP_Client@socketTimeout+1)^(0+512),w
 13627  1C5E  0023               	movlb	3	; select bank3
 13628  1C5F  0262               	subwf	(DEMO_TCP_Client@t_client+1)^(0+384),w
 13629  1C60  1D03               	skipz
 13630  1C61  2C66               	goto	u7663
 13631  1C62  0024               	movlb	4	; select bank4
 13632  1C63  084A               	movf	DEMO_TCP_Client@socketTimeout^(0+512),w
 13633  1C64  0023               	movlb	3	; select bank3
 13634  1C65  0261               	subwf	DEMO_TCP_Client@t_client^(0+384),w
 13635  1C66                     u7663:
 13636  1C66  1C03               	skipc
 13637  1C67  0008               	return
 13638                           
 13639                           ;tcp_client_demo.c: 52: {;tcp_client_demo.c: 53: TCP_Close(&port60TCB);
 13640  1C68  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13641  1C69  31AC  246E         	fcall	_TCP_Close
 13642  1C6B  0008               	return
 13643  1C6C                     l8356:
 13644                           
 13645                           ;tcp_client_demo.c: 59: if (TCP_SendDone(&port60TCB))
 13646  1C6C  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13647  1C6D  31AA  22D0  319C   	fcall	_TCP_SendDone
 13648  1C70  3A00               	xorlw	0
 13649  1C71  1903               	skipnz
 13650  1C72  0008               	return
 13651                           
 13652                           ;tcp_client_demo.c: 60: {;tcp_client_demo.c: 61: rx_len = TCP_GetReceivedData(&port60TCB
      +                          );
 13653  1C73  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13654  1C74  31AE  26CB  319C   	fcall	_TCP_GetReceivedData
 13655  1C77  0876               	movf	?_TCP_GetReceivedData+1,w
 13656  1C78  0022               	movlb	2	; select bank2
 13657  1C79  00AC               	movwf	(DEMO_TCP_Client@rx_len+1)^(0+256)
 13658  1C7A  0875               	movf	?_TCP_GetReceivedData,w
 13659  1C7B  00AB               	movwf	DEMO_TCP_Client@rx_len^(0+256)
 13660                           
 13661                           ;tcp_client_demo.c: 63: if(rx_len > 0)
 13662  1C7C  082B               	movf	DEMO_TCP_Client@rx_len^(0+256),w
 13663  1C7D  042C               	iorwf	(DEMO_TCP_Client@rx_len+1)^(0+256),w
 13664  1C7E  1903               	btfsc	3,2
 13665  1C7F  2CC3               	goto	l8386
 13666                           
 13667                           ;tcp_client_demo.c: 64: {;tcp_client_demo.c: 66: if (rx_len > 16) {
 13668  1C80  3000               	movlw	0
 13669  1C81  022C               	subwf	(DEMO_TCP_Client@rx_len+1)^(0+256),w
 13670  1C82  3011               	movlw	17
 13671  1C83  1903               	skipnz
 13672  1C84  022B               	subwf	DEMO_TCP_Client@rx_len^(0+256),w
 13673  1C85  1C03               	skipc
 13674  1C86  2C8A               	goto	l8366
 13675                           
 13676                           ;tcp_client_demo.c: 67: rxdataPort60[16] = 0;
 13677  1C87  0026               	movlb	6	; select bank6
 13678  1C88  01B0               	clrf	(DEMO_TCP_Client@rxdataPort60^(0+768)+16)
 13679                           
 13680                           ;tcp_client_demo.c: 68: } else {
 13681  1C89  2C90               	goto	l8368
 13682  1C8A                     l8366:
 13683                           
 13684                           ;tcp_client_demo.c: 69: rxdataPort60[rx_len] = 0;
 13685  1C8A  082B               	movf	DEMO_TCP_Client@rx_len^(0+256),w
 13686  1C8B  3E20               	addlw	(low (DEMO_TCP_Client@rxdataPort60| (0+768)))& (0+255)
 13687  1C8C  0086               	movwf	6
 13688  1C8D  3003               	movlw	3	; select bank6/7
 13689  1C8E  0087               	movwf	7
 13690  1C8F  0181               	clrf	1
 13691  1C90                     l8368:
 13692                           
 13693                           ;tcp_client_demo.c: 70: };tcp_client_demo.c: 72: if(rxdataPort60[0] == 'l' && rxdataPort
      +                          60[1] == 'e' && rxdataPort60[2] == 'd') {
 13694  1C90  306C               	movlw	108
 13695  1C91  0026               	movlb	6	; select bank6
 13696  1C92  0620               	xorwf	DEMO_TCP_Client@rxdataPort60^(0+768),w
 13697  1C93  1D03               	btfss	3,2
 13698  1C94  2CB6               	goto	l8384
 13699  1C95  3065               	movlw	101
 13700  1C96  0621               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+1),w
 13701  1C97  1D03               	btfss	3,2
 13702  1C98  2CB6               	goto	l8384
 13703  1C99  3064               	movlw	100
 13704  1C9A  0622               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+2),w
 13705  1C9B  1D03               	btfss	3,2
 13706  1C9C  2CB6               	goto	l8384
 13707                           
 13708                           ;tcp_client_demo.c: 73: if(rxdataPort60[6] == 'o' && rxdataPort60[7] == 'n') {
 13709  1C9D  306F               	movlw	111
 13710  1C9E  0626               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+6),w
 13711  1C9F  1D03               	btfss	3,2
 13712  1CA0  2CA8               	goto	l8378
 13713  1CA1  306E               	movlw	110
 13714  1CA2  0627               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+7),w
 13715  1CA3  1D03               	btfss	3,2
 13716  1CA4  2CA8               	goto	l8378
 13717                           
 13718                           ;tcp_client_demo.c: 74: do { LATAbits.LATA5 = 1; } while(0);
 13719  1CA5  0022               	movlb	2	; select bank2
 13720  1CA6  168C               	bsf	12,5	;volatile
 13721  1CA7  2CB6               	goto	l8384
 13722  1CA8                     l8378:
 13723                           
 13724                           ;tcp_client_demo.c: 76: if(rxdataPort60[6] == 'o' && rxdataPort60[7] == 'f' && rxdataPor
      +                          t60[8] == 'f') {
 13725  1CA8  306F               	movlw	111
 13726  1CA9  0626               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+6),w
 13727  1CAA  1D03               	btfss	3,2
 13728  1CAB  2CB6               	goto	l8384
 13729  1CAC  3066               	movlw	102
 13730  1CAD  0627               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+7),w
 13731  1CAE  1D03               	btfss	3,2
 13732  1CAF  2CB6               	goto	l8384
 13733  1CB0  3066               	movlw	102
 13734  1CB1  0628               	xorwf	(DEMO_TCP_Client@rxdataPort60^(0+768)+8),w
 13735  1CB2  1D03               	btfss	3,2
 13736  1CB3  2CB6               	goto	l8384
 13737                           
 13738                           ;tcp_client_demo.c: 77: do { LATAbits.LATA5 = 0; } while(0);
 13739  1CB4  0022               	movlb	2	; select bank2
 13740  1CB5  128C               	bcf	12,5	;volatile
 13741  1CB6                     l8384:
 13742                           
 13743                           ;tcp_client_demo.c: 78: };tcp_client_demo.c: 79: };tcp_client_demo.c: 80: };tcp_client_d
      +                          emo.c: 82: TCP_InsertRxBuffer(&port60TCB, rxdataPort60, sizeof(rxdataPort60));
 13744  1CB6  3020               	movlw	(low (DEMO_TCP_Client@rxdataPort60| (0+768)))& (0+255)
 13745  1CB7  0022               	movlb	2	; select bank2
 13746  1CB8  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13747  1CB9  0826               	movf	??_DEMO_TCP_Client^(0+256),w
 13748  1CBA  00F5               	movwf	TCP_InsertRxBuffer@data
 13749  1CBB  3032               	movlw	50
 13750  1CBC  00F6               	movwf	TCP_InsertRxBuffer@data_len
 13751  1CBD  3000               	movlw	0
 13752  1CBE  00F7               	movwf	TCP_InsertRxBuffer@data_len+1
 13753  1CBF  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13754  1CC0  31AF  2704  319C   	fcall	_TCP_InsertRxBuffer
 13755  1CC3                     l8386:
 13756                           
 13757                           ;tcp_client_demo.c: 83: };tcp_client_demo.c: 85: if(t_client >= socketTimeout)
 13758  1CC3  0023               	movlb	3	; select bank3
 13759  1CC4  0864               	movf	(DEMO_TCP_Client@t_client+3)^(0+384),w
 13760  1CC5  3A80               	xorlw	128
 13761  1CC6  0022               	movlb	2	; select bank2
 13762  1CC7  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13763  1CC8  0024               	movlb	4	; select bank4
 13764  1CC9  084D               	movf	(DEMO_TCP_Client@socketTimeout+3)^(0+512),w
 13765  1CCA  3A80               	xorlw	128
 13766  1CCB  0022               	movlb	2	; select bank2
 13767  1CCC  0226               	subwf	??_DEMO_TCP_Client^(0+256),w
 13768  1CCD  0023               	movlb	3	; select bank3
 13769  1CCE  1D03               	skipz
 13770  1CCF  2CE0               	goto	u7783
 13771  1CD0  0024               	movlb	4	; select bank4
 13772  1CD1  084C               	movf	(DEMO_TCP_Client@socketTimeout+2)^(0+512),w
 13773  1CD2  0023               	movlb	3	; select bank3
 13774  1CD3  0263               	subwf	(DEMO_TCP_Client@t_client+2)^(0+384),w
 13775  1CD4  1D03               	skipz
 13776  1CD5  2CE0               	goto	u7783
 13777  1CD6  0024               	movlb	4	; select bank4
 13778  1CD7  084B               	movf	(DEMO_TCP_Client@socketTimeout+1)^(0+512),w
 13779  1CD8  0023               	movlb	3	; select bank3
 13780  1CD9  0262               	subwf	(DEMO_TCP_Client@t_client+1)^(0+384),w
 13781  1CDA  1D03               	skipz
 13782  1CDB  2CE0               	goto	u7783
 13783  1CDC  0024               	movlb	4	; select bank4
 13784  1CDD  084A               	movf	DEMO_TCP_Client@socketTimeout^(0+512),w
 13785  1CDE  0023               	movlb	3	; select bank3
 13786  1CDF  0261               	subwf	DEMO_TCP_Client@t_client^(0+384),w
 13787  1CE0                     u7783:
 13788  1CE0  1C03               	skipc
 13789  1CE1  0008               	return
 13790                           
 13791                           ;tcp_client_demo.c: 86: {;tcp_client_demo.c: 88: socketTimeout = t_client + 2;
 13792  1CE2  3002               	movlw	2
 13793  1CE3  0761               	addwf	DEMO_TCP_Client@t_client^(0+384),w
 13794  1CE4  0024               	movlb	4	; select bank4
 13795  1CE5  00CA               	movwf	DEMO_TCP_Client@socketTimeout^(0+512)
 13796  1CE6  3000               	movlw	0
 13797  1CE7  0023               	movlb	3	; select bank3
 13798  1CE8  3D62               	addwfc	(DEMO_TCP_Client@t_client+1)^(0+384),w
 13799  1CE9  0024               	movlb	4	; select bank4
 13800  1CEA  00CB               	movwf	(DEMO_TCP_Client@socketTimeout+1)^(0+512)
 13801  1CEB  3000               	movlw	0
 13802  1CEC  0023               	movlb	3	; select bank3
 13803  1CED  3D63               	addwfc	(DEMO_TCP_Client@t_client+2)^(0+384),w
 13804  1CEE  0024               	movlb	4	; select bank4
 13805  1CEF  00CC               	movwf	(DEMO_TCP_Client@socketTimeout+2)^(0+512)
 13806  1CF0  3000               	movlw	0
 13807  1CF1  0023               	movlb	3	; select bank3
 13808  1CF2  3D64               	addwfc	(DEMO_TCP_Client@t_client+3)^(0+384),w
 13809  1CF3  0024               	movlb	4	; select bank4
 13810  1CF4  00CD               	movwf	(DEMO_TCP_Client@socketTimeout+3)^(0+512)
 13811                           
 13812                           ;tcp_client_demo.c: 89: pot = ADC_GetConversion(Pot);
 13813  1CF5  3010               	movlw	16
 13814  1CF6  31AB  230F  319C   	fcall	_ADC_GetConversion
 13815  1CF9  0871               	movf	?_ADC_GetConversion+1,w
 13816  1CFA  0022               	movlb	2	; select bank2
 13817  1CFB  00A9               	movwf	(DEMO_TCP_Client@pot+1)^(0+256)
 13818  1CFC  0870               	movf	?_ADC_GetConversion,w
 13819  1CFD  00A8               	movwf	DEMO_TCP_Client@pot^(0+256)
 13820                           
 13821                           ;tcp_client_demo.c: 90: sprintf(txdataPort60,"Pot: %d\n LED's state: %d\n", pot, LATAbit
      +                          s.LATA5);
 13822  1CFE  30A0               	movlw	low DEMO_TCP_Client@txdataPort60
 13823  1CFF  0020               	movlb	0	; select bank0
 13824  1D00  00A0               	movwf	sprintf@sp
 13825  1D01  3003               	movlw	high DEMO_TCP_Client@txdataPort60
 13826  1D02  00A1               	movwf	sprintf@sp+1
 13827  1D03  301D               	movlw	low (STR_6| (0+32768))
 13828  1D04  00A2               	movwf	sprintf@f
 13829  1D05  30B0               	movlw	high (STR_6| (0+32768))
 13830  1D06  00A3               	movwf	sprintf@f+1
 13831  1D07  0022               	movlb	2	; select bank2
 13832  1D08  0829               	movf	(DEMO_TCP_Client@pot+1)^(0+256),w
 13833  1D09  0020               	movlb	0	; select bank0
 13834  1D0A  00A5               	movwf	?_sprintf+5
 13835  1D0B  0022               	movlb	2	; select bank2
 13836  1D0C  0828               	movf	DEMO_TCP_Client@pot^(0+256),w
 13837  1D0D  0020               	movlb	0	; select bank0
 13838  1D0E  00A4               	movwf	?_sprintf+4
 13839  1D0F  0022               	movlb	2	; select bank2
 13840  1D10  0E0C               	swapf	12,w	;volatile
 13841  1D11  0C89               	rrf	9,f
 13842  1D12  3901               	andlw	1
 13843  1D13  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13844  1D14  01A7               	clrf	(??_DEMO_TCP_Client^(0+256)+1)
 13845  1D15  0826               	movf	??_DEMO_TCP_Client^(0+256),w
 13846  1D16  0020               	movlb	0	; select bank0
 13847  1D17  00A6               	movwf	?_sprintf+6
 13848  1D18  0022               	movlb	2	; select bank2
 13849  1D19  0827               	movf	(??_DEMO_TCP_Client+1)^(0+256),w
 13850  1D1A  0020               	movlb	0	; select bank0
 13851  1D1B  00A7               	movwf	?_sprintf+7
 13852  1D1C  3198  2061  319C   	fcall	_sprintf
 13853                           
 13854                           ;tcp_client_demo.c: 92: TCP_Send(&port60TCB, txdataPort60, strlen(txdataPort60));
 13855  1D1F  30A0               	movlw	(low (DEMO_TCP_Client@txdataPort60| (0+768)))& (0+255)
 13856  1D20  0022               	movlb	2	; select bank2
 13857  1D21  00A6               	movwf	??_DEMO_TCP_Client^(0+256)
 13858  1D22  0826               	movf	??_DEMO_TCP_Client^(0+256),w
 13859  1D23  0021               	movlb	1	; select bank1
 13860  1D24  00D5               	movwf	TCP_Send@data^(0+128)
 13861  1D25  30A0               	movlw	(low (DEMO_TCP_Client@txdataPort60| (0+768)))& (0+255)
 13862  1D26  31A0  2000  319C   	fcall	_strlen
 13863  1D29  0871               	movf	?_strlen+1,w
 13864  1D2A  00D7               	movwf	(TCP_Send@dataLen+1)^(0+128)
 13865  1D2B  0870               	movf	?_strlen,w
 13866  1D2C  00D6               	movwf	TCP_Send@dataLen^(0+128)
 13867  1D2D  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13868  1D2E  31A2  22ED         	fcall	_TCP_Send
 13869  1D30  0008               	return
 13870  1D31                     l8396:
 13871                           
 13872                           ;tcp_client_demo.c: 97: TCP_SocketRemove(&port60TCB);
 13873  1D31  30A0               	movlw	(low (DEMO_TCP_Client@port60TCB| (0+512)))& (0+255)
 13874  1D32  31A9  21CB         	fcall	_TCP_SocketRemove
 13875                           
 13876                           ;tcp_client_demo.c: 98: break;
 13877  1D34  0008               	return
 13878  1D35                     l8400:
 13879  1D35  0022               	movlb	2	; select bank2
 13880  1D36  082A               	movf	DEMO_TCP_Client@socketState^(0+256),w
 13881                           
 13882                           ; Switch size 1, requested type "simple"
 13883                           ; Number of cases is 5, Range of values is 0 to 4
 13884                           ; switch strategies available:
 13885                           ; Name         Instructions Cycles
 13886                           ; direct_byte           16     6 (fixed)
 13887                           ; simple_byte           16     9 (average)
 13888                           ; jumptable            260     6 (fixed)
 13889                           ;	Chosen strategy is simple_byte
 13890  1D37  3A00               	xorlw	0	; case 0
 13891  1D38  1903               	skipnz
 13892  1D39  2C1A               	goto	l8344
 13893  1D3A  3A01               	xorlw	1	; case 1
 13894  1D3B  1903               	skipnz
 13895  1D3C  2C1E               	goto	l8346
 13896  1D3D  3A03               	xorlw	3	; case 2
 13897  1D3E  1903               	skipnz
 13898  1D3F  2C49               	goto	l8352
 13899  1D40  3A01               	xorlw	1	; case 3
 13900  1D41  1903               	skipnz
 13901  1D42  2C6C               	goto	l8356
 13902  1D43  3A07               	xorlw	7	; case 4
 13903  1D44  1903               	skipnz
 13904  1D45  2D31               	goto	l8396
 13905  1D46  2D47               	goto	l1467
 13906  1D47                     l1467:
 13907  1D47  0008               	return
 13908  1D48                     __end_of_DEMO_TCP_Client:
 13909                           
 13910                           	psect	text51
 13911  2D36                     __ptext51:	
 13912 ;; *************** function _time *****************
 13913 ;; Defined at:
 13914 ;;		line 162 in file "mcc_generated_files/TCPIPLibrary/rtcc.c"
 13915 ;; Parameters:    Size  Location     Type
 13916 ;;  t               2    0[COMMON] PTR long 
 13917 ;;		 -> DEMO_TCP_Client@t_client(4), Network_Manage@now(4), arpTimer(4), NULL(0), 
 13918 ;; Auto vars:     Size  Location     Type
 13919 ;;  the_time        4    5[COMMON] long 
 13920 ;;  gie_val         1    4[COMMON] unsigned char 
 13921 ;; Return value:  Size  Location     Type
 13922 ;;                  4    0[COMMON] long 
 13923 ;; Registers used:
 13924 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13925 ;; Tracked objects:
 13926 ;;		On entry : 19/4
 13927 ;;		On exit  : 0/0
 13928 ;;		Unchanged: 0/0
 13929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13930 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13931 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13933 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13934 ;;Total ram usage:        9 bytes
 13935 ;; Hardware stack levels used:    1
 13936 ;; Hardware stack levels required when called:    3
 13937 ;; This function calls:
 13938 ;;		Nothing
 13939 ;; This function is called by:
 13940 ;;		_timersInit
 13941 ;;		_Network_Manage
 13942 ;;		_DEMO_TCP_Client
 13943 ;; This function uses a non-reentrant model
 13944 ;;
 13945                           
 13946                           
 13947                           ;psect for function _time
 13948  2D36                     _time:
 13949                           
 13950                           ;rtcc.c: 164: bool gie_val;;rtcc.c: 165: time_t the_time;;rtcc.c: 167: gie_val = GIE;
 13951                           
 13952                           ;incstack = 0
 13953                           ; Regs used in _time: [wreg+fsr1l+fsr1h+status,2+status,0]
 13954  2D36  3000               	movlw	0
 13955  2D37  1B8B               	btfsc	11,7	;volatile
 13956  2D38  3001               	movlw	1
 13957  2D39  00F4               	movwf	time@gie_val
 13958                           
 13959                           ;rtcc.c: 168: GIE = 0;
 13960  2D3A  138B               	bcf	11,7	;volatile
 13961                           
 13962                           ;rtcc.c: 169: the_time = device_time;
 13963  2D3B  0024               	movlb	4	; select bank4
 13964  2D3C  085D               	movf	(_device_time+3)^(0+512),w	;volatile
 13965  2D3D  00F8               	movwf	time@the_time+3
 13966  2D3E  085C               	movf	(_device_time+2)^(0+512),w	;volatile
 13967  2D3F  00F7               	movwf	time@the_time+2
 13968  2D40  085B               	movf	(_device_time+1)^(0+512),w	;volatile
 13969  2D41  00F6               	movwf	time@the_time+1
 13970  2D42  085A               	movf	_device_time^(0+512),w	;volatile
 13971  2D43  00F5               	movwf	time@the_time
 13972                           
 13973                           ;rtcc.c: 170: GIE = gie_val;
 13974  2D44  1C74               	btfss	time@gie_val,0
 13975  2D45  2D48               	goto	u6710
 13976  2D46  178B               	bsf	11,7	;volatile
 13977  2D47  2D49               	goto	l7876
 13978  2D48                     u6710:
 13979  2D48  138B               	bcf	11,7	;volatile
 13980  2D49                     l7876:
 13981                           
 13982                           ;rtcc.c: 172: if(t)
 13983  2D49  0870               	movf	time@t,w
 13984  2D4A  0471               	iorwf	time@t+1,w
 13985  2D4B  1903               	btfsc	3,2
 13986  2D4C  2D59               	goto	l7880
 13987                           
 13988                           ;rtcc.c: 173: {;rtcc.c: 174: *t = the_time;
 13989  2D4D  0870               	movf	time@t,w
 13990  2D4E  0086               	movwf	6
 13991  2D4F  0871               	movf	time@t+1,w
 13992  2D50  0087               	movwf	7
 13993  2D51  0875               	movf	time@the_time,w
 13994  2D52  3FC0               	movwi [0]fsr1
 13995  2D53  0876               	movf	time@the_time+1,w
 13996  2D54  3FC1               	movwi [1]fsr1
 13997  2D55  0877               	movf	time@the_time+2,w
 13998  2D56  3FC2               	movwi [2]fsr1
 13999  2D57  0878               	movf	time@the_time+3,w
 14000  2D58  3FC3               	movwi [3]fsr1
 14001  2D59                     l7880:
 14002                           
 14003                           ;rtcc.c: 175: };rtcc.c: 177: return (the_time);
 14004  2D59  0878               	movf	time@the_time+3,w
 14005  2D5A  00F3               	movwf	?_time+3
 14006  2D5B  0877               	movf	time@the_time+2,w
 14007  2D5C  00F2               	movwf	?_time+2
 14008  2D5D  0876               	movf	time@the_time+1,w
 14009  2D5E  00F1               	movwf	?_time+1
 14010  2D5F  0875               	movf	time@the_time,w
 14011  2D60  00F0               	movwf	?_time
 14012  2D61  0008               	return
 14013  2D62                     __end_of_time:
 14014                           
 14015                           	psect	text52
 14016  2000                     __ptext52:	
 14017 ;; *************** function _strlen *****************
 14018 ;; Defined at:
 14019 ;;		line 4 in file "C:\Program Files\Microchip\xc8v220\pic\sources\c90\common\strlen.c"
 14020 ;; Parameters:    Size  Location     Type
 14021 ;;  s               1    wreg     PTR const unsigned char 
 14022 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;  s               1    3[COMMON] PTR const unsigned char 
 14025 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 14026 ;;  cp              1    4[COMMON] PTR const unsigned char 
 14027 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 14028 ;; Return value:  Size  Location     Type
 14029 ;;                  2    0[COMMON] unsigned int 
 14030 ;; Registers used:
 14031 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14032 ;; Tracked objects:
 14033 ;;		On entry : 1F/1
 14034 ;;		On exit  : 1F/1
 14035 ;;		Unchanged: 1F/0
 14036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14040 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14041 ;;Total ram usage:        5 bytes
 14042 ;; Hardware stack levels used:    1
 14043 ;; Hardware stack levels required when called:    3
 14044 ;; This function calls:
 14045 ;;		Nothing
 14046 ;; This function is called by:
 14047 ;;		_DEMO_TCP_Client
 14048 ;; This function uses a non-reentrant model
 14049 ;;
 14050                           
 14051                           
 14052                           ;psect for function _strlen
 14053  2000                     _strlen:
 14054                           
 14055                           ;incstack = 0
 14056                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14057                           ;strlen@s stored from wreg
 14058  2000  00F3               	movwf	strlen@s
 14059  2001  0873               	movf	strlen@s,w
 14060  2002  00F2               	movwf	??_strlen
 14061  2003  0872               	movf	??_strlen,w
 14062  2004  00F4               	movwf	strlen@cp
 14063  2005                     l6952:
 14064  2005  0874               	movf	strlen@cp,w
 14065  2006  0086               	movwf	6
 14066  2007  3003               	movlw	3	; select bank6/7
 14067  2008  0087               	movwf	7
 14068  2009  0801               	movf	1,w
 14069  200A  1903               	btfsc	3,2
 14070  200B  2811               	goto	l6954
 14071  200C  3001               	movlw	1
 14072  200D  00F2               	movwf	??_strlen
 14073  200E  0872               	movf	??_strlen,w
 14074  200F  07F4               	addwf	strlen@cp,f
 14075  2010  2805               	goto	l6952
 14076  2011                     l6954:
 14077  2011  0873               	movf	strlen@s,w
 14078  2012  0274               	subwf	strlen@cp,w
 14079  2013  00F0               	movwf	?_strlen
 14080  2014  01F1               	clrf	?_strlen+1
 14081  2015  1BF0               	btfsc	?_strlen,7
 14082  2016  03F1               	decf	?_strlen+1,f
 14083  2017  0008               	return
 14084  2018                     __end_of_strlen:
 14085                           
 14086                           	psect	text53
 14087  1861                     __ptext53:	
 14088 ;; *************** function _sprintf *****************
 14089 ;; Defined at:
 14090 ;;		line 505 in file "C:\Program Files\Microchip\xc8v220\pic\sources\c90\common\doprnt.c"
 14091 ;; Parameters:    Size  Location     Type
 14092 ;;  sp              2    0[BANK0 ] PTR unsigned char 
 14093 ;;		 -> DEMO_TCP_Client@txdataPort60(80), makeIpv4AddresstoStr@ip_str(15), 
 14094 ;;  f               2    2[BANK0 ] PTR const unsigned char 
 14095 ;;		 -> STR_6(26), STR_5(12), 
 14096 ;; Auto vars:     Size  Location     Type
 14097 ;;  tmpval          4    0        struct .
 14098 ;;  val             2   15[BANK0 ] unsigned int 
 14099 ;;  cp              2    0        PTR const unsigned char 
 14100 ;;  len             2    0        unsigned int 
 14101 ;;  c               1   17[BANK0 ] unsigned char 
 14102 ;;  prec            1   14[BANK0 ] char 
 14103 ;;  flag            1   13[BANK0 ] unsigned char 
 14104 ;;  ap              1   12[BANK0 ] PTR void [1]
 14105 ;;		 -> ?_sprintf(2), 
 14106 ;; Return value:  Size  Location     Type
 14107 ;;                  2    0[BANK0 ] int 
 14108 ;; Registers used:
 14109 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14110 ;; Tracked objects:
 14111 ;;		On entry : 1F/0
 14112 ;;		On exit  : 1F/0
 14113 ;;		Unchanged: 0/0
 14114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14115 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14118 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14119 ;;Total ram usage:       18 bytes
 14120 ;; Hardware stack levels used:    1
 14121 ;; Hardware stack levels required when called:    4
 14122 ;; This function calls:
 14123 ;;		___lwdiv
 14124 ;;		___lwmod
 14125 ;; This function is called by:
 14126 ;;		_DEMO_TCP_Client
 14127 ;; This function uses a non-reentrant model
 14128 ;;
 14129                           
 14130                           
 14131                           ;psect for function _sprintf
 14132  1861                     _sprintf:
 14133                           
 14134                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 521: signed char prec;;dopr
      +                          nt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c: 541: unsigned long vd;;d
      +                          oprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned int val;;do
      +                          prnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = __va_sta
      +                          rt();
 14135                           
 14136                           ;incstack = 0
 14137                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14138  1861  3024               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 14139  1862  00A8               	movwf	??_sprintf
 14140  1863  0828               	movf	??_sprintf,w
 14141  1864  00AC               	movwf	sprintf@ap
 14142  1865                     l6912:	
 14143                           ;doprnt.c: 553: while((c = *f++)) {
 14144                           
 14145  1865  0823               	movf	sprintf@f+1,w
 14146  1866  00A9               	movwf	??_sprintf+1
 14147  1867  0822               	movf	sprintf@f,w
 14148  1868  00A8               	movwf	??_sprintf
 14149  1869  0AA2               	incf	sprintf@f,f
 14150  186A  1903               	skipnz
 14151  186B  0AA3               	incf	sprintf@f+1,f
 14152  186C  0828               	movf	??_sprintf,w
 14153  186D  0084               	movwf	4
 14154  186E  0829               	movf	??_sprintf+1,w
 14155  186F  0085               	movwf	5
 14156  1870  0800               	movf	0,w	;code access
 14157  1871  00AA               	movwf	??_sprintf+2
 14158  1872  082A               	movf	??_sprintf+2,w
 14159  1873  00B1               	movwf	sprintf@c
 14160  1874  0831               	movf	sprintf@c,w
 14161  1875  1903               	btfsc	3,2
 14162  1876  291F               	goto	l6914
 14163                           
 14164                           ;doprnt.c: 555: if(c != '%')
 14165  1877  3025               	movlw	37
 14166  1878  0631               	xorwf	sprintf@c,w
 14167  1879  1903               	btfsc	3,2
 14168  187A  2886               	goto	l6868
 14169                           
 14170                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 14171  187B  0820               	movf	sprintf@sp,w
 14172  187C  0086               	movwf	6
 14173  187D  0821               	movf	sprintf@sp+1,w
 14174  187E  0087               	movwf	7
 14175  187F  0831               	movf	sprintf@c,w
 14176  1880  0081               	movwf	1
 14177  1881  3001               	movlw	1
 14178  1882  07A0               	addwf	sprintf@sp,f
 14179  1883  3000               	movlw	0
 14180  1884  3DA1               	addwfc	sprintf@sp+1,f
 14181                           
 14182                           ;doprnt.c: 559: continue;
 14183  1885  2865               	goto	l6912
 14184  1886                     l6868:
 14185                           
 14186                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
 14187  1886  01AD               	clrf	sprintf@flag
 14188                           
 14189                           ;doprnt.c: 661: switch(c = *f++) {
 14190  1887  0823               	movf	sprintf@f+1,w
 14191  1888  00A9               	movwf	??_sprintf+1
 14192  1889  0822               	movf	sprintf@f,w
 14193  188A  00A8               	movwf	??_sprintf
 14194  188B  0AA2               	incf	sprintf@f,f
 14195  188C  1903               	skipnz
 14196  188D  0AA3               	incf	sprintf@f+1,f
 14197  188E  0828               	movf	??_sprintf,w
 14198  188F  0084               	movwf	4
 14199  1890  0829               	movf	??_sprintf+1,w
 14200  1891  0085               	movwf	5
 14201  1892  0800               	movf	0,w	;code access
 14202  1893  00B1               	movwf	sprintf@c
 14203                           
 14204                           ; Switch size 1, requested type "simple"
 14205                           ; Number of cases is 3, Range of values is 0 to 105
 14206                           ; switch strategies available:
 14207                           ; Name         Instructions Cycles
 14208                           ; simple_byte           10     6 (average)
 14209                           ; direct_byte          218     6 (fixed)
 14210                           ; jumptable            260     6 (fixed)
 14211                           ;	Chosen strategy is simple_byte
 14212  1894  3A00               	xorlw	0	; case 0
 14213  1895  1903               	skipnz
 14214  1896  291F               	goto	l6914
 14215  1897  3A64               	xorlw	100	; case 100
 14216  1898  1903               	skipnz
 14217  1899  289E               	goto	l6874
 14218  189A  3A0D               	xorlw	13	; case 105
 14219  189B  1903               	skipnz
 14220  189C  289E               	goto	l6874
 14221  189D  2865               	goto	l6912
 14222  189E                     l6874:
 14223                           
 14224                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 14225  189E  082C               	movf	sprintf@ap,w
 14226  189F  0086               	movwf	6
 14227  18A0  0187               	clrf	7
 14228  18A1  3F40               	moviw [0]fsr1
 14229  18A2  00AF               	movwf	sprintf@val
 14230  18A3  3F41               	moviw [1]fsr1
 14231  18A4  00B0               	movwf	sprintf@val+1
 14232  18A5  3002               	movlw	2
 14233  18A6  00A8               	movwf	??_sprintf
 14234  18A7  0828               	movf	??_sprintf,w
 14235  18A8  07AC               	addwf	sprintf@ap,f
 14236                           
 14237                           ;doprnt.c: 1287: if((int)val < 0) {
 14238  18A9  1FB0               	btfss	sprintf@val+1,7
 14239  18AA  28B4               	goto	l6884
 14240                           
 14241                           ;doprnt.c: 1288: flag |= 0x03;
 14242  18AB  3003               	movlw	3
 14243  18AC  00A8               	movwf	??_sprintf
 14244  18AD  0828               	movf	??_sprintf,w
 14245  18AE  04AD               	iorwf	sprintf@flag,f
 14246                           
 14247                           ;doprnt.c: 1289: val = -val;
 14248  18AF  09AF               	comf	sprintf@val,f
 14249  18B0  09B0               	comf	sprintf@val+1,f
 14250  18B1  0AAF               	incf	sprintf@val,f
 14251  18B2  1903               	skipnz
 14252  18B3  0AB0               	incf	sprintf@val+1,f
 14253  18B4                     l6884:
 14254                           
 14255                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 14256  18B4  01B1               	clrf	sprintf@c
 14257  18B5  0AB1               	incf	sprintf@c,f
 14258  18B6                     l6890:
 14259                           
 14260                           ;doprnt.c: 1332: if(val < dpowers[c])
 14261  18B6  0831               	movf	sprintf@c,w
 14262  18B7  00A8               	movwf	??_sprintf
 14263  18B8  01A9               	clrf	??_sprintf+1
 14264  18B9  35A8               	lslf	??_sprintf,f
 14265  18BA  0DA9               	rlf	??_sprintf+1,f
 14266  18BB  3055               	movlw	low (_dpowers| (0+32768))
 14267  18BC  0728               	addwf	??_sprintf,w
 14268  18BD  0084               	movwf	4
 14269  18BE  30B0               	movlw	high (_dpowers| (0+32768))
 14270  18BF  3D29               	addwfc	??_sprintf+1,w
 14271  18C0  0085               	movwf	5
 14272  18C1  3F00               	moviw [0]fsr0
 14273  18C2  00AA               	movwf	??_sprintf+2
 14274  18C3  3F01               	moviw [1]fsr0
 14275  18C4  00AB               	movwf	??_sprintf+3
 14276  18C5  082B               	movf	??_sprintf+3,w
 14277  18C6  0230               	subwf	sprintf@val+1,w
 14278  18C7  1D03               	skipz
 14279  18C8  28CB               	goto	u5555
 14280  18C9  082A               	movf	??_sprintf+2,w
 14281  18CA  022F               	subwf	sprintf@val,w
 14282  18CB                     u5555:
 14283  18CB  1C03               	btfss	3,0
 14284  18CC  28D5               	goto	l6896
 14285  18CD  3001               	movlw	1
 14286  18CE  00A8               	movwf	??_sprintf
 14287  18CF  0828               	movf	??_sprintf,w
 14288  18D0  07B1               	addwf	sprintf@c,f
 14289  18D1  3005               	movlw	5
 14290  18D2  0631               	xorwf	sprintf@c,w
 14291  18D3  1D03               	btfss	3,2
 14292  18D4  28B6               	goto	l6890
 14293  18D5                     l6896:
 14294                           
 14295                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
 14296  18D5  082D               	movf	sprintf@flag,w
 14297  18D6  3903               	andlw	3
 14298  18D7  1903               	btfsc	3,2
 14299  18D8  28E3               	goto	l6902
 14300                           
 14301                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 14302  18D9  0820               	movf	sprintf@sp,w
 14303  18DA  0086               	movwf	6
 14304  18DB  0821               	movf	sprintf@sp+1,w
 14305  18DC  0087               	movwf	7
 14306  18DD  302D               	movlw	45
 14307  18DE  0081               	movwf	1
 14308  18DF  3001               	movlw	1
 14309  18E0  07A0               	addwf	sprintf@sp,f
 14310  18E1  3000               	movlw	0
 14311  18E2  3DA1               	addwfc	sprintf@sp+1,f
 14312  18E3                     l6902:
 14313                           
 14314                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 14315  18E3  0831               	movf	sprintf@c,w
 14316  18E4  00A8               	movwf	??_sprintf
 14317  18E5  0828               	movf	??_sprintf,w
 14318  18E6  00AE               	movwf	sprintf@prec
 14319  18E7                     l6910:	
 14320                           ;doprnt.c: 1500: while(prec--) {
 14321                           
 14322  18E7  30FF               	movlw	255
 14323  18E8  00A8               	movwf	??_sprintf
 14324  18E9  0828               	movf	??_sprintf,w
 14325  18EA  07AE               	addwf	sprintf@prec,f
 14326  18EB  0A2E               	incf	sprintf@prec,w
 14327  18EC  1903               	btfsc	3,2
 14328  18ED  2865               	goto	l6912
 14329                           
 14330                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 14331  18EE  300A               	movlw	10
 14332  18EF  00F8               	movwf	___lwmod@divisor
 14333  18F0  3000               	movlw	0
 14334  18F1  00F9               	movwf	___lwmod@divisor+1
 14335  18F2  082E               	movf	sprintf@prec,w
 14336  18F3  00A8               	movwf	??_sprintf
 14337  18F4  01A9               	clrf	??_sprintf+1
 14338  18F5  35A8               	lslf	??_sprintf,f
 14339  18F6  0DA9               	rlf	??_sprintf+1,f
 14340  18F7  3055               	movlw	low (_dpowers| (0+32768))
 14341  18F8  0728               	addwf	??_sprintf,w
 14342  18F9  0084               	movwf	4
 14343  18FA  30B0               	movlw	high (_dpowers| (0+32768))
 14344  18FB  3D29               	addwfc	??_sprintf+1,w
 14345  18FC  0085               	movwf	5
 14346  18FD  3F00               	moviw [0]fsr0
 14347  18FE  00F0               	movwf	___lwdiv@divisor
 14348  18FF  3F01               	moviw [1]fsr0
 14349  1900  00F1               	movwf	___lwdiv@divisor+1
 14350  1901  0830               	movf	sprintf@val+1,w
 14351  1902  00F3               	movwf	___lwdiv@dividend+1
 14352  1903  082F               	movf	sprintf@val,w
 14353  1904  00F2               	movwf	___lwdiv@dividend
 14354  1905  31AD  25F4  3198   	fcall	___lwdiv
 14355  1908  0871               	movf	?___lwdiv+1,w
 14356  1909  00FB               	movwf	___lwmod@dividend+1
 14357  190A  0870               	movf	?___lwdiv,w
 14358  190B  00FA               	movwf	___lwmod@dividend
 14359  190C  31AD  250A  3198   	fcall	___lwmod
 14360  190F  0878               	movf	?___lwmod,w
 14361  1910  3E30               	addlw	48
 14362  1911  00AA               	movwf	??_sprintf+2
 14363  1912  082A               	movf	??_sprintf+2,w
 14364  1913  00B1               	movwf	sprintf@c
 14365                           
 14366                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 14367  1914  0820               	movf	sprintf@sp,w
 14368  1915  0086               	movwf	6
 14369  1916  0821               	movf	sprintf@sp+1,w
 14370  1917  0087               	movwf	7
 14371  1918  0831               	movf	sprintf@c,w
 14372  1919  0081               	movwf	1
 14373  191A  3001               	movlw	1
 14374  191B  07A0               	addwf	sprintf@sp,f
 14375  191C  3000               	movlw	0
 14376  191D  3DA1               	addwfc	sprintf@sp+1,f
 14377  191E  28E7               	goto	l6910
 14378  191F                     l6914:
 14379                           
 14380                           ;doprnt.c: 1564: *sp = 0;
 14381  191F  0820               	movf	sprintf@sp,w
 14382  1920  0086               	movwf	6
 14383  1921  0821               	movf	sprintf@sp+1,w
 14384  1922  0087               	movwf	7
 14385  1923  0181               	clrf	1
 14386  1924  0008               	return
 14387  1925                     __end_of_sprintf:
 14388                           
 14389                           	psect	text54
 14390  2D0A                     __ptext54:	
 14391 ;; *************** function ___lwmod *****************
 14392 ;; Defined at:
 14393 ;;		line 5 in file "C:\Program Files\Microchip\xc8v220\pic\sources\c90\common\lwmod.c"
 14394 ;; Parameters:    Size  Location     Type
 14395 ;;  divisor         2    8[COMMON] unsigned int 
 14396 ;;  dividend        2   10[COMMON] unsigned int 
 14397 ;; Auto vars:     Size  Location     Type
 14398 ;;  counter         1   13[COMMON] unsigned char 
 14399 ;; Return value:  Size  Location     Type
 14400 ;;                  2    8[COMMON] unsigned int 
 14401 ;; Registers used:
 14402 ;;		wreg, status,2, status,0
 14403 ;; Tracked objects:
 14404 ;;		On entry : 1F/0
 14405 ;;		On exit  : 1F/0
 14406 ;;		Unchanged: 1F/0
 14407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14410 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14411 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14412 ;;Total ram usage:        6 bytes
 14413 ;; Hardware stack levels used:    1
 14414 ;; Hardware stack levels required when called:    3
 14415 ;; This function calls:
 14416 ;;		Nothing
 14417 ;; This function is called by:
 14418 ;;		_sprintf
 14419 ;; This function uses a non-reentrant model
 14420 ;;
 14421                           
 14422                           
 14423                           ;psect for function ___lwmod
 14424  2D0A                     ___lwmod:
 14425                           
 14426                           ;incstack = 0
 14427                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 14428  2D0A  0878               	movf	___lwmod@divisor,w
 14429  2D0B  0479               	iorwf	___lwmod@divisor+1,w
 14430  2D0C  1903               	btfsc	3,2
 14431  2D0D  2D31               	goto	l6584
 14432  2D0E  01FD               	clrf	___lwmod@counter
 14433  2D0F  0AFD               	incf	___lwmod@counter,f
 14434  2D10                     l6574:
 14435  2D10  1BF9               	btfsc	___lwmod@divisor+1,7
 14436  2D11  2D1C               	goto	l6576
 14437  2D12  3001               	movlw	1
 14438  2D13                     u5175:
 14439  2D13  35F8               	lslf	___lwmod@divisor,f
 14440  2D14  0DF9               	rlf	___lwmod@divisor+1,f
 14441  2D15  0B89               	decfsz	9,f
 14442  2D16  2D13               	goto	u5175
 14443  2D17  3001               	movlw	1
 14444  2D18  00FC               	movwf	??___lwmod
 14445  2D19  087C               	movf	??___lwmod,w
 14446  2D1A  07FD               	addwf	___lwmod@counter,f
 14447  2D1B  2D10               	goto	l6574
 14448  2D1C                     l6576:
 14449  2D1C  0879               	movf	___lwmod@divisor+1,w
 14450  2D1D  027B               	subwf	___lwmod@dividend+1,w
 14451  2D1E  1D03               	skipz
 14452  2D1F  2D22               	goto	u5195
 14453  2D20  0878               	movf	___lwmod@divisor,w
 14454  2D21  027A               	subwf	___lwmod@dividend,w
 14455  2D22                     u5195:
 14456  2D22  1C03               	skipc
 14457  2D23  2D28               	goto	l6580
 14458  2D24  0878               	movf	___lwmod@divisor,w
 14459  2D25  02FA               	subwf	___lwmod@dividend,f
 14460  2D26  0879               	movf	___lwmod@divisor+1,w
 14461  2D27  3BFB               	subwfb	___lwmod@dividend+1,f
 14462  2D28                     l6580:
 14463  2D28  3001               	movlw	1
 14464  2D29                     u5205:
 14465  2D29  36F9               	lsrf	___lwmod@divisor+1,f
 14466  2D2A  0CF8               	rrf	___lwmod@divisor,f
 14467  2D2B  0B89               	decfsz	9,f
 14468  2D2C  2D29               	goto	u5205
 14469  2D2D  3001               	movlw	1
 14470  2D2E  02FD               	subwf	___lwmod@counter,f
 14471  2D2F  1D03               	btfss	3,2
 14472  2D30  2D1C               	goto	l6576
 14473  2D31                     l6584:
 14474  2D31  087B               	movf	___lwmod@dividend+1,w
 14475  2D32  00F9               	movwf	?___lwmod+1
 14476  2D33  087A               	movf	___lwmod@dividend,w
 14477  2D34  00F8               	movwf	?___lwmod
 14478  2D35  0008               	return
 14479  2D36                     __end_of___lwmod:
 14480                           
 14481                           	psect	text55
 14482  2DF4                     __ptext55:	
 14483 ;; *************** function ___lwdiv *****************
 14484 ;; Defined at:
 14485 ;;		line 5 in file "C:\Program Files\Microchip\xc8v220\pic\sources\c90\common\lwdiv.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;  divisor         2    0[COMMON] unsigned int 
 14488 ;;  dividend        2    2[COMMON] unsigned int 
 14489 ;; Auto vars:     Size  Location     Type
 14490 ;;  quotient        2    5[COMMON] unsigned int 
 14491 ;;  counter         1    7[COMMON] unsigned char 
 14492 ;; Return value:  Size  Location     Type
 14493 ;;                  2    0[COMMON] unsigned int 
 14494 ;; Registers used:
 14495 ;;		wreg, status,2, status,0
 14496 ;; Tracked objects:
 14497 ;;		On entry : 1F/0
 14498 ;;		On exit  : 1F/0
 14499 ;;		Unchanged: 1F/0
 14500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14502 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14504 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14505 ;;Total ram usage:        8 bytes
 14506 ;; Hardware stack levels used:    1
 14507 ;; Hardware stack levels required when called:    3
 14508 ;; This function calls:
 14509 ;;		Nothing
 14510 ;; This function is called by:
 14511 ;;		_sprintf
 14512 ;; This function uses a non-reentrant model
 14513 ;;
 14514                           
 14515                           
 14516                           ;psect for function ___lwdiv
 14517  2DF4                     ___lwdiv:
 14518                           
 14519                           ;incstack = 0
 14520                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 14521  2DF4  01F5               	clrf	___lwdiv@quotient
 14522  2DF5  01F6               	clrf	___lwdiv@quotient+1
 14523  2DF6  0870               	movf	___lwdiv@divisor,w
 14524  2DF7  0471               	iorwf	___lwdiv@divisor+1,w
 14525  2DF8  1903               	btfsc	3,2
 14526  2DF9  2E23               	goto	l6562
 14527  2DFA  01F7               	clrf	___lwdiv@counter
 14528  2DFB  0AF7               	incf	___lwdiv@counter,f
 14529  2DFC                     l6550:
 14530  2DFC  1BF1               	btfsc	___lwdiv@divisor+1,7
 14531  2DFD  2E08               	goto	l6552
 14532  2DFE  3001               	movlw	1
 14533  2DFF                     u5105:
 14534  2DFF  35F0               	lslf	___lwdiv@divisor,f
 14535  2E00  0DF1               	rlf	___lwdiv@divisor+1,f
 14536  2E01  0B89               	decfsz	9,f
 14537  2E02  2DFF               	goto	u5105
 14538  2E03  3001               	movlw	1
 14539  2E04  00F4               	movwf	??___lwdiv
 14540  2E05  0874               	movf	??___lwdiv,w
 14541  2E06  07F7               	addwf	___lwdiv@counter,f
 14542  2E07  2DFC               	goto	l6550
 14543  2E08                     l6552:
 14544  2E08  3001               	movlw	1
 14545  2E09                     u5125:
 14546  2E09  35F5               	lslf	___lwdiv@quotient,f
 14547  2E0A  0DF6               	rlf	___lwdiv@quotient+1,f
 14548  2E0B  0B89               	decfsz	9,f
 14549  2E0C  2E09               	goto	u5125
 14550  2E0D  0871               	movf	___lwdiv@divisor+1,w
 14551  2E0E  0273               	subwf	___lwdiv@dividend+1,w
 14552  2E0F  1D03               	skipz
 14553  2E10  2E13               	goto	u5135
 14554  2E11  0870               	movf	___lwdiv@divisor,w
 14555  2E12  0272               	subwf	___lwdiv@dividend,w
 14556  2E13                     u5135:
 14557  2E13  1C03               	skipc
 14558  2E14  2E1A               	goto	l6558
 14559  2E15  0870               	movf	___lwdiv@divisor,w
 14560  2E16  02F2               	subwf	___lwdiv@dividend,f
 14561  2E17  0871               	movf	___lwdiv@divisor+1,w
 14562  2E18  3BF3               	subwfb	___lwdiv@dividend+1,f
 14563  2E19  1475               	bsf	___lwdiv@quotient,0
 14564  2E1A                     l6558:
 14565  2E1A  3001               	movlw	1
 14566  2E1B                     u5145:
 14567  2E1B  36F1               	lsrf	___lwdiv@divisor+1,f
 14568  2E1C  0CF0               	rrf	___lwdiv@divisor,f
 14569  2E1D  0B89               	decfsz	9,f
 14570  2E1E  2E1B               	goto	u5145
 14571  2E1F  3001               	movlw	1
 14572  2E20  02F7               	subwf	___lwdiv@counter,f
 14573  2E21  1D03               	btfss	3,2
 14574  2E22  2E08               	goto	l6552
 14575  2E23                     l6562:
 14576  2E23  0876               	movf	___lwdiv@quotient+1,w
 14577  2E24  00F1               	movwf	?___lwdiv+1
 14578  2E25  0875               	movf	___lwdiv@quotient,w
 14579  2E26  00F0               	movwf	?___lwdiv
 14580  2E27  0008               	return
 14581  2E28                     __end_of___lwdiv:
 14582                           
 14583                           	psect	text56
 14584  29CB                     __ptext56:	
 14585 ;; *************** function _TCP_SocketRemove *****************
 14586 ;; Defined at:
 14587 ;;		line 1186 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 14588 ;; Parameters:    Size  Location     Type
 14589 ;;  tcbPtr          1    wreg     PTR struct .
 14590 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14591 ;; Auto vars:     Size  Location     Type
 14592 ;;  tcbPtr          1    9[COMMON] PTR struct .
 14593 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14594 ;;  ret             1    0        enum E179
 14595 ;; Return value:  Size  Location     Type
 14596 ;;                  1    wreg      enum E179
 14597 ;; Registers used:
 14598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14599 ;; Tracked objects:
 14600 ;;		On entry : 19/2
 14601 ;;		On exit  : 1E/2
 14602 ;;		Unchanged: 0/0
 14603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14608 ;;Total ram usage:        2 bytes
 14609 ;; Hardware stack levels used:    1
 14610 ;; Hardware stack levels required when called:    5
 14611 ;; This function calls:
 14612 ;;		_TCB_Remove
 14613 ;;		_TCP_SocketPoll
 14614 ;; This function is called by:
 14615 ;;		_DEMO_TCP_Client
 14616 ;; This function uses a non-reentrant model
 14617 ;;
 14618                           
 14619                           
 14620                           ;psect for function _TCP_SocketRemove
 14621  29CB                     _TCP_SocketRemove:
 14622                           
 14623                           ;incstack = 0
 14624                           ; Regs used in _TCP_SocketRemove: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14625                           ;TCP_SocketRemove@tcbPtr stored from wreg
 14626  29CB  00F9               	movwf	TCP_SocketRemove@tcbPtr
 14627                           
 14628                           ;tcpv4.c: 1191: if(TCP_SocketPoll(tcbPtr) == SOCKET_CLOSING)
 14629  29CC  0879               	movf	TCP_SocketRemove@tcbPtr,w
 14630  29CD  31AA  2293  31A9   	fcall	_TCP_SocketPoll
 14631  29D0  3A04               	xorlw	4
 14632  29D1  1D03               	skipz
 14633  29D2  0008               	return
 14634                           
 14635                           ;tcpv4.c: 1192: {;tcpv4.c: 1193: TCB_Remove(tcbPtr);
 14636  29D3  0879               	movf	TCP_SocketRemove@tcbPtr,w
 14637  29D4  31A0  20AD         	fcall	_TCB_Remove
 14638  29D6  0008               	return
 14639  29D7                     __end_of_TCP_SocketRemove:
 14640                           
 14641                           	psect	text57
 14642  20AD                     __ptext57:	
 14643 ;; *************** function _TCB_Remove *****************
 14644 ;; Defined at:
 14645 ;;		line 98 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;  ptr             1    wreg     PTR struct .
 14648 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14649 ;; Auto vars:     Size  Location     Type
 14650 ;;  ptr             1    1[COMMON] PTR struct .
 14651 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14652 ;; Return value:  Size  Location     Type
 14653 ;;                  1    wreg      void 
 14654 ;; Registers used:
 14655 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14656 ;; Tracked objects:
 14657 ;;		On entry : 1E/2
 14658 ;;		On exit  : 1E/2
 14659 ;;		Unchanged: 0/0
 14660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14665 ;;Total ram usage:        2 bytes
 14666 ;; Hardware stack levels used:    1
 14667 ;; Hardware stack levels required when called:    3
 14668 ;; This function calls:
 14669 ;;		Nothing
 14670 ;; This function is called by:
 14671 ;;		_TCP_SocketRemove
 14672 ;; This function uses a non-reentrant model
 14673 ;;
 14674                           
 14675                           
 14676                           ;psect for function _TCB_Remove
 14677  20AD                     _TCB_Remove:
 14678                           
 14679                           ;incstack = 0
 14680                           ; Regs used in _TCB_Remove: [wreg+fsr1l+fsr1h+status,2+status,0]
 14681                           ;TCB_Remove@ptr stored from wreg
 14682  20AD  00F1               	movwf	TCB_Remove@ptr
 14683                           
 14684                           ;tcpv4.c: 100: if(tcbListSize > 1)
 14685  20AE  0023               	movlb	3	; select bank3
 14686  20AF  0836               	movf	_tcbListSize^(0+384),w
 14687  20B0  3A80               	xorlw	128
 14688  20B1  3E7E               	addlw	-130
 14689  20B2  1C03               	skipc
 14690  20B3  28FE               	goto	l6288
 14691                           
 14692                           ;tcpv4.c: 101: {;tcpv4.c: 103: if(ptr->prevTCB == (0))
 14693  20B4  0871               	movf	TCB_Remove@ptr,w
 14694  20B5  3E2C               	addlw	44
 14695  20B6  0086               	movwf	6
 14696  20B7  3002               	movlw	2	; select bank4/5
 14697  20B8  0087               	movwf	7
 14698  20B9  0801               	movf	1,w
 14699  20BA  1D03               	btfss	3,2
 14700  20BB  28D2               	goto	l6284
 14701                           
 14702                           ;tcpv4.c: 104: {;tcpv4.c: 105: tcbList = ptr->nextTCB;
 14703  20BC  0871               	movf	TCB_Remove@ptr,w
 14704  20BD  3E2B               	addlw	43
 14705  20BE  0086               	movwf	6
 14706  20BF  3002               	movlw	2	; select bank4/5
 14707  20C0  0087               	movwf	7
 14708  20C1  0801               	movf	1,w
 14709  20C2  00F0               	movwf	??_TCB_Remove
 14710  20C3  0870               	movf	??_TCB_Remove,w
 14711  20C4  0022               	movlb	2	; select bank2
 14712  20C5  00EF               	movwf	_tcbList^(0+256)
 14713                           
 14714                           ;tcpv4.c: 106: ((tcpTCB_t *)(ptr->nextTCB))->prevTCB = (0);
 14715  20C6  0871               	movf	TCB_Remove@ptr,w
 14716  20C7  3E2B               	addlw	43
 14717  20C8  0086               	movwf	6
 14718  20C9  3002               	movlw	2	; select bank4/5
 14719  20CA  0087               	movwf	7
 14720  20CB  0801               	movf	1,w
 14721  20CC  3E2C               	addlw	44
 14722  20CD  0086               	movwf	6
 14723  20CE  3002               	movlw	2	; select bank4/5
 14724  20CF  0087               	movwf	7
 14725  20D0  0181               	clrf	1
 14726                           
 14727                           ;tcpv4.c: 107: } else
 14728  20D1  28F8               	goto	l6286
 14729  20D2                     l6284:
 14730                           
 14731                           ;tcpv4.c: 108: {;tcpv4.c: 109: ((tcpTCB_t *)(ptr->prevTCB))->nextTCB = ptr->nextTCB;
 14732  20D2  0871               	movf	TCB_Remove@ptr,w
 14733  20D3  3E2B               	addlw	43
 14734  20D4  0086               	movwf	6
 14735  20D5  3002               	movlw	2	; select bank4/5
 14736  20D6  0087               	movwf	7
 14737  20D7  0801               	movf	1,w
 14738  20D8  00F0               	movwf	??_TCB_Remove
 14739  20D9  0871               	movf	TCB_Remove@ptr,w
 14740  20DA  3E2C               	addlw	44
 14741  20DB  0086               	movwf	6
 14742  20DC  3002               	movlw	2	; select bank4/5
 14743  20DD  0087               	movwf	7
 14744  20DE  0801               	movf	1,w
 14745  20DF  3E2B               	addlw	43
 14746  20E0  0086               	movwf	6
 14747  20E1  3002               	movlw	2	; select bank4/5
 14748  20E2  0087               	movwf	7
 14749  20E3  0870               	movf	??_TCB_Remove,w
 14750  20E4  0081               	movwf	1
 14751                           
 14752                           ;tcpv4.c: 110: ((tcpTCB_t *)(ptr->nextTCB))->prevTCB = ptr->prevTCB;
 14753  20E5  0871               	movf	TCB_Remove@ptr,w
 14754  20E6  3E2C               	addlw	44
 14755  20E7  0086               	movwf	6
 14756  20E8  3002               	movlw	2	; select bank4/5
 14757  20E9  0087               	movwf	7
 14758  20EA  0801               	movf	1,w
 14759  20EB  00F0               	movwf	??_TCB_Remove
 14760  20EC  0871               	movf	TCB_Remove@ptr,w
 14761  20ED  3E2B               	addlw	43
 14762  20EE  0086               	movwf	6
 14763  20EF  3002               	movlw	2	; select bank4/5
 14764  20F0  0087               	movwf	7
 14765  20F1  0801               	movf	1,w
 14766  20F2  3E2C               	addlw	44
 14767  20F3  0086               	movwf	6
 14768  20F4  3002               	movlw	2	; select bank4/5
 14769  20F5  0087               	movwf	7
 14770  20F6  0870               	movf	??_TCB_Remove,w
 14771  20F7  0081               	movwf	1
 14772  20F8                     l6286:
 14773                           
 14774                           ;tcpv4.c: 111: };tcpv4.c: 112: tcbListSize --;
 14775  20F8  30FF               	movlw	255
 14776  20F9  00F0               	movwf	??_TCB_Remove
 14777  20FA  0870               	movf	??_TCB_Remove,w
 14778  20FB  0023               	movlb	3	; select bank3
 14779  20FC  07B6               	addwf	_tcbListSize^(0+384),f
 14780                           
 14781                           ;tcpv4.c: 113: }
 14782  20FD  0008               	return
 14783  20FE                     l6288:
 14784                           
 14785                           ;tcpv4.c: 114: else if(tcbListSize==1)
 14786  20FE  0336               	decf	_tcbListSize^(0+384),w
 14787  20FF  1D03               	btfss	3,2
 14788  2100  0008               	return
 14789                           
 14790                           ;tcpv4.c: 115: {;tcpv4.c: 116: tcbList = (0);
 14791  2101  0022               	movlb	2	; select bank2
 14792  2102  01EF               	clrf	_tcbList^(0+256)
 14793  2103  0008               	return
 14794  2104                     __end_of_TCB_Remove:
 14795                           
 14796                           	psect	text58
 14797  2282                     __ptext58:	
 14798 ;; *************** function _TCP_SocketInit *****************
 14799 ;; Defined at:
 14800 ;;		line 1157 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 14801 ;; Parameters:    Size  Location     Type
 14802 ;;  tcbPtr          1    wreg     PTR struct .
 14803 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;  tcbPtr          1    7[COMMON] PTR struct .
 14806 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14807 ;;  ret             1    0        enum E179
 14808 ;; Return value:  Size  Location     Type
 14809 ;;                  1    wreg      enum E179
 14810 ;; Registers used:
 14811 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14812 ;; Tracked objects:
 14813 ;;		On entry : 19/2
 14814 ;;		On exit  : 1E/2
 14815 ;;		Unchanged: 0/0
 14816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14820 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14821 ;;Total ram usage:        3 bytes
 14822 ;; Hardware stack levels used:    1
 14823 ;; Hardware stack levels required when called:    4
 14824 ;; This function calls:
 14825 ;;		_TCB_Check
 14826 ;;		_TCB_Insert
 14827 ;;		_TCB_Reset
 14828 ;; This function is called by:
 14829 ;;		_DEMO_TCP_Client
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           
 14834                           ;psect for function _TCP_SocketInit
 14835  2282                     _TCP_SocketInit:
 14836                           
 14837                           ;incstack = 0
 14838                           ; Regs used in _TCP_SocketInit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14839                           ;TCP_SocketInit@tcbPtr stored from wreg
 14840  2282  00F7               	movwf	TCP_SocketInit@tcbPtr
 14841                           
 14842                           ;tcpv4.c: 1162: if(TCB_Check(tcbPtr) == 0)
 14843  2283  0877               	movf	TCP_SocketInit@tcbPtr,w
 14844  2284  31AD  2590  31A2   	fcall	_TCB_Check
 14845  2287  3A00               	xorlw	0
 14846  2288  1D03               	skipz
 14847  2289  0008               	return
 14848                           
 14849                           ;tcpv4.c: 1163: {;tcpv4.c: 1164: TCB_Reset(tcbPtr);
 14850  228A  0877               	movf	TCP_SocketInit@tcbPtr,w
 14851  228B  3190  2001  31A2   	fcall	_TCB_Reset
 14852                           
 14853                           ;tcpv4.c: 1166: tcbPtr->localWnd = 0;
 14854  228E  0877               	movf	TCP_SocketInit@tcbPtr,w
 14855  228F  3E1A               	addlw	26
 14856  2290  0086               	movwf	6
 14857  2291  3002               	movlw	2	; select bank4/5
 14858  2292  0087               	movwf	7
 14859  2293  3000               	movlw	0
 14860  2294  3FC0               	movwi [0]fsr1
 14861  2295  3FC1               	movwi [1]fsr1
 14862                           
 14863                           ;tcpv4.c: 1167: tcbPtr->mss = 1460u;
 14864  2296  0877               	movf	TCP_SocketInit@tcbPtr,w
 14865  2297  3E1C               	addlw	28
 14866  2298  0086               	movwf	6
 14867  2299  3002               	movlw	2	; select bank4/5
 14868  229A  0087               	movwf	7
 14869  229B  30B4               	movlw	180
 14870  229C  3FC0               	movwi [0]fsr1
 14871  229D  3005               	movlw	5
 14872  229E  3FC1               	movwi [1]fsr1
 14873                           
 14874                           ;tcpv4.c: 1168: tcbPtr->fsmState = CLOSED;
 14875  229F  0877               	movf	TCP_SocketInit@tcbPtr,w
 14876  22A0  3E29               	addlw	41
 14877  22A1  0086               	movwf	6
 14878  22A2  3002               	movlw	2	; select bank4/5
 14879  22A3  0087               	movwf	7
 14880  22A4  0181               	clrf	1
 14881                           
 14882                           ;tcpv4.c: 1169: tcbPtr->connectionEvent = NOP;
 14883  22A5  300D               	movlw	13
 14884  22A6  00F5               	movwf	??_TCP_SocketInit
 14885  22A7  0877               	movf	TCP_SocketInit@tcbPtr,w
 14886  22A8  3E2A               	addlw	42
 14887  22A9  0086               	movwf	6
 14888  22AA  3002               	movlw	2	; select bank4/5
 14889  22AB  0087               	movwf	7
 14890  22AC  0875               	movf	??_TCP_SocketInit,w
 14891  22AD  0081               	movwf	1
 14892                           
 14893                           ;tcpv4.c: 1170: tcbPtr->rxBufferStart = (0);
 14894  22AE  0877               	movf	TCP_SocketInit@tcbPtr,w
 14895  22AF  3E1E               	addlw	30
 14896  22B0  0086               	movwf	6
 14897  22B1  3002               	movlw	2	; select bank4/5
 14898  22B2  0087               	movwf	7
 14899  22B3  0181               	clrf	1
 14900                           
 14901                           ;tcpv4.c: 1171: tcbPtr->rxBufState = NO_BUFF;
 14902  22B4  0877               	movf	TCP_SocketInit@tcbPtr,w
 14903  22B5  3E20               	addlw	32
 14904  22B6  0086               	movwf	6
 14905  22B7  3002               	movlw	2	; select bank4/5
 14906  22B8  0087               	movwf	7
 14907  22B9  0181               	clrf	1
 14908                           
 14909                           ;tcpv4.c: 1172: tcbPtr->txBufferStart = (0);
 14910  22BA  0877               	movf	TCP_SocketInit@tcbPtr,w
 14911  22BB  3E21               	addlw	33
 14912  22BC  0086               	movwf	6
 14913  22BD  3002               	movlw	2	; select bank4/5
 14914  22BE  0087               	movwf	7
 14915  22BF  0181               	clrf	1
 14916                           
 14917                           ;tcpv4.c: 1173: tcbPtr->txBufferPtr = (0);
 14918  22C0  0877               	movf	TCP_SocketInit@tcbPtr,w
 14919  22C1  3E22               	addlw	34
 14920  22C2  0086               	movwf	6
 14921  22C3  3002               	movlw	2	; select bank4/5
 14922  22C4  0087               	movwf	7
 14923  22C5  0181               	clrf	1
 14924                           
 14925                           ;tcpv4.c: 1174: tcbPtr->bytesToSend = 0;
 14926  22C6  0877               	movf	TCP_SocketInit@tcbPtr,w
 14927  22C7  3E23               	addlw	35
 14928  22C8  0086               	movwf	6
 14929  22C9  3002               	movlw	2	; select bank4/5
 14930  22CA  0087               	movwf	7
 14931  22CB  3000               	movlw	0
 14932  22CC  3FC0               	movwi [0]fsr1
 14933  22CD  3FC1               	movwi [1]fsr1
 14934                           
 14935                           ;tcpv4.c: 1175: tcbPtr->bytesSent = 0;
 14936  22CE  0877               	movf	TCP_SocketInit@tcbPtr,w
 14937  22CF  3E26               	addlw	38
 14938  22D0  0086               	movwf	6
 14939  22D1  3002               	movlw	2	; select bank4/5
 14940  22D2  0087               	movwf	7
 14941  22D3  3000               	movlw	0
 14942  22D4  3FC0               	movwi [0]fsr1
 14943  22D5  3FC1               	movwi [1]fsr1
 14944                           
 14945                           ;tcpv4.c: 1176: tcbPtr->payloadSave = 0;
 14946  22D6  0877               	movf	TCP_SocketInit@tcbPtr,w
 14947  22D7  3E28               	addlw	40
 14948  22D8  0086               	movwf	6
 14949  22D9  3002               	movlw	2	; select bank4/5
 14950  22DA  0087               	movwf	7
 14951  22DB  0181               	clrf	1
 14952                           
 14953                           ;tcpv4.c: 1177: tcbPtr->txBufState = NO_BUFF;
 14954  22DC  0877               	movf	TCP_SocketInit@tcbPtr,w
 14955  22DD  3E25               	addlw	37
 14956  22DE  0086               	movwf	6
 14957  22DF  3002               	movlw	2	; select bank4/5
 14958  22E0  0087               	movwf	7
 14959  22E1  0181               	clrf	1
 14960                           
 14961                           ;tcpv4.c: 1178: tcbPtr->socketState = SOCKET_CLOSED;
 14962  22E2  0877               	movf	TCP_SocketInit@tcbPtr,w
 14963  22E3  3E33               	addlw	51
 14964  22E4  0086               	movwf	6
 14965  22E5  3002               	movlw	2	; select bank4/5
 14966  22E6  0087               	movwf	7
 14967  22E7  0181               	clrf	1
 14968  22E8  0A81               	incf	1,f
 14969                           
 14970                           ;tcpv4.c: 1180: TCB_Insert(tcbPtr);
 14971  22E9  0877               	movf	TCP_SocketInit@tcbPtr,w
 14972  22EA  31AC  2494         	fcall	_TCB_Insert
 14973  22EC  0008               	return
 14974  22ED                     __end_of_TCP_SocketInit:
 14975                           
 14976                           	psect	text59
 14977  2C94                     __ptext59:	
 14978 ;; *************** function _TCB_Insert *****************
 14979 ;; Defined at:
 14980 ;;		line 74 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 14981 ;; Parameters:    Size  Location     Type
 14982 ;;  ptr             1    wreg     PTR struct .
 14983 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14984 ;; Auto vars:     Size  Location     Type
 14985 ;;  ptr             1    1[COMMON] PTR struct .
 14986 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 14987 ;; Return value:  Size  Location     Type
 14988 ;;                  1    wreg      void 
 14989 ;; Registers used:
 14990 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14991 ;; Tracked objects:
 14992 ;;		On entry : 1E/2
 14993 ;;		On exit  : 1F/3
 14994 ;;		Unchanged: 0/0
 14995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15000 ;;Total ram usage:        2 bytes
 15001 ;; Hardware stack levels used:    1
 15002 ;; Hardware stack levels required when called:    3
 15003 ;; This function calls:
 15004 ;;		Nothing
 15005 ;; This function is called by:
 15006 ;;		_TCP_SocketInit
 15007 ;; This function uses a non-reentrant model
 15008 ;;
 15009                           
 15010                           
 15011                           ;psect for function _TCB_Insert
 15012  2C94                     _TCB_Insert:
 15013                           
 15014                           ;incstack = 0
 15015                           ; Regs used in _TCB_Insert: [wreg+fsr1l+fsr1h+status,2+status,0]
 15016                           ;TCB_Insert@ptr stored from wreg
 15017  2C94  00F1               	movwf	TCB_Insert@ptr
 15018                           
 15019                           ;tcpv4.c: 78: if(tcbList != (0))
 15020  2C95  0022               	movlb	2	; select bank2
 15021  2C96  086F               	movf	_tcbList^(0+256),w
 15022  2C97  1903               	btfsc	3,2
 15023  2C98  2CA2               	goto	l141
 15024                           
 15025                           ;tcpv4.c: 79: {;tcpv4.c: 81: tcbList->prevTCB = ptr;
 15026  2C99  0871               	movf	TCB_Insert@ptr,w
 15027  2C9A  00F0               	movwf	??_TCB_Insert
 15028  2C9B  086F               	movf	_tcbList^(0+256),w
 15029  2C9C  3E2C               	addlw	44
 15030  2C9D  0086               	movwf	6
 15031  2C9E  3002               	movlw	2	; select bank4/5
 15032  2C9F  0087               	movwf	7
 15033  2CA0  0870               	movf	??_TCB_Insert,w
 15034  2CA1  0081               	movwf	1
 15035  2CA2                     l141:
 15036                           
 15037                           ;tcpv4.c: 82: };tcpv4.c: 83: ptr->nextTCB = tcbList;
 15038  2CA2  086F               	movf	_tcbList^(0+256),w
 15039  2CA3  00F0               	movwf	??_TCB_Insert
 15040  2CA4  0871               	movf	TCB_Insert@ptr,w
 15041  2CA5  3E2B               	addlw	43
 15042  2CA6  0086               	movwf	6
 15043  2CA7  3002               	movlw	2	; select bank4/5
 15044  2CA8  0087               	movwf	7
 15045  2CA9  0870               	movf	??_TCB_Insert,w
 15046  2CAA  0081               	movwf	1
 15047                           
 15048                           ;tcpv4.c: 84: tcbList = ptr;
 15049  2CAB  0871               	movf	TCB_Insert@ptr,w
 15050  2CAC  00F0               	movwf	??_TCB_Insert
 15051  2CAD  0870               	movf	??_TCB_Insert,w
 15052  2CAE  00EF               	movwf	_tcbList^(0+256)
 15053                           
 15054                           ;tcpv4.c: 85: ptr->prevTCB = (0);
 15055  2CAF  0871               	movf	TCB_Insert@ptr,w
 15056  2CB0  3E2C               	addlw	44
 15057  2CB1  0086               	movwf	6
 15058  2CB2  3002               	movlw	2	; select bank4/5
 15059  2CB3  0087               	movwf	7
 15060  2CB4  0181               	clrf	1
 15061                           
 15062                           ;tcpv4.c: 86: tcbListSize ++;
 15063  2CB5  3001               	movlw	1
 15064  2CB6  00F0               	movwf	??_TCB_Insert
 15065  2CB7  0870               	movf	??_TCB_Insert,w
 15066  2CB8  0023               	movlb	3	; select bank3
 15067  2CB9  07B6               	addwf	_tcbListSize^(0+384),f
 15068  2CBA  0008               	return
 15069  2CBB                     __end_of_TCB_Insert:
 15070                           
 15071                           	psect	text60
 15072  2AD0                     __ptext60:	
 15073 ;; *************** function _TCP_SendDone *****************
 15074 ;; Defined at:
 15075 ;;		line 1322 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;  tcbPtr          1    wreg     PTR struct .
 15078 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  tcbPtr          1    6[COMMON] PTR struct .
 15081 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15082 ;;  ret             1    5[COMMON] unsigned char 
 15083 ;; Return value:  Size  Location     Type
 15084 ;;                  1    wreg      unsigned char 
 15085 ;; Registers used:
 15086 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15087 ;; Tracked objects:
 15088 ;;		On entry : 19/2
 15089 ;;		On exit  : 1E/2
 15090 ;;		Unchanged: 0/0
 15091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15095 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15096 ;;Total ram usage:        2 bytes
 15097 ;; Hardware stack levels used:    1
 15098 ;; Hardware stack levels required when called:    4
 15099 ;; This function calls:
 15100 ;;		_TCB_Check
 15101 ;; This function is called by:
 15102 ;;		_DEMO_TCP_Client
 15103 ;; This function uses a non-reentrant model
 15104 ;;
 15105                           
 15106                           
 15107                           ;psect for function _TCP_SendDone
 15108  2AD0                     _TCP_SendDone:
 15109                           
 15110                           ;incstack = 0
 15111                           ; Regs used in _TCP_SendDone: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15112                           ;TCP_SendDone@tcbPtr stored from wreg
 15113  2AD0  00F6               	movwf	TCP_SendDone@tcbPtr
 15114                           
 15115                           ;tcpv4.c: 1324: bool ret = 0;
 15116  2AD1  01F5               	clrf	TCP_SendDone@ret
 15117                           
 15118                           ;tcpv4.c: 1326: if(TCB_Check(tcbPtr))
 15119  2AD2  0876               	movf	TCP_SendDone@tcbPtr,w
 15120  2AD3  31AD  2590  31AA   	fcall	_TCB_Check
 15121  2AD6  3A00               	xorlw	0
 15122  2AD7  1903               	skipnz
 15123  2AD8  2AE3               	goto	l6716
 15124                           
 15125                           ;tcpv4.c: 1327: {;tcpv4.c: 1328: if (tcbPtr->txBufState == NO_BUFF)
 15126  2AD9  0876               	movf	TCP_SendDone@tcbPtr,w
 15127  2ADA  3E25               	addlw	37
 15128  2ADB  0086               	movwf	6
 15129  2ADC  3002               	movlw	2	; select bank4/5
 15130  2ADD  0087               	movwf	7
 15131  2ADE  0801               	movf	1,w
 15132  2ADF  1D03               	btfss	3,2
 15133  2AE0  2AE3               	goto	l6716
 15134                           
 15135                           ;tcpv4.c: 1329: {;tcpv4.c: 1330: ret = 1;
 15136  2AE1  01F5               	clrf	TCP_SendDone@ret
 15137  2AE2  0AF5               	incf	TCP_SendDone@ret,f
 15138  2AE3                     l6716:
 15139                           
 15140                           ;tcpv4.c: 1331: };tcpv4.c: 1332: };tcpv4.c: 1333: return ret;
 15141  2AE3  0875               	movf	TCP_SendDone@ret,w
 15142  2AE4  0008               	return
 15143  2AE5                     __end_of_TCP_SendDone:
 15144                           
 15145                           	psect	text61
 15146  22ED                     __ptext61:	
 15147 ;; *************** function _TCP_Send *****************
 15148 ;; Defined at:
 15149 ;;		line 1292 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;  tcbPtr          1    wreg     PTR struct .
 15152 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15153 ;;  data            1   53[BANK1 ] PTR unsigned char 
 15154 ;;		 -> DEMO_TCP_Client@txdataPort60(80), 
 15155 ;;  dataLen         2   54[BANK1 ] unsigned int 
 15156 ;; Auto vars:     Size  Location     Type
 15157 ;;  tcbPtr          1   79[BANK0 ] PTR struct .
 15158 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15159 ;;  ret             1    0        unsigned char 
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      unsigned char 
 15162 ;; Registers used:
 15163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15164 ;; Tracked objects:
 15165 ;;		On entry : 1F/1
 15166 ;;		On exit  : 1C/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15169 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15171 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15172 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15173 ;;Total ram usage:        6 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:   10
 15176 ;; This function calls:
 15177 ;;		_TCP_Snd
 15178 ;;		_TCP_SocketPoll
 15179 ;; This function is called by:
 15180 ;;		_DEMO_TCP_Client
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           
 15185                           ;psect for function _TCP_Send
 15186  22ED                     _TCP_Send:
 15187                           
 15188                           ;incstack = 0
 15189                           ; Regs used in _TCP_Send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15190                           ;TCP_Send@tcbPtr stored from wreg
 15191  22ED  0020               	movlb	0	; select bank0
 15192  22EE  00EF               	movwf	TCP_Send@tcbPtr
 15193                           
 15194                           ;tcpv4.c: 1296: if (TCP_SocketPoll(tcbPtr) == SOCKET_CONNECTED)
 15195  22EF  086F               	movf	TCP_Send@tcbPtr,w
 15196  22F0  31AA  2293  31A2   	fcall	_TCP_SocketPoll
 15197  22F3  3A03               	xorlw	3
 15198  22F4  1D03               	skipz
 15199  22F5  0008               	return
 15200                           
 15201                           ;tcpv4.c: 1297: {;tcpv4.c: 1298: if (tcbPtr->txBufState == NO_BUFF)
 15202  22F6  0020               	movlb	0	; select bank0
 15203  22F7  086F               	movf	TCP_Send@tcbPtr,w
 15204  22F8  3E25               	addlw	37
 15205  22F9  0086               	movwf	6
 15206  22FA  3002               	movlw	2	; select bank4/5
 15207  22FB  0087               	movwf	7
 15208  22FC  0801               	movf	1,w
 15209  22FD  1D03               	btfss	3,2
 15210  22FE  0008               	return
 15211                           
 15212                           ;tcpv4.c: 1299: {;tcpv4.c: 1300: if (data != (0))
 15213  22FF  0021               	movlb	1	; select bank1
 15214  2300  0855               	movf	TCP_Send@data^(0+128),w
 15215  2301  1903               	btfsc	3,2
 15216  2302  0008               	return
 15217                           
 15218                           ;tcpv4.c: 1301: {;tcpv4.c: 1302: tcbPtr->txBufferStart = data;
 15219  2303  0855               	movf	TCP_Send@data^(0+128),w
 15220  2304  0020               	movlb	0	; select bank0
 15221  2305  00ED               	movwf	??_TCP_Send
 15222  2306  086F               	movf	TCP_Send@tcbPtr,w
 15223  2307  3E21               	addlw	33
 15224  2308  0086               	movwf	6
 15225  2309  3002               	movlw	2	; select bank4/5
 15226  230A  0087               	movwf	7
 15227  230B  086D               	movf	??_TCP_Send,w
 15228  230C  0081               	movwf	1
 15229                           
 15230                           ;tcpv4.c: 1303: tcbPtr->txBufferPtr = tcbPtr->txBufferStart;
 15231  230D  086F               	movf	TCP_Send@tcbPtr,w
 15232  230E  3E21               	addlw	33
 15233  230F  0086               	movwf	6
 15234  2310  3002               	movlw	2	; select bank4/5
 15235  2311  0087               	movwf	7
 15236  2312  0801               	movf	1,w
 15237  2313  00ED               	movwf	??_TCP_Send
 15238  2314  086F               	movf	TCP_Send@tcbPtr,w
 15239  2315  3E22               	addlw	34
 15240  2316  0086               	movwf	6
 15241  2317  3002               	movlw	2	; select bank4/5
 15242  2318  0087               	movwf	7
 15243  2319  086D               	movf	??_TCP_Send,w
 15244  231A  0081               	movwf	1
 15245                           
 15246                           ;tcpv4.c: 1304: tcbPtr->bytesToSend = dataLen;
 15247  231B  086F               	movf	TCP_Send@tcbPtr,w
 15248  231C  3E23               	addlw	35
 15249  231D  0086               	movwf	6
 15250  231E  3002               	movlw	2	; select bank4/5
 15251  231F  0087               	movwf	7
 15252  2320  0021               	movlb	1	; select bank1
 15253  2321  0856               	movf	TCP_Send@dataLen^(0+128),w
 15254  2322  3FC0               	movwi [0]fsr1
 15255  2323  0857               	movf	(TCP_Send@dataLen+1)^(0+128),w
 15256  2324  3FC1               	movwi [1]fsr1
 15257                           
 15258                           ;tcpv4.c: 1305: tcbPtr->txBufState = TX_BUFF_IN_USE;
 15259  2325  3002               	movlw	2
 15260  2326  0020               	movlb	0	; select bank0
 15261  2327  00ED               	movwf	??_TCP_Send
 15262  2328  086F               	movf	TCP_Send@tcbPtr,w
 15263  2329  3E25               	addlw	37
 15264  232A  0086               	movwf	6
 15265  232B  3002               	movlw	2	; select bank4/5
 15266  232C  0087               	movwf	7
 15267  232D  086D               	movf	??_TCP_Send,w
 15268  232E  0081               	movwf	1
 15269                           
 15270                           ;tcpv4.c: 1306: tcbPtr->bytesSent = dataLen;
 15271  232F  086F               	movf	TCP_Send@tcbPtr,w
 15272  2330  3E26               	addlw	38
 15273  2331  0086               	movwf	6
 15274  2332  3002               	movlw	2	; select bank4/5
 15275  2333  0087               	movwf	7
 15276  2334  0021               	movlb	1	; select bank1
 15277  2335  0856               	movf	TCP_Send@dataLen^(0+128),w
 15278  2336  3FC0               	movwi [0]fsr1
 15279  2337  0857               	movf	(TCP_Send@dataLen+1)^(0+128),w
 15280  2338  3FC1               	movwi [1]fsr1
 15281                           
 15282                           ;tcpv4.c: 1308: tcbPtr->timeoutReloadValue = ((unsigned long)1*2);
 15283  2339  0020               	movlb	0	; select bank0
 15284  233A  086F               	movf	TCP_Send@tcbPtr,w
 15285  233B  3E2F               	addlw	47
 15286  233C  0086               	movwf	6
 15287  233D  3002               	movlw	2	; select bank4/5
 15288  233E  0087               	movwf	7
 15289  233F  3002               	movlw	2
 15290  2340  3FC0               	movwi [0]fsr1
 15291  2341  3000               	movlw	0
 15292  2342  3FC1               	movwi [1]fsr1
 15293                           
 15294                           ;tcpv4.c: 1309: tcbPtr->timeoutsCount = (5u);
 15295  2343  3005               	movlw	5
 15296  2344  00ED               	movwf	??_TCP_Send
 15297  2345  086F               	movf	TCP_Send@tcbPtr,w
 15298  2346  3E31               	addlw	49
 15299  2347  0086               	movwf	6
 15300  2348  3002               	movlw	2	; select bank4/5
 15301  2349  0087               	movwf	7
 15302  234A  086D               	movf	??_TCP_Send,w
 15303  234B  0081               	movwf	1
 15304                           
 15305                           ;tcpv4.c: 1311: tcbPtr->flags = 0x10U;
 15306  234C  3010               	movlw	16
 15307  234D  00ED               	movwf	??_TCP_Send
 15308  234E  086F               	movf	TCP_Send@tcbPtr,w
 15309  234F  3E32               	addlw	50
 15310  2350  0086               	movwf	6
 15311  2351  3002               	movlw	2	; select bank4/5
 15312  2352  0087               	movwf	7
 15313  2353  086D               	movf	??_TCP_Send,w
 15314  2354  0081               	movwf	1
 15315                           
 15316                           ;tcpv4.c: 1313: TCP_Snd(tcbPtr);
 15317  2355  086F               	movf	TCP_Send@tcbPtr,w
 15318  2356  3194  24B7         	fcall	_TCP_Snd
 15319  2358  0008               	return
 15320  2359                     __end_of_TCP_Send:
 15321                           
 15322                           	psect	text62
 15323  2F04                     __ptext62:	
 15324 ;; *************** function _TCP_InsertRxBuffer *****************
 15325 ;; Defined at:
 15326 ;;		line 1336 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15327 ;; Parameters:    Size  Location     Type
 15328 ;;  tcbPtr          1    wreg     PTR struct .
 15329 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15330 ;;  data            1    5[COMMON] PTR unsigned char 
 15331 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), 
 15332 ;;  data_len        2    6[COMMON] unsigned int 
 15333 ;; Auto vars:     Size  Location     Type
 15334 ;;  tcbPtr          1   10[COMMON] PTR struct .
 15335 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15336 ;;  ret             1    0        unsigned char 
 15337 ;; Return value:  Size  Location     Type
 15338 ;;                  1    wreg      unsigned char 
 15339 ;; Registers used:
 15340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15341 ;; Tracked objects:
 15342 ;;		On entry : 1F/2
 15343 ;;		On exit  : 1E/2
 15344 ;;		Unchanged: 0/0
 15345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15346 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15348 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15350 ;;Total ram usage:        6 bytes
 15351 ;; Hardware stack levels used:    1
 15352 ;; Hardware stack levels required when called:    4
 15353 ;; This function calls:
 15354 ;;		_TCB_Check
 15355 ;; This function is called by:
 15356 ;;		_DEMO_TCP_Client
 15357 ;; This function uses a non-reentrant model
 15358 ;;
 15359                           
 15360                           
 15361                           ;psect for function _TCP_InsertRxBuffer
 15362  2F04                     _TCP_InsertRxBuffer:
 15363                           
 15364                           ;incstack = 0
 15365                           ; Regs used in _TCP_InsertRxBuffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15366                           ;TCP_InsertRxBuffer@tcbPtr stored from wreg
 15367  2F04  00FA               	movwf	TCP_InsertRxBuffer@tcbPtr
 15368                           
 15369                           ;tcpv4.c: 1340: if (TCB_Check(tcbPtr))
 15370  2F05  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15371  2F06  31AD  2590  31AF   	fcall	_TCB_Check
 15372  2F09  3A00               	xorlw	0
 15373  2F0A  1903               	skipnz
 15374  2F0B  0008               	return
 15375                           
 15376                           ;tcpv4.c: 1341: {;tcpv4.c: 1342: if (tcbPtr->rxBufState == NO_BUFF)
 15377  2F0C  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15378  2F0D  3E20               	addlw	32
 15379  2F0E  0086               	movwf	6
 15380  2F0F  3002               	movlw	2	; select bank4/5
 15381  2F10  0087               	movwf	7
 15382  2F11  0801               	movf	1,w
 15383  2F12  1D03               	btfss	3,2
 15384  2F13  0008               	return
 15385                           
 15386                           ;tcpv4.c: 1343: {;tcpv4.c: 1344: if (data != (0))
 15387  2F14  0875               	movf	TCP_InsertRxBuffer@data,w
 15388  2F15  1903               	btfsc	3,2
 15389  2F16  0008               	return
 15390                           
 15391                           ;tcpv4.c: 1345: {;tcpv4.c: 1346: tcbPtr->rxBufferStart = data;
 15392  2F17  0875               	movf	TCP_InsertRxBuffer@data,w
 15393  2F18  00F8               	movwf	??_TCP_InsertRxBuffer
 15394  2F19  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15395  2F1A  3E1E               	addlw	30
 15396  2F1B  0086               	movwf	6
 15397  2F1C  3002               	movlw	2	; select bank4/5
 15398  2F1D  0087               	movwf	7
 15399  2F1E  0878               	movf	??_TCP_InsertRxBuffer,w
 15400  2F1F  0081               	movwf	1
 15401                           
 15402                           ;tcpv4.c: 1347: tcbPtr->rxBufferPtr = tcbPtr->rxBufferStart;
 15403  2F20  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15404  2F21  3E1E               	addlw	30
 15405  2F22  0086               	movwf	6
 15406  2F23  3002               	movlw	2	; select bank4/5
 15407  2F24  0087               	movwf	7
 15408  2F25  0801               	movf	1,w
 15409  2F26  00F8               	movwf	??_TCP_InsertRxBuffer
 15410  2F27  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15411  2F28  3E1F               	addlw	31
 15412  2F29  0086               	movwf	6
 15413  2F2A  3002               	movlw	2	; select bank4/5
 15414  2F2B  0087               	movwf	7
 15415  2F2C  0878               	movf	??_TCP_InsertRxBuffer,w
 15416  2F2D  0081               	movwf	1
 15417                           
 15418                           ;tcpv4.c: 1348: tcbPtr->localWnd = data_len;
 15419  2F2E  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15420  2F2F  3E1A               	addlw	26
 15421  2F30  0086               	movwf	6
 15422  2F31  3002               	movlw	2	; select bank4/5
 15423  2F32  0087               	movwf	7
 15424  2F33  0876               	movf	TCP_InsertRxBuffer@data_len,w
 15425  2F34  3FC0               	movwi [0]fsr1
 15426  2F35  0877               	movf	TCP_InsertRxBuffer@data_len+1,w
 15427  2F36  3FC1               	movwi [1]fsr1
 15428                           
 15429                           ;tcpv4.c: 1349: tcbPtr->rxBufState = RX_BUFF_IN_USE;
 15430  2F37  087A               	movf	TCP_InsertRxBuffer@tcbPtr,w
 15431  2F38  3E20               	addlw	32
 15432  2F39  0086               	movwf	6
 15433  2F3A  3002               	movlw	2	; select bank4/5
 15434  2F3B  0087               	movwf	7
 15435  2F3C  0181               	clrf	1
 15436  2F3D  0A81               	incf	1,f
 15437  2F3E  0008               	return
 15438  2F3F                     __end_of_TCP_InsertRxBuffer:
 15439                           
 15440                           	psect	text63
 15441  2ECB                     __ptext63:	
 15442 ;; *************** function _TCP_GetReceivedData *****************
 15443 ;; Defined at:
 15444 ;;		line 1357 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;  tcbPtr          1    wreg     PTR struct .
 15447 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15448 ;; Auto vars:     Size  Location     Type
 15449 ;;  tcbPtr          1   10[COMMON] PTR struct .
 15450 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15451 ;;  ret             2    8[COMMON] int 
 15452 ;; Return value:  Size  Location     Type
 15453 ;;                  2    5[COMMON] int 
 15454 ;; Registers used:
 15455 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15456 ;; Tracked objects:
 15457 ;;		On entry : 1E/2
 15458 ;;		On exit  : 1E/2
 15459 ;;		Unchanged: 0/0
 15460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15461 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15465 ;;Total ram usage:        6 bytes
 15466 ;; Hardware stack levels used:    1
 15467 ;; Hardware stack levels required when called:    4
 15468 ;; This function calls:
 15469 ;;		_TCB_Check
 15470 ;; This function is called by:
 15471 ;;		_DEMO_TCP_Client
 15472 ;; This function uses a non-reentrant model
 15473 ;;
 15474                           
 15475                           
 15476                           ;psect for function _TCP_GetReceivedData
 15477  2ECB                     _TCP_GetReceivedData:
 15478                           
 15479                           ;incstack = 0
 15480                           ; Regs used in _TCP_GetReceivedData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15481                           ;TCP_GetReceivedData@tcbPtr stored from wreg
 15482  2ECB  00FA               	movwf	TCP_GetReceivedData@tcbPtr
 15483                           
 15484                           ;tcpv4.c: 1359: int16_t ret = 0;
 15485  2ECC  01F8               	clrf	TCP_GetReceivedData@ret
 15486  2ECD  01F9               	clrf	TCP_GetReceivedData@ret+1
 15487                           
 15488                           ;tcpv4.c: 1361: if (TCB_Check(tcbPtr))
 15489  2ECE  087A               	movf	TCP_GetReceivedData@tcbPtr,w
 15490  2ECF  31AD  2590  31AE   	fcall	_TCB_Check
 15491  2ED2  3A00               	xorlw	0
 15492  2ED3  1903               	skipnz
 15493  2ED4  2EFF               	goto	l6746
 15494                           
 15495                           ;tcpv4.c: 1362: {;tcpv4.c: 1363: if (tcbPtr->rxBufState == RX_BUFF_IN_USE)
 15496  2ED5  087A               	movf	TCP_GetReceivedData@tcbPtr,w
 15497  2ED6  3E20               	addlw	32
 15498  2ED7  0086               	movwf	6
 15499  2ED8  3002               	movlw	2	; select bank4/5
 15500  2ED9  0087               	movwf	7
 15501  2EDA  0301               	decf	1,w
 15502  2EDB  1D03               	btfss	3,2
 15503  2EDC  2EFF               	goto	l6746
 15504                           
 15505                           ;tcpv4.c: 1364: {;tcpv4.c: 1365: ret = tcbPtr->rxBufferPtr - tcbPtr->rxBufferStart;
 15506  2EDD  087A               	movf	TCP_GetReceivedData@tcbPtr,w
 15507  2EDE  3E1F               	addlw	31
 15508  2EDF  0086               	movwf	6
 15509  2EE0  3002               	movlw	2	; select bank4/5
 15510  2EE1  0087               	movwf	7
 15511  2EE2  087A               	movf	TCP_GetReceivedData@tcbPtr,w
 15512  2EE3  3E1E               	addlw	30
 15513  2EE4  0084               	movwf	4
 15514  2EE5  3002               	movlw	2	; select bank4/5
 15515  2EE6  0085               	movwf	5
 15516  2EE7  0800               	movf	0,w
 15517  2EE8  0201               	subwf	1,w
 15518  2EE9  00F8               	movwf	TCP_GetReceivedData@ret
 15519  2EEA  01F9               	clrf	TCP_GetReceivedData@ret+1
 15520  2EEB  1BF8               	btfsc	TCP_GetReceivedData@ret,7
 15521  2EEC  03F9               	decf	TCP_GetReceivedData@ret+1,f
 15522                           
 15523                           ;tcpv4.c: 1367: if (ret != 0)
 15524  2EED  0878               	movf	TCP_GetReceivedData@ret,w
 15525  2EEE  0479               	iorwf	TCP_GetReceivedData@ret+1,w
 15526  2EEF  1903               	btfsc	3,2
 15527  2EF0  2EFF               	goto	l6746
 15528                           
 15529                           ;tcpv4.c: 1368: {;tcpv4.c: 1369: tcbPtr->localWnd = 0;
 15530  2EF1  087A               	movf	TCP_GetReceivedData@tcbPtr,w
 15531  2EF2  3E1A               	addlw	26
 15532  2EF3  0086               	movwf	6
 15533  2EF4  3002               	movlw	2	; select bank4/5
 15534  2EF5  0087               	movwf	7
 15535  2EF6  3000               	movlw	0
 15536  2EF7  3FC0               	movwi [0]fsr1
 15537  2EF8  3FC1               	movwi [1]fsr1
 15538                           
 15539                           ;tcpv4.c: 1370: tcbPtr->rxBufState = NO_BUFF;
 15540  2EF9  087A               	movf	TCP_GetReceivedData@tcbPtr,w
 15541  2EFA  3E20               	addlw	32
 15542  2EFB  0086               	movwf	6
 15543  2EFC  3002               	movlw	2	; select bank4/5
 15544  2EFD  0087               	movwf	7
 15545  2EFE  0181               	clrf	1
 15546  2EFF                     l6746:
 15547                           
 15548                           ;tcpv4.c: 1371: };tcpv4.c: 1372: };tcpv4.c: 1373: };tcpv4.c: 1374: return ret;
 15549  2EFF  0879               	movf	TCP_GetReceivedData@ret+1,w
 15550  2F00  00F6               	movwf	?_TCP_GetReceivedData+1
 15551  2F01  0878               	movf	TCP_GetReceivedData@ret,w
 15552  2F02  00F5               	movwf	?_TCP_GetReceivedData
 15553  2F03  0008               	return
 15554  2F04                     __end_of_TCP_GetReceivedData:
 15555                           
 15556                           	psect	text64
 15557  243A                     __ptext64:	
 15558 ;; *************** function _TCP_Connect *****************
 15559 ;; Defined at:
 15560 ;;		line 1247 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15561 ;; Parameters:    Size  Location     Type
 15562 ;;  tcbPtr          1    wreg     PTR struct .
 15563 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15564 ;;  srvaddr         1   78[BANK1 ] PTR struct .
 15565 ;;		 -> remoteSocket(6), 
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;  tcbPtr          1    5[BANK2 ] PTR struct .
 15568 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15569 ;;  ret             1    0        unsigned char 
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  1    wreg      unsigned char 
 15572 ;; Registers used:
 15573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 1F/1
 15576 ;;		On exit  : 1C/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15579 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15580 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15581 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15582 ;;      Totals:         0       0       1       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15583 ;;Total ram usage:        7 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:   12
 15586 ;; This function calls:
 15587 ;;		_TCP_FiniteStateMachine
 15588 ;;		_TCP_SocketPoll
 15589 ;; This function is called by:
 15590 ;;		_DEMO_TCP_Client
 15591 ;; This function uses a non-reentrant model
 15592 ;;
 15593                           
 15594                           
 15595                           ;psect for function _TCP_Connect
 15596  243A                     _TCP_Connect:
 15597                           
 15598                           ;incstack = 0
 15599                           ; Regs used in _TCP_Connect: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15600                           ;TCP_Connect@tcbPtr stored from wreg
 15601  243A  0022               	movlb	2	; select bank2
 15602  243B  00A5               	movwf	TCP_Connect@tcbPtr^(0+256)
 15603                           
 15604                           ;tcpv4.c: 1251: if (TCP_SocketPoll(tcbPtr) == SOCKET_CLOSED)
 15605  243C  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15606  243D  31AA  2293  31A4   	fcall	_TCP_SocketPoll
 15607  2440  3A01               	xorlw	1
 15608  2441  1D03               	skipz
 15609  2442  0008               	return
 15610                           
 15611                           ;tcpv4.c: 1252: {;tcpv4.c: 1253: tcbPtr->destIP = srvaddr->addr.s_addr;
 15612  2443  0021               	movlb	1	; select bank1
 15613  2444  086E               	movf	TCP_Connect@srvaddr^(0+128),w
 15614  2445  3E02               	addlw	2
 15615  2446  0086               	movwf	6
 15616  2447  3002               	movlw	2	; select bank4/5
 15617  2448  0087               	movwf	7
 15618  2449  3F40               	moviw [0]fsr1
 15619  244A  0022               	movlb	2	; select bank2
 15620  244B  00A0               	movwf	??_TCP_Connect^(0+256)
 15621  244C  3F41               	moviw [1]fsr1
 15622  244D  00A1               	movwf	(??_TCP_Connect^(0+256)+1)
 15623  244E  3F42               	moviw [2]fsr1
 15624  244F  00A2               	movwf	(??_TCP_Connect^(0+256)+2)
 15625  2450  3F43               	moviw [3]fsr1
 15626  2451  00A3               	movwf	(??_TCP_Connect^(0+256)+3)
 15627  2452  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15628  2453  3E02               	addlw	2
 15629  2454  0086               	movwf	6
 15630  2455  3002               	movlw	2	; select bank4/5
 15631  2456  0087               	movwf	7
 15632  2457  0820               	movf	??_TCP_Connect^(0+256),w
 15633  2458  3FC0               	movwi [0]fsr1
 15634  2459  0821               	movf	(??_TCP_Connect+1)^(0+256),w
 15635  245A  3FC1               	movwi [1]fsr1
 15636  245B  0822               	movf	(??_TCP_Connect+2)^(0+256),w
 15637  245C  3FC2               	movwi [2]fsr1
 15638  245D  0823               	movf	(??_TCP_Connect+3)^(0+256),w
 15639  245E  3FC3               	movwi [3]fsr1
 15640                           
 15641                           ;tcpv4.c: 1254: tcbPtr->destPort = srvaddr->port;
 15642  245F  0021               	movlb	1	; select bank1
 15643  2460  086E               	movf	TCP_Connect@srvaddr^(0+128),w
 15644  2461  0086               	movwf	6
 15645  2462  3002               	movlw	2	; select bank4/5
 15646  2463  0087               	movwf	7
 15647  2464  0022               	movlb	2	; select bank2
 15648  2465  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15649  2466  3E06               	addlw	6
 15650  2467  0084               	movwf	4
 15651  2468  3002               	movlw	2	; select bank4/5
 15652  2469  0085               	movwf	5
 15653  246A  3F40               	moviw [0]fsr1
 15654  246B  3F80               	movwi [0]fsr0
 15655  246C  3F41               	moviw [1]fsr1
 15656  246D  3F81               	movwi [1]fsr0
 15657                           
 15658                           ;tcpv4.c: 1255: if(tcbPtr->localPort == 0)
 15659  246E  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15660  246F  0086               	movwf	6
 15661  2470  3002               	movlw	2	; select bank4/5
 15662  2471  0087               	movwf	7
 15663  2472  0016               	moviw fsr1++
 15664  2473  0401               	iorwf	1,w
 15665  2474  1D03               	btfss	3,2
 15666  2475  2C83               	goto	l8190
 15667                           
 15668                           ;tcpv4.c: 1256: {;tcpv4.c: 1258: tcbPtr->localPort = nextAvailablePort++;
 15669  2476  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15670  2477  0086               	movwf	6
 15671  2478  3002               	movlw	2	; select bank4/5
 15672  2479  0087               	movwf	7
 15673  247A  0023               	movlb	3	; select bank3
 15674  247B  0832               	movf	_nextAvailablePort^(0+384),w
 15675  247C  3FC0               	movwi [0]fsr1
 15676  247D  0833               	movf	(_nextAvailablePort+1)^(0+384),w
 15677  247E  3FC1               	movwi [1]fsr1
 15678  247F  3001               	movlw	1
 15679  2480  07B2               	addwf	_nextAvailablePort^(0+384),f
 15680  2481  3000               	movlw	0
 15681  2482  3DB3               	addwfc	(_nextAvailablePort+1)^(0+384),f
 15682  2483                     l8190:
 15683                           
 15684                           ;tcpv4.c: 1259: };tcpv4.c: 1261: tcbPtr->fsmState = CLOSED;
 15685  2483  0022               	movlb	2	; select bank2
 15686  2484  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15687  2485  3E29               	addlw	41
 15688  2486  0086               	movwf	6
 15689  2487  3002               	movlw	2	; select bank4/5
 15690  2488  0087               	movwf	7
 15691  2489  0181               	clrf	1
 15692                           
 15693                           ;tcpv4.c: 1262: tcbPtr->socketState = SOCKET_IN_PROGRESS;
 15694  248A  3002               	movlw	2
 15695  248B  00A0               	movwf	??_TCP_Connect^(0+256)
 15696  248C  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15697  248D  3E33               	addlw	51
 15698  248E  0086               	movwf	6
 15699  248F  3002               	movlw	2	; select bank4/5
 15700  2490  0087               	movwf	7
 15701  2491  0820               	movf	??_TCP_Connect^(0+256),w
 15702  2492  0081               	movwf	1
 15703                           
 15704                           ;tcpv4.c: 1263: tcbPtr->localSeqno = nextSequenceNumber;
 15705  2493  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15706  2494  3E10               	addlw	16
 15707  2495  0086               	movwf	6
 15708  2496  3002               	movlw	2	; select bank4/5
 15709  2497  0087               	movwf	7
 15710  2498  0024               	movlb	4	; select bank4
 15711  2499  085E               	movf	_nextSequenceNumber^(0+512),w
 15712  249A  3FC0               	movwi [0]fsr1
 15713  249B  085F               	movf	(_nextSequenceNumber+1)^(0+512),w
 15714  249C  3FC1               	movwi [1]fsr1
 15715  249D  0860               	movf	(_nextSequenceNumber+2)^(0+512),w
 15716  249E  3FC2               	movwi [2]fsr1
 15717  249F  0861               	movf	(_nextSequenceNumber+3)^(0+512),w
 15718  24A0  3FC3               	movwi [3]fsr1
 15719                           
 15720                           ;tcpv4.c: 1264: tcbPtr->connectionEvent = ACTIVE_OPEN;
 15721  24A1  0022               	movlb	2	; select bank2
 15722  24A2  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15723  24A3  3E2A               	addlw	42
 15724  24A4  0086               	movwf	6
 15725  24A5  3002               	movlw	2	; select bank4/5
 15726  24A6  0087               	movwf	7
 15727  24A7  0181               	clrf	1
 15728  24A8  0A81               	incf	1,f
 15729                           
 15730                           ;tcpv4.c: 1266: currentTCB = tcbPtr;
 15731  24A9  0825               	movf	TCP_Connect@tcbPtr^(0+256),w
 15732  24AA  00A0               	movwf	??_TCP_Connect^(0+256)
 15733  24AB  0820               	movf	??_TCP_Connect^(0+256),w
 15734  24AC  00EE               	movwf	_currentTCB^(0+256)
 15735  24AD  318A  2286         	fcall	_TCP_FiniteStateMachine
 15736  24AF  0008               	return
 15737  24B0                     __end_of_TCP_Connect:
 15738                           
 15739                           	psect	text65
 15740  2A93                     __ptext65:	
 15741 ;; *************** function _TCP_SocketPoll *****************
 15742 ;; Defined at:
 15743 ;;		line 1199 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15744 ;; Parameters:    Size  Location     Type
 15745 ;;  socket_ptr      1    wreg     PTR struct .
 15746 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15747 ;; Auto vars:     Size  Location     Type
 15748 ;;  socket_ptr      1    7[COMMON] PTR struct .
 15749 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15750 ;;  tmpSocketSta    1    6[COMMON] enum E694
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  1    wreg      enum E694
 15753 ;; Registers used:
 15754 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 19/4
 15757 ;;		On exit  : 1E/2
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15763 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;Total ram usage:        3 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:    4
 15767 ;; This function calls:
 15768 ;;		_TCB_Check
 15769 ;; This function is called by:
 15770 ;;		_TCP_SocketRemove
 15771 ;;		_TCP_Connect
 15772 ;;		_TCP_Send
 15773 ;;		_DEMO_TCP_Client
 15774 ;; This function uses a non-reentrant model
 15775 ;;
 15776                           
 15777                           
 15778                           ;psect for function _TCP_SocketPoll
 15779  2A93                     _TCP_SocketPoll:
 15780                           
 15781                           ;incstack = 0
 15782                           ; Regs used in _TCP_SocketPoll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15783                           ;TCP_SocketPoll@socket_ptr stored from wreg
 15784  2A93  00F7               	movwf	TCP_SocketPoll@socket_ptr
 15785                           
 15786                           ;tcpv4.c: 1201: socketState_t tmpSocketState;;tcpv4.c: 1203: tmpSocketState = NOT_A_SOCK
      +                          ET;
 15787  2A94  01F6               	clrf	TCP_SocketPoll@tmpSocketState
 15788                           
 15789                           ;tcpv4.c: 1205: if(TCB_Check(socket_ptr))
 15790  2A95  0877               	movf	TCP_SocketPoll@socket_ptr,w
 15791  2A96  31AD  2590  31AA   	fcall	_TCB_Check
 15792  2A99  3A00               	xorlw	0
 15793  2A9A  1903               	skipnz
 15794  2A9B  2AA5               	goto	l6304
 15795                           
 15796                           ;tcpv4.c: 1206: {;tcpv4.c: 1207: tmpSocketState = socket_ptr->socketState;
 15797  2A9C  0877               	movf	TCP_SocketPoll@socket_ptr,w
 15798  2A9D  3E33               	addlw	51
 15799  2A9E  0086               	movwf	6
 15800  2A9F  3002               	movlw	2	; select bank4/5
 15801  2AA0  0087               	movwf	7
 15802  2AA1  0801               	movf	1,w
 15803  2AA2  00F5               	movwf	??_TCP_SocketPoll
 15804  2AA3  0875               	movf	??_TCP_SocketPoll,w
 15805  2AA4  00F6               	movwf	TCP_SocketPoll@tmpSocketState
 15806  2AA5                     l6304:
 15807                           
 15808                           ;tcpv4.c: 1208: };tcpv4.c: 1210: return tmpSocketState;
 15809  2AA5  0876               	movf	TCP_SocketPoll@tmpSocketState,w
 15810  2AA6  0008               	return
 15811  2AA7                     __end_of_TCP_SocketPoll:
 15812                           
 15813                           	psect	text66
 15814  2C6E                     __ptext66:	
 15815 ;; *************** function _TCP_Close *****************
 15816 ;; Defined at:
 15817 ;;		line 1274 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  tcbPtr          1    wreg     PTR struct .
 15820 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15821 ;; Auto vars:     Size  Location     Type
 15822 ;;  tcbPtr          1   79[BANK1 ] PTR struct .
 15823 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 15824 ;;  ret             1    0        unsigned char 
 15825 ;; Return value:  Size  Location     Type
 15826 ;;                  1    wreg      unsigned char 
 15827 ;; Registers used:
 15828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15829 ;; Tracked objects:
 15830 ;;		On entry : 1F/3
 15831 ;;		On exit  : 1C/0
 15832 ;;		Unchanged: 0/0
 15833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15835 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15836 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15837 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15838 ;;Total ram usage:        3 bytes
 15839 ;; Hardware stack levels used:    1
 15840 ;; Hardware stack levels required when called:   12
 15841 ;; This function calls:
 15842 ;;		_TCB_Check
 15843 ;;		_TCP_FiniteStateMachine
 15844 ;; This function is called by:
 15845 ;;		_DEMO_TCP_Client
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           
 15850                           ;psect for function _TCP_Close
 15851  2C6E                     _TCP_Close:
 15852                           
 15853                           ;incstack = 0
 15854                           ; Regs used in _TCP_Close: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15855                           ;TCP_Close@tcbPtr stored from wreg
 15856  2C6E  0021               	movlb	1	; select bank1
 15857  2C6F  00EF               	movwf	TCP_Close@tcbPtr^(0+128)
 15858                           
 15859                           ;tcpv4.c: 1278: if (TCB_Check(tcbPtr))
 15860  2C70  086F               	movf	TCP_Close@tcbPtr^(0+128),w
 15861  2C71  31AD  2590  31AC   	fcall	_TCB_Check
 15862  2C74  3A00               	xorlw	0
 15863  2C75  1903               	skipnz
 15864  2C76  0008               	return
 15865                           
 15866                           ;tcpv4.c: 1279: {;tcpv4.c: 1280: tcbPtr->connectionEvent = CLOSE;
 15867  2C77  0021               	movlb	1	; select bank1
 15868  2C78  086F               	movf	TCP_Close@tcbPtr^(0+128),w
 15869  2C79  3E2A               	addlw	42
 15870  2C7A  0086               	movwf	6
 15871  2C7B  3002               	movlw	2	; select bank4/5
 15872  2C7C  0087               	movwf	7
 15873  2C7D  0181               	clrf	1
 15874                           
 15875                           ;tcpv4.c: 1282: tcbPtr->socketState = SOCKET_CLOSING;
 15876  2C7E  3004               	movlw	4
 15877  2C7F  0020               	movlb	0	; select bank0
 15878  2C80  00EF               	movwf	??_TCP_Close
 15879  2C81  0021               	movlb	1	; select bank1
 15880  2C82  086F               	movf	TCP_Close@tcbPtr^(0+128),w
 15881  2C83  3E33               	addlw	51
 15882  2C84  0086               	movwf	6
 15883  2C85  3002               	movlw	2	; select bank4/5
 15884  2C86  0087               	movwf	7
 15885  2C87  0020               	movlb	0	; select bank0
 15886  2C88  086F               	movf	??_TCP_Close,w
 15887  2C89  0081               	movwf	1
 15888                           
 15889                           ;tcpv4.c: 1285: currentTCB = tcbPtr;
 15890  2C8A  0021               	movlb	1	; select bank1
 15891  2C8B  086F               	movf	TCP_Close@tcbPtr^(0+128),w
 15892  2C8C  0020               	movlb	0	; select bank0
 15893  2C8D  00EF               	movwf	??_TCP_Close
 15894  2C8E  086F               	movf	??_TCP_Close,w
 15895  2C8F  0022               	movlb	2	; select bank2
 15896  2C90  00EE               	movwf	_currentTCB^(0+256)
 15897  2C91  318A  2286         	fcall	_TCP_FiniteStateMachine
 15898  2C93  0008               	return
 15899  2C94                     __end_of_TCP_Close:
 15900                           
 15901                           	psect	text67
 15902  0A86                     __ptext67:	
 15903 ;; *************** function _TCP_FiniteStateMachine *****************
 15904 ;; Defined at:
 15905 ;;		line 596 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 15906 ;; Parameters:    Size  Location     Type
 15907 ;;		None
 15908 ;; Auto vars:     Size  Location     Type
 15909 ;;  notAckBytes     2   74[BANK1 ] unsigned int 
 15910 ;;  nextState       1   77[BANK1 ] enum E665
 15911 ;;  event           1   76[BANK1 ] enum E678
 15912 ;;  ret             1   73[BANK1 ] unsigned char 
 15913 ;; Return value:  Size  Location     Type
 15914 ;;                  1    wreg      unsigned char 
 15915 ;; Registers used:
 15916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15917 ;; Tracked objects:
 15918 ;;		On entry : 1E/2
 15919 ;;		On exit  : 1F/1
 15920 ;;		Unchanged: 0/0
 15921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15923 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15924 ;;      Temps:          0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15925 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15926 ;;Total ram usage:       14 bytes
 15927 ;; Hardware stack levels used:    1
 15928 ;; Hardware stack levels required when called:   11
 15929 ;; This function calls:
 15930 ;;		_TCB_Reset
 15931 ;;		_TCP_PayloadSave
 15932 ;;		_TCP_Snd
 15933 ;;		_isPortUnreachable
 15934 ;;		_resetPortUnreachable
 15935 ;; This function is called by:
 15936 ;;		_TCP_Recv
 15937 ;;		_TCP_Connect
 15938 ;;		_TCP_Close
 15939 ;;		_TCP_Update
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           
 15944                           ;psect for function _TCP_FiniteStateMachine
 15945  0A86                     _TCP_FiniteStateMachine:
 15946                           
 15947                           ;tcpv4.c: 598: uint16_t notAckBytes;;tcpv4.c: 599: bool ret = 0;
 15948                           
 15949                           ;incstack = 0
 15950                           ; Regs used in _TCP_FiniteStateMachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15951  0A86  0021               	movlb	1	; select bank1
 15952  0A87  01E9               	clrf	TCP_FiniteStateMachine@ret^(0+128)
 15953                           
 15954                           ;tcpv4.c: 601: tcp_fsm_states_t nextState = currentTCB->fsmState;
 15955  0A88  0022               	movlb	2	; select bank2
 15956  0A89  086E               	movf	_currentTCB^(0+256),w
 15957  0A8A  3E29               	addlw	41
 15958  0A8B  0086               	movwf	6
 15959  0A8C  3002               	movlw	2	; select bank4/5
 15960  0A8D  0087               	movwf	7
 15961  0A8E  0801               	movf	1,w
 15962  0A8F  0021               	movlb	1	; select bank1
 15963  0A90  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 15964  0A91  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 15965  0A92  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 15966                           
 15967                           ;tcpv4.c: 602: tcpEvent_t event = currentTCB->connectionEvent;
 15968  0A93  0022               	movlb	2	; select bank2
 15969  0A94  086E               	movf	_currentTCB^(0+256),w
 15970  0A95  3E2A               	addlw	42
 15971  0A96  0086               	movwf	6
 15972  0A97  3002               	movlw	2	; select bank4/5
 15973  0A98  0087               	movwf	7
 15974  0A99  0801               	movf	1,w
 15975  0A9A  0021               	movlb	1	; select bank1
 15976  0A9B  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 15977  0A9C  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 15978  0A9D  00EC               	movwf	TCP_FiniteStateMachine@event^(0+128)
 15979                           
 15980                           ;tcpv4.c: 603: if(isPortUnreachable(currentTCB->localPort))
 15981  0A9E  0022               	movlb	2	; select bank2
 15982  0A9F  086E               	movf	_currentTCB^(0+256),w
 15983  0AA0  0086               	movwf	6
 15984  0AA1  3002               	movlw	2	; select bank4/5
 15985  0AA2  0087               	movwf	7
 15986  0AA3  3F40               	moviw [0]fsr1
 15987  0AA4  00F0               	movwf	isPortUnreachable@port
 15988  0AA5  3F41               	moviw [1]fsr1
 15989  0AA6  00F1               	movwf	isPortUnreachable@port+1
 15990  0AA7  31A9  21EF  318A   	fcall	_isPortUnreachable
 15991  0AAA  3A00               	xorlw	0
 15992  0AAB  1903               	skipnz
 15993  0AAC  2AB5               	goto	L12
 15994                           
 15995                           ;tcpv4.c: 604: {;tcpv4.c: 605: event = RCV_RST;
 15996  0AAD  3009               	movlw	9
 15997  0AAE  0021               	movlb	1	; select bank1
 15998  0AAF  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 15999  0AB0  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16000  0AB1  00EC               	movwf	TCP_FiniteStateMachine@event^(0+128)
 16001                           
 16002                           ;tcpv4.c: 606: resetPortUnreachable();
 16003  0AB2  31A9  216E  318A   	fcall	_resetPortUnreachable
 16004  0AB5                     L12:
 16005  0AB5  3185  2DA1         	goto	l7824
 16006  0AB7                     l7502:
 16007                           
 16008                           ;tcpv4.c: 616: currentTCB->destIP = receivedRemoteAddress;
 16009  0AB7  0022               	movlb	2	; select bank2
 16010  0AB8  086E               	movf	_currentTCB^(0+256),w
 16011  0AB9  3E02               	addlw	2
 16012  0ABA  0086               	movwf	6
 16013  0ABB  3002               	movlw	2	; select bank4/5
 16014  0ABC  0087               	movwf	7
 16015  0ABD  0023               	movlb	3	; select bank3
 16016  0ABE  0820               	movf	_receivedRemoteAddress^(0+384),w
 16017  0ABF  3FC0               	movwi [0]fsr1
 16018  0AC0  0821               	movf	(_receivedRemoteAddress+1)^(0+384),w
 16019  0AC1  3FC1               	movwi [1]fsr1
 16020  0AC2  0822               	movf	(_receivedRemoteAddress+2)^(0+384),w
 16021  0AC3  3FC2               	movwi [2]fsr1
 16022  0AC4  0823               	movf	(_receivedRemoteAddress+3)^(0+384),w
 16023  0AC5  3FC3               	movwi [3]fsr1
 16024                           
 16025                           ;tcpv4.c: 617: currentTCB->destPort = tcpHeader.sourcePort;
 16026  0AC6  0022               	movlb	2	; select bank2
 16027  0AC7  086E               	movf	_currentTCB^(0+256),w
 16028  0AC8  3E06               	addlw	6
 16029  0AC9  0086               	movwf	6
 16030  0ACA  3002               	movlw	2	; select bank4/5
 16031  0ACB  0087               	movwf	7
 16032  0ACC  0023               	movlb	3	; select bank3
 16033  0ACD  084D               	movf	_tcpHeader^(0+384),w
 16034  0ACE  3FC0               	movwi [0]fsr1
 16035  0ACF  084E               	movf	(_tcpHeader+1)^(0+384),w
 16036  0AD0  3FC1               	movwi [1]fsr1
 16037                           
 16038                           ;tcpv4.c: 620: currentTCB->localLastAck = 0;
 16039  0AD1  0022               	movlb	2	; select bank2
 16040  0AD2  086E               	movf	_currentTCB^(0+256),w
 16041  0AD3  3E14               	addlw	20
 16042  0AD4  0086               	movwf	6
 16043  0AD5  3002               	movlw	2	; select bank4/5
 16044  0AD6  0087               	movwf	7
 16045  0AD7  3000               	movlw	0
 16046  0AD8  3FC0               	movwi [0]fsr1
 16047  0AD9  3000               	movlw	0
 16048  0ADA  3FC1               	movwi [1]fsr1
 16049  0ADB  3FC2               	movwi [2]fsr1
 16050  0ADC  3FC3               	movwi [3]fsr1
 16051                           
 16052                           ;tcpv4.c: 622: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16053  0ADD  086E               	movf	_currentTCB^(0+256),w
 16054  0ADE  3E08               	addlw	8
 16055  0ADF  0086               	movwf	6
 16056  0AE0  3002               	movlw	2	; select bank4/5
 16057  0AE1  0087               	movwf	7
 16058  0AE2  0023               	movlb	3	; select bank3
 16059  0AE3  0851               	movf	(_tcpHeader^(0+384)+4),w
 16060  0AE4  3FC0               	movwi [0]fsr1
 16061  0AE5  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 16062  0AE6  3FC1               	movwi [1]fsr1
 16063  0AE7  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 16064  0AE8  3FC2               	movwi [2]fsr1
 16065  0AE9  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 16066  0AEA  3FC3               	movwi [3]fsr1
 16067                           
 16068                           ;tcpv4.c: 623: currentTCB->remoteAck = currentTCB->remoteSeqno + 1;
 16069  0AEB  3001               	movlw	1
 16070  0AEC  0021               	movlb	1	; select bank1
 16071  0AED  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16072  0AEE  3000               	movlw	0
 16073  0AEF  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16074  0AF0  3000               	movlw	0
 16075  0AF1  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16076  0AF2  3000               	movlw	0
 16077  0AF3  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16078  0AF4  0022               	movlb	2	; select bank2
 16079  0AF5  086E               	movf	_currentTCB^(0+256),w
 16080  0AF6  3E08               	addlw	8
 16081  0AF7  0086               	movwf	6
 16082  0AF8  3002               	movlw	2	; select bank4/5
 16083  0AF9  0087               	movwf	7
 16084  0AFA  3F40               	moviw [0]fsr1
 16085  0AFB  0021               	movlb	1	; select bank1
 16086  0AFC  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16087  0AFD  3F41               	moviw [1]fsr1
 16088  0AFE  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16089  0AFF  3F42               	moviw [2]fsr1
 16090  0B00  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16091  0B01  3F43               	moviw [3]fsr1
 16092  0B02  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16093  0B03  0022               	movlb	2	; select bank2
 16094  0B04  086E               	movf	_currentTCB^(0+256),w
 16095  0B05  3E0C               	addlw	12
 16096  0B06  0086               	movwf	6
 16097  0B07  3002               	movlw	2	; select bank4/5
 16098  0B08  0087               	movwf	7
 16099  0B09  0021               	movlb	1	; select bank1
 16100  0B0A  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16101  0B0B  3FC0               	movwi [0]fsr1
 16102  0B0C  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16103  0B0D  3FC1               	movwi [1]fsr1
 16104  0B0E  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16105  0B0F  3FC2               	movwi [2]fsr1
 16106  0B10  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16107  0B11  3FC3               	movwi [3]fsr1
 16108                           
 16109                           ;tcpv4.c: 626: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16110  0B12  30FF               	movlw	255
 16111  0B13  0023               	movlb	3	; select bank3
 16112  0B14  055B               	andwf	(_tcpHeader^(0+384)+14),w
 16113  0B15  0021               	movlb	1	; select bank1
 16114  0B16  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16115  0B17  3000               	movlw	0
 16116  0B18  0023               	movlb	3	; select bank3
 16117  0B19  055C               	andwf	((_tcpHeader+1)^(0+384)+14),w
 16118  0B1A  0021               	movlb	1	; select bank1
 16119  0B1B  00E1               	movwf	(??_TCP_FiniteStateMachine+1)^(0+128)
 16120  0B1C  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16121  0B1D  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16122  0B1E  01E0               	clrf	??_TCP_FiniteStateMachine^(0+128)
 16123  0B1F  300E               	movlw	14
 16124  0B20  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16125  0B21  0086               	movwf	6
 16126  0B22  3001               	movlw	1	; select bank3/4
 16127  0B23  0087               	movwf	7
 16128  0B24  3F40               	moviw [0]fsr1
 16129  0B25  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16130  0B26  3F41               	moviw [1]fsr1
 16131  0B27  00E4               	movwf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16132  0B28  0864               	movf	((??_TCP_FiniteStateMachine+3)^(0+128)+1),w
 16133  0B29  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16134  0B2A  01E4               	clrf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16135  0B2B  30FF               	movlw	255
 16136  0B2C  0563               	andwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16137  0B2D  00E5               	movwf	(??_TCP_FiniteStateMachine+5)^(0+128)
 16138  0B2E  3000               	movlw	0
 16139  0B2F  0564               	andwf	(??_TCP_FiniteStateMachine+4)^(0+128),w
 16140  0B30  00E6               	movwf	(??_TCP_FiniteStateMachine+6)^(0+128)
 16141  0B31  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16142  0B32  0465               	iorwf	(??_TCP_FiniteStateMachine+5)^(0+128),w
 16143  0B33  00E7               	movwf	(??_TCP_FiniteStateMachine+7)^(0+128)
 16144  0B34  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16145  0B35  0466               	iorwf	(??_TCP_FiniteStateMachine+6)^(0+128),w
 16146  0B36  00E8               	movwf	(??_TCP_FiniteStateMachine+8)^(0+128)
 16147  0B37  0022               	movlb	2	; select bank2
 16148  0B38  086E               	movf	_currentTCB^(0+256),w
 16149  0B39  3E18               	addlw	24
 16150  0B3A  0086               	movwf	6
 16151  0B3B  3002               	movlw	2	; select bank4/5
 16152  0B3C  0087               	movwf	7
 16153  0B3D  0021               	movlb	1	; select bank1
 16154  0B3E  0867               	movf	(??_TCP_FiniteStateMachine+7)^(0+128),w
 16155  0B3F  3FC0               	movwi [0]fsr1
 16156  0B40  0868               	movf	(??_TCP_FiniteStateMachine+8)^(0+128),w
 16157  0B41  3FC1               	movwi [1]fsr1
 16158                           
 16159                           ;tcpv4.c: 627: currentTCB->mss = tcpMss;
 16160  0B42  0022               	movlb	2	; select bank2
 16161  0B43  086E               	movf	_currentTCB^(0+256),w
 16162  0B44  3E1C               	addlw	28
 16163  0B45  0086               	movwf	6
 16164  0B46  3002               	movlw	2	; select bank4/5
 16165  0B47  0087               	movwf	7
 16166  0B48  0023               	movlb	3	; select bank3
 16167  0B49  0865               	movf	_tcpMss^(0+384),w
 16168  0B4A  3FC0               	movwi [0]fsr1
 16169  0B4B  0866               	movf	(_tcpMss+1)^(0+384),w
 16170  0B4C  3FC1               	movwi [1]fsr1
 16171                           
 16172                           ;tcpv4.c: 630: currentTCB->flags = 0x02U | 0x10U;
 16173  0B4D  3012               	movlw	18
 16174  0B4E  0021               	movlb	1	; select bank1
 16175  0B4F  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16176  0B50  0022               	movlb	2	; select bank2
 16177  0B51  086E               	movf	_currentTCB^(0+256),w
 16178  0B52  3E32               	addlw	50
 16179  0B53  0086               	movwf	6
 16180  0B54  3002               	movlw	2	; select bank4/5
 16181  0B55  0087               	movwf	7
 16182  0B56  0021               	movlb	1	; select bank1
 16183  0B57  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16184  0B58  0081               	movwf	1
 16185                           
 16186                           ;tcpv4.c: 631: currentTCB->timeout = ((unsigned long)1*2);
 16187  0B59  0022               	movlb	2	; select bank2
 16188  0B5A  086E               	movf	_currentTCB^(0+256),w
 16189  0B5B  3E2D               	addlw	45
 16190  0B5C  0086               	movwf	6
 16191  0B5D  3002               	movlw	2	; select bank4/5
 16192  0B5E  0087               	movwf	7
 16193  0B5F  3002               	movlw	2
 16194  0B60  3FC0               	movwi [0]fsr1
 16195  0B61  3000               	movlw	0
 16196  0B62  3FC1               	movwi [1]fsr1
 16197                           
 16198                           ;tcpv4.c: 632: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16199  0B63  086E               	movf	_currentTCB^(0+256),w
 16200  0B64  3E2F               	addlw	47
 16201  0B65  0086               	movwf	6
 16202  0B66  3002               	movlw	2	; select bank4/5
 16203  0B67  0087               	movwf	7
 16204  0B68  3002               	movlw	2
 16205  0B69  3FC0               	movwi [0]fsr1
 16206  0B6A  3000               	movlw	0
 16207  0B6B  3FC1               	movwi [1]fsr1
 16208                           
 16209                           ;tcpv4.c: 633: currentTCB->timeoutsCount = (3u);
 16210  0B6C  3003               	movlw	3
 16211  0B6D  0021               	movlb	1	; select bank1
 16212  0B6E  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16213  0B6F  0022               	movlb	2	; select bank2
 16214  0B70  086E               	movf	_currentTCB^(0+256),w
 16215  0B71  3E31               	addlw	49
 16216  0B72                     L5:
 16217  0B72  0086               	movwf	6
 16218  0B73  3002               	movlw	2	; select bank4/5
 16219  0B74  0087               	movwf	7
 16220  0B75  0021               	movlb	1	; select bank1
 16221  0B76  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16222  0B77  0081               	movwf	1
 16223                           
 16224                           ;tcpv4.c: 635: TCP_Snd(currentTCB);
 16225  0B78  0022               	movlb	2	; select bank2
 16226  0B79  086E               	movf	_currentTCB^(0+256),w
 16227  0B7A  3194  24B7  318A   	fcall	_TCP_Snd
 16228                           
 16229                           ;tcpv4.c: 636: nextState = SYN_RECEIVED;
 16230  0B7D  3003               	movlw	3
 16231  0B7E  3184  2C53         	goto	L7
 16232  0B80                     l7508:	
 16233                           ;tcpv4.c: 637: break;
 16234                           
 16235                           
 16236                           ;tcpv4.c: 639: nextState = CLOSE;
 16237  0B80  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 16238                           
 16239                           ;tcpv4.c: 640: TCB_Reset(currentTCB);
 16240  0B81  0022               	movlb	2	; select bank2
 16241  0B82  086E               	movf	_currentTCB^(0+256),w
 16242  0B83  3190  2001  318A   	fcall	_TCB_Reset
 16243  0B86                     L13:
 16244                           
 16245                           ;tcpv4.c: 641: break;
 16246  0B86  3185  2DCC         	goto	l7826
 16247  0B88                     l7514:
 16248  0B88  0021               	movlb	1	; select bank1
 16249  0B89  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 16250                           
 16251                           ; Switch size 1, requested type "simple"
 16252                           ; Number of cases is 2, Range of values is 0 to 3
 16253                           ; switch strategies available:
 16254                           ; Name         Instructions Cycles
 16255                           ; simple_byte            7     4 (average)
 16256                           ; direct_byte           14     6 (fixed)
 16257                           ; jumptable            260     6 (fixed)
 16258                           ;	Chosen strategy is simple_byte
 16259  0B8A  3A00               	xorlw	0	; case 0
 16260  0B8B  1903               	skipnz
 16261  0B8C  2B80               	goto	l7508
 16262  0B8D  3A03               	xorlw	3	; case 3
 16263  0B8E  1903               	skipnz
 16264  0B8F  2AB7               	goto	l7502
 16265  0B90  2B86               	goto	L13
 16266                           
 16267                           ;tcpv4.c: 646: break;
 16268  0B91  2B86               	goto	L13
 16269  0B92                     l7516:
 16270                           
 16271                           ;tcpv4.c: 652: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16272  0B92  0022               	movlb	2	; select bank2
 16273  0B93  086E               	movf	_currentTCB^(0+256),w
 16274  0B94  3E08               	addlw	8
 16275  0B95  0086               	movwf	6
 16276  0B96  3002               	movlw	2	; select bank4/5
 16277  0B97  0087               	movwf	7
 16278  0B98  0023               	movlb	3	; select bank3
 16279  0B99  0851               	movf	(_tcpHeader^(0+384)+4),w
 16280  0B9A  3FC0               	movwi [0]fsr1
 16281  0B9B  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 16282  0B9C  3FC1               	movwi [1]fsr1
 16283  0B9D  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 16284  0B9E  3FC2               	movwi [2]fsr1
 16285  0B9F  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 16286  0BA0  3FC3               	movwi [3]fsr1
 16287                           
 16288                           ;tcpv4.c: 653: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16289  0BA1  3001               	movlw	1
 16290  0BA2  0021               	movlb	1	; select bank1
 16291  0BA3  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16292  0BA4  3000               	movlw	0
 16293  0BA5  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16294  0BA6  3000               	movlw	0
 16295  0BA7  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16296  0BA8  3000               	movlw	0
 16297  0BA9  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16298  0BAA  3004               	movlw	4
 16299  0BAB  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16300  0BAC  0086               	movwf	6
 16301  0BAD  3001               	movlw	1	; select bank3/4
 16302  0BAE  0087               	movwf	7
 16303  0BAF  3F40               	moviw [0]fsr1
 16304  0BB0  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16305  0BB1  3F41               	moviw [1]fsr1
 16306  0BB2  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16307  0BB3  3F42               	moviw [2]fsr1
 16308  0BB4  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16309  0BB5  3F43               	moviw [3]fsr1
 16310  0BB6  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16311  0BB7  0022               	movlb	2	; select bank2
 16312  0BB8  086E               	movf	_currentTCB^(0+256),w
 16313  0BB9  3E0C               	addlw	12
 16314  0BBA  0086               	movwf	6
 16315  0BBB  3002               	movlw	2	; select bank4/5
 16316  0BBC  0087               	movwf	7
 16317  0BBD  0021               	movlb	1	; select bank1
 16318  0BBE  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16319  0BBF  3FC0               	movwi [0]fsr1
 16320  0BC0  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16321  0BC1  3FC1               	movwi [1]fsr1
 16322  0BC2  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16323  0BC3  3FC2               	movwi [2]fsr1
 16324  0BC4  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16325  0BC5  3FC3               	movwi [3]fsr1
 16326                           
 16327                           ;tcpv4.c: 656: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16328  0BC6  30FF               	movlw	255
 16329  0BC7  0023               	movlb	3	; select bank3
 16330  0BC8  055B               	andwf	(_tcpHeader^(0+384)+14),w
 16331  0BC9  0021               	movlb	1	; select bank1
 16332  0BCA  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16333  0BCB  3000               	movlw	0
 16334  0BCC  0023               	movlb	3	; select bank3
 16335  0BCD  055C               	andwf	((_tcpHeader+1)^(0+384)+14),w
 16336  0BCE  0021               	movlb	1	; select bank1
 16337  0BCF  00E1               	movwf	(??_TCP_FiniteStateMachine+1)^(0+128)
 16338  0BD0  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16339  0BD1  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16340  0BD2  01E0               	clrf	??_TCP_FiniteStateMachine^(0+128)
 16341  0BD3  300E               	movlw	14
 16342  0BD4  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16343  0BD5  0086               	movwf	6
 16344  0BD6  3001               	movlw	1	; select bank3/4
 16345  0BD7  0087               	movwf	7
 16346  0BD8  3F40               	moviw [0]fsr1
 16347  0BD9  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16348  0BDA  3F41               	moviw [1]fsr1
 16349  0BDB  00E4               	movwf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16350  0BDC  0864               	movf	((??_TCP_FiniteStateMachine+3)^(0+128)+1),w
 16351  0BDD  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16352  0BDE  01E4               	clrf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16353  0BDF  30FF               	movlw	255
 16354  0BE0  0563               	andwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16355  0BE1  00E5               	movwf	(??_TCP_FiniteStateMachine+5)^(0+128)
 16356  0BE2  3000               	movlw	0
 16357  0BE3  0564               	andwf	(??_TCP_FiniteStateMachine+4)^(0+128),w
 16358  0BE4  00E6               	movwf	(??_TCP_FiniteStateMachine+6)^(0+128)
 16359  0BE5  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16360  0BE6  0465               	iorwf	(??_TCP_FiniteStateMachine+5)^(0+128),w
 16361  0BE7  00E7               	movwf	(??_TCP_FiniteStateMachine+7)^(0+128)
 16362  0BE8  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16363  0BE9  0466               	iorwf	(??_TCP_FiniteStateMachine+6)^(0+128),w
 16364  0BEA  00E8               	movwf	(??_TCP_FiniteStateMachine+8)^(0+128)
 16365  0BEB  0022               	movlb	2	; select bank2
 16366  0BEC  086E               	movf	_currentTCB^(0+256),w
 16367  0BED  3E18               	addlw	24
 16368  0BEE  0086               	movwf	6
 16369  0BEF  3002               	movlw	2	; select bank4/5
 16370  0BF0  0087               	movwf	7
 16371  0BF1  0021               	movlb	1	; select bank1
 16372  0BF2  0867               	movf	(??_TCP_FiniteStateMachine+7)^(0+128),w
 16373  0BF3  3FC0               	movwi [0]fsr1
 16374  0BF4  0868               	movf	(??_TCP_FiniteStateMachine+8)^(0+128),w
 16375  0BF5  3FC1               	movwi [1]fsr1
 16376                           
 16377                           ;tcpv4.c: 657: currentTCB->mss = tcpMss;
 16378  0BF6  0022               	movlb	2	; select bank2
 16379  0BF7  086E               	movf	_currentTCB^(0+256),w
 16380  0BF8  3E1C               	addlw	28
 16381  0BF9  0086               	movwf	6
 16382  0BFA  3002               	movlw	2	; select bank4/5
 16383  0BFB  0087               	movwf	7
 16384  0BFC  0023               	movlb	3	; select bank3
 16385  0BFD  0865               	movf	_tcpMss^(0+384),w
 16386  0BFE  3FC0               	movwi [0]fsr1
 16387  0BFF  0866               	movf	(_tcpMss+1)^(0+384),w
 16388  0C00  3FC1               	movwi [1]fsr1
 16389                           
 16390                           ;tcpv4.c: 660: currentTCB->timeout = ((unsigned long)1*2);
 16391  0C01  0022               	movlb	2	; select bank2
 16392  0C02  086E               	movf	_currentTCB^(0+256),w
 16393  0C03  3E2D               	addlw	45
 16394  0C04  0086               	movwf	6
 16395  0C05  3002               	movlw	2	; select bank4/5
 16396  0C06  0087               	movwf	7
 16397  0C07  3002               	movlw	2
 16398  0C08  3FC0               	movwi [0]fsr1
 16399  0C09  3000               	movlw	0
 16400  0C0A  3FC1               	movwi [1]fsr1
 16401                           
 16402                           ;tcpv4.c: 661: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 16403  0C0B  086E               	movf	_currentTCB^(0+256),w
 16404  0C0C  3E2F               	addlw	47
 16405  0C0D  0086               	movwf	6
 16406  0C0E  3002               	movlw	2	; select bank4/5
 16407  0C0F  0087               	movwf	7
 16408  0C10  3002               	movlw	2
 16409  0C11  3FC0               	movwi [0]fsr1
 16410  0C12  3000               	movlw	0
 16411  0C13  3FC1               	movwi [1]fsr1
 16412                           
 16413                           ;tcpv4.c: 662: currentTCB->timeoutsCount = (3u);
 16414  0C14  3003               	movlw	3
 16415  0C15  0021               	movlb	1	; select bank1
 16416  0C16  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16417  0C17  0022               	movlb	2	; select bank2
 16418  0C18  086E               	movf	_currentTCB^(0+256),w
 16419  0C19  3E31               	addlw	49
 16420  0C1A  0086               	movwf	6
 16421  0C1B  3002               	movlw	2	; select bank4/5
 16422  0C1C  0087               	movwf	7
 16423  0C1D  0021               	movlb	1	; select bank1
 16424  0C1E  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16425  0C1F  0081               	movwf	1
 16426                           
 16427                           ;tcpv4.c: 663: currentTCB->flags = 0x02U | 0x10U;
 16428  0C20  3012               	movlw	18
 16429  0C21  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16430  0C22  0022               	movlb	2	; select bank2
 16431  0C23  086E               	movf	_currentTCB^(0+256),w
 16432  0C24  3E32               	addlw	50
 16433  0C25  2B72               	goto	L5
 16434  0C26                     l7522:	
 16435                           ;tcpv4.c: 665: TCP_Snd(currentTCB);
 16436                           
 16437                           
 16438                           ;tcpv4.c: 672: currentTCB->timeout = 0;
 16439  0C26  0022               	movlb	2	; select bank2
 16440  0C27  086E               	movf	_currentTCB^(0+256),w
 16441  0C28  3E2D               	addlw	45
 16442  0C29  0086               	movwf	6
 16443  0C2A  3002               	movlw	2	; select bank4/5
 16444  0C2B  0087               	movwf	7
 16445  0C2C  3000               	movlw	0
 16446  0C2D  3FC0               	movwi [0]fsr1
 16447  0C2E  3FC1               	movwi [1]fsr1
 16448                           
 16449                           ;tcpv4.c: 674: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16450  0C2F  3001               	movlw	1
 16451  0C30  0021               	movlb	1	; select bank1
 16452  0C31  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16453  0C32  3000               	movlw	0
 16454  0C33  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16455  0C34  3000               	movlw	0
 16456  0C35  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16457  0C36  3000               	movlw	0
 16458  0C37  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16459  0C38  0022               	movlb	2	; select bank2
 16460  0C39  086E               	movf	_currentTCB^(0+256),w
 16461  0C3A  3E10               	addlw	16
 16462  0C3B  0086               	movwf	6
 16463  0C3C  3002               	movlw	2	; select bank4/5
 16464  0C3D  0087               	movwf	7
 16465  0C3E  3F40               	moviw [0]fsr1
 16466  0C3F  0021               	movlb	1	; select bank1
 16467  0C40  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16468  0C41  3F41               	moviw [1]fsr1
 16469  0C42  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16470  0C43  3F42               	moviw [2]fsr1
 16471  0C44  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16472  0C45  3F43               	moviw [3]fsr1
 16473  0C46  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16474  0C47  0023               	movlb	3	; select bank3
 16475  0C48  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 16476  0C49  0021               	movlb	1	; select bank1
 16477  0C4A  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16478  0C4B  1D03               	skipz
 16479  0C4C  2C5D               	goto	u6275
 16480  0C4D  0023               	movlb	3	; select bank3
 16481  0C4E  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 16482  0C4F  0021               	movlb	1	; select bank1
 16483  0C50  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16484  0C51  1D03               	skipz
 16485  0C52  2C5D               	goto	u6275
 16486  0C53  0023               	movlb	3	; select bank3
 16487  0C54  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 16488  0C55  0021               	movlb	1	; select bank1
 16489  0C56  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16490  0C57  1D03               	skipz
 16491  0C58  2C5D               	goto	u6275
 16492  0C59  0023               	movlb	3	; select bank3
 16493  0C5A  0855               	movf	(_tcpHeader^(0+384)+8),w
 16494  0C5B  0021               	movlb	1	; select bank1
 16495  0C5C  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 16496  0C5D                     u6275:
 16497  0C5D  1D03               	skipz
 16498  0C5E  2D08               	goto	l7532
 16499                           
 16500                           ;tcpv4.c: 675: {;tcpv4.c: 677: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 16501  0C5F  3001               	movlw	1
 16502  0C60  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16503  0C61  3000               	movlw	0
 16504  0C62  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16505  0C63  3000               	movlw	0
 16506  0C64  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16507  0C65  3000               	movlw	0
 16508  0C66  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16509  0C67  0022               	movlb	2	; select bank2
 16510  0C68  086E               	movf	_currentTCB^(0+256),w
 16511  0C69  3E10               	addlw	16
 16512  0C6A  0086               	movwf	6
 16513  0C6B  3002               	movlw	2	; select bank4/5
 16514  0C6C  0087               	movwf	7
 16515  0C6D  3F40               	moviw [0]fsr1
 16516  0C6E  0021               	movlb	1	; select bank1
 16517  0C6F  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16518  0C70  3F41               	moviw [1]fsr1
 16519  0C71  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16520  0C72  3F42               	moviw [2]fsr1
 16521  0C73  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16522  0C74  3F43               	moviw [3]fsr1
 16523  0C75  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16524  0C76  0022               	movlb	2	; select bank2
 16525  0C77  086E               	movf	_currentTCB^(0+256),w
 16526  0C78  3E10               	addlw	16
 16527  0C79  0086               	movwf	6
 16528  0C7A  3002               	movlw	2	; select bank4/5
 16529  0C7B  0087               	movwf	7
 16530  0C7C  0021               	movlb	1	; select bank1
 16531  0C7D  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16532  0C7E  3FC0               	movwi [0]fsr1
 16533  0C7F  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16534  0C80  3FC1               	movwi [1]fsr1
 16535  0C81  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16536  0C82  3FC2               	movwi [2]fsr1
 16537  0C83  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16538  0C84  3FC3               	movwi [3]fsr1
 16539                           
 16540                           ;tcpv4.c: 678: currentTCB->flags = 0x10U;
 16541  0C85  3010               	movlw	16
 16542  0C86  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16543  0C87  0022               	movlb	2	; select bank2
 16544  0C88  086E               	movf	_currentTCB^(0+256),w
 16545  0C89  3E32               	addlw	50
 16546  0C8A  0086               	movwf	6
 16547  0C8B  3002               	movlw	2	; select bank4/5
 16548  0C8C  0087               	movwf	7
 16549  0C8D  0021               	movlb	1	; select bank1
 16550  0C8E  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16551  0C8F  0081               	movwf	1
 16552                           
 16553                           ;tcpv4.c: 681: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16554  0C90  0022               	movlb	2	; select bank2
 16555  0C91  086E               	movf	_currentTCB^(0+256),w
 16556  0C92  3E08               	addlw	8
 16557  0C93  0086               	movwf	6
 16558  0C94  3002               	movlw	2	; select bank4/5
 16559  0C95  0087               	movwf	7
 16560  0C96  0023               	movlb	3	; select bank3
 16561  0C97  0851               	movf	(_tcpHeader^(0+384)+4),w
 16562  0C98  3FC0               	movwi [0]fsr1
 16563  0C99  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 16564  0C9A  3FC1               	movwi [1]fsr1
 16565  0C9B  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 16566  0C9C  3FC2               	movwi [2]fsr1
 16567  0C9D  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 16568  0C9E  3FC3               	movwi [3]fsr1
 16569                           
 16570                           ;tcpv4.c: 683: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16571  0C9F  3001               	movlw	1
 16572  0CA0  0021               	movlb	1	; select bank1
 16573  0CA1  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16574  0CA2  3000               	movlw	0
 16575  0CA3  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16576  0CA4  3000               	movlw	0
 16577  0CA5  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16578  0CA6  3000               	movlw	0
 16579  0CA7  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16580  0CA8  3004               	movlw	4
 16581  0CA9  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16582  0CAA  0086               	movwf	6
 16583  0CAB  3001               	movlw	1	; select bank3/4
 16584  0CAC  0087               	movwf	7
 16585  0CAD  3F40               	moviw [0]fsr1
 16586  0CAE  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16587  0CAF  3F41               	moviw [1]fsr1
 16588  0CB0  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16589  0CB1  3F42               	moviw [2]fsr1
 16590  0CB2  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16591  0CB3  3F43               	moviw [3]fsr1
 16592  0CB4  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16593  0CB5  0022               	movlb	2	; select bank2
 16594  0CB6  086E               	movf	_currentTCB^(0+256),w
 16595  0CB7  3E0C               	addlw	12
 16596  0CB8  0086               	movwf	6
 16597  0CB9  3002               	movlw	2	; select bank4/5
 16598  0CBA  0087               	movwf	7
 16599  0CBB  0021               	movlb	1	; select bank1
 16600  0CBC  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16601  0CBD  3FC0               	movwi [0]fsr1
 16602  0CBE  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16603  0CBF  3FC1               	movwi [1]fsr1
 16604  0CC0  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16605  0CC1  3FC2               	movwi [2]fsr1
 16606  0CC2  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16607  0CC3  3FC3               	movwi [3]fsr1
 16608                           
 16609                           ;tcpv4.c: 685: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16610  0CC4  30FF               	movlw	255
 16611  0CC5  0023               	movlb	3	; select bank3
 16612  0CC6  055B               	andwf	(_tcpHeader^(0+384)+14),w
 16613  0CC7  0021               	movlb	1	; select bank1
 16614  0CC8  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16615  0CC9  3000               	movlw	0
 16616  0CCA  0023               	movlb	3	; select bank3
 16617  0CCB  055C               	andwf	((_tcpHeader+1)^(0+384)+14),w
 16618  0CCC  0021               	movlb	1	; select bank1
 16619  0CCD  00E1               	movwf	(??_TCP_FiniteStateMachine+1)^(0+128)
 16620  0CCE  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16621  0CCF  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16622  0CD0  01E0               	clrf	??_TCP_FiniteStateMachine^(0+128)
 16623  0CD1  300E               	movlw	14
 16624  0CD2  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16625  0CD3  0086               	movwf	6
 16626  0CD4  3001               	movlw	1	; select bank3/4
 16627  0CD5  0087               	movwf	7
 16628  0CD6  3F40               	moviw [0]fsr1
 16629  0CD7  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16630  0CD8  3F41               	moviw [1]fsr1
 16631  0CD9  00E4               	movwf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16632  0CDA  0864               	movf	((??_TCP_FiniteStateMachine+3)^(0+128)+1),w
 16633  0CDB  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16634  0CDC  01E4               	clrf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16635  0CDD  30FF               	movlw	255
 16636  0CDE  0563               	andwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16637  0CDF  00E5               	movwf	(??_TCP_FiniteStateMachine+5)^(0+128)
 16638  0CE0  3000               	movlw	0
 16639  0CE1  0564               	andwf	(??_TCP_FiniteStateMachine+4)^(0+128),w
 16640  0CE2  00E6               	movwf	(??_TCP_FiniteStateMachine+6)^(0+128)
 16641  0CE3  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16642  0CE4  0465               	iorwf	(??_TCP_FiniteStateMachine+5)^(0+128),w
 16643  0CE5  00E7               	movwf	(??_TCP_FiniteStateMachine+7)^(0+128)
 16644  0CE6  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16645  0CE7  0466               	iorwf	(??_TCP_FiniteStateMachine+6)^(0+128),w
 16646  0CE8  00E8               	movwf	(??_TCP_FiniteStateMachine+8)^(0+128)
 16647  0CE9  0022               	movlb	2	; select bank2
 16648  0CEA  086E               	movf	_currentTCB^(0+256),w
 16649  0CEB  3E18               	addlw	24
 16650  0CEC  0086               	movwf	6
 16651  0CED  3002               	movlw	2	; select bank4/5
 16652  0CEE  0087               	movwf	7
 16653  0CEF  0021               	movlb	1	; select bank1
 16654  0CF0  0867               	movf	(??_TCP_FiniteStateMachine+7)^(0+128),w
 16655  0CF1  3FC0               	movwi [0]fsr1
 16656  0CF2  0868               	movf	(??_TCP_FiniteStateMachine+8)^(0+128),w
 16657  0CF3  3FC1               	movwi [1]fsr1
 16658                           
 16659                           ;tcpv4.c: 686: currentTCB->mss = tcpMss;
 16660  0CF4  0022               	movlb	2	; select bank2
 16661  0CF5  086E               	movf	_currentTCB^(0+256),w
 16662  0CF6  3E1C               	addlw	28
 16663  0CF7  0086               	movwf	6
 16664  0CF8  3002               	movlw	2	; select bank4/5
 16665  0CF9  0087               	movwf	7
 16666  0CFA  0023               	movlb	3	; select bank3
 16667  0CFB  0865               	movf	_tcpMss^(0+384),w
 16668  0CFC  3FC0               	movwi [0]fsr1
 16669  0CFD  0866               	movf	(_tcpMss+1)^(0+384),w
 16670  0CFE  3FC1               	movwi [1]fsr1
 16671                           
 16672                           ;tcpv4.c: 688: if(TCP_Snd(currentTCB))
 16673  0CFF  0022               	movlb	2	; select bank2
 16674  0D00  086E               	movf	_currentTCB^(0+256),w
 16675  0D01  3194  24B7  318A   	fcall	_TCP_Snd
 16676  0D04  3A00               	xorlw	0
 16677  0D05  1903               	skipnz
 16678  0D06  2B86               	goto	L13
 16679  0D07  2F2A               	goto	L11
 16680  0D08                     l7532:	
 16681                           ;tcpv4.c: 691: currentTCB->socketState = SOCKET_CONNECTED;
 16682                           
 16683                           ;tcpv4.c: 689: {;tcpv4.c: 690: nextState = ESTABLISHED;
 16684                           
 16685                           
 16686                           ;tcpv4.c: 694: else;tcpv4.c: 695: {;tcpv4.c: 697: currentTCB->localSeqno = tcpHeader.ack
      +                          Number;
 16687  0D08  0022               	movlb	2	; select bank2
 16688  0D09  086E               	movf	_currentTCB^(0+256),w
 16689  0D0A  3E10               	addlw	16
 16690  0D0B  0086               	movwf	6
 16691  0D0C  3002               	movlw	2	; select bank4/5
 16692  0D0D  0087               	movwf	7
 16693  0D0E  0023               	movlb	3	; select bank3
 16694  0D0F  0855               	movf	(_tcpHeader^(0+384)+8),w
 16695  0D10  3FC0               	movwi [0]fsr1
 16696  0D11  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 16697  0D12  3FC1               	movwi [1]fsr1
 16698  0D13  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 16699  0D14  3FC2               	movwi [2]fsr1
 16700  0D15  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 16701  0D16  3FC3               	movwi [3]fsr1
 16702                           
 16703                           ;tcpv4.c: 698: currentTCB->flags = 0x04U | 0x10U;
 16704  0D17  3014               	movlw	20
 16705  0D18  0021               	movlb	1	; select bank1
 16706  0D19  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16707  0D1A  0022               	movlb	2	; select bank2
 16708  0D1B  086E               	movf	_currentTCB^(0+256),w
 16709  0D1C  3E32               	addlw	50
 16710  0D1D  0086               	movwf	6
 16711  0D1E  3002               	movlw	2	; select bank4/5
 16712  0D1F  0087               	movwf	7
 16713  0D20  0021               	movlb	1	; select bank1
 16714  0D21  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16715  0D22  0081               	movwf	1
 16716                           
 16717                           ;tcpv4.c: 699: if(TCP_Snd(currentTCB))
 16718  0D23  0022               	movlb	2	; select bank2
 16719  0D24  086E               	movf	_currentTCB^(0+256),w
 16720  0D25  3194  24B7  318A   	fcall	_TCP_Snd
 16721  0D28  3A00               	xorlw	0
 16722  0D29  1903               	skipnz
 16723  0D2A  2B86               	goto	L13
 16724                           
 16725                           ;tcpv4.c: 700: {;tcpv4.c: 701: nextState = CLOSE;
 16726  0D2B  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 16727                           
 16728                           ;tcpv4.c: 702: TCB_Reset(currentTCB);
 16729  0D2C  0022               	movlb	2	; select bank2
 16730  0D2D  086E               	movf	_currentTCB^(0+256),w
 16731  0D2E  3190  2001  318A   	fcall	_TCB_Reset
 16732  0D31  2B86               	goto	L13
 16733  0D32                     l7540:
 16734                           
 16735                           ;tcpv4.c: 708: currentTCB->timeout = 0;
 16736  0D32  0022               	movlb	2	; select bank2
 16737  0D33  086E               	movf	_currentTCB^(0+256),w
 16738  0D34  3E2D               	addlw	45
 16739  0D35  0086               	movwf	6
 16740  0D36  3002               	movlw	2	; select bank4/5
 16741  0D37  0087               	movwf	7
 16742  0D38  3000               	movlw	0
 16743  0D39  3FC0               	movwi [0]fsr1
 16744  0D3A  3FC1               	movwi [1]fsr1
 16745                           
 16746                           ;tcpv4.c: 710: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 16747  0D3B  3001               	movlw	1
 16748  0D3C  0021               	movlb	1	; select bank1
 16749  0D3D  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16750  0D3E  3000               	movlw	0
 16751  0D3F  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16752  0D40  3000               	movlw	0
 16753  0D41  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16754  0D42  3000               	movlw	0
 16755  0D43  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16756  0D44  0022               	movlb	2	; select bank2
 16757  0D45  086E               	movf	_currentTCB^(0+256),w
 16758  0D46  3E10               	addlw	16
 16759  0D47  0086               	movwf	6
 16760  0D48  3002               	movlw	2	; select bank4/5
 16761  0D49  0087               	movwf	7
 16762  0D4A  3F40               	moviw [0]fsr1
 16763  0D4B  0021               	movlb	1	; select bank1
 16764  0D4C  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16765  0D4D  3F41               	moviw [1]fsr1
 16766  0D4E  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16767  0D4F  3F42               	moviw [2]fsr1
 16768  0D50  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16769  0D51  3F43               	moviw [3]fsr1
 16770  0D52  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16771  0D53  0023               	movlb	3	; select bank3
 16772  0D54  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 16773  0D55  0021               	movlb	1	; select bank1
 16774  0D56  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16775  0D57  1D03               	skipz
 16776  0D58  2D69               	goto	u6305
 16777  0D59  0023               	movlb	3	; select bank3
 16778  0D5A  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 16779  0D5B  0021               	movlb	1	; select bank1
 16780  0D5C  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16781  0D5D  1D03               	skipz
 16782  0D5E  2D69               	goto	u6305
 16783  0D5F  0023               	movlb	3	; select bank3
 16784  0D60  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 16785  0D61  0021               	movlb	1	; select bank1
 16786  0D62  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16787  0D63  1D03               	skipz
 16788  0D64  2D69               	goto	u6305
 16789  0D65  0023               	movlb	3	; select bank3
 16790  0D66  0855               	movf	(_tcpHeader^(0+384)+8),w
 16791  0D67  0021               	movlb	1	; select bank1
 16792  0D68  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 16793  0D69                     u6305:
 16794  0D69  1D03               	skipz
 16795  0D6A  2E0C               	goto	l7548
 16796                           
 16797                           ;tcpv4.c: 711: {;tcpv4.c: 713: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 16798  0D6B  3001               	movlw	1
 16799  0D6C  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16800  0D6D  3000               	movlw	0
 16801  0D6E  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16802  0D6F  3000               	movlw	0
 16803  0D70  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16804  0D71  3000               	movlw	0
 16805  0D72  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16806  0D73  0022               	movlb	2	; select bank2
 16807  0D74  086E               	movf	_currentTCB^(0+256),w
 16808  0D75  3E10               	addlw	16
 16809  0D76  0086               	movwf	6
 16810  0D77  3002               	movlw	2	; select bank4/5
 16811  0D78  0087               	movwf	7
 16812  0D79  3F40               	moviw [0]fsr1
 16813  0D7A  0021               	movlb	1	; select bank1
 16814  0D7B  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16815  0D7C  3F41               	moviw [1]fsr1
 16816  0D7D  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16817  0D7E  3F42               	moviw [2]fsr1
 16818  0D7F  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16819  0D80  3F43               	moviw [3]fsr1
 16820  0D81  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16821  0D82  0022               	movlb	2	; select bank2
 16822  0D83  086E               	movf	_currentTCB^(0+256),w
 16823  0D84  3E10               	addlw	16
 16824  0D85  0086               	movwf	6
 16825  0D86  3002               	movlw	2	; select bank4/5
 16826  0D87  0087               	movwf	7
 16827  0D88  0021               	movlb	1	; select bank1
 16828  0D89  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16829  0D8A  3FC0               	movwi [0]fsr1
 16830  0D8B  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16831  0D8C  3FC1               	movwi [1]fsr1
 16832  0D8D  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16833  0D8E  3FC2               	movwi [2]fsr1
 16834  0D8F  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16835  0D90  3FC3               	movwi [3]fsr1
 16836                           
 16837                           ;tcpv4.c: 714: currentTCB->flags = 0x10U;
 16838  0D91  3010               	movlw	16
 16839  0D92  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16840  0D93  0022               	movlb	2	; select bank2
 16841  0D94  086E               	movf	_currentTCB^(0+256),w
 16842  0D95  3E32               	addlw	50
 16843  0D96  0086               	movwf	6
 16844  0D97  3002               	movlw	2	; select bank4/5
 16845  0D98  0087               	movwf	7
 16846  0D99  0021               	movlb	1	; select bank1
 16847  0D9A  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16848  0D9B  0081               	movwf	1
 16849                           
 16850                           ;tcpv4.c: 717: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 16851  0D9C  0022               	movlb	2	; select bank2
 16852  0D9D  086E               	movf	_currentTCB^(0+256),w
 16853  0D9E  3E08               	addlw	8
 16854  0D9F  0086               	movwf	6
 16855  0DA0  3002               	movlw	2	; select bank4/5
 16856  0DA1  0087               	movwf	7
 16857  0DA2  0023               	movlb	3	; select bank3
 16858  0DA3  0851               	movf	(_tcpHeader^(0+384)+4),w
 16859  0DA4  3FC0               	movwi [0]fsr1
 16860  0DA5  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 16861  0DA6  3FC1               	movwi [1]fsr1
 16862  0DA7  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 16863  0DA8  3FC2               	movwi [2]fsr1
 16864  0DA9  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 16865  0DAA  3FC3               	movwi [3]fsr1
 16866                           
 16867                           ;tcpv4.c: 718: currentTCB->remoteAck = tcpHeader.sequenceNumber + 1;
 16868  0DAB  3001               	movlw	1
 16869  0DAC  0021               	movlb	1	; select bank1
 16870  0DAD  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16871  0DAE  3000               	movlw	0
 16872  0DAF  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16873  0DB0  3000               	movlw	0
 16874  0DB1  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 16875  0DB2  3000               	movlw	0
 16876  0DB3  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 16877  0DB4  3004               	movlw	4
 16878  0DB5  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16879  0DB6  0086               	movwf	6
 16880  0DB7  3001               	movlw	1	; select bank3/4
 16881  0DB8  0087               	movwf	7
 16882  0DB9  3F40               	moviw [0]fsr1
 16883  0DBA  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 16884  0DBB  3F41               	moviw [1]fsr1
 16885  0DBC  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 16886  0DBD  3F42               	moviw [2]fsr1
 16887  0DBE  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 16888  0DBF  3F43               	moviw [3]fsr1
 16889  0DC0  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 16890  0DC1  0022               	movlb	2	; select bank2
 16891  0DC2  086E               	movf	_currentTCB^(0+256),w
 16892  0DC3  3E0C               	addlw	12
 16893  0DC4  0086               	movwf	6
 16894  0DC5  3002               	movlw	2	; select bank4/5
 16895  0DC6  0087               	movwf	7
 16896  0DC7  0021               	movlb	1	; select bank1
 16897  0DC8  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16898  0DC9  3FC0               	movwi [0]fsr1
 16899  0DCA  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16900  0DCB  3FC1               	movwi [1]fsr1
 16901  0DCC  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 16902  0DCD  3FC2               	movwi [2]fsr1
 16903  0DCE  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16904  0DCF  3FC3               	movwi [3]fsr1
 16905                           
 16906                           ;tcpv4.c: 720: currentTCB->remoteWnd = ((((uint16_t)tcpHeader.windowSize & (uint16_t)0xF
      +                          F00) >> 8) | (((uint16_t)tcpHeader.windowSize & (uint16_t)0x00FF) << 8));
 16907  0DD0  30FF               	movlw	255
 16908  0DD1  0023               	movlb	3	; select bank3
 16909  0DD2  055B               	andwf	(_tcpHeader^(0+384)+14),w
 16910  0DD3  0021               	movlb	1	; select bank1
 16911  0DD4  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16912  0DD5  3000               	movlw	0
 16913  0DD6  0023               	movlb	3	; select bank3
 16914  0DD7  055C               	andwf	((_tcpHeader+1)^(0+384)+14),w
 16915  0DD8  0021               	movlb	1	; select bank1
 16916  0DD9  00E1               	movwf	(??_TCP_FiniteStateMachine+1)^(0+128)
 16917  0DDA  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16918  0DDB  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 16919  0DDC  01E0               	clrf	??_TCP_FiniteStateMachine^(0+128)
 16920  0DDD  300E               	movlw	14
 16921  0DDE  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 16922  0DDF  0086               	movwf	6
 16923  0DE0  3001               	movlw	1	; select bank3/4
 16924  0DE1  0087               	movwf	7
 16925  0DE2  3F40               	moviw [0]fsr1
 16926  0DE3  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16927  0DE4  3F41               	moviw [1]fsr1
 16928  0DE5  00E4               	movwf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16929  0DE6  0864               	movf	((??_TCP_FiniteStateMachine+3)^(0+128)+1),w
 16930  0DE7  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 16931  0DE8  01E4               	clrf	((??_TCP_FiniteStateMachine+3)^(0+128)+1)
 16932  0DE9  30FF               	movlw	255
 16933  0DEA  0563               	andwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 16934  0DEB  00E5               	movwf	(??_TCP_FiniteStateMachine+5)^(0+128)
 16935  0DEC  3000               	movlw	0
 16936  0DED  0564               	andwf	(??_TCP_FiniteStateMachine+4)^(0+128),w
 16937  0DEE  00E6               	movwf	(??_TCP_FiniteStateMachine+6)^(0+128)
 16938  0DEF  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 16939  0DF0  0465               	iorwf	(??_TCP_FiniteStateMachine+5)^(0+128),w
 16940  0DF1  00E7               	movwf	(??_TCP_FiniteStateMachine+7)^(0+128)
 16941  0DF2  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 16942  0DF3  0466               	iorwf	(??_TCP_FiniteStateMachine+6)^(0+128),w
 16943  0DF4  00E8               	movwf	(??_TCP_FiniteStateMachine+8)^(0+128)
 16944  0DF5  0022               	movlb	2	; select bank2
 16945  0DF6  086E               	movf	_currentTCB^(0+256),w
 16946  0DF7  3E18               	addlw	24
 16947  0DF8  0086               	movwf	6
 16948  0DF9  3002               	movlw	2	; select bank4/5
 16949  0DFA  0087               	movwf	7
 16950  0DFB  0021               	movlb	1	; select bank1
 16951  0DFC  0867               	movf	(??_TCP_FiniteStateMachine+7)^(0+128),w
 16952  0DFD  3FC0               	movwi [0]fsr1
 16953  0DFE  0868               	movf	(??_TCP_FiniteStateMachine+8)^(0+128),w
 16954  0DFF  3FC1               	movwi [1]fsr1
 16955                           
 16956                           ;tcpv4.c: 721: currentTCB->mss = tcpMss;
 16957  0E00  0022               	movlb	2	; select bank2
 16958  0E01  086E               	movf	_currentTCB^(0+256),w
 16959  0E02  3E1C               	addlw	28
 16960  0E03  0086               	movwf	6
 16961  0E04  3002               	movlw	2	; select bank4/5
 16962  0E05  0087               	movwf	7
 16963  0E06  0023               	movlb	3	; select bank3
 16964  0E07  0865               	movf	_tcpMss^(0+384),w
 16965  0E08  3FC0               	movwi [0]fsr1
 16966  0E09  0866               	movf	(_tcpMss+1)^(0+384),w
 16967  0E0A  3FC1               	movwi [1]fsr1
 16968  0E0B  2FEF               	goto	L9
 16969  0E0C                     l7548:	
 16970                           ;tcpv4.c: 725: }
 16971                           
 16972                           ;tcpv4.c: 724: currentTCB->socketState = SOCKET_CONNECTED;
 16973                           
 16974                           ;tcpv4.c: 723: nextState = ESTABLISHED;
 16975                           
 16976                           
 16977                           ;tcpv4.c: 726: else;tcpv4.c: 727: {;tcpv4.c: 729: currentTCB->localSeqno = tcpHeader.ack
      +                          Number;
 16978  0E0C  0022               	movlb	2	; select bank2
 16979  0E0D  086E               	movf	_currentTCB^(0+256),w
 16980  0E0E  3E10               	addlw	16
 16981  0E0F  0086               	movwf	6
 16982  0E10  3002               	movlw	2	; select bank4/5
 16983  0E11  0087               	movwf	7
 16984  0E12  0023               	movlb	3	; select bank3
 16985  0E13  0855               	movf	(_tcpHeader^(0+384)+8),w
 16986  0E14  3FC0               	movwi [0]fsr1
 16987  0E15  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 16988  0E16  3FC1               	movwi [1]fsr1
 16989  0E17  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 16990  0E18  3FC2               	movwi [2]fsr1
 16991  0E19  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 16992  0E1A  3FC3               	movwi [3]fsr1
 16993                           
 16994                           ;tcpv4.c: 730: currentTCB->flags = 0x04U;
 16995  0E1B  3004               	movlw	4
 16996  0E1C  0021               	movlb	1	; select bank1
 16997  0E1D  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 16998  0E1E  0022               	movlb	2	; select bank2
 16999  0E1F  086E               	movf	_currentTCB^(0+256),w
 17000  0E20  3E32               	addlw	50
 17001  0E21  0086               	movwf	6
 17002  0E22  3002               	movlw	2	; select bank4/5
 17003  0E23  0087               	movwf	7
 17004  0E24  0021               	movlb	1	; select bank1
 17005  0E25  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 17006  0E26  0081               	movwf	1
 17007                           
 17008                           ;tcpv4.c: 731: if(TCP_Snd(currentTCB))
 17009  0E27  0022               	movlb	2	; select bank2
 17010  0E28  086E               	movf	_currentTCB^(0+256),w
 17011  0E29  3194  24B7  318A   	fcall	_TCP_Snd
 17012  0E2C  3A00               	xorlw	0
 17013  0E2D  1903               	skipnz
 17014  0E2E  2B86               	goto	L13
 17015                           
 17016                           ;tcpv4.c: 732: {;tcpv4.c: 733: nextState = CLOSE;
 17017  0E2F  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 17018                           
 17019                           ;tcpv4.c: 734: TCB_Reset(currentTCB);
 17020  0E30  0022               	movlb	2	; select bank2
 17021  0E31  086E               	movf	_currentTCB^(0+256),w
 17022  0E32  3190  2001  318A   	fcall	_TCB_Reset
 17023  0E35  2B86               	goto	L13
 17024  0E36                     l7556:
 17025                           
 17026                           ;tcpv4.c: 740: nextState = CLOSED;
 17027  0E36  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 17028                           
 17029                           ;tcpv4.c: 741: TCB_Reset(currentTCB);
 17030  0E37  0022               	movlb	2	; select bank2
 17031  0E38  086E               	movf	_currentTCB^(0+256),w
 17032  0E39  3190  2001  318A   	fcall	_TCB_Reset
 17033                           
 17034                           ;tcpv4.c: 742: break;
 17035  0E3C  2B86               	goto	L13
 17036  0E3D                     l7560:
 17037                           
 17038                           ;tcpv4.c: 746: if (currentTCB->timeoutsCount)
 17039  0E3D  0022               	movlb	2	; select bank2
 17040  0E3E  086E               	movf	_currentTCB^(0+256),w
 17041  0E3F  3E31               	addlw	49
 17042  0E40  0086               	movwf	6
 17043  0E41  3002               	movlw	2	; select bank4/5
 17044  0E42  0087               	movwf	7
 17045  0E43  0801               	movf	1,w
 17046  0E44  1903               	btfsc	3,2
 17047  0E45  2E65               	goto	l7576
 17048                           
 17049                           ;tcpv4.c: 747: {;tcpv4.c: 748: if(TCP_Snd(currentTCB))
 17050  0E46  086E               	movf	_currentTCB^(0+256),w
 17051  0E47  3194  24B7  318A   	fcall	_TCP_Snd
 17052  0E4A  3A00               	xorlw	0
 17053  0E4B  1903               	skipnz
 17054  0E4C  2B86               	goto	L13
 17055                           
 17056                           ;tcpv4.c: 749: {;tcpv4.c: 750: if (currentTCB->flags & 0x04U)
 17057  0E4D  0022               	movlb	2	; select bank2
 17058  0E4E  086E               	movf	_currentTCB^(0+256),w
 17059  0E4F  3E32               	addlw	50
 17060  0E50  0086               	movwf	6
 17061  0E51  3002               	movlw	2	; select bank4/5
 17062  0E52  0087               	movwf	7
 17063  0E53  1D01               	btfss	1,2
 17064  0E54  2E5D               	goto	l7570
 17065                           
 17066                           ;tcpv4.c: 751: {;tcpv4.c: 752: nextState = CLOSE;
 17067  0E55  0021               	movlb	1	; select bank1
 17068  0E56  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 17069                           
 17070                           ;tcpv4.c: 753: TCB_Reset(currentTCB);
 17071  0E57  0022               	movlb	2	; select bank2
 17072  0E58  086E               	movf	_currentTCB^(0+256),w
 17073  0E59  3190  2001  318A   	fcall	_TCB_Reset
 17074                           
 17075                           ;tcpv4.c: 754: }else
 17076  0E5C  2B86               	goto	L13
 17077  0E5D                     l7570:
 17078                           
 17079                           ;tcpv4.c: 755: if(currentTCB->flags & 0x10U)
 17080  0E5D  086E               	movf	_currentTCB^(0+256),w
 17081  0E5E  3E32               	addlw	50
 17082  0E5F  0086               	movwf	6
 17083  0E60  3002               	movlw	2	; select bank4/5
 17084  0E61  0087               	movwf	7
 17085  0E62  1E01               	btfss	1,4
 17086  0E63  2B86               	goto	L13
 17087  0E64  2FEF               	goto	L9
 17088  0E65                     l7576:	
 17089                           ;tcpv4.c: 758: currentTCB->socketState = SOCKET_CONNECTED;
 17090                           
 17091                           ;tcpv4.c: 756: {;tcpv4.c: 757: nextState = ESTABLISHED;
 17092                           
 17093                           
 17094                           ;tcpv4.c: 762: {;tcpv4.c: 764: currentTCB->flags = 0x04U;
 17095  0E65  3004               	movlw	4
 17096  0E66  0021               	movlb	1	; select bank1
 17097  0E67  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17098  0E68  0022               	movlb	2	; select bank2
 17099  0E69  086E               	movf	_currentTCB^(0+256),w
 17100  0E6A  3E32               	addlw	50
 17101  0E6B  0086               	movwf	6
 17102  0E6C  3002               	movlw	2	; select bank4/5
 17103  0E6D  0087               	movwf	7
 17104  0E6E  0021               	movlb	1	; select bank1
 17105  0E6F  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 17106  0E70  0081               	movwf	1
 17107                           
 17108                           ;tcpv4.c: 765: if(TCP_Snd(currentTCB))
 17109  0E71  0022               	movlb	2	; select bank2
 17110  0E72  086E               	movf	_currentTCB^(0+256),w
 17111  0E73  3194  24B7  318A   	fcall	_TCP_Snd
 17112  0E76  3A00               	xorlw	0
 17113  0E77  1903               	skipnz
 17114  0E78  2B86               	goto	L13
 17115                           
 17116                           ;tcpv4.c: 766: {;tcpv4.c: 767: nextState = CLOSE;
 17117  0E79  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 17118                           
 17119                           ;tcpv4.c: 768: TCB_Reset(currentTCB);
 17120  0E7A  0022               	movlb	2	; select bank2
 17121  0E7B  086E               	movf	_currentTCB^(0+256),w
 17122  0E7C  3190  2001  318A   	fcall	_TCB_Reset
 17123  0E7F  2B86               	goto	L13
 17124  0E80                     l7584:
 17125                           
 17126                           ;tcpv4.c: 773: case RCV_RSTACK:;tcpv4.c: 775: nextState = CLOSED;
 17127  0E80  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 17128                           
 17129                           ;tcpv4.c: 776: TCB_Reset(currentTCB);
 17130  0E81  0022               	movlb	2	; select bank2
 17131  0E82  086E               	movf	_currentTCB^(0+256),w
 17132  0E83  3190  2001  318A   	fcall	_TCB_Reset
 17133                           
 17134                           ;tcpv4.c: 777: break;
 17135  0E86  2B86               	goto	L13
 17136  0E87                     l7590:
 17137  0E87  0021               	movlb	1	; select bank1
 17138  0E88  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 17139                           
 17140                           ; Switch size 1, requested type "simple"
 17141                           ; Number of cases is 7, Range of values is 0 to 12
 17142                           ; switch strategies available:
 17143                           ; Name         Instructions Cycles
 17144                           ; simple_byte           22    12 (average)
 17145                           ; direct_byte           32     6 (fixed)
 17146                           ; jumptable            260     6 (fixed)
 17147                           ;	Chosen strategy is simple_byte
 17148  0E89  3A00               	xorlw	0	; case 0
 17149  0E8A  1903               	skipnz
 17150  0E8B  2E36               	goto	l7556
 17151  0E8C  3A03               	xorlw	3	; case 3
 17152  0E8D  1903               	skipnz
 17153  0E8E  2B92               	goto	l7516
 17154  0E8F  3A07               	xorlw	7	; case 4
 17155  0E90  1903               	skipnz
 17156  0E91  2D32               	goto	l7540
 17157  0E92  3A01               	xorlw	1	; case 5
 17158  0E93  1903               	skipnz
 17159  0E94  2C26               	goto	l7522
 17160  0E95  3A0C               	xorlw	12	; case 9
 17161  0E96  1903               	skipnz
 17162  0E97  2E80               	goto	l7584
 17163  0E98  3A03               	xorlw	3	; case 10
 17164  0E99  1903               	skipnz
 17165  0E9A  2E80               	goto	l7584
 17166  0E9B  3A06               	xorlw	6	; case 12
 17167  0E9C  1903               	skipnz
 17168  0E9D  2E3D               	goto	l7560
 17169  0E9E  2B86               	goto	L13
 17170  0E9F                     l7592:
 17171                           
 17172                           ;tcpv4.c: 787: if (currentTCB->localPort == tcpHeader.destPort)
 17173  0E9F  0022               	movlb	2	; select bank2
 17174  0EA0  086E               	movf	_currentTCB^(0+256),w
 17175  0EA1  0086               	movwf	6
 17176  0EA2  3002               	movlw	2	; select bank4/5
 17177  0EA3  0087               	movwf	7
 17178  0EA4  3F40               	moviw [0]fsr1
 17179  0EA5  0021               	movlb	1	; select bank1
 17180  0EA6  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17181  0EA7  3F41               	moviw [1]fsr1
 17182  0EA8  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17183  0EA9  0023               	movlb	3	; select bank3
 17184  0EAA  0850               	movf	((_tcpHeader+1)^(0+384)+2),w
 17185  0EAB  0021               	movlb	1	; select bank1
 17186  0EAC  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17187  0EAD  1D03               	skipz
 17188  0EAE  2EB3               	goto	u6375
 17189  0EAF  0023               	movlb	3	; select bank3
 17190  0EB0  084F               	movf	(_tcpHeader^(0+384)+2),w
 17191  0EB1  0021               	movlb	1	; select bank1
 17192  0EB2  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17193  0EB3                     u6375:
 17194  0EB3  1D03               	skipz
 17195  0EB4  2B86               	goto	L13
 17196                           
 17197                           ;tcpv4.c: 788: {;tcpv4.c: 790: currentTCB->timeout = 0;
 17198  0EB5  0022               	movlb	2	; select bank2
 17199  0EB6  086E               	movf	_currentTCB^(0+256),w
 17200  0EB7  3E2D               	addlw	45
 17201  0EB8  0086               	movwf	6
 17202  0EB9  3002               	movlw	2	; select bank4/5
 17203  0EBA  0087               	movwf	7
 17204  0EBB  3000               	movlw	0
 17205  0EBC  3FC0               	movwi [0]fsr1
 17206  0EBD  3FC1               	movwi [1]fsr1
 17207                           
 17208                           ;tcpv4.c: 794: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 17209  0EBE  086E               	movf	_currentTCB^(0+256),w
 17210  0EBF  3E02               	addlw	2
 17211  0EC0  0086               	movwf	6
 17212  0EC1  3002               	movlw	2	; select bank4/5
 17213  0EC2  0087               	movwf	7
 17214  0EC3  3F40               	moviw [0]fsr1
 17215  0EC4  0021               	movlb	1	; select bank1
 17216  0EC5  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17217  0EC6  3F41               	moviw [1]fsr1
 17218  0EC7  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17219  0EC8  3F42               	moviw [2]fsr1
 17220  0EC9  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 17221  0ECA  3F43               	moviw [3]fsr1
 17222  0ECB  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 17223  0ECC  0023               	movlb	3	; select bank3
 17224  0ECD  0823               	movf	(_receivedRemoteAddress+3)^(0+384),w
 17225  0ECE  0021               	movlb	1	; select bank1
 17226  0ECF  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 17227  0ED0  1D03               	skipz
 17228  0ED1  2EE2               	goto	u6385
 17229  0ED2  0023               	movlb	3	; select bank3
 17230  0ED3  0822               	movf	(_receivedRemoteAddress+2)^(0+384),w
 17231  0ED4  0021               	movlb	1	; select bank1
 17232  0ED5  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 17233  0ED6  1D03               	skipz
 17234  0ED7  2EE2               	goto	u6385
 17235  0ED8  0023               	movlb	3	; select bank3
 17236  0ED9  0821               	movf	(_receivedRemoteAddress+1)^(0+384),w
 17237  0EDA  0021               	movlb	1	; select bank1
 17238  0EDB  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17239  0EDC  1D03               	skipz
 17240  0EDD  2EE2               	goto	u6385
 17241  0EDE  0023               	movlb	3	; select bank3
 17242  0EDF  0820               	movf	_receivedRemoteAddress^(0+384),w
 17243  0EE0  0021               	movlb	1	; select bank1
 17244  0EE1  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17245  0EE2                     u6385:
 17246  0EE2  1D03               	skipz
 17247  0EE3  2FF4               	goto	l7616
 17248  0EE4  0022               	movlb	2	; select bank2
 17249  0EE5  086E               	movf	_currentTCB^(0+256),w
 17250  0EE6  3E06               	addlw	6
 17251  0EE7  0086               	movwf	6
 17252  0EE8  3002               	movlw	2	; select bank4/5
 17253  0EE9  0087               	movwf	7
 17254  0EEA  3F40               	moviw [0]fsr1
 17255  0EEB  0021               	movlb	1	; select bank1
 17256  0EEC  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17257  0EED  3F41               	moviw [1]fsr1
 17258  0EEE  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17259  0EEF  0023               	movlb	3	; select bank3
 17260  0EF0  084E               	movf	(_tcpHeader+1)^(0+384),w
 17261  0EF1  0021               	movlb	1	; select bank1
 17262  0EF2  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17263  0EF3  1D03               	skipz
 17264  0EF4  2EF9               	goto	u6395
 17265  0EF5  0023               	movlb	3	; select bank3
 17266  0EF6  084D               	movf	_tcpHeader^(0+384),w
 17267  0EF7  0021               	movlb	1	; select bank1
 17268  0EF8  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17269  0EF9                     u6395:
 17270  0EF9  1D03               	skipz
 17271  0EFA  2FF4               	goto	l7616
 17272                           
 17273                           ;tcpv4.c: 795: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17274  0EFB  3001               	movlw	1
 17275  0EFC  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17276  0EFD  3000               	movlw	0
 17277  0EFE  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17278  0EFF  3000               	movlw	0
 17279  0F00  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 17280  0F01  3000               	movlw	0
 17281  0F02  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 17282  0F03  0022               	movlb	2	; select bank2
 17283  0F04  086E               	movf	_currentTCB^(0+256),w
 17284  0F05  3E10               	addlw	16
 17285  0F06  0086               	movwf	6
 17286  0F07  3002               	movlw	2	; select bank4/5
 17287  0F08  0087               	movwf	7
 17288  0F09  3F40               	moviw [0]fsr1
 17289  0F0A  0021               	movlb	1	; select bank1
 17290  0F0B  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 17291  0F0C  3F41               	moviw [1]fsr1
 17292  0F0D  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 17293  0F0E  3F42               	moviw [2]fsr1
 17294  0F0F  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 17295  0F10  3F43               	moviw [3]fsr1
 17296  0F11  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 17297  0F12  0023               	movlb	3	; select bank3
 17298  0F13  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 17299  0F14  0021               	movlb	1	; select bank1
 17300  0F15  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 17301  0F16  1D03               	skipz
 17302  0F17  2F28               	goto	u6405
 17303  0F18  0023               	movlb	3	; select bank3
 17304  0F19  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 17305  0F1A  0021               	movlb	1	; select bank1
 17306  0F1B  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 17307  0F1C  1D03               	skipz
 17308  0F1D  2F28               	goto	u6405
 17309  0F1E  0023               	movlb	3	; select bank3
 17310  0F1F  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 17311  0F20  0021               	movlb	1	; select bank1
 17312  0F21  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17313  0F22  1D03               	skipz
 17314  0F23  2F28               	goto	u6405
 17315  0F24  0023               	movlb	3	; select bank3
 17316  0F25  0855               	movf	(_tcpHeader^(0+384)+8),w
 17317  0F26  0021               	movlb	1	; select bank1
 17318  0F27  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17319  0F28                     u6405:
 17320  0F28  1D03               	skipz
 17321  0F29  2FF4               	goto	l7616
 17322  0F2A                     L11:
 17323                           
 17324                           ;tcpv4.c: 797: nextState = ESTABLISHED;
 17325  0F2A  3004               	movlw	4
 17326  0F2B  2FF1               	goto	L10
 17327  0F2C                     l7604:	
 17328                           ;tcpv4.c: 798: currentTCB->socketState = SOCKET_CONNECTED;
 17329                           
 17330                           
 17331                           ;tcpv4.c: 805: if ((currentTCB->destIP == receivedRemoteAddress) && (currentTCB->destPor
      +                          t == tcpHeader.sourcePort))
 17332  0F2C  0022               	movlb	2	; select bank2
 17333  0F2D  086E               	movf	_currentTCB^(0+256),w
 17334  0F2E  3E02               	addlw	2
 17335  0F2F  0086               	movwf	6
 17336  0F30  3002               	movlw	2	; select bank4/5
 17337  0F31  0087               	movwf	7
 17338  0F32  3F40               	moviw [0]fsr1
 17339  0F33  0021               	movlb	1	; select bank1
 17340  0F34  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17341  0F35  3F41               	moviw [1]fsr1
 17342  0F36  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17343  0F37  3F42               	moviw [2]fsr1
 17344  0F38  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 17345  0F39  3F43               	moviw [3]fsr1
 17346  0F3A  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 17347  0F3B  0023               	movlb	3	; select bank3
 17348  0F3C  0823               	movf	(_receivedRemoteAddress+3)^(0+384),w
 17349  0F3D  0021               	movlb	1	; select bank1
 17350  0F3E  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 17351  0F3F  1D03               	skipz
 17352  0F40  2F51               	goto	u6415
 17353  0F41  0023               	movlb	3	; select bank3
 17354  0F42  0822               	movf	(_receivedRemoteAddress+2)^(0+384),w
 17355  0F43  0021               	movlb	1	; select bank1
 17356  0F44  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 17357  0F45  1D03               	skipz
 17358  0F46  2F51               	goto	u6415
 17359  0F47  0023               	movlb	3	; select bank3
 17360  0F48  0821               	movf	(_receivedRemoteAddress+1)^(0+384),w
 17361  0F49  0021               	movlb	1	; select bank1
 17362  0F4A  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17363  0F4B  1D03               	skipz
 17364  0F4C  2F51               	goto	u6415
 17365  0F4D  0023               	movlb	3	; select bank3
 17366  0F4E  0820               	movf	_receivedRemoteAddress^(0+384),w
 17367  0F4F  0021               	movlb	1	; select bank1
 17368  0F50  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17369  0F51                     u6415:
 17370  0F51  1D03               	skipz
 17371  0F52  2B86               	goto	L13
 17372  0F53  0022               	movlb	2	; select bank2
 17373  0F54  086E               	movf	_currentTCB^(0+256),w
 17374  0F55  3E06               	addlw	6
 17375  0F56  0086               	movwf	6
 17376  0F57  3002               	movlw	2	; select bank4/5
 17377  0F58  0087               	movwf	7
 17378  0F59  3F40               	moviw [0]fsr1
 17379  0F5A  0021               	movlb	1	; select bank1
 17380  0F5B  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17381  0F5C  3F41               	moviw [1]fsr1
 17382  0F5D  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17383  0F5E  0023               	movlb	3	; select bank3
 17384  0F5F  084E               	movf	(_tcpHeader+1)^(0+384),w
 17385  0F60  0021               	movlb	1	; select bank1
 17386  0F61  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17387  0F62  1D03               	skipz
 17388  0F63  2F68               	goto	u6425
 17389  0F64  0023               	movlb	3	; select bank3
 17390  0F65  084D               	movf	_tcpHeader^(0+384),w
 17391  0F66  0021               	movlb	1	; select bank1
 17392  0F67  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17393  0F68                     u6425:
 17394  0F68  1D03               	skipz
 17395  0F69  2B86               	goto	L13
 17396                           
 17397                           ;tcpv4.c: 806: {;tcpv4.c: 809: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 17398  0F6A  0022               	movlb	2	; select bank2
 17399  0F6B  086E               	movf	_currentTCB^(0+256),w
 17400  0F6C  3E0C               	addlw	12
 17401  0F6D  0086               	movwf	6
 17402  0F6E  3002               	movlw	2	; select bank4/5
 17403  0F6F  0087               	movwf	7
 17404  0F70  3F40               	moviw [0]fsr1
 17405  0F71  0021               	movlb	1	; select bank1
 17406  0F72  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17407  0F73  3F41               	moviw [1]fsr1
 17408  0F74  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17409  0F75  3F42               	moviw [2]fsr1
 17410  0F76  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 17411  0F77  3F43               	moviw [3]fsr1
 17412  0F78  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 17413  0F79  0023               	movlb	3	; select bank3
 17414  0F7A  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 17415  0F7B  0021               	movlb	1	; select bank1
 17416  0F7C  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 17417  0F7D  1D03               	skipz
 17418  0F7E  2F8F               	goto	u6435
 17419  0F7F  0023               	movlb	3	; select bank3
 17420  0F80  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 17421  0F81  0021               	movlb	1	; select bank1
 17422  0F82  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 17423  0F83  1D03               	skipz
 17424  0F84  2F8F               	goto	u6435
 17425  0F85  0023               	movlb	3	; select bank3
 17426  0F86  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 17427  0F87  0021               	movlb	1	; select bank1
 17428  0F88  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17429  0F89  1D03               	skipz
 17430  0F8A  2F8F               	goto	u6435
 17431  0F8B  0023               	movlb	3	; select bank3
 17432  0F8C  0851               	movf	(_tcpHeader^(0+384)+4),w
 17433  0F8D  0021               	movlb	1	; select bank1
 17434  0F8E  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17435  0F8F                     u6435:
 17436  0F8F  1D03               	skipz
 17437  0F90  2B86               	goto	L13
 17438                           
 17439                           ;tcpv4.c: 810: {;tcpv4.c: 812: if ((currentTCB->localSeqno + 1) == tcpHeader.ackNumber)
 17440  0F91  3001               	movlw	1
 17441  0F92  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17442  0F93  3000               	movlw	0
 17443  0F94  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17444  0F95  3000               	movlw	0
 17445  0F96  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 17446  0F97  3000               	movlw	0
 17447  0F98  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 17448  0F99  0022               	movlb	2	; select bank2
 17449  0F9A  086E               	movf	_currentTCB^(0+256),w
 17450  0F9B  3E10               	addlw	16
 17451  0F9C  0086               	movwf	6
 17452  0F9D  3002               	movlw	2	; select bank4/5
 17453  0F9E  0087               	movwf	7
 17454  0F9F  3F40               	moviw [0]fsr1
 17455  0FA0  0021               	movlb	1	; select bank1
 17456  0FA1  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 17457  0FA2  3F41               	moviw [1]fsr1
 17458  0FA3  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 17459  0FA4  3F42               	moviw [2]fsr1
 17460  0FA5  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 17461  0FA6  3F43               	moviw [3]fsr1
 17462  0FA7  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 17463  0FA8  0023               	movlb	3	; select bank3
 17464  0FA9  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 17465  0FAA  0021               	movlb	1	; select bank1
 17466  0FAB  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 17467  0FAC  1D03               	skipz
 17468  0FAD  2FBE               	goto	u6445
 17469  0FAE  0023               	movlb	3	; select bank3
 17470  0FAF  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 17471  0FB0  0021               	movlb	1	; select bank1
 17472  0FB1  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 17473  0FB2  1D03               	skipz
 17474  0FB3  2FBE               	goto	u6445
 17475  0FB4  0023               	movlb	3	; select bank3
 17476  0FB5  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 17477  0FB6  0021               	movlb	1	; select bank1
 17478  0FB7  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17479  0FB8  1D03               	skipz
 17480  0FB9  2FBE               	goto	u6445
 17481  0FBA  0023               	movlb	3	; select bank3
 17482  0FBB  0855               	movf	(_tcpHeader^(0+384)+8),w
 17483  0FBC  0021               	movlb	1	; select bank1
 17484  0FBD  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 17485  0FBE                     u6445:
 17486  0FBE  1D03               	skipz
 17487  0FBF  2B86               	goto	L13
 17488                           
 17489                           ;tcpv4.c: 813: {;tcpv4.c: 814: currentTCB->localSeqno = currentTCB->localSeqno + 1;
 17490  0FC0  3001               	movlw	1
 17491  0FC1  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17492  0FC2  3000               	movlw	0
 17493  0FC3  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 17494  0FC4  3000               	movlw	0
 17495  0FC5  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 17496  0FC6  3000               	movlw	0
 17497  0FC7  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 17498  0FC8  0022               	movlb	2	; select bank2
 17499  0FC9  086E               	movf	_currentTCB^(0+256),w
 17500  0FCA  3E10               	addlw	16
 17501  0FCB  0086               	movwf	6
 17502  0FCC  3002               	movlw	2	; select bank4/5
 17503  0FCD  0087               	movwf	7
 17504  0FCE  3F40               	moviw [0]fsr1
 17505  0FCF  0021               	movlb	1	; select bank1
 17506  0FD0  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 17507  0FD1  3F41               	moviw [1]fsr1
 17508  0FD2  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 17509  0FD3  3F42               	moviw [2]fsr1
 17510  0FD4  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 17511  0FD5  3F43               	moviw [3]fsr1
 17512  0FD6  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 17513  0FD7  0022               	movlb	2	; select bank2
 17514  0FD8  086E               	movf	_currentTCB^(0+256),w
 17515  0FD9  3E10               	addlw	16
 17516  0FDA  0086               	movwf	6
 17517  0FDB  3002               	movlw	2	; select bank4/5
 17518  0FDC  0087               	movwf	7
 17519  0FDD  0021               	movlb	1	; select bank1
 17520  0FDE  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 17521  0FDF  3FC0               	movwi [0]fsr1
 17522  0FE0  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 17523  0FE1  3FC1               	movwi [1]fsr1
 17524  0FE2  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 17525  0FE3  3FC2               	movwi [2]fsr1
 17526  0FE4  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 17527  0FE5  3FC3               	movwi [3]fsr1
 17528                           
 17529                           ;tcpv4.c: 816: currentTCB->timeout = 0;
 17530  0FE6  0022               	movlb	2	; select bank2
 17531  0FE7  086E               	movf	_currentTCB^(0+256),w
 17532  0FE8  3E2D               	addlw	45
 17533  0FE9  0086               	movwf	6
 17534  0FEA  3002               	movlw	2	; select bank4/5
 17535  0FEB  0087               	movwf	7
 17536  0FEC  3000               	movlw	0
 17537  0FED  3FC0               	movwi [0]fsr1
 17538  0FEE  3FC1               	movwi [1]fsr1
 17539  0FEF                     L9:
 17540                           
 17541                           ;tcpv4.c: 818: nextState = ESTABLISHED;
 17542  0FEF  3004               	movlw	4
 17543  0FF0  0021               	movlb	1	; select bank1
 17544  0FF1                     L10:
 17545  0FF1  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17546  0FF2  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 17547  0FF3  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 17548  0FF4                     l7616:
 17549                           
 17550                           ;tcpv4.c: 819: currentTCB->socketState = SOCKET_CONNECTED;
 17551  0FF4  3003               	movlw	3
 17552  0FF5  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 17553  0FF6  0022               	movlb	2	; select bank2
 17554  0FF7  086E               	movf	_currentTCB^(0+256),w
 17555  0FF8  3E33               	addlw	51
 17556  0FF9  0086               	movwf	6
 17557  0FFA  3002               	movlw	2	; select bank4/5
 17558  0FFB  0087               	movwf	7
 17559  0FFC  0021               	movlb	1	; select bank1
 17560  0FFD  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 17561  0FFE  0081               	movwf	1
 17562  0FFF  2B86               	goto	L13
 17563                           
 17564                           	psect	text68
 17565  296E                     __ptext68:	
 17566 ;; *************** function _resetPortUnreachable *****************
 17567 ;; Defined at:
 17568 ;;		line 171 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;		None
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;		None
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      void 
 17575 ;; Registers used:
 17576 ;;		status,2
 17577 ;; Tracked objects:
 17578 ;;		On entry : 1F/1
 17579 ;;		On exit  : 1F/3
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17586 ;;Total ram usage:        0 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:    3
 17589 ;; This function calls:
 17590 ;;		Nothing
 17591 ;; This function is called by:
 17592 ;;		_TCP_FiniteStateMachine
 17593 ;; This function uses a non-reentrant model
 17594 ;;
 17595                           
 17596                           
 17597                           ;psect for function _resetPortUnreachable
 17598  296E                     _resetPortUnreachable:
 17599                           
 17600                           ;icmp.c: 173: portUnreachable = 0;
 17601                           
 17602                           ;incstack = 0
 17603                           ; Regs used in _resetPortUnreachable: [status,2]
 17604  296E  0023               	movlb	3	; select bank3
 17605  296F  01AA               	clrf	_portUnreachable^(0+384)
 17606  2970  01AB               	clrf	(_portUnreachable+1)^(0+384)
 17607  2971  0008               	return
 17608  2972                     __end_of_resetPortUnreachable:
 17609                           
 17610                           	psect	text69
 17611  29EF                     __ptext69:	
 17612 ;; *************** function _isPortUnreachable *****************
 17613 ;; Defined at:
 17614 ;;		line 163 in file "mcc_generated_files/TCPIPLibrary/icmp.c"
 17615 ;; Parameters:    Size  Location     Type
 17616 ;;  port            2    0[COMMON] unsigned int 
 17617 ;; Auto vars:     Size  Location     Type
 17618 ;;		None
 17619 ;; Return value:  Size  Location     Type
 17620 ;;                  1    wreg      unsigned char 
 17621 ;; Registers used:
 17622 ;;		wreg
 17623 ;; Tracked objects:
 17624 ;;		On entry : 1F/2
 17625 ;;		On exit  : 1F/3
 17626 ;;		Unchanged: 0/0
 17627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17631 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17632 ;;Total ram usage:        2 bytes
 17633 ;; Hardware stack levels used:    1
 17634 ;; Hardware stack levels required when called:    3
 17635 ;; This function calls:
 17636 ;;		Nothing
 17637 ;; This function is called by:
 17638 ;;		_TCP_FiniteStateMachine
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           
 17643                           ;psect for function _isPortUnreachable
 17644  29EF                     _isPortUnreachable:
 17645                           
 17646                           ;icmp.c: 165: if(portUnreachable==port)
 17647                           
 17648                           ;incstack = 0
 17649                           ; Regs used in _isPortUnreachable: [wreg]
 17650  29EF  0871               	movf	isPortUnreachable@port+1,w
 17651  29F0  0023               	movlb	3	; select bank3
 17652  29F1  062B               	xorwf	(_portUnreachable+1)^(0+384),w
 17653  29F2  1D03               	skipz
 17654  29F3  29F6               	goto	u3445
 17655  29F4  0870               	movf	isPortUnreachable@port,w
 17656  29F5  062A               	xorwf	_portUnreachable^(0+384),w
 17657  29F6                     u3445:
 17658  29F6  1D03               	skipz
 17659  29F7  29FA               	goto	l5376
 17660                           
 17661                           ;icmp.c: 166: return 1;
 17662  29F8  3001               	movlw	1
 17663  29F9  0008               	return
 17664  29FA                     l5376:
 17665                           
 17666                           ;icmp.c: 167: else;icmp.c: 168: return 0;
 17667  29FA  3000               	movlw	0
 17668  29FB  0008               	return
 17669  29FC                     __end_of_isPortUnreachable:
 17670                           
 17671                           	psect	text70
 17672  2680                     __ptext70:	
 17673 ;; *************** function _TCP_PayloadSave *****************
 17674 ;; Defined at:
 17675 ;;		line 314 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;  len             2   77[BANK0 ] unsigned int 
 17678 ;; Auto vars:     Size  Location     Type
 17679 ;;  buffer_size     2   62[BANK1 ] unsigned int 
 17680 ;;  ret             1    0        unsigned char 
 17681 ;; Return value:  Size  Location     Type
 17682 ;;                  1    wreg      unsigned char 
 17683 ;; Registers used:
 17684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17685 ;; Tracked objects:
 17686 ;;		On entry : 1F/0
 17687 ;;		On exit  : 1F/2
 17688 ;;		Unchanged: 0/0
 17689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17690 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17691 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17692 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17693 ;;      Totals:         0       2      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17694 ;;Total ram usage:       13 bytes
 17695 ;; Hardware stack levels used:    1
 17696 ;; Hardware stack levels required when called:   10
 17697 ;; This function calls:
 17698 ;;		_ETH_ReadBlock
 17699 ;;		_TCP_Snd
 17700 ;; This function is called by:
 17701 ;;		_TCP_FiniteStateMachine
 17702 ;; This function uses a non-reentrant model
 17703 ;;
 17704                           
 17705                           
 17706                           ;psect for function _TCP_PayloadSave
 17707  2680                     _TCP_PayloadSave:
 17708                           
 17709                           ;tcpv4.c: 317: uint16_t buffer_size;;tcpv4.c: 320: if (currentTCB->rxBufState == RX_BUFF
      +                          _IN_USE)
 17710                           
 17711                           ;incstack = 0
 17712                           ; Regs used in _TCP_PayloadSave: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17713  2680  0022               	movlb	2	; select bank2
 17714  2681  086E               	movf	_currentTCB^(0+256),w
 17715  2682  3E20               	addlw	32
 17716  2683  0086               	movwf	6
 17717  2684  3002               	movlw	2	; select bank4/5
 17718  2685  0087               	movwf	7
 17719  2686  0301               	decf	1,w
 17720  2687  1D03               	btfss	3,2
 17721  2688  0008               	return
 17722                           
 17723                           ;tcpv4.c: 321: {;tcpv4.c: 323: if (currentTCB->localWnd >= len)
 17724  2689  086E               	movf	_currentTCB^(0+256),w
 17725  268A  3E1A               	addlw	26
 17726  268B  0086               	movwf	6
 17727  268C  3002               	movlw	2	; select bank4/5
 17728  268D  0087               	movwf	7
 17729  268E  3F40               	moviw [0]fsr1
 17730  268F  0021               	movlb	1	; select bank1
 17731  2690  00D5               	movwf	??_TCP_PayloadSave^(0+128)
 17732  2691  3F41               	moviw [1]fsr1
 17733  2692  00D6               	movwf	(??_TCP_PayloadSave^(0+128)+1)
 17734  2693  0020               	movlb	0	; select bank0
 17735  2694  086E               	movf	TCP_PayloadSave@len+1,w
 17736  2695  0021               	movlb	1	; select bank1
 17737  2696  0256               	subwf	(??_TCP_PayloadSave+1)^(0+128),w
 17738  2697  1D03               	skipz
 17739  2698  2E9D               	goto	u6255
 17740  2699  0020               	movlb	0	; select bank0
 17741  269A  086D               	movf	TCP_PayloadSave@len,w
 17742  269B  0021               	movlb	1	; select bank1
 17743  269C  0255               	subwf	??_TCP_PayloadSave^(0+128),w
 17744  269D                     u6255:
 17745  269D  1C03               	skipc
 17746  269E  2EA8               	goto	l7468
 17747                           
 17748                           ;tcpv4.c: 324: {;tcpv4.c: 325: buffer_size = len;
 17749  269F  0020               	movlb	0	; select bank0
 17750  26A0  086E               	movf	TCP_PayloadSave@len+1,w
 17751  26A1  0021               	movlb	1	; select bank1
 17752  26A2  00DF               	movwf	(TCP_PayloadSave@buffer_size+1)^(0+128)
 17753  26A3  0020               	movlb	0	; select bank0
 17754  26A4  086D               	movf	TCP_PayloadSave@len,w
 17755  26A5  0021               	movlb	1	; select bank1
 17756  26A6  00DE               	movwf	TCP_PayloadSave@buffer_size^(0+128)
 17757                           
 17758                           ;tcpv4.c: 326: }else
 17759  26A7  2EB3               	goto	l7470
 17760  26A8                     l7468:
 17761                           
 17762                           ;tcpv4.c: 327: {;tcpv4.c: 328: buffer_size = currentTCB->localWnd;
 17763  26A8  0022               	movlb	2	; select bank2
 17764  26A9  086E               	movf	_currentTCB^(0+256),w
 17765  26AA  3E1A               	addlw	26
 17766  26AB  0086               	movwf	6
 17767  26AC  3002               	movlw	2	; select bank4/5
 17768  26AD  0087               	movwf	7
 17769  26AE  3F40               	moviw [0]fsr1
 17770  26AF  0021               	movlb	1	; select bank1
 17771  26B0  00DE               	movwf	TCP_PayloadSave@buffer_size^(0+128)
 17772  26B1  3F41               	moviw [1]fsr1
 17773  26B2  00DF               	movwf	(TCP_PayloadSave@buffer_size+1)^(0+128)
 17774  26B3                     l7470:
 17775                           
 17776                           ;tcpv4.c: 329: };tcpv4.c: 331: ETH_ReadBlock((uint8_t*)currentTCB->rxBufferPtr, buffer_s
      +                          ize);
 17777  26B3  0022               	movlb	2	; select bank2
 17778  26B4  086E               	movf	_currentTCB^(0+256),w
 17779  26B5  3E1F               	addlw	31
 17780  26B6  0086               	movwf	6
 17781  26B7  3002               	movlw	2	; select bank4/5
 17782  26B8  0087               	movwf	7
 17783  26B9  0801               	movf	1,w
 17784  26BA  00F1               	movwf	ETH_ReadBlock@buffer
 17785  26BB  39FF               	andlw	255
 17786  26BC  1D03               	skipz
 17787  26BD  3003               	movlw	3
 17788  26BE  00F2               	movwf	ETH_ReadBlock@buffer+1
 17789  26BF  0021               	movlb	1	; select bank1
 17790  26C0  085F               	movf	(TCP_PayloadSave@buffer_size+1)^(0+128),w
 17791  26C1  00F4               	movwf	ETH_ReadBlock@length+1
 17792  26C2  085E               	movf	TCP_PayloadSave@buffer_size^(0+128),w
 17793  26C3  00F3               	movwf	ETH_ReadBlock@length
 17794  26C4  31AF  273F  31A6   	fcall	_ETH_ReadBlock
 17795                           
 17796                           ;tcpv4.c: 332: currentTCB->rxBufferPtr = currentTCB->rxBufferPtr + buffer_size;
 17797  26C7  086E               	movf	_currentTCB^(0+256),w
 17798  26C8  3E1F               	addlw	31
 17799  26C9  0086               	movwf	6
 17800  26CA  3002               	movlw	2	; select bank4/5
 17801  26CB  0087               	movwf	7
 17802  26CC  0801               	movf	1,w
 17803  26CD  0021               	movlb	1	; select bank1
 17804  26CE  075E               	addwf	TCP_PayloadSave@buffer_size^(0+128),w
 17805  26CF  00D5               	movwf	??_TCP_PayloadSave^(0+128)
 17806  26D0  0022               	movlb	2	; select bank2
 17807  26D1  086E               	movf	_currentTCB^(0+256),w
 17808  26D2  3E1F               	addlw	31
 17809  26D3  0086               	movwf	6
 17810  26D4  3002               	movlw	2	; select bank4/5
 17811  26D5  0087               	movwf	7
 17812  26D6  0021               	movlb	1	; select bank1
 17813  26D7  0855               	movf	??_TCP_PayloadSave^(0+128),w
 17814  26D8  0081               	movwf	1
 17815                           
 17816                           ;tcpv4.c: 335: currentTCB->localWnd = currentTCB->localWnd - buffer_size;
 17817  26D9  0022               	movlb	2	; select bank2
 17818  26DA  086E               	movf	_currentTCB^(0+256),w
 17819  26DB  3E1A               	addlw	26
 17820  26DC  0086               	movwf	6
 17821  26DD  3002               	movlw	2	; select bank4/5
 17822  26DE  0087               	movwf	7
 17823  26DF  3F40               	moviw [0]fsr1
 17824  26E0  0021               	movlb	1	; select bank1
 17825  26E1  00D5               	movwf	??_TCP_PayloadSave^(0+128)
 17826  26E2  3F41               	moviw [1]fsr1
 17827  26E3  00D6               	movwf	(??_TCP_PayloadSave^(0+128)+1)
 17828  26E4  085E               	movf	TCP_PayloadSave@buffer_size^(0+128),w
 17829  26E5  0255               	subwf	??_TCP_PayloadSave^(0+128),w
 17830  26E6  00D7               	movwf	(??_TCP_PayloadSave+2)^(0+128)
 17831  26E7  085F               	movf	(TCP_PayloadSave@buffer_size+1)^(0+128),w
 17832  26E8  3B56               	subwfb	(??_TCP_PayloadSave+1)^(0+128),w
 17833  26E9  00D8               	movwf	(??_TCP_PayloadSave+3)^(0+128)
 17834  26EA  0022               	movlb	2	; select bank2
 17835  26EB  086E               	movf	_currentTCB^(0+256),w
 17836  26EC  3E1A               	addlw	26
 17837  26ED  0086               	movwf	6
 17838  26EE  3002               	movlw	2	; select bank4/5
 17839  26EF  0087               	movwf	7
 17840  26F0  0021               	movlb	1	; select bank1
 17841  26F1  0857               	movf	(??_TCP_PayloadSave+2)^(0+128),w
 17842  26F2  3FC0               	movwi [0]fsr1
 17843  26F3  0858               	movf	(??_TCP_PayloadSave+3)^(0+128),w
 17844  26F4  3FC1               	movwi [1]fsr1
 17845                           
 17846                           ;tcpv4.c: 336: currentTCB->remoteAck = currentTCB->remoteSeqno + buffer_size;
 17847  26F5  0022               	movlb	2	; select bank2
 17848  26F6  086E               	movf	_currentTCB^(0+256),w
 17849  26F7  3E08               	addlw	8
 17850  26F8  0086               	movwf	6
 17851  26F9  3002               	movlw	2	; select bank4/5
 17852  26FA  0087               	movwf	7
 17853  26FB  3F40               	moviw [0]fsr1
 17854  26FC  0021               	movlb	1	; select bank1
 17855  26FD  00D5               	movwf	??_TCP_PayloadSave^(0+128)
 17856  26FE  3F41               	moviw [1]fsr1
 17857  26FF  00D6               	movwf	(??_TCP_PayloadSave^(0+128)+1)
 17858  2700  3F42               	moviw [2]fsr1
 17859  2701  00D7               	movwf	(??_TCP_PayloadSave^(0+128)+2)
 17860  2702  3F43               	moviw [3]fsr1
 17861  2703  00D8               	movwf	(??_TCP_PayloadSave^(0+128)+3)
 17862  2704  085E               	movf	TCP_PayloadSave@buffer_size^(0+128),w
 17863  2705  00D9               	movwf	(??_TCP_PayloadSave+4)^(0+128)
 17864  2706  085F               	movf	(TCP_PayloadSave@buffer_size+1)^(0+128),w
 17865  2707  00DA               	movwf	((??_TCP_PayloadSave+4)^(0+128)+1)
 17866  2708  01DB               	clrf	((??_TCP_PayloadSave+4)^(0+128)+2)
 17867  2709  01DC               	clrf	((??_TCP_PayloadSave+4)^(0+128)+3)
 17868  270A  0859               	movf	(??_TCP_PayloadSave+4)^(0+128),w
 17869  270B  07D5               	addwf	??_TCP_PayloadSave^(0+128),f
 17870  270C  085A               	movf	(??_TCP_PayloadSave+5)^(0+128),w
 17871  270D  3DD6               	addwfc	(??_TCP_PayloadSave^(0+128)+1),f
 17872  270E  085B               	movf	(??_TCP_PayloadSave+6)^(0+128),w
 17873  270F  3DD7               	addwfc	(??_TCP_PayloadSave^(0+128)+2),f
 17874  2710  085C               	movf	(??_TCP_PayloadSave+7)^(0+128),w
 17875  2711  3DD8               	addwfc	(??_TCP_PayloadSave^(0+128)+3),f
 17876  2712  0022               	movlb	2	; select bank2
 17877  2713  086E               	movf	_currentTCB^(0+256),w
 17878  2714  3E0C               	addlw	12
 17879  2715  0086               	movwf	6
 17880  2716  3002               	movlw	2	; select bank4/5
 17881  2717  0087               	movwf	7
 17882  2718  0021               	movlb	1	; select bank1
 17883  2719  0855               	movf	??_TCP_PayloadSave^(0+128),w
 17884  271A  3FC0               	movwi [0]fsr1
 17885  271B  0856               	movf	(??_TCP_PayloadSave+1)^(0+128),w
 17886  271C  3FC1               	movwi [1]fsr1
 17887  271D  0857               	movf	(??_TCP_PayloadSave+2)^(0+128),w
 17888  271E  3FC2               	movwi [2]fsr1
 17889  271F  0858               	movf	(??_TCP_PayloadSave+3)^(0+128),w
 17890  2720  3FC3               	movwi [3]fsr1
 17891                           
 17892                           ;tcpv4.c: 339: currentTCB->flags = 0x10U;
 17893  2721  3010               	movlw	16
 17894  2722  00D5               	movwf	??_TCP_PayloadSave^(0+128)
 17895  2723  0022               	movlb	2	; select bank2
 17896  2724  086E               	movf	_currentTCB^(0+256),w
 17897  2725  3E32               	addlw	50
 17898  2726  0086               	movwf	6
 17899  2727  3002               	movlw	2	; select bank4/5
 17900  2728  0087               	movwf	7
 17901  2729  0021               	movlb	1	; select bank1
 17902  272A  0855               	movf	??_TCP_PayloadSave^(0+128),w
 17903  272B  0081               	movwf	1
 17904                           
 17905                           ;tcpv4.c: 340: currentTCB->payloadSave = 1;
 17906  272C  0022               	movlb	2	; select bank2
 17907  272D  086E               	movf	_currentTCB^(0+256),w
 17908  272E  3E28               	addlw	40
 17909  272F  0086               	movwf	6
 17910  2730  3002               	movlw	2	; select bank4/5
 17911  2731  0087               	movwf	7
 17912  2732  0181               	clrf	1
 17913  2733  0A81               	incf	1,f
 17914                           
 17915                           ;tcpv4.c: 341: TCP_Snd(currentTCB);
 17916  2734  086E               	movf	_currentTCB^(0+256),w
 17917  2735  3194  24B7         	fcall	_TCP_Snd
 17918                           
 17919                           ;tcpv4.c: 342: currentTCB->payloadSave = 0;
 17920  2737  0022               	movlb	2	; select bank2
 17921  2738  086E               	movf	_currentTCB^(0+256),w
 17922  2739  3E28               	addlw	40
 17923  273A  0086               	movwf	6
 17924  273B  3002               	movlw	2	; select bank4/5
 17925  273C  0087               	movwf	7
 17926  273D  0181               	clrf	1
 17927  273E  0008               	return
 17928  273F                     __end_of_TCP_PayloadSave:
 17929                           
 17930                           	psect	text71
 17931  14B7                     __ptext71:	
 17932 ;; *************** function _TCP_Snd *****************
 17933 ;; Defined at:
 17934 ;;		line 196 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;  tcbPtr          1    wreg     PTR struct .
 17937 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
 17938 ;; Auto vars:     Size  Location     Type
 17939 ;;  tcbPtr          1   52[BANK1 ] PTR struct .
 17940 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
 17941 ;;  txHeader       20   32[BANK1 ] struct .
 17942 ;;  tcpDataLengt    2   30[BANK1 ] unsigned int 
 17943 ;;  payloadLengt    2   27[BANK1 ] unsigned int 
 17944 ;;  cksm            2   25[BANK1 ] unsigned int 
 17945 ;;  ret             1   29[BANK1 ] unsigned char 
 17946 ;;  data            1   24[BANK1 ] PTR unsigned char 
 17947 ;;		 -> DEMO_TCP_Client@txdataPort60(80), NULL(0), 
 17948 ;; Return value:  Size  Location     Type
 17949 ;;                  1    wreg      unsigned char 
 17950 ;; Registers used:
 17951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17952 ;; Tracked objects:
 17953 ;;		On entry : 1D/0
 17954 ;;		On exit  : 1F/1
 17955 ;;		Unchanged: 0/0
 17956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17958 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;      Temps:          0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17960 ;;      Totals:         0       0      53       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17961 ;;Total ram usage:       53 bytes
 17962 ;; Hardware stack levels used:    1
 17963 ;; Hardware stack levels required when called:    9
 17964 ;; This function calls:
 17965 ;;		_ETH_Insert
 17966 ;;		_ETH_TxComputeChecksum
 17967 ;;		_ETH_WriteBlock
 17968 ;;		_IPV4_Send
 17969 ;;		_IPv4_Start
 17970 ;; This function is called by:
 17971 ;;		_TCP_PayloadSave
 17972 ;;		_TCP_FiniteStateMachine
 17973 ;;		_TCP_Send
 17974 ;; This function uses a non-reentrant model
 17975 ;;
 17976                           
 17977                           
 17978                           ;psect for function _TCP_Snd
 17979  14B7                     _TCP_Snd:
 17980                           
 17981                           ;incstack = 0
 17982                           ; Regs used in _TCP_Snd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17983                           ;TCP_Snd@tcbPtr stored from wreg
 17984  14B7  0021               	movlb	1	; select bank1
 17985  14B8  00D4               	movwf	TCP_Snd@tcbPtr^(0+128)
 17986                           
 17987                           ;tcpv4.c: 199: tcpHeader_t txHeader;;tcpv4.c: 200: uint16_t payloadLength;;tcpv4.c: 201:
      +                           uint16_t cksm;;tcpv4.c: 202: uint16_t tcpDataLength;;tcpv4.c: 203: uint8_t *data;;tcpv4
      +                          .c: 205: txHeader.sourcePort = ((((uint16_t)tcbPtr->localPort & (uint16_t)0xFF00) >> 8) 
      +                          | (((uint16_t)tcbPtr->localPort & (uint16_t)0x00FF) << 8));
 17988  14B9  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 17989  14BA  0086               	movwf	6
 17990  14BB  3002               	movlw	2	; select bank4/5
 17991  14BC  0087               	movwf	7
 17992  14BD  3F40               	moviw [0]fsr1
 17993  14BE  00A0               	movwf	??_TCP_Snd^(0+128)
 17994  14BF  3F41               	moviw [1]fsr1
 17995  14C0  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 17996  14C1  30FF               	movlw	255
 17997  14C2  0520               	andwf	??_TCP_Snd^(0+128),w
 17998  14C3  00A2               	movwf	(??_TCP_Snd+2)^(0+128)
 17999  14C4  3000               	movlw	0
 18000  14C5  0521               	andwf	(??_TCP_Snd+1)^(0+128),w
 18001  14C6  00A3               	movwf	(??_TCP_Snd+3)^(0+128)
 18002  14C7  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18003  14C8  00A3               	movwf	((??_TCP_Snd+2)^(0+128)+1)
 18004  14C9  01A2               	clrf	(??_TCP_Snd+2)^(0+128)
 18005  14CA  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18006  14CB  0086               	movwf	6
 18007  14CC  3002               	movlw	2	; select bank4/5
 18008  14CD  0087               	movwf	7
 18009  14CE  3F40               	moviw [0]fsr1
 18010  14CF  00A5               	movwf	(??_TCP_Snd+5)^(0+128)
 18011  14D0  3F41               	moviw [1]fsr1
 18012  14D1  00A6               	movwf	((??_TCP_Snd+5)^(0+128)+1)
 18013  14D2  0826               	movf	((??_TCP_Snd+5)^(0+128)+1),w
 18014  14D3  00A5               	movwf	(??_TCP_Snd+5)^(0+128)
 18015  14D4  01A6               	clrf	((??_TCP_Snd+5)^(0+128)+1)
 18016  14D5  30FF               	movlw	255
 18017  14D6  0525               	andwf	(??_TCP_Snd+5)^(0+128),w
 18018  14D7  00A7               	movwf	(??_TCP_Snd+7)^(0+128)
 18019  14D8  3000               	movlw	0
 18020  14D9  0526               	andwf	(??_TCP_Snd+6)^(0+128),w
 18021  14DA  00A8               	movwf	(??_TCP_Snd+8)^(0+128)
 18022  14DB  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18023  14DC  0427               	iorwf	(??_TCP_Snd+7)^(0+128),w
 18024  14DD  00C0               	movwf	TCP_Snd@txHeader^(0+128)
 18025  14DE  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18026  14DF  0428               	iorwf	(??_TCP_Snd+8)^(0+128),w
 18027  14E0  00C1               	movwf	(TCP_Snd@txHeader+1)^(0+128)
 18028                           
 18029                           ;tcpv4.c: 206: txHeader.destPort = ((((uint16_t)tcbPtr->destPort & (uint16_t)0xFF00) >> 
      +                          8) | (((uint16_t)tcbPtr->destPort & (uint16_t)0x00FF) << 8));
 18030  14E1  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18031  14E2  3E06               	addlw	6
 18032  14E3  0086               	movwf	6
 18033  14E4  3002               	movlw	2	; select bank4/5
 18034  14E5  0087               	movwf	7
 18035  14E6  3F40               	moviw [0]fsr1
 18036  14E7  00A0               	movwf	??_TCP_Snd^(0+128)
 18037  14E8  3F41               	moviw [1]fsr1
 18038  14E9  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18039  14EA  30FF               	movlw	255
 18040  14EB  0520               	andwf	??_TCP_Snd^(0+128),w
 18041  14EC  00A2               	movwf	(??_TCP_Snd+2)^(0+128)
 18042  14ED  3000               	movlw	0
 18043  14EE  0521               	andwf	(??_TCP_Snd+1)^(0+128),w
 18044  14EF  00A3               	movwf	(??_TCP_Snd+3)^(0+128)
 18045  14F0  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18046  14F1  00A3               	movwf	((??_TCP_Snd+2)^(0+128)+1)
 18047  14F2  01A2               	clrf	(??_TCP_Snd+2)^(0+128)
 18048  14F3  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18049  14F4  3E06               	addlw	6
 18050  14F5  0086               	movwf	6
 18051  14F6  3002               	movlw	2	; select bank4/5
 18052  14F7  0087               	movwf	7
 18053  14F8  3F40               	moviw [0]fsr1
 18054  14F9  00A5               	movwf	(??_TCP_Snd+5)^(0+128)
 18055  14FA  3F41               	moviw [1]fsr1
 18056  14FB  00A6               	movwf	((??_TCP_Snd+5)^(0+128)+1)
 18057  14FC  0826               	movf	((??_TCP_Snd+5)^(0+128)+1),w
 18058  14FD  00A5               	movwf	(??_TCP_Snd+5)^(0+128)
 18059  14FE  01A6               	clrf	((??_TCP_Snd+5)^(0+128)+1)
 18060  14FF  30FF               	movlw	255
 18061  1500  0525               	andwf	(??_TCP_Snd+5)^(0+128),w
 18062  1501  00A7               	movwf	(??_TCP_Snd+7)^(0+128)
 18063  1502  3000               	movlw	0
 18064  1503  0526               	andwf	(??_TCP_Snd+6)^(0+128),w
 18065  1504  00A8               	movwf	(??_TCP_Snd+8)^(0+128)
 18066  1505  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18067  1506  0427               	iorwf	(??_TCP_Snd+7)^(0+128),w
 18068  1507  00C2               	movwf	(TCP_Snd@txHeader^(0+128)+2)
 18069  1508  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18070  1509  0428               	iorwf	(??_TCP_Snd+8)^(0+128),w
 18071  150A  00C3               	movwf	((TCP_Snd@txHeader+1)^(0+128)+2)
 18072                           
 18073                           ;tcpv4.c: 208: txHeader.sequenceNumber = ((((uint32_t)tcbPtr->localSeqno&(uint32_t)0xff0
      +                          00000) >> 24) | (((uint32_t)tcbPtr->localSeqno&(uint32_t)0x00ff0000) >> 8) | (((uint32_t
      +                          )tcbPtr->localSeqno&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->localSeqno&(uint32
      +                          _
 18074  150B  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18075  150C  3E10               	addlw	16
 18076  150D  0086               	movwf	6
 18077  150E  3002               	movlw	2	; select bank4/5
 18078  150F  0087               	movwf	7
 18079  1510  30FF               	movlw	255
 18080  1511  0501               	andwf	1,w
 18081  1512  00A0               	movwf	??_TCP_Snd^(0+128)
 18082  1513  3141               	addfsr 1,1
 18083  1514  3000               	movlw	0
 18084  1515  0501               	andwf	1,w
 18085  1516  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18086  1517  3141               	addfsr 1,1
 18087  1518  3000               	movlw	0
 18088  1519  0501               	andwf	1,w
 18089  151A  00A2               	movwf	(??_TCP_Snd^(0+128)+2)
 18090  151B  3141               	addfsr 1,1
 18091  151C  3000               	movlw	0
 18092  151D  0501               	andwf	1,w
 18093  151E  00A3               	movwf	(??_TCP_Snd^(0+128)+3)
 18094  151F  3018               	movlw	24
 18095  1520                     u6055:
 18096  1520  35A0               	lslf	??_TCP_Snd^(0+128),f
 18097  1521  0DA1               	rlf	(??_TCP_Snd^(0+128)+1),f
 18098  1522  0DA2               	rlf	(??_TCP_Snd^(0+128)+2),f
 18099  1523  0DA3               	rlf	(??_TCP_Snd^(0+128)+3),f
 18100  1524  0B89               	decfsz	9,f
 18101  1525  2D20               	goto	u6055
 18102  1526  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18103  1527  3E10               	addlw	16
 18104  1528  0086               	movwf	6
 18105  1529  3002               	movlw	2	; select bank4/5
 18106  152A  0087               	movwf	7
 18107  152B  3000               	movlw	0
 18108  152C  0501               	andwf	1,w
 18109  152D  00A4               	movwf	(??_TCP_Snd+4)^(0+128)
 18110  152E  3141               	addfsr 1,1
 18111  152F  30FF               	movlw	255
 18112  1530  0501               	andwf	1,w
 18113  1531  00A5               	movwf	((??_TCP_Snd+4)^(0+128)+1)
 18114  1532  3141               	addfsr 1,1
 18115  1533  3000               	movlw	0
 18116  1534  0501               	andwf	1,w
 18117  1535  00A6               	movwf	((??_TCP_Snd+4)^(0+128)+2)
 18118  1536  3141               	addfsr 1,1
 18119  1537  3000               	movlw	0
 18120  1538  0501               	andwf	1,w
 18121  1539  00A7               	movwf	((??_TCP_Snd+4)^(0+128)+3)
 18122  153A  3008               	movlw	8
 18123  153B                     u6065:
 18124  153B  35A4               	lslf	(??_TCP_Snd+4)^(0+128),f
 18125  153C  0DA5               	rlf	((??_TCP_Snd+4)^(0+128)+1),f
 18126  153D  0DA6               	rlf	((??_TCP_Snd+4)^(0+128)+2),f
 18127  153E  0DA7               	rlf	((??_TCP_Snd+4)^(0+128)+3),f
 18128  153F  0B89               	decfsz	9,f
 18129  1540  2D3B               	goto	u6065
 18130  1541  3000               	movlw	0
 18131  1542  00A8               	movwf	(??_TCP_Snd+8)^(0+128)
 18132  1543  30FF               	movlw	255
 18133  1544  00A9               	movwf	((??_TCP_Snd+8)^(0+128)+1)
 18134  1545  3000               	movlw	0
 18135  1546  00AA               	movwf	((??_TCP_Snd+8)^(0+128)+2)
 18136  1547  3000               	movlw	0
 18137  1548  00AB               	movwf	((??_TCP_Snd+8)^(0+128)+3)
 18138  1549  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18139  154A  3E10               	addlw	16
 18140  154B  0086               	movwf	6
 18141  154C  3002               	movlw	2	; select bank4/5
 18142  154D  0087               	movwf	7
 18143  154E  3F40               	moviw [0]fsr1
 18144  154F  00AC               	movwf	(??_TCP_Snd+12)^(0+128)
 18145  1550  3F41               	moviw [1]fsr1
 18146  1551  00AD               	movwf	((??_TCP_Snd+12)^(0+128)+1)
 18147  1552  3F42               	moviw [2]fsr1
 18148  1553  00AE               	movwf	((??_TCP_Snd+12)^(0+128)+2)
 18149  1554  3F43               	moviw [3]fsr1
 18150  1555  00AF               	movwf	((??_TCP_Snd+12)^(0+128)+3)
 18151  1556  3008               	movlw	8
 18152  1557                     u6075:
 18153  1557  36AF               	lsrf	((??_TCP_Snd+12)^(0+128)+3),f
 18154  1558  0CAE               	rrf	((??_TCP_Snd+12)^(0+128)+2),f
 18155  1559  0CAD               	rrf	((??_TCP_Snd+12)^(0+128)+1),f
 18156  155A  0CAC               	rrf	(??_TCP_Snd+12)^(0+128),f
 18157  155B  0B89               	decfsz	9,f
 18158  155C  2D57               	goto	u6075
 18159  155D  082C               	movf	(??_TCP_Snd+12)^(0+128),w
 18160  155E  05A8               	andwf	(??_TCP_Snd+8)^(0+128),f
 18161  155F  082D               	movf	(??_TCP_Snd+13)^(0+128),w
 18162  1560  05A9               	andwf	((??_TCP_Snd+8)^(0+128)+1),f
 18163  1561  082E               	movf	(??_TCP_Snd+14)^(0+128),w
 18164  1562  05AA               	andwf	((??_TCP_Snd+8)^(0+128)+2),f
 18165  1563  082F               	movf	(??_TCP_Snd+15)^(0+128),w
 18166  1564  05AB               	andwf	((??_TCP_Snd+8)^(0+128)+3),f
 18167  1565  30FF               	movlw	255
 18168  1566  00B0               	movwf	(??_TCP_Snd+16)^(0+128)
 18169  1567  3000               	movlw	0
 18170  1568  00B1               	movwf	((??_TCP_Snd+16)^(0+128)+1)
 18171  1569  3000               	movlw	0
 18172  156A  00B2               	movwf	((??_TCP_Snd+16)^(0+128)+2)
 18173  156B  3000               	movlw	0
 18174  156C  00B3               	movwf	((??_TCP_Snd+16)^(0+128)+3)
 18175  156D  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18176  156E  3E10               	addlw	16
 18177  156F  0086               	movwf	6
 18178  1570  3002               	movlw	2	; select bank4/5
 18179  1571  0087               	movwf	7
 18180  1572  3F40               	moviw [0]fsr1
 18181  1573  00B4               	movwf	(??_TCP_Snd+20)^(0+128)
 18182  1574  3F41               	moviw [1]fsr1
 18183  1575  00B5               	movwf	((??_TCP_Snd+20)^(0+128)+1)
 18184  1576  3F42               	moviw [2]fsr1
 18185  1577  00B6               	movwf	((??_TCP_Snd+20)^(0+128)+2)
 18186  1578  3F43               	moviw [3]fsr1
 18187  1579  00B7               	movwf	((??_TCP_Snd+20)^(0+128)+3)
 18188  157A  3018               	movlw	24
 18189  157B                     u6085:
 18190  157B  36B7               	lsrf	((??_TCP_Snd+20)^(0+128)+3),f
 18191  157C  0CB6               	rrf	((??_TCP_Snd+20)^(0+128)+2),f
 18192  157D  0CB5               	rrf	((??_TCP_Snd+20)^(0+128)+1),f
 18193  157E  0CB4               	rrf	(??_TCP_Snd+20)^(0+128),f
 18194  157F  0B89               	decfsz	9,f
 18195  1580  2D7B               	goto	u6085
 18196  1581  0834               	movf	(??_TCP_Snd+20)^(0+128),w
 18197  1582  05B0               	andwf	(??_TCP_Snd+16)^(0+128),f
 18198  1583  0835               	movf	(??_TCP_Snd+21)^(0+128),w
 18199  1584  05B1               	andwf	((??_TCP_Snd+16)^(0+128)+1),f
 18200  1585  0836               	movf	(??_TCP_Snd+22)^(0+128),w
 18201  1586  05B2               	andwf	((??_TCP_Snd+16)^(0+128)+2),f
 18202  1587  0837               	movf	(??_TCP_Snd+23)^(0+128),w
 18203  1588  05B3               	andwf	((??_TCP_Snd+16)^(0+128)+3),f
 18204  1589  0830               	movf	(??_TCP_Snd+16)^(0+128),w
 18205  158A  04A8               	iorwf	(??_TCP_Snd+8)^(0+128),f
 18206  158B  0831               	movf	(??_TCP_Snd+17)^(0+128),w
 18207  158C  04A9               	iorwf	((??_TCP_Snd+8)^(0+128)+1),f
 18208  158D  0832               	movf	(??_TCP_Snd+18)^(0+128),w
 18209  158E  04AA               	iorwf	((??_TCP_Snd+8)^(0+128)+2),f
 18210  158F  0833               	movf	(??_TCP_Snd+19)^(0+128),w
 18211  1590  04AB               	iorwf	((??_TCP_Snd+8)^(0+128)+3),f
 18212  1591  0828               	movf	(??_TCP_Snd+8)^(0+128),w
 18213  1592  04A4               	iorwf	(??_TCP_Snd+4)^(0+128),f
 18214  1593  0829               	movf	(??_TCP_Snd+9)^(0+128),w
 18215  1594  04A5               	iorwf	((??_TCP_Snd+4)^(0+128)+1),f
 18216  1595  082A               	movf	(??_TCP_Snd+10)^(0+128),w
 18217  1596  04A6               	iorwf	((??_TCP_Snd+4)^(0+128)+2),f
 18218  1597  082B               	movf	(??_TCP_Snd+11)^(0+128),w
 18219  1598  04A7               	iorwf	((??_TCP_Snd+4)^(0+128)+3),f
 18220  1599  0820               	movf	??_TCP_Snd^(0+128),w
 18221  159A  0424               	iorwf	(??_TCP_Snd+4)^(0+128),w
 18222  159B  00C4               	movwf	(TCP_Snd@txHeader^(0+128)+4)
 18223  159C  0821               	movf	(??_TCP_Snd+1)^(0+128),w
 18224  159D  0425               	iorwf	(??_TCP_Snd+5)^(0+128),w
 18225  159E  00C5               	movwf	((TCP_Snd@txHeader+1)^(0+128)+4)
 18226  159F  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18227  15A0  0426               	iorwf	(??_TCP_Snd+6)^(0+128),w
 18228  15A1  00C6               	movwf	((TCP_Snd@txHeader+2)^(0+128)+4)
 18229  15A2  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18230  15A3  0427               	iorwf	(??_TCP_Snd+7)^(0+128),w
 18231  15A4  00C7               	movwf	((TCP_Snd@txHeader+3)^(0+128)+4)
 18232                           
 18233                           ;tcpv4.c: 210: txHeader.ackNumber = ((((uint32_t)tcbPtr->remoteAck&(uint32_t)0xff000000)
      +                           >> 24) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)tcbPtr
      +                          ->remoteAck&(uint32_t)0x0000ff00) << 8) | (((uint32_t)tcbPtr->remoteAck&(uint32_t)0x0000
      +                          0
 18234  15A5  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18235  15A6  3E0C               	addlw	12
 18236  15A7  0086               	movwf	6
 18237  15A8  3002               	movlw	2	; select bank4/5
 18238  15A9  0087               	movwf	7
 18239  15AA  30FF               	movlw	255
 18240  15AB  0501               	andwf	1,w
 18241  15AC  00A0               	movwf	??_TCP_Snd^(0+128)
 18242  15AD  3141               	addfsr 1,1
 18243  15AE  3000               	movlw	0
 18244  15AF  0501               	andwf	1,w
 18245  15B0  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18246  15B1  3141               	addfsr 1,1
 18247  15B2  3000               	movlw	0
 18248  15B3  0501               	andwf	1,w
 18249  15B4  00A2               	movwf	(??_TCP_Snd^(0+128)+2)
 18250  15B5  3141               	addfsr 1,1
 18251  15B6  3000               	movlw	0
 18252  15B7  0501               	andwf	1,w
 18253  15B8  00A3               	movwf	(??_TCP_Snd^(0+128)+3)
 18254  15B9  3018               	movlw	24
 18255  15BA                     u6095:
 18256  15BA  35A0               	lslf	??_TCP_Snd^(0+128),f
 18257  15BB  0DA1               	rlf	(??_TCP_Snd^(0+128)+1),f
 18258  15BC  0DA2               	rlf	(??_TCP_Snd^(0+128)+2),f
 18259  15BD  0DA3               	rlf	(??_TCP_Snd^(0+128)+3),f
 18260  15BE  0B89               	decfsz	9,f
 18261  15BF  2DBA               	goto	u6095
 18262  15C0  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18263  15C1  3E0C               	addlw	12
 18264  15C2  0086               	movwf	6
 18265  15C3  3002               	movlw	2	; select bank4/5
 18266  15C4  0087               	movwf	7
 18267  15C5  3000               	movlw	0
 18268  15C6  0501               	andwf	1,w
 18269  15C7  00A4               	movwf	(??_TCP_Snd+4)^(0+128)
 18270  15C8  3141               	addfsr 1,1
 18271  15C9  30FF               	movlw	255
 18272  15CA  0501               	andwf	1,w
 18273  15CB  00A5               	movwf	((??_TCP_Snd+4)^(0+128)+1)
 18274  15CC  3141               	addfsr 1,1
 18275  15CD  3000               	movlw	0
 18276  15CE  0501               	andwf	1,w
 18277  15CF  00A6               	movwf	((??_TCP_Snd+4)^(0+128)+2)
 18278  15D0  3141               	addfsr 1,1
 18279  15D1  3000               	movlw	0
 18280  15D2  0501               	andwf	1,w
 18281  15D3  00A7               	movwf	((??_TCP_Snd+4)^(0+128)+3)
 18282  15D4  3008               	movlw	8
 18283  15D5                     u6105:
 18284  15D5  35A4               	lslf	(??_TCP_Snd+4)^(0+128),f
 18285  15D6  0DA5               	rlf	((??_TCP_Snd+4)^(0+128)+1),f
 18286  15D7  0DA6               	rlf	((??_TCP_Snd+4)^(0+128)+2),f
 18287  15D8  0DA7               	rlf	((??_TCP_Snd+4)^(0+128)+3),f
 18288  15D9  0B89               	decfsz	9,f
 18289  15DA  2DD5               	goto	u6105
 18290  15DB  3000               	movlw	0
 18291  15DC  00A8               	movwf	(??_TCP_Snd+8)^(0+128)
 18292  15DD  30FF               	movlw	255
 18293  15DE  00A9               	movwf	((??_TCP_Snd+8)^(0+128)+1)
 18294  15DF  3000               	movlw	0
 18295  15E0  00AA               	movwf	((??_TCP_Snd+8)^(0+128)+2)
 18296  15E1  3000               	movlw	0
 18297  15E2  00AB               	movwf	((??_TCP_Snd+8)^(0+128)+3)
 18298  15E3  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18299  15E4  3E0C               	addlw	12
 18300  15E5  0086               	movwf	6
 18301  15E6  3002               	movlw	2	; select bank4/5
 18302  15E7  0087               	movwf	7
 18303  15E8  3F40               	moviw [0]fsr1
 18304  15E9  00AC               	movwf	(??_TCP_Snd+12)^(0+128)
 18305  15EA  3F41               	moviw [1]fsr1
 18306  15EB  00AD               	movwf	((??_TCP_Snd+12)^(0+128)+1)
 18307  15EC  3F42               	moviw [2]fsr1
 18308  15ED  00AE               	movwf	((??_TCP_Snd+12)^(0+128)+2)
 18309  15EE  3F43               	moviw [3]fsr1
 18310  15EF  00AF               	movwf	((??_TCP_Snd+12)^(0+128)+3)
 18311  15F0  3008               	movlw	8
 18312  15F1                     u6115:
 18313  15F1  36AF               	lsrf	((??_TCP_Snd+12)^(0+128)+3),f
 18314  15F2  0CAE               	rrf	((??_TCP_Snd+12)^(0+128)+2),f
 18315  15F3  0CAD               	rrf	((??_TCP_Snd+12)^(0+128)+1),f
 18316  15F4  0CAC               	rrf	(??_TCP_Snd+12)^(0+128),f
 18317  15F5  0B89               	decfsz	9,f
 18318  15F6  2DF1               	goto	u6115
 18319  15F7  082C               	movf	(??_TCP_Snd+12)^(0+128),w
 18320  15F8  05A8               	andwf	(??_TCP_Snd+8)^(0+128),f
 18321  15F9  082D               	movf	(??_TCP_Snd+13)^(0+128),w
 18322  15FA  05A9               	andwf	((??_TCP_Snd+8)^(0+128)+1),f
 18323  15FB  082E               	movf	(??_TCP_Snd+14)^(0+128),w
 18324  15FC  05AA               	andwf	((??_TCP_Snd+8)^(0+128)+2),f
 18325  15FD  082F               	movf	(??_TCP_Snd+15)^(0+128),w
 18326  15FE  05AB               	andwf	((??_TCP_Snd+8)^(0+128)+3),f
 18327  15FF  30FF               	movlw	255
 18328  1600  00B0               	movwf	(??_TCP_Snd+16)^(0+128)
 18329  1601  3000               	movlw	0
 18330  1602  00B1               	movwf	((??_TCP_Snd+16)^(0+128)+1)
 18331  1603  3000               	movlw	0
 18332  1604  00B2               	movwf	((??_TCP_Snd+16)^(0+128)+2)
 18333  1605  3000               	movlw	0
 18334  1606  00B3               	movwf	((??_TCP_Snd+16)^(0+128)+3)
 18335  1607  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18336  1608  3E0C               	addlw	12
 18337  1609  0086               	movwf	6
 18338  160A  3002               	movlw	2	; select bank4/5
 18339  160B  0087               	movwf	7
 18340  160C  3F40               	moviw [0]fsr1
 18341  160D  00B4               	movwf	(??_TCP_Snd+20)^(0+128)
 18342  160E  3F41               	moviw [1]fsr1
 18343  160F  00B5               	movwf	((??_TCP_Snd+20)^(0+128)+1)
 18344  1610  3F42               	moviw [2]fsr1
 18345  1611  00B6               	movwf	((??_TCP_Snd+20)^(0+128)+2)
 18346  1612  3F43               	moviw [3]fsr1
 18347  1613  00B7               	movwf	((??_TCP_Snd+20)^(0+128)+3)
 18348  1614  3018               	movlw	24
 18349  1615                     u6125:
 18350  1615  36B7               	lsrf	((??_TCP_Snd+20)^(0+128)+3),f
 18351  1616  0CB6               	rrf	((??_TCP_Snd+20)^(0+128)+2),f
 18352  1617  0CB5               	rrf	((??_TCP_Snd+20)^(0+128)+1),f
 18353  1618  0CB4               	rrf	(??_TCP_Snd+20)^(0+128),f
 18354  1619  0B89               	decfsz	9,f
 18355  161A  2E15               	goto	u6125
 18356  161B  0834               	movf	(??_TCP_Snd+20)^(0+128),w
 18357  161C  05B0               	andwf	(??_TCP_Snd+16)^(0+128),f
 18358  161D  0835               	movf	(??_TCP_Snd+21)^(0+128),w
 18359  161E  05B1               	andwf	((??_TCP_Snd+16)^(0+128)+1),f
 18360  161F  0836               	movf	(??_TCP_Snd+22)^(0+128),w
 18361  1620  05B2               	andwf	((??_TCP_Snd+16)^(0+128)+2),f
 18362  1621  0837               	movf	(??_TCP_Snd+23)^(0+128),w
 18363  1622  05B3               	andwf	((??_TCP_Snd+16)^(0+128)+3),f
 18364  1623  0830               	movf	(??_TCP_Snd+16)^(0+128),w
 18365  1624  04A8               	iorwf	(??_TCP_Snd+8)^(0+128),f
 18366  1625  0831               	movf	(??_TCP_Snd+17)^(0+128),w
 18367  1626  04A9               	iorwf	((??_TCP_Snd+8)^(0+128)+1),f
 18368  1627  0832               	movf	(??_TCP_Snd+18)^(0+128),w
 18369  1628  04AA               	iorwf	((??_TCP_Snd+8)^(0+128)+2),f
 18370  1629  0833               	movf	(??_TCP_Snd+19)^(0+128),w
 18371  162A  04AB               	iorwf	((??_TCP_Snd+8)^(0+128)+3),f
 18372  162B  0828               	movf	(??_TCP_Snd+8)^(0+128),w
 18373  162C  04A4               	iorwf	(??_TCP_Snd+4)^(0+128),f
 18374  162D  0829               	movf	(??_TCP_Snd+9)^(0+128),w
 18375  162E  04A5               	iorwf	((??_TCP_Snd+4)^(0+128)+1),f
 18376  162F  082A               	movf	(??_TCP_Snd+10)^(0+128),w
 18377  1630  04A6               	iorwf	((??_TCP_Snd+4)^(0+128)+2),f
 18378  1631  082B               	movf	(??_TCP_Snd+11)^(0+128),w
 18379  1632  04A7               	iorwf	((??_TCP_Snd+4)^(0+128)+3),f
 18380  1633  0820               	movf	??_TCP_Snd^(0+128),w
 18381  1634  0424               	iorwf	(??_TCP_Snd+4)^(0+128),w
 18382  1635  00C8               	movwf	(TCP_Snd@txHeader^(0+128)+8)
 18383  1636  0821               	movf	(??_TCP_Snd+1)^(0+128),w
 18384  1637  0425               	iorwf	(??_TCP_Snd+5)^(0+128),w
 18385  1638  00C9               	movwf	((TCP_Snd@txHeader+1)^(0+128)+8)
 18386  1639  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18387  163A  0426               	iorwf	(??_TCP_Snd+6)^(0+128),w
 18388  163B  00CA               	movwf	((TCP_Snd@txHeader+2)^(0+128)+8)
 18389  163C  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18390  163D  0427               	iorwf	(??_TCP_Snd+7)^(0+128),w
 18391  163E  00CB               	movwf	((TCP_Snd@txHeader+3)^(0+128)+8)
 18392                           
 18393                           ;tcpv4.c: 212: txHeader.ns = 0;
 18394  163F  104C               	bcf	(TCP_Snd@txHeader^(0+128)+12),0
 18395                           
 18396                           ;tcpv4.c: 213: txHeader.reserved = 0;
 18397  1640  30F1               	movlw	-15
 18398  1641  05CC               	andwf	(TCP_Snd@txHeader^(0+128)+12),f
 18399                           
 18400                           ;tcpv4.c: 214: txHeader.dataOffset = 5;
 18401  1642  084C               	movf	(TCP_Snd@txHeader^(0+128)+12),w
 18402  1643  390F               	andlw	-241
 18403  1644  3850               	iorlw	80
 18404  1645  00CC               	movwf	(TCP_Snd@txHeader^(0+128)+12)
 18405                           
 18406                           ;tcpv4.c: 215: txHeader.windowSize = ((((uint16_t)tcbPtr->localWnd & (uint16_t)0xFF00) >
      +                          > 8) | (((uint16_t)tcbPtr->localWnd & (uint16_t)0x00FF) << 8));
 18407  1646  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18408  1647  3E1A               	addlw	26
 18409  1648  0086               	movwf	6
 18410  1649  3002               	movlw	2	; select bank4/5
 18411  164A  0087               	movwf	7
 18412  164B  3F40               	moviw [0]fsr1
 18413  164C  00A0               	movwf	??_TCP_Snd^(0+128)
 18414  164D  3F41               	moviw [1]fsr1
 18415  164E  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18416  164F  30FF               	movlw	255
 18417  1650  0520               	andwf	??_TCP_Snd^(0+128),w
 18418  1651  00A2               	movwf	(??_TCP_Snd+2)^(0+128)
 18419  1652  3000               	movlw	0
 18420  1653  0521               	andwf	(??_TCP_Snd+1)^(0+128),w
 18421  1654  00A3               	movwf	(??_TCP_Snd+3)^(0+128)
 18422  1655  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18423  1656  00A3               	movwf	((??_TCP_Snd+2)^(0+128)+1)
 18424  1657  01A2               	clrf	(??_TCP_Snd+2)^(0+128)
 18425  1658  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18426  1659  3E1A               	addlw	26
 18427  165A  0086               	movwf	6
 18428  165B  3002               	movlw	2	; select bank4/5
 18429  165C  0087               	movwf	7
 18430  165D  3F40               	moviw [0]fsr1
 18431  165E  00A5               	movwf	(??_TCP_Snd+5)^(0+128)
 18432  165F  3F41               	moviw [1]fsr1
 18433  1660  00A6               	movwf	((??_TCP_Snd+5)^(0+128)+1)
 18434  1661  0826               	movf	((??_TCP_Snd+5)^(0+128)+1),w
 18435  1662  00A5               	movwf	(??_TCP_Snd+5)^(0+128)
 18436  1663  01A6               	clrf	((??_TCP_Snd+5)^(0+128)+1)
 18437  1664  30FF               	movlw	255
 18438  1665  0525               	andwf	(??_TCP_Snd+5)^(0+128),w
 18439  1666  00A7               	movwf	(??_TCP_Snd+7)^(0+128)
 18440  1667  3000               	movlw	0
 18441  1668  0526               	andwf	(??_TCP_Snd+6)^(0+128),w
 18442  1669  00A8               	movwf	(??_TCP_Snd+8)^(0+128)
 18443  166A  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18444  166B  0427               	iorwf	(??_TCP_Snd+7)^(0+128),w
 18445  166C  00CE               	movwf	(TCP_Snd@txHeader^(0+128)+14)
 18446  166D  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18447  166E  0428               	iorwf	(??_TCP_Snd+8)^(0+128),w
 18448  166F  00CF               	movwf	((TCP_Snd@txHeader+1)^(0+128)+14)
 18449                           
 18450                           ;tcpv4.c: 216: txHeader.checksum = 0;
 18451  1670  01D0               	clrf	(TCP_Snd@txHeader^(0+128)+16)
 18452  1671  01D1               	clrf	((TCP_Snd@txHeader+1)^(0+128)+16)
 18453                           
 18454                           ;tcpv4.c: 217: txHeader.urgentPtr = 0;
 18455  1672  01D2               	clrf	(TCP_Snd@txHeader^(0+128)+18)
 18456  1673  01D3               	clrf	((TCP_Snd@txHeader+1)^(0+128)+18)
 18457                           
 18458                           ;tcpv4.c: 219: if ((tcbPtr->flags) & (0x02U | 0x04U))
 18459  1674  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18460  1675  3E32               	addlw	50
 18461  1676  0086               	movwf	6
 18462  1677  3002               	movlw	2	; select bank4/5
 18463  1678  0087               	movwf	7
 18464  1679  0801               	movf	1,w
 18465  167A  3906               	andlw	6
 18466  167B  1903               	btfsc	3,2
 18467  167C  2E80               	goto	l7410
 18468  167D                     l7408:
 18469                           
 18470                           ;tcpv4.c: 220: {;tcpv4.c: 221: tcpDataLength = 0;
 18471  167D  01BE               	clrf	TCP_Snd@tcpDataLength^(0+128)
 18472  167E  01BF               	clrf	(TCP_Snd@tcpDataLength+1)^(0+128)
 18473                           
 18474                           ;tcpv4.c: 222: }
 18475  167F  2F23               	goto	l168
 18476  1680                     l7410:
 18477                           
 18478                           ;tcpv4.c: 223: else if(tcbPtr->payloadSave == 1)
 18479  1680  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18480  1681  3E28               	addlw	40
 18481  1682  0086               	movwf	6
 18482  1683  3002               	movlw	2	; select bank4/5
 18483  1684  0087               	movwf	7
 18484  1685  0301               	decf	1,w
 18485  1686  1903               	btfsc	3,2
 18486  1687  2E7D               	goto	l7408
 18487                           
 18488                           ;tcpv4.c: 227: {;tcpv4.c: 228: tcpDataLength = tcbPtr->bytesSent;
 18489  1688  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18490  1689  3E26               	addlw	38
 18491  168A  0086               	movwf	6
 18492  168B  3002               	movlw	2	; select bank4/5
 18493  168C  0087               	movwf	7
 18494  168D  3F40               	moviw [0]fsr1
 18495  168E  00BE               	movwf	TCP_Snd@tcpDataLength^(0+128)
 18496  168F  3F41               	moviw [1]fsr1
 18497  1690  00BF               	movwf	(TCP_Snd@tcpDataLength+1)^(0+128)
 18498                           
 18499                           ;tcpv4.c: 230: if (tcpDataLength != 0)
 18500  1691  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18501  1692  043F               	iorwf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18502  1693  1903               	btfsc	3,2
 18503  1694  2F23               	goto	l168
 18504                           
 18505                           ;tcpv4.c: 231: {;tcpv4.c: 232: if(tcbPtr->remoteWnd == 0)
 18506  1695  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18507  1696  3E18               	addlw	24
 18508  1697  0086               	movwf	6
 18509  1698  3002               	movlw	2	; select bank4/5
 18510  1699  0087               	movwf	7
 18511  169A  0016               	moviw fsr1++
 18512  169B  0401               	iorwf	1,w
 18513  169C  1D03               	btfss	3,2
 18514  169D  2EA7               	goto	l172
 18515                           
 18516                           ;tcpv4.c: 233: {;tcpv4.c: 234: tcbPtr->remoteWnd = 1;
 18517  169E  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18518  169F  3E18               	addlw	24
 18519  16A0  0086               	movwf	6
 18520  16A1  3002               	movlw	2	; select bank4/5
 18521  16A2  0087               	movwf	7
 18522  16A3  3001               	movlw	1
 18523  16A4  3FC0               	movwi [0]fsr1
 18524  16A5  3000               	movlw	0
 18525  16A6  3FC1               	movwi [1]fsr1
 18526  16A7                     l172:
 18527                           
 18528                           ;tcpv4.c: 235: };tcpv4.c: 236: if(tcpDataLength > tcbPtr->remoteWnd)
 18529  16A7  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18530  16A8  3E18               	addlw	24
 18531  16A9  0086               	movwf	6
 18532  16AA  3002               	movlw	2	; select bank4/5
 18533  16AB  0087               	movwf	7
 18534  16AC  3F40               	moviw [0]fsr1
 18535  16AD  00A0               	movwf	??_TCP_Snd^(0+128)
 18536  16AE  3F41               	moviw [1]fsr1
 18537  16AF  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18538  16B0  083F               	movf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18539  16B1  0221               	subwf	(??_TCP_Snd+1)^(0+128),w
 18540  16B2  1D03               	skipz
 18541  16B3  2EB6               	goto	u6175
 18542  16B4  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18543  16B5  0220               	subwf	??_TCP_Snd^(0+128),w
 18544  16B6                     u6175:
 18545  16B6  1803               	skipnc
 18546  16B7  2EC1               	goto	l173
 18547                           
 18548                           ;tcpv4.c: 237: {;tcpv4.c: 238: tcpDataLength = tcbPtr->remoteWnd;
 18549  16B8  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18550  16B9  3E18               	addlw	24
 18551  16BA  0086               	movwf	6
 18552  16BB  3002               	movlw	2	; select bank4/5
 18553  16BC  0087               	movwf	7
 18554  16BD  3F40               	moviw [0]fsr1
 18555  16BE  00BE               	movwf	TCP_Snd@tcpDataLength^(0+128)
 18556  16BF  3F41               	moviw [1]fsr1
 18557  16C0  00BF               	movwf	(TCP_Snd@tcpDataLength+1)^(0+128)
 18558  16C1                     l173:
 18559                           
 18560                           ;tcpv4.c: 239: };tcpv4.c: 241: if(tcpDataLength > tcbPtr->mss)
 18561  16C1  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18562  16C2  3E1C               	addlw	28
 18563  16C3  0086               	movwf	6
 18564  16C4  3002               	movlw	2	; select bank4/5
 18565  16C5  0087               	movwf	7
 18566  16C6  3F40               	moviw [0]fsr1
 18567  16C7  00A0               	movwf	??_TCP_Snd^(0+128)
 18568  16C8  3F41               	moviw [1]fsr1
 18569  16C9  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18570  16CA  083F               	movf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18571  16CB  0221               	subwf	(??_TCP_Snd+1)^(0+128),w
 18572  16CC  1D03               	skipz
 18573  16CD  2ED0               	goto	u6185
 18574  16CE  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18575  16CF  0220               	subwf	??_TCP_Snd^(0+128),w
 18576  16D0                     u6185:
 18577  16D0  1803               	skipnc
 18578  16D1  2EDB               	goto	l174
 18579                           
 18580                           ;tcpv4.c: 242: {;tcpv4.c: 243: tcpDataLength = tcbPtr->mss;
 18581  16D2  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18582  16D3  3E1C               	addlw	28
 18583  16D4  0086               	movwf	6
 18584  16D5  3002               	movlw	2	; select bank4/5
 18585  16D6  0087               	movwf	7
 18586  16D7  3F40               	moviw [0]fsr1
 18587  16D8  00BE               	movwf	TCP_Snd@tcpDataLength^(0+128)
 18588  16D9  3F41               	moviw [1]fsr1
 18589  16DA  00BF               	movwf	(TCP_Snd@tcpDataLength+1)^(0+128)
 18590  16DB                     l174:
 18591                           
 18592                           ;tcpv4.c: 244: };tcpv4.c: 245: data = (uint8_t *)tcbPtr->txBufferStart;
 18593  16DB  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18594  16DC  3E21               	addlw	33
 18595  16DD  0086               	movwf	6
 18596  16DE  3002               	movlw	2	; select bank4/5
 18597  16DF  0087               	movwf	7
 18598  16E0  0801               	movf	1,w
 18599  16E1  00A0               	movwf	??_TCP_Snd^(0+128)
 18600  16E2  0820               	movf	??_TCP_Snd^(0+128),w
 18601  16E3  00B8               	movwf	TCP_Snd@data^(0+128)
 18602                           
 18603                           ;tcpv4.c: 248: tcbPtr->txBufferPtr = tcbPtr->txBufferPtr + tcpDataLength;
 18604  16E4  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18605  16E5  3E22               	addlw	34
 18606  16E6  0086               	movwf	6
 18607  16E7  3002               	movlw	2	; select bank4/5
 18608  16E8  0087               	movwf	7
 18609  16E9  0801               	movf	1,w
 18610  16EA  073E               	addwf	TCP_Snd@tcpDataLength^(0+128),w
 18611  16EB  00A0               	movwf	??_TCP_Snd^(0+128)
 18612  16EC  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18613  16ED  3E22               	addlw	34
 18614  16EE  0086               	movwf	6
 18615  16EF  3002               	movlw	2	; select bank4/5
 18616  16F0  0087               	movwf	7
 18617  16F1  0820               	movf	??_TCP_Snd^(0+128),w
 18618  16F2  0081               	movwf	1
 18619                           
 18620                           ;tcpv4.c: 249: tcbPtr->bytesToSend = tcbPtr->bytesSent - tcpDataLength;
 18621  16F3  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18622  16F4  3E26               	addlw	38
 18623  16F5  0086               	movwf	6
 18624  16F6  3002               	movlw	2	; select bank4/5
 18625  16F7  0087               	movwf	7
 18626  16F8  3F40               	moviw [0]fsr1
 18627  16F9  00A0               	movwf	??_TCP_Snd^(0+128)
 18628  16FA  3F41               	moviw [1]fsr1
 18629  16FB  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18630  16FC  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18631  16FD  0220               	subwf	??_TCP_Snd^(0+128),w
 18632  16FE  00A2               	movwf	(??_TCP_Snd+2)^(0+128)
 18633  16FF  083F               	movf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18634  1700  3B21               	subwfb	(??_TCP_Snd+1)^(0+128),w
 18635  1701  00A3               	movwf	(??_TCP_Snd+3)^(0+128)
 18636  1702  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18637  1703  3E23               	addlw	35
 18638  1704  0086               	movwf	6
 18639  1705  3002               	movlw	2	; select bank4/5
 18640  1706  0087               	movwf	7
 18641  1707  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18642  1708  3FC0               	movwi [0]fsr1
 18643  1709  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18644  170A  3FC1               	movwi [1]fsr1
 18645                           
 18646                           ;tcpv4.c: 251: if (tcbPtr->bytesToSend == 0)
 18647  170B  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18648  170C  3E23               	addlw	35
 18649  170D  0086               	movwf	6
 18650  170E  3002               	movlw	2	; select bank4/5
 18651  170F  0087               	movwf	7
 18652  1710  0016               	moviw fsr1++
 18653  1711  0401               	iorwf	1,w
 18654  1712  1D03               	btfss	3,2
 18655  1713  2F23               	goto	l168
 18656                           
 18657                           ;tcpv4.c: 252: {;tcpv4.c: 253: tcbPtr->flags = tcbPtr->flags | 0x08U;
 18658  1714  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18659  1715  3E32               	addlw	50
 18660  1716  0086               	movwf	6
 18661  1717  3002               	movlw	2	; select bank4/5
 18662  1718  0087               	movwf	7
 18663  1719  0801               	movf	1,w
 18664  171A  3808               	iorlw	8
 18665  171B  00A0               	movwf	??_TCP_Snd^(0+128)
 18666  171C  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18667  171D  3E32               	addlw	50
 18668  171E  0086               	movwf	6
 18669  171F  3002               	movlw	2	; select bank4/5
 18670  1720  0087               	movwf	7
 18671  1721  0820               	movf	??_TCP_Snd^(0+128),w
 18672  1722  0081               	movwf	1
 18673  1723                     l168:
 18674                           
 18675                           ;tcpv4.c: 254: };tcpv4.c: 255: };tcpv4.c: 256: };tcpv4.c: 258: txHeader.flags = tcbPtr->
      +                          flags;
 18676  1723  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18677  1724  3E32               	addlw	50
 18678  1725  0086               	movwf	6
 18679  1726  3002               	movlw	2	; select bank4/5
 18680  1727  0087               	movwf	7
 18681  1728  0801               	movf	1,w
 18682  1729  00A0               	movwf	??_TCP_Snd^(0+128)
 18683  172A  0820               	movf	??_TCP_Snd^(0+128),w
 18684  172B  00CD               	movwf	(TCP_Snd@txHeader^(0+128)+13)
 18685                           
 18686                           ;tcpv4.c: 259: payloadLength = sizeof(tcpHeader_t) + tcpDataLength;
 18687  172C  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18688  172D  3E14               	addlw	20
 18689  172E  00BB               	movwf	TCP_Snd@payloadLength^(0+128)
 18690  172F  3000               	movlw	0
 18691  1730  3D3F               	addwfc	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18692  1731  00BC               	movwf	(TCP_Snd@payloadLength+1)^(0+128)
 18693                           
 18694                           ;tcpv4.c: 261: ret = IPv4_Start(tcbPtr->destIP, TCP_TCPIP);
 18695  1732  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18696  1733  3E02               	addlw	2
 18697  1734  0086               	movwf	6
 18698  1735  3002               	movlw	2	; select bank4/5
 18699  1736  0087               	movwf	7
 18700  1737  3F40               	moviw [0]fsr1
 18701  1738  0020               	movlb	0	; select bank0
 18702  1739  00D9               	movwf	IPv4_Start@destAddress
 18703  173A  3F41               	moviw [1]fsr1
 18704  173B  00DA               	movwf	IPv4_Start@destAddress+1
 18705  173C  3F42               	moviw [2]fsr1
 18706  173D  00DB               	movwf	IPv4_Start@destAddress+2
 18707  173E  3F43               	moviw [3]fsr1
 18708  173F  00DC               	movwf	IPv4_Start@destAddress+3
 18709  1740  3006               	movlw	6
 18710  1741  0021               	movlb	1	; select bank1
 18711  1742  00A0               	movwf	??_TCP_Snd^(0+128)
 18712  1743  0820               	movf	??_TCP_Snd^(0+128),w
 18713  1744  0020               	movlb	0	; select bank0
 18714  1745  00DD               	movwf	IPv4_Start@protocol
 18715  1746  3190  2084  3194   	fcall	_IPv4_Start
 18716  1749  0021               	movlb	1	; select bank1
 18717  174A  00A1               	movwf	(??_TCP_Snd+1)^(0+128)
 18718  174B  0821               	movf	(??_TCP_Snd+1)^(0+128),w
 18719  174C  00BD               	movwf	TCP_Snd@ret^(0+128)
 18720                           
 18721                           ;tcpv4.c: 262: if (ret == SUCCESS)
 18722  174D  033D               	decf	TCP_Snd@ret^(0+128),w
 18723  174E  1D03               	btfss	3,2
 18724  174F  2FB1               	goto	l7448
 18725                           
 18726                           ;tcpv4.c: 263: {;tcpv4.c: 264: ETH_WriteBlock((uint8_t *) &txHeader, sizeof(tcpHeader_t)
      +                          );
 18727  1750  30C0               	movlw	low TCP_Snd@txHeader
 18728  1751  00F1               	movwf	ETH_WriteBlock@data
 18729  1752  3000               	movlw	high TCP_Snd@txHeader
 18730  1753  00F2               	movwf	ETH_WriteBlock@data+1
 18731  1754  3014               	movlw	20
 18732  1755  00F3               	movwf	ETH_WriteBlock@length
 18733  1756  3000               	movlw	0
 18734  1757  00F4               	movwf	ETH_WriteBlock@length+1
 18735  1758  31AC  24E2  3194   	fcall	_ETH_WriteBlock
 18736                           
 18737                           ;tcpv4.c: 266: if (tcpDataLength > 0)
 18738  175B  0021               	movlb	1	; select bank1
 18739  175C  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18740  175D  043F               	iorwf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18741  175E  1903               	btfsc	3,2
 18742  175F  2F6D               	goto	l7440
 18743                           
 18744                           ;tcpv4.c: 267: {;tcpv4.c: 268: ETH_WriteBlock( data, tcpDataLength);
 18745  1760  0838               	movf	TCP_Snd@data^(0+128),w
 18746  1761  00F1               	movwf	ETH_WriteBlock@data
 18747  1762  39FF               	andlw	255
 18748  1763  1D03               	skipz
 18749  1764  3003               	movlw	3
 18750  1765  00F2               	movwf	ETH_WriteBlock@data+1
 18751  1766  083F               	movf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18752  1767  00F4               	movwf	ETH_WriteBlock@length+1
 18753  1768  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18754  1769  00F3               	movwf	ETH_WriteBlock@length
 18755  176A  31AC  24E2  3194   	fcall	_ETH_WriteBlock
 18756  176D                     l7440:
 18757                           
 18758                           ;tcpv4.c: 269: };tcpv4.c: 271: cksm = payloadLength + TCP_TCPIP;
 18759  176D  0021               	movlb	1	; select bank1
 18760  176E  083B               	movf	TCP_Snd@payloadLength^(0+128),w
 18761  176F  3E06               	addlw	6
 18762  1770  00B9               	movwf	TCP_Snd@cksm^(0+128)
 18763  1771  3000               	movlw	0
 18764  1772  3D3C               	addwfc	(TCP_Snd@payloadLength+1)^(0+128),w
 18765  1773  00BA               	movwf	(TCP_Snd@cksm+1)^(0+128)
 18766                           
 18767                           ;tcpv4.c: 273: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) - 8, payloadLength + 8, cksm);
 18768  1774  301A               	movlw	26
 18769  1775  0020               	movlb	0	; select bank0
 18770  1776  00A0               	movwf	ETH_TxComputeChecksum@position
 18771  1777  3000               	movlw	0
 18772  1778  00A1               	movwf	ETH_TxComputeChecksum@position+1
 18773  1779  0021               	movlb	1	; select bank1
 18774  177A  083B               	movf	TCP_Snd@payloadLength^(0+128),w
 18775  177B  3E08               	addlw	8
 18776  177C  0020               	movlb	0	; select bank0
 18777  177D  00A2               	movwf	ETH_TxComputeChecksum@length
 18778  177E  3000               	movlw	0
 18779  177F  0021               	movlb	1	; select bank1
 18780  1780  3D3C               	addwfc	(TCP_Snd@payloadLength+1)^(0+128),w
 18781  1781  0020               	movlb	0	; select bank0
 18782  1782  00A3               	movwf	ETH_TxComputeChecksum@length+1
 18783  1783  0021               	movlb	1	; select bank1
 18784  1784  083A               	movf	(TCP_Snd@cksm+1)^(0+128),w
 18785  1785  0020               	movlb	0	; select bank0
 18786  1786  00A5               	movwf	ETH_TxComputeChecksum@seed+1
 18787  1787  0021               	movlb	1	; select bank1
 18788  1788  0839               	movf	TCP_Snd@cksm^(0+128),w
 18789  1789  0020               	movlb	0	; select bank0
 18790  178A  00A4               	movwf	ETH_TxComputeChecksum@seed
 18791  178B  31A5  2529  3194   	fcall	_ETH_TxComputeChecksum
 18792  178E  0821               	movf	?_ETH_TxComputeChecksum+1,w
 18793  178F  0021               	movlb	1	; select bank1
 18794  1790  00BA               	movwf	(TCP_Snd@cksm+1)^(0+128)
 18795  1791  0020               	movlb	0	; select bank0
 18796  1792  0820               	movf	?_ETH_TxComputeChecksum,w
 18797  1793  0021               	movlb	1	; select bank1
 18798  1794  00B9               	movwf	TCP_Snd@cksm^(0+128)
 18799                           
 18800                           ;tcpv4.c: 274: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + sizeof(ipv4Header_
      +                          t) + (size_t)(((char*)&((tcpHeader_t *)1)->checksum)-1));
 18801  1795  3002               	movlw	2
 18802  1796  0020               	movlb	0	; select bank0
 18803  1797  00A0               	movwf	ETH_Insert@len
 18804  1798  3000               	movlw	0
 18805  1799  00A1               	movwf	ETH_Insert@len+1
 18806  179A  3032               	movlw	50
 18807  179B  00A2               	movwf	ETH_Insert@offset
 18808  179C  3000               	movlw	0
 18809  179D  00A3               	movwf	ETH_Insert@offset+1
 18810  179E  30B9               	movlw	(low (TCP_Snd@cksm| 0))& (0+255)
 18811  179F  31AF  277E  3194   	fcall	_ETH_Insert
 18812                           
 18813                           ;tcpv4.c: 276: ret = IPV4_Send(payloadLength);
 18814  17A2  0021               	movlb	1	; select bank1
 18815  17A3  083C               	movf	(TCP_Snd@payloadLength+1)^(0+128),w
 18816  17A4  0020               	movlb	0	; select bank0
 18817  17A5  00B4               	movwf	IPV4_Send@payloadLength+1
 18818  17A6  0021               	movlb	1	; select bank1
 18819  17A7  083B               	movf	TCP_Snd@payloadLength^(0+128),w
 18820  17A8  0020               	movlb	0	; select bank0
 18821  17A9  00B3               	movwf	IPV4_Send@payloadLength
 18822  17AA  31A0  2018  3194   	fcall	_IPV4_Send
 18823  17AD  0021               	movlb	1	; select bank1
 18824  17AE  00A0               	movwf	??_TCP_Snd^(0+128)
 18825  17AF  0820               	movf	??_TCP_Snd^(0+128),w
 18826  17B0  00BD               	movwf	TCP_Snd@ret^(0+128)
 18827  17B1                     l7448:
 18828                           
 18829                           ;tcpv4.c: 278: };tcpv4.c: 282: if (ret != SUCCESS)
 18830  17B1  033D               	decf	TCP_Snd@ret^(0+128),w
 18831  17B2  1903               	btfsc	3,2
 18832  17B3  2FD6               	goto	l7454
 18833                           
 18834                           ;tcpv4.c: 283: {;tcpv4.c: 286: tcbPtr->timeoutsCount = tcbPtr->timeoutsCount + 1;
 18835  17B4  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18836  17B5  3E31               	addlw	49
 18837  17B6  0086               	movwf	6
 18838  17B7  3002               	movlw	2	; select bank4/5
 18839  17B8  0087               	movwf	7
 18840  17B9  0801               	movf	1,w
 18841  17BA  3E01               	addlw	1
 18842  17BB  00A0               	movwf	??_TCP_Snd^(0+128)
 18843  17BC  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18844  17BD  3E31               	addlw	49
 18845  17BE  0086               	movwf	6
 18846  17BF  3002               	movlw	2	; select bank4/5
 18847  17C0  0087               	movwf	7
 18848  17C1  0820               	movf	??_TCP_Snd^(0+128),w
 18849  17C2  0081               	movwf	1
 18850                           
 18851                           ;tcpv4.c: 288: if (tcbPtr->timeout == 0)
 18852  17C3  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18853  17C4  3E2D               	addlw	45
 18854  17C5  0086               	movwf	6
 18855  17C6  3002               	movlw	2	; select bank4/5
 18856  17C7  0087               	movwf	7
 18857  17C8  0016               	moviw fsr1++
 18858  17C9  0401               	iorwf	1,w
 18859  17CA  1D03               	btfss	3,2
 18860  17CB  2FFE               	goto	l7456
 18861                           
 18862                           ;tcpv4.c: 289: {;tcpv4.c: 290: tcbPtr->timeout = ((unsigned long)1*2);
 18863  17CC  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18864  17CD  3E2D               	addlw	45
 18865  17CE  0086               	movwf	6
 18866  17CF  3002               	movlw	2	; select bank4/5
 18867  17D0  0087               	movwf	7
 18868  17D1  3002               	movlw	2
 18869  17D2  3FC0               	movwi [0]fsr1
 18870  17D3  3000               	movlw	0
 18871  17D4  3FC1               	movwi [1]fsr1
 18872  17D5  2FFE               	goto	l7456
 18873  17D6                     l7454:
 18874                           
 18875                           ;tcpv4.c: 293: else;tcpv4.c: 294: {;tcpv4.c: 296: tcbPtr->localSeqno = tcbPtr->localSeqn
      +                          o + tcpDataLength;
 18876  17D6  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18877  17D7  3E10               	addlw	16
 18878  17D8  0086               	movwf	6
 18879  17D9  3002               	movlw	2	; select bank4/5
 18880  17DA  0087               	movwf	7
 18881  17DB  3F40               	moviw [0]fsr1
 18882  17DC  00A0               	movwf	??_TCP_Snd^(0+128)
 18883  17DD  3F41               	moviw [1]fsr1
 18884  17DE  00A1               	movwf	(??_TCP_Snd^(0+128)+1)
 18885  17DF  3F42               	moviw [2]fsr1
 18886  17E0  00A2               	movwf	(??_TCP_Snd^(0+128)+2)
 18887  17E1  3F43               	moviw [3]fsr1
 18888  17E2  00A3               	movwf	(??_TCP_Snd^(0+128)+3)
 18889  17E3  083E               	movf	TCP_Snd@tcpDataLength^(0+128),w
 18890  17E4  00A4               	movwf	(??_TCP_Snd+4)^(0+128)
 18891  17E5  083F               	movf	(TCP_Snd@tcpDataLength+1)^(0+128),w
 18892  17E6  00A5               	movwf	((??_TCP_Snd+4)^(0+128)+1)
 18893  17E7  01A6               	clrf	((??_TCP_Snd+4)^(0+128)+2)
 18894  17E8  01A7               	clrf	((??_TCP_Snd+4)^(0+128)+3)
 18895  17E9  0824               	movf	(??_TCP_Snd+4)^(0+128),w
 18896  17EA  07A0               	addwf	??_TCP_Snd^(0+128),f
 18897  17EB  0825               	movf	(??_TCP_Snd+5)^(0+128),w
 18898  17EC  3DA1               	addwfc	(??_TCP_Snd^(0+128)+1),f
 18899  17ED  0826               	movf	(??_TCP_Snd+6)^(0+128),w
 18900  17EE  3DA2               	addwfc	(??_TCP_Snd^(0+128)+2),f
 18901  17EF  0827               	movf	(??_TCP_Snd+7)^(0+128),w
 18902  17F0  3DA3               	addwfc	(??_TCP_Snd^(0+128)+3),f
 18903  17F1  0854               	movf	TCP_Snd@tcbPtr^(0+128),w
 18904  17F2  3E10               	addlw	16
 18905  17F3  0086               	movwf	6
 18906  17F4  3002               	movlw	2	; select bank4/5
 18907  17F5  0087               	movwf	7
 18908  17F6  0820               	movf	??_TCP_Snd^(0+128),w
 18909  17F7  3FC0               	movwi [0]fsr1
 18910  17F8  0821               	movf	(??_TCP_Snd+1)^(0+128),w
 18911  17F9  3FC1               	movwi [1]fsr1
 18912  17FA  0822               	movf	(??_TCP_Snd+2)^(0+128),w
 18913  17FB  3FC2               	movwi [2]fsr1
 18914  17FC  0823               	movf	(??_TCP_Snd+3)^(0+128),w
 18915  17FD  3FC3               	movwi [3]fsr1
 18916  17FE                     l7456:
 18917                           
 18918                           ;tcpv4.c: 297: };tcpv4.c: 299: return ret;
 18919  17FE  083D               	movf	TCP_Snd@ret^(0+128),w
 18920  17FF  0008               	return
 18921  1800                     __end_of_TCP_Snd:
 18922                           
 18923                           	psect	text72
 18924  1084                     __ptext72:	
 18925 ;; *************** function _IPv4_Start *****************
 18926 ;; Defined at:
 18927 ;;		line 202 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 18928 ;; Parameters:    Size  Location     Type
 18929 ;;  destAddress     4   57[BANK0 ] unsigned long 
 18930 ;;  protocol        1   61[BANK0 ] enum E234
 18931 ;; Auto vars:     Size  Location     Type
 18932 ;;  targetAddres    4   70[BANK0 ] unsigned long 
 18933 ;;  macAddress      2   74[BANK0 ] PTR const struct .
 18934 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), arpMap(104), NULL(0), 
 18935 ;;  ret             1   76[BANK0 ] enum E390
 18936 ;; Return value:  Size  Location     Type
 18937 ;;                  1    wreg      enum E479
 18938 ;; Registers used:
 18939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18940 ;; Tracked objects:
 18941 ;;		On entry : 1F/0
 18942 ;;		On exit  : 1F/0
 18943 ;;		Unchanged: 0/0
 18944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18945 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18946 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18947 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18948 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18949 ;;Total ram usage:       20 bytes
 18950 ;; Hardware stack levels used:    1
 18951 ;; Hardware stack levels required when called:    8
 18952 ;; This function calls:
 18953 ;;		_ARPV4_Lookup
 18954 ;;		_ARPV4_Request
 18955 ;;		_ETH_Write16
 18956 ;;		_ETH_Write32
 18957 ;;		_ETH_Write8
 18958 ;;		_ETH_WriteStart
 18959 ;; This function is called by:
 18960 ;;		_TCP_Snd
 18961 ;;		_ICMP_EchoReply
 18962 ;; This function uses a non-reentrant model
 18963 ;;
 18964                           
 18965                           
 18966                           ;psect for function _IPv4_Start
 18967  1084                     _IPv4_Start:
 18968                           
 18969                           ;ipv4.c: 204: error_msg ret = ERROR;
 18970                           
 18971                           ;incstack = 0
 18972                           ; Regs used in _IPv4_Start: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18973  1084  01EC               	clrf	IPv4_Start@ret
 18974                           
 18975                           ;ipv4.c: 206: const mac48Address_t *macAddress;;ipv4.c: 207: uint32_t targetAddress;;ipv
      +                          4.c: 210: if((((ip_database_info.ipv4_myAddress) != 0) || (protocol == UDP_TCPIP));ipv4.
      +                          c: 211: && ((ip_database_info.ipv4_myAddress) != 0x7F000001))
 18976  1085  0024               	movlb	4	; select bank4
 18977  1086  0823               	movf	(_ip_database_info+3)^(0+512),w
 18978  1087  0422               	iorwf	(_ip_database_info+2)^(0+512),w
 18979  1088  0421               	iorwf	(_ip_database_info+1)^(0+512),w
 18980  1089  0420               	iorwf	_ip_database_info^(0+512),w
 18981  108A  1D03               	skipz
 18982  108B  2891               	goto	l7322
 18983  108C  3011               	movlw	17
 18984  108D  0020               	movlb	0	; select bank0
 18985  108E  065D               	xorwf	IPv4_Start@protocol,w
 18986  108F  1D03               	btfss	3,2
 18987  1090  2953               	goto	l7344
 18988  1091                     l7322:
 18989  1091  0024               	movlb	4	; select bank4
 18990  1092  0320               	decf	_ip_database_info^(0+512),w
 18991  1093  307F               	movlw	127
 18992  1094  1903               	skipnz
 18993  1095  0623               	xorwf	(_ip_database_info+3)^(0+512),w
 18994  1096  0421               	iorwf	(_ip_database_info+1)^(0+512),w
 18995  1097  0422               	iorwf	(_ip_database_info+2)^(0+512),w
 18996  1098  1903               	btfsc	3,2
 18997  1099  2953               	goto	l7344
 18998                           
 18999                           ;ipv4.c: 212: {;ipv4.c: 213: if(((destAddress == 0xFFFFFFFF);ipv4.c: 214: |((destAddress
      +                           | 0XFF000000) == 0xFFFFFFFF);ipv4.c: 215: |((destAddress | 0xFFFF0000 )== 0xFFFFFFFF);i
      +                          pv4.c: 216: |((destAddress | 0xFFFFFF00) == 0xFFFFFFFF))==0)
 19000  109A  0020               	movlb	0	; select bank0
 19001  109B  0A59               	incf	IPv4_Start@destAddress,w
 19002  109C  1D03               	skipz
 19003  109D  28A6               	goto	l7326
 19004  109E  0A5A               	incf	IPv4_Start@destAddress+1,w
 19005  109F  1D03               	skipz
 19006  10A0  28A6               	goto	l7326
 19007  10A1  0A5B               	incf	IPv4_Start@destAddress+2,w
 19008  10A2  1903               	btfsc	3,2
 19009  10A3  0A5C               	incf	IPv4_Start@destAddress+3,w
 19010  10A4  1903               	btfsc	3,2
 19011  10A5  2956               	goto	l7348
 19012  10A6                     l7326:
 19013  10A6  3000               	movlw	0
 19014  10A7  0459               	iorwf	IPv4_Start@destAddress,w
 19015  10A8  00DE               	movwf	??_IPv4_Start
 19016  10A9  3000               	movlw	0
 19017  10AA  045A               	iorwf	IPv4_Start@destAddress+1,w
 19018  10AB  00DF               	movwf	??_IPv4_Start+1
 19019  10AC  3000               	movlw	0
 19020  10AD  045B               	iorwf	IPv4_Start@destAddress+2,w
 19021  10AE  00E0               	movwf	??_IPv4_Start+2
 19022  10AF  30FF               	movlw	255
 19023  10B0  045C               	iorwf	IPv4_Start@destAddress+3,w
 19024  10B1  00E1               	movwf	??_IPv4_Start+3
 19025  10B2  0A5E               	incf	??_IPv4_Start,w
 19026  10B3  1D03               	skipz
 19027  10B4  28BD               	goto	l7328
 19028  10B5  0A5F               	incf	??_IPv4_Start+1,w
 19029  10B6  1D03               	skipz
 19030  10B7  28BD               	goto	l7328
 19031  10B8  0A60               	incf	??_IPv4_Start+2,w
 19032  10B9  1903               	btfsc	3,2
 19033  10BA  0A61               	incf	??_IPv4_Start+3,w
 19034  10BB  1903               	btfsc	3,2
 19035  10BC  2956               	goto	l7348
 19036  10BD                     l7328:
 19037  10BD  3000               	movlw	0
 19038  10BE  0459               	iorwf	IPv4_Start@destAddress,w
 19039  10BF  00DE               	movwf	??_IPv4_Start
 19040  10C0  3000               	movlw	0
 19041  10C1  045A               	iorwf	IPv4_Start@destAddress+1,w
 19042  10C2  00DF               	movwf	??_IPv4_Start+1
 19043  10C3  30FF               	movlw	255
 19044  10C4  045B               	iorwf	IPv4_Start@destAddress+2,w
 19045  10C5  00E0               	movwf	??_IPv4_Start+2
 19046  10C6  30FF               	movlw	255
 19047  10C7  045C               	iorwf	IPv4_Start@destAddress+3,w
 19048  10C8  00E1               	movwf	??_IPv4_Start+3
 19049  10C9  0A5E               	incf	??_IPv4_Start,w
 19050  10CA  1D03               	skipz
 19051  10CB  28D4               	goto	l7330
 19052  10CC  0A5F               	incf	??_IPv4_Start+1,w
 19053  10CD  1D03               	skipz
 19054  10CE  28D4               	goto	l7330
 19055  10CF  0A60               	incf	??_IPv4_Start+2,w
 19056  10D0  1903               	btfsc	3,2
 19057  10D1  0A61               	incf	??_IPv4_Start+3,w
 19058  10D2  1903               	btfsc	3,2
 19059  10D3  2956               	goto	l7348
 19060  10D4                     l7330:
 19061  10D4  3000               	movlw	0
 19062  10D5  0459               	iorwf	IPv4_Start@destAddress,w
 19063  10D6  00DE               	movwf	??_IPv4_Start
 19064  10D7  30FF               	movlw	255
 19065  10D8  045A               	iorwf	IPv4_Start@destAddress+1,w
 19066  10D9  00DF               	movwf	??_IPv4_Start+1
 19067  10DA  30FF               	movlw	255
 19068  10DB  045B               	iorwf	IPv4_Start@destAddress+2,w
 19069  10DC  00E0               	movwf	??_IPv4_Start+2
 19070  10DD  30FF               	movlw	255
 19071  10DE  045C               	iorwf	IPv4_Start@destAddress+3,w
 19072  10DF  00E1               	movwf	??_IPv4_Start+3
 19073  10E0  0A5E               	incf	??_IPv4_Start,w
 19074  10E1  1D03               	skipz
 19075  10E2  28EB               	goto	l7332
 19076  10E3  0A5F               	incf	??_IPv4_Start+1,w
 19077  10E4  1D03               	skipz
 19078  10E5  28EB               	goto	l7332
 19079  10E6  0A60               	incf	??_IPv4_Start+2,w
 19080  10E7  1903               	btfsc	3,2
 19081  10E8  0A61               	incf	??_IPv4_Start+3,w
 19082  10E9  1903               	btfsc	3,2
 19083  10EA  2956               	goto	l7348
 19084  10EB                     l7332:
 19085                           
 19086                           ;ipv4.c: 217: {;ipv4.c: 218: if( ((destAddress ^ (ip_database_info.ipv4_myAddress)) & (i
      +                          p_database_info.ipv4_subnetMask)) == 0)
 19087  10EB  0024               	movlb	4	; select bank4
 19088  10EC  082C               	movf	(_ip_database_info^(0+512)+12),w
 19089  10ED  0020               	movlb	0	; select bank0
 19090  10EE  00DE               	movwf	??_IPv4_Start
 19091  10EF  0024               	movlb	4	; select bank4
 19092  10F0  082D               	movf	((_ip_database_info+1)^(0+512)+12),w
 19093  10F1  0020               	movlb	0	; select bank0
 19094  10F2  00DF               	movwf	??_IPv4_Start+1
 19095  10F3  0024               	movlb	4	; select bank4
 19096  10F4  082E               	movf	((_ip_database_info+2)^(0+512)+12),w
 19097  10F5  0020               	movlb	0	; select bank0
 19098  10F6  00E0               	movwf	??_IPv4_Start+2
 19099  10F7  0024               	movlb	4	; select bank4
 19100  10F8  082F               	movf	((_ip_database_info+3)^(0+512)+12),w
 19101  10F9  0020               	movlb	0	; select bank0
 19102  10FA  00E1               	movwf	??_IPv4_Start+3
 19103  10FB  0024               	movlb	4	; select bank4
 19104  10FC  0820               	movf	_ip_database_info^(0+512),w
 19105  10FD  0020               	movlb	0	; select bank0
 19106  10FE  0659               	xorwf	IPv4_Start@destAddress,w
 19107  10FF  00E2               	movwf	??_IPv4_Start+4
 19108  1100  0024               	movlb	4	; select bank4
 19109  1101  0821               	movf	(_ip_database_info+1)^(0+512),w
 19110  1102  0020               	movlb	0	; select bank0
 19111  1103  065A               	xorwf	IPv4_Start@destAddress+1,w
 19112  1104  00E3               	movwf	??_IPv4_Start+5
 19113  1105  0024               	movlb	4	; select bank4
 19114  1106  0822               	movf	(_ip_database_info+2)^(0+512),w
 19115  1107  0020               	movlb	0	; select bank0
 19116  1108  065B               	xorwf	IPv4_Start@destAddress+2,w
 19117  1109  00E4               	movwf	??_IPv4_Start+6
 19118  110A  0024               	movlb	4	; select bank4
 19119  110B  0823               	movf	(_ip_database_info+3)^(0+512),w
 19120  110C  0020               	movlb	0	; select bank0
 19121  110D  065C               	xorwf	IPv4_Start@destAddress+3,w
 19122  110E  00E5               	movwf	??_IPv4_Start+7
 19123  110F  0862               	movf	??_IPv4_Start+4,w
 19124  1110  05DE               	andwf	??_IPv4_Start,f
 19125  1111  0863               	movf	??_IPv4_Start+5,w
 19126  1112  05DF               	andwf	??_IPv4_Start+1,f
 19127  1113  0864               	movf	??_IPv4_Start+6,w
 19128  1114  05E0               	andwf	??_IPv4_Start+2,f
 19129  1115  0865               	movf	??_IPv4_Start+7,w
 19130  1116  05E1               	andwf	??_IPv4_Start+3,f
 19131  1117  0861               	movf	??_IPv4_Start+3,w
 19132  1118  0460               	iorwf	??_IPv4_Start+2,w
 19133  1119  045F               	iorwf	??_IPv4_Start+1,w
 19134  111A  045E               	iorwf	??_IPv4_Start,w
 19135  111B  1D03               	skipz
 19136  111C  2926               	goto	l7336
 19137                           
 19138                           ;ipv4.c: 219: {;ipv4.c: 220: targetAddress = destAddress;
 19139  111D  085C               	movf	IPv4_Start@destAddress+3,w
 19140  111E  00E9               	movwf	IPv4_Start@targetAddress+3
 19141  111F  085B               	movf	IPv4_Start@destAddress+2,w
 19142  1120  00E8               	movwf	IPv4_Start@targetAddress+2
 19143  1121  085A               	movf	IPv4_Start@destAddress+1,w
 19144  1122  00E7               	movwf	IPv4_Start@targetAddress+1
 19145  1123  0859               	movf	IPv4_Start@destAddress,w
 19146  1124  00E6               	movwf	IPv4_Start@targetAddress
 19147                           
 19148                           ;ipv4.c: 221: }
 19149  1125  2933               	goto	l7338
 19150  1126                     l7336:
 19151                           
 19152                           ;ipv4.c: 222: else;ipv4.c: 223: {;ipv4.c: 224: targetAddress = (ip_database_info.ipv4_ro
      +                          uter);
 19153  1126  3010               	movlw	16
 19154  1127  3E20               	addlw	(low (_ip_database_info| (0+512)))& (0+255)
 19155  1128  0086               	movwf	6
 19156  1129  3002               	movlw	2	; select bank4/5
 19157  112A  0087               	movwf	7
 19158  112B  3F40               	moviw [0]fsr1
 19159  112C  00E6               	movwf	IPv4_Start@targetAddress
 19160  112D  3F41               	moviw [1]fsr1
 19161  112E  00E7               	movwf	IPv4_Start@targetAddress+1
 19162  112F  3F42               	moviw [2]fsr1
 19163  1130  00E8               	movwf	IPv4_Start@targetAddress+2
 19164  1131  3F43               	moviw [3]fsr1
 19165  1132  00E9               	movwf	IPv4_Start@targetAddress+3
 19166  1133                     l7338:
 19167                           
 19168                           ;ipv4.c: 225: };ipv4.c: 226: macAddress= ARPV4_Lookup(targetAddress);
 19169  1133  0869               	movf	IPv4_Start@targetAddress+3,w
 19170  1134  00F3               	movwf	ARPV4_Lookup@ip_address+3
 19171  1135  0868               	movf	IPv4_Start@targetAddress+2,w
 19172  1136  00F2               	movwf	ARPV4_Lookup@ip_address+2
 19173  1137  0867               	movf	IPv4_Start@targetAddress+1,w
 19174  1138  00F1               	movwf	ARPV4_Lookup@ip_address+1
 19175  1139  0866               	movf	IPv4_Start@targetAddress,w
 19176  113A  00F0               	movwf	ARPV4_Lookup@ip_address
 19177  113B  31AE  265D  3190   	fcall	_ARPV4_Lookup
 19178  113E  0871               	movf	?_ARPV4_Lookup+1,w
 19179  113F  00EB               	movwf	IPv4_Start@macAddress+1
 19180  1140  0870               	movf	?_ARPV4_Lookup,w
 19181  1141  00EA               	movwf	IPv4_Start@macAddress
 19182                           
 19183                           ;ipv4.c: 227: if(macAddress == 0)
 19184  1142  086A               	movf	IPv4_Start@macAddress,w
 19185  1143  046B               	iorwf	IPv4_Start@macAddress+1,w
 19186  1144  1D03               	btfss	3,2
 19187  1145  295A               	goto	l7350
 19188                           
 19189                           ;ipv4.c: 228: {;ipv4.c: 229: ret = ARPV4_Request(targetAddress);
 19190  1146  0869               	movf	IPv4_Start@targetAddress+3,w
 19191  1147  00A9               	movwf	ARPV4_Request@destAddress+3
 19192  1148  0868               	movf	IPv4_Start@targetAddress+2,w
 19193  1149  00A8               	movwf	ARPV4_Request@destAddress+2
 19194  114A  0867               	movf	IPv4_Start@targetAddress+1,w
 19195  114B  00A7               	movwf	ARPV4_Request@destAddress+1
 19196  114C  0866               	movf	IPv4_Start@targetAddress,w
 19197  114D  00A6               	movwf	ARPV4_Request@destAddress
 19198  114E  319A  22ED         	fcall	_ARPV4_Request
 19199  1150  00DE               	movwf	??_IPv4_Start
 19200  1151  085E               	movf	??_IPv4_Start,w
 19201  1152  00EC               	movwf	IPv4_Start@ret
 19202  1153                     l7344:
 19203                           
 19204                           ;ipv4.c: 230: return ret;
 19205  1153  0020               	movlb	0	; select bank0
 19206  1154  086C               	movf	IPv4_Start@ret,w
 19207  1155  0008               	return
 19208  1156                     l7348:
 19209                           
 19210                           ;ipv4.c: 233: else;ipv4.c: 234: {;ipv4.c: 235: macAddress = &broadcastMAC;
 19211  1156  306F               	movlw	low (_broadcastMAC| (0+32768))
 19212  1157  00EA               	movwf	IPv4_Start@macAddress
 19213  1158  30B0               	movlw	high (_broadcastMAC| (0+32768))
 19214  1159  00EB               	movwf	IPv4_Start@macAddress+1
 19215  115A                     l7350:
 19216                           
 19217                           ;ipv4.c: 236: };ipv4.c: 237: ret = ETH_WriteStart(macAddress, 0x0800);
 19218  115A  086B               	movf	IPv4_Start@macAddress+1,w
 19219  115B  00A1               	movwf	ETH_WriteStart@dest_mac+1
 19220  115C  086A               	movf	IPv4_Start@macAddress,w
 19221  115D  00A0               	movwf	ETH_WriteStart@dest_mac
 19222  115E  3000               	movlw	0
 19223  115F  00A2               	movwf	ETH_WriteStart@type
 19224  1160  3008               	movlw	8
 19225  1161  00A3               	movwf	ETH_WriteStart@type+1
 19226  1162  3199  21ED  3190   	fcall	_ETH_WriteStart
 19227  1165  0020               	movlb	0	; select bank0
 19228  1166  00DE               	movwf	??_IPv4_Start
 19229  1167  085E               	movf	??_IPv4_Start,w
 19230  1168  00EC               	movwf	IPv4_Start@ret
 19231                           
 19232                           ;ipv4.c: 238: if(ret == SUCCESS)
 19233  1169  036C               	decf	IPv4_Start@ret,w
 19234  116A  1D03               	btfss	3,2
 19235  116B  2953               	goto	l7344
 19236                           
 19237                           ;ipv4.c: 239: {;ipv4.c: 240: ETH_Write16(0x4500);
 19238  116C  3000               	movlw	0
 19239  116D  00F1               	movwf	ETH_Write16@data
 19240  116E  3045               	movlw	69
 19241  116F  00F2               	movwf	ETH_Write16@data+1
 19242  1170  31AA  22BB  3190   	fcall	_ETH_Write16
 19243                           
 19244                           ;ipv4.c: 241: ETH_Write16(0);
 19245  1173  3000               	movlw	0
 19246  1174  00F1               	movwf	ETH_Write16@data
 19247  1175  00F2               	movwf	ETH_Write16@data+1
 19248  1176  31AA  22BB  3190   	fcall	_ETH_Write16
 19249                           
 19250                           ;ipv4.c: 242: ETH_Write32(0xAA554000);
 19251  1179  30AA               	movlw	170
 19252  117A  00F4               	movwf	ETH_Write32@data+3
 19253  117B  3055               	movlw	85
 19254  117C  00F3               	movwf	ETH_Write32@data+2
 19255  117D  3040               	movlw	64
 19256  117E  00F2               	movwf	ETH_Write32@data+1
 19257  117F  3000               	movlw	0
 19258  1180  00F1               	movwf	ETH_Write32@data
 19259  1181  31AB  23A4  3190   	fcall	_ETH_Write32
 19260                           
 19261                           ;ipv4.c: 243: ETH_Write8(64u);
 19262  1184  3040               	movlw	64
 19263  1185  31AA  2249  3190   	fcall	_ETH_Write8
 19264                           
 19265                           ;ipv4.c: 244: ETH_Write8(protocol);
 19266  1188  0020               	movlb	0	; select bank0
 19267  1189  085D               	movf	IPv4_Start@protocol,w
 19268  118A  31AA  2249  3190   	fcall	_ETH_Write8
 19269                           
 19270                           ;ipv4.c: 245: ETH_Write16(0);
 19271  118D  3000               	movlw	0
 19272  118E  00F1               	movwf	ETH_Write16@data
 19273  118F  00F2               	movwf	ETH_Write16@data+1
 19274  1190  31AA  22BB  3190   	fcall	_ETH_Write16
 19275                           
 19276                           ;ipv4.c: 246: ETH_Write32((ip_database_info.ipv4_myAddress));
 19277  1193  0024               	movlb	4	; select bank4
 19278  1194  0823               	movf	(_ip_database_info+3)^(0+512),w
 19279  1195  00F4               	movwf	ETH_Write32@data+3
 19280  1196  0822               	movf	(_ip_database_info+2)^(0+512),w
 19281  1197  00F3               	movwf	ETH_Write32@data+2
 19282  1198  0821               	movf	(_ip_database_info+1)^(0+512),w
 19283  1199  00F2               	movwf	ETH_Write32@data+1
 19284  119A  0820               	movf	_ip_database_info^(0+512),w
 19285  119B  00F1               	movwf	ETH_Write32@data
 19286  119C  31AB  23A4  3190   	fcall	_ETH_Write32
 19287                           
 19288                           ;ipv4.c: 247: ETH_Write32(destAddress);
 19289  119F  0020               	movlb	0	; select bank0
 19290  11A0  085C               	movf	IPv4_Start@destAddress+3,w
 19291  11A1  00F4               	movwf	ETH_Write32@data+3
 19292  11A2  085B               	movf	IPv4_Start@destAddress+2,w
 19293  11A3  00F3               	movwf	ETH_Write32@data+2
 19294  11A4  085A               	movf	IPv4_Start@destAddress+1,w
 19295  11A5  00F2               	movwf	ETH_Write32@data+1
 19296  11A6  0859               	movf	IPv4_Start@destAddress,w
 19297  11A7  00F1               	movwf	ETH_Write32@data
 19298  11A8  31AB  23A4  3190   	fcall	_ETH_Write32
 19299                           
 19300                           ;ipv4.c: 250: ipv4Header.srcIpAddress = (ip_database_info.ipv4_myAddress);
 19301  11AB  0024               	movlb	4	; select bank4
 19302  11AC  0823               	movf	(_ip_database_info+3)^(0+512),w
 19303  11AD  0023               	movlb	3	; select bank3
 19304  11AE  00C8               	movwf	((_ipv4Header+3)^(0+384)+12)
 19305  11AF  0024               	movlb	4	; select bank4
 19306  11B0  0822               	movf	(_ip_database_info+2)^(0+512),w
 19307  11B1  0023               	movlb	3	; select bank3
 19308  11B2  00C7               	movwf	((_ipv4Header+2)^(0+384)+12)
 19309  11B3  0024               	movlb	4	; select bank4
 19310  11B4  0821               	movf	(_ip_database_info+1)^(0+512),w
 19311  11B5  0023               	movlb	3	; select bank3
 19312  11B6  00C6               	movwf	((_ipv4Header+1)^(0+384)+12)
 19313  11B7  0024               	movlb	4	; select bank4
 19314  11B8  0820               	movf	_ip_database_info^(0+512),w
 19315  11B9  0023               	movlb	3	; select bank3
 19316  11BA  00C5               	movwf	(_ipv4Header^(0+384)+12)
 19317                           
 19318                           ;ipv4.c: 251: ipv4Header.dstIpAddress = destAddress;
 19319  11BB  0020               	movlb	0	; select bank0
 19320  11BC  085C               	movf	IPv4_Start@destAddress+3,w
 19321  11BD  0023               	movlb	3	; select bank3
 19322  11BE  00CC               	movwf	((_ipv4Header+3)^(0+384)+16)
 19323  11BF  0020               	movlb	0	; select bank0
 19324  11C0  085B               	movf	IPv4_Start@destAddress+2,w
 19325  11C1  0023               	movlb	3	; select bank3
 19326  11C2  00CB               	movwf	((_ipv4Header+2)^(0+384)+16)
 19327  11C3  0020               	movlb	0	; select bank0
 19328  11C4  085A               	movf	IPv4_Start@destAddress+1,w
 19329  11C5  0023               	movlb	3	; select bank3
 19330  11C6  00CA               	movwf	((_ipv4Header+1)^(0+384)+16)
 19331  11C7  0020               	movlb	0	; select bank0
 19332  11C8  0859               	movf	IPv4_Start@destAddress,w
 19333  11C9  0023               	movlb	3	; select bank3
 19334  11CA  00C9               	movwf	(_ipv4Header^(0+384)+16)
 19335                           
 19336                           ;ipv4.c: 252: ipv4Header.protocol = protocol;
 19337  11CB  0020               	movlb	0	; select bank0
 19338  11CC  085D               	movf	IPv4_Start@protocol,w
 19339  11CD  00DE               	movwf	??_IPv4_Start
 19340  11CE  085E               	movf	??_IPv4_Start,w
 19341  11CF  0023               	movlb	3	; select bank3
 19342  11D0  00C2               	movwf	(_ipv4Header^(0+384)+9)
 19343  11D1  2953               	goto	l7344
 19344  11D2                     __end_of_IPv4_Start:
 19345                           
 19346                           	psect	text73
 19347  2A49                     __ptext73:	
 19348 ;; *************** function _ETH_Write8 *****************
 19349 ;; Defined at:
 19350 ;;		line 541 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 19351 ;; Parameters:    Size  Location     Type
 19352 ;;  data            1    wreg     unsigned char 
 19353 ;; Auto vars:     Size  Location     Type
 19354 ;;  data            1    1[COMMON] unsigned char 
 19355 ;; Return value:  Size  Location     Type
 19356 ;;                  1    wreg      void 
 19357 ;; Registers used:
 19358 ;;		wreg, status,2, status,0, pclath, cstack
 19359 ;; Tracked objects:
 19360 ;;		On entry : 1D/2
 19361 ;;		On exit  : 1F/2
 19362 ;;		Unchanged: 0/0
 19363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19368 ;;Total ram usage:        1 bytes
 19369 ;; Hardware stack levels used:    1
 19370 ;; Hardware stack levels required when called:    4
 19371 ;; This function calls:
 19372 ;;		_SPI1_Exchange8bit
 19373 ;; This function is called by:
 19374 ;;		_IPv4_Start
 19375 ;; This function uses a non-reentrant model
 19376 ;;
 19377                           
 19378                           
 19379                           ;psect for function _ETH_Write8
 19380  2A49                     _ETH_Write8:
 19381                           
 19382                           ;incstack = 0
 19383                           ; Regs used in _ETH_Write8: [wreg+status,2+status,0+pclath+cstack]
 19384                           ;ETH_Write8@data stored from wreg
 19385  2A49  00F1               	movwf	ETH_Write8@data
 19386                           
 19387                           ;ENC28J60.c: 543: TXPacketSize += 1;
 19388  2A4A  3001               	movlw	1
 19389  2A4B  0023               	movlb	3	; select bank3
 19390  2A4C  07A4               	addwf	_TXPacketSize^(0+384),f
 19391  2A4D  3000               	movlw	0
 19392  2A4E  3DA5               	addwfc	(_TXPacketSize+1)^(0+384),f
 19393  2A4F  0022               	movlb	2	; select bank2
 19394  2A50  130E               	bcf	14,6	;volatile
 19395                           
 19396                           ;ENC28J60.c: 545: SPI1_Exchange8bit(wbm_inst);
 19397  2A51  307A               	movlw	122
 19398  2A52  31A9  21A5  31AA   	fcall	_SPI1_Exchange8bit
 19399                           
 19400                           ;ENC28J60.c: 546: SPI1_Exchange8bit(data);
 19401  2A55  0871               	movf	ETH_Write8@data,w
 19402  2A56  31A9  21A5         	fcall	_SPI1_Exchange8bit
 19403  2A58  0022               	movlb	2	; select bank2
 19404  2A59  170E               	bsf	14,6	;volatile
 19405  2A5A  0008               	return
 19406  2A5B                     __end_of_ETH_Write8:
 19407                           
 19408                           	psect	text74
 19409  2BA4                     __ptext74:	
 19410 ;; *************** function _ETH_Write32 *****************
 19411 ;; Defined at:
 19412 ;;		line 583 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 19413 ;; Parameters:    Size  Location     Type
 19414 ;;  data            4    1[COMMON] unsigned long 
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, status,2, status,0, pclath, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 19/2
 19423 ;;		On exit  : 1F/2
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19426 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;Total ram usage:        4 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:    4
 19433 ;; This function calls:
 19434 ;;		_SPI1_Exchange8bit
 19435 ;; This function is called by:
 19436 ;;		_IPv4_Start
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           
 19441                           ;psect for function _ETH_Write32
 19442  2BA4                     _ETH_Write32:
 19443                           
 19444                           ;ENC28J60.c: 585: TXPacketSize += 4;
 19445                           
 19446                           ;incstack = 0
 19447                           ; Regs used in _ETH_Write32: [wreg+status,2+status,0+pclath+cstack]
 19448  2BA4  3004               	movlw	4
 19449  2BA5  0023               	movlb	3	; select bank3
 19450  2BA6  07A4               	addwf	_TXPacketSize^(0+384),f
 19451  2BA7  3000               	movlw	0
 19452  2BA8  3DA5               	addwfc	(_TXPacketSize+1)^(0+384),f
 19453  2BA9  0022               	movlb	2	; select bank2
 19454  2BAA  130E               	bcf	14,6	;volatile
 19455                           
 19456                           ;ENC28J60.c: 587: SPI1_Exchange8bit(wbm_inst);
 19457  2BAB  307A               	movlw	122
 19458  2BAC  31A9  21A5  31AB   	fcall	_SPI1_Exchange8bit
 19459                           
 19460                           ;ENC28J60.c: 588: SPI1_Exchange8bit(data >> 24);
 19461  2BAF  0874               	movf	ETH_Write32@data+3,w
 19462  2BB0  31A9  21A5  31AB   	fcall	_SPI1_Exchange8bit
 19463                           
 19464                           ;ENC28J60.c: 589: SPI1_Exchange8bit(data >> 16);
 19465  2BB3  0873               	movf	ETH_Write32@data+2,w
 19466  2BB4  31A9  21A5  31AB   	fcall	_SPI1_Exchange8bit
 19467                           
 19468                           ;ENC28J60.c: 590: SPI1_Exchange8bit(data >> 8);
 19469  2BB7  0872               	movf	ETH_Write32@data+1,w
 19470  2BB8  31A9  21A5  31AB   	fcall	_SPI1_Exchange8bit
 19471                           
 19472                           ;ENC28J60.c: 591: SPI1_Exchange8bit(data);
 19473  2BBB  0871               	movf	ETH_Write32@data,w
 19474  2BBC  31A9  21A5         	fcall	_SPI1_Exchange8bit
 19475  2BBE  0022               	movlb	2	; select bank2
 19476  2BBF  170E               	bsf	14,6	;volatile
 19477  2BC0  0008               	return
 19478  2BC1                     __end_of_ETH_Write32:
 19479                           
 19480                           	psect	text75
 19481  2ABB                     __ptext75:	
 19482 ;; *************** function _ETH_Write16 *****************
 19483 ;; Defined at:
 19484 ;;		line 554 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 19485 ;; Parameters:    Size  Location     Type
 19486 ;;  data            2    1[COMMON] unsigned int 
 19487 ;; Auto vars:     Size  Location     Type
 19488 ;;		None
 19489 ;; Return value:  Size  Location     Type
 19490 ;;                  1    wreg      void 
 19491 ;; Registers used:
 19492 ;;		wreg, status,2, status,0, pclath, cstack
 19493 ;; Tracked objects:
 19494 ;;		On entry : 1C/1
 19495 ;;		On exit  : 1F/2
 19496 ;;		Unchanged: 0/0
 19497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;Total ram usage:        2 bytes
 19503 ;; Hardware stack levels used:    1
 19504 ;; Hardware stack levels required when called:    4
 19505 ;; This function calls:
 19506 ;;		_SPI1_Exchange8bit
 19507 ;; This function is called by:
 19508 ;;		_IPv4_Start
 19509 ;;		_ICMP_EchoReply
 19510 ;; This function uses a non-reentrant model
 19511 ;;
 19512                           
 19513                           
 19514                           ;psect for function _ETH_Write16
 19515  2ABB                     _ETH_Write16:
 19516                           
 19517                           ;ENC28J60.c: 556: TXPacketSize += 2;
 19518                           
 19519                           ;incstack = 0
 19520                           ; Regs used in _ETH_Write16: [wreg+status,2+status,0+pclath+cstack]
 19521  2ABB  3002               	movlw	2
 19522  2ABC  0023               	movlb	3	; select bank3
 19523  2ABD  07A4               	addwf	_TXPacketSize^(0+384),f
 19524  2ABE  3000               	movlw	0
 19525  2ABF  3DA5               	addwfc	(_TXPacketSize+1)^(0+384),f
 19526  2AC0  0022               	movlb	2	; select bank2
 19527  2AC1  130E               	bcf	14,6	;volatile
 19528                           
 19529                           ;ENC28J60.c: 558: SPI1_Exchange8bit(wbm_inst);
 19530  2AC2  307A               	movlw	122
 19531  2AC3  31A9  21A5  31AA   	fcall	_SPI1_Exchange8bit
 19532                           
 19533                           ;ENC28J60.c: 559: SPI1_Exchange8bit(data >> 8);
 19534  2AC6  0872               	movf	ETH_Write16@data+1,w
 19535  2AC7  31A9  21A5  31AA   	fcall	_SPI1_Exchange8bit
 19536                           
 19537                           ;ENC28J60.c: 560: SPI1_Exchange8bit(data);
 19538  2ACA  0871               	movf	ETH_Write16@data,w
 19539  2ACB  31A9  21A5         	fcall	_SPI1_Exchange8bit
 19540  2ACD  0022               	movlb	2	; select bank2
 19541  2ACE  170E               	bsf	14,6	;volatile
 19542  2ACF  0008               	return
 19543  2AD0                     __end_of_ETH_Write16:
 19544                           
 19545                           	psect	text76
 19546  1AED                     __ptext76:	
 19547 ;; *************** function _ARPV4_Request *****************
 19548 ;; Defined at:
 19549 ;;		line 198 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;  destAddress     4    6[BANK0 ] unsigned long 
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;  header         28   29[BANK0 ] struct .
 19554 ;;  ret             1   28[BANK0 ] enum E478
 19555 ;; Return value:  Size  Location     Type
 19556 ;;                  1    wreg      enum E478
 19557 ;; Registers used:
 19558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19559 ;; Tracked objects:
 19560 ;;		On entry : 1F/0
 19561 ;;		On exit  : 1F/0
 19562 ;;		Unchanged: 0/0
 19563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19564 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19565 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19566 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19567 ;;      Totals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19568 ;;Total ram usage:       51 bytes
 19569 ;; Hardware stack levels used:    1
 19570 ;; Hardware stack levels required when called:    7
 19571 ;; This function calls:
 19572 ;;		_ETH_Send
 19573 ;;		_ETH_WriteBlock
 19574 ;;		_ETH_WriteStart
 19575 ;; This function is called by:
 19576 ;;		_IPv4_Start
 19577 ;; This function uses a non-reentrant model
 19578 ;;
 19579                           
 19580                           
 19581                           ;psect for function _ARPV4_Request
 19582  1AED                     _ARPV4_Request:
 19583                           
 19584                           ;arpv4.c: 204: arpHeader_t header;;arpv4.c: 205: header.htype = ((((uint16_t)1 & (uint16
      +                          _t)0xFF00) >> 8) | (((uint16_t)1 & (uint16_t)0x00FF) << 8));
 19585                           
 19586                           ;incstack = 0
 19587                           ; Regs used in _ARPV4_Request: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19588  1AED  3000               	movlw	0
 19589  1AEE  00BD               	movwf	ARPV4_Request@header
 19590  1AEF  3001               	movlw	1
 19591  1AF0  00BE               	movwf	ARPV4_Request@header+1
 19592                           
 19593                           ;arpv4.c: 206: header.ptype = ((((uint16_t)0x0800 & (uint16_t)0xFF00) >> 8) | (((uint16_
      +                          t)0x0800 & (uint16_t)0x00FF) << 8));
 19594  1AF1  3008               	movlw	8
 19595  1AF2  00BF               	movwf	ARPV4_Request@header+2
 19596  1AF3  3000               	movlw	0
 19597  1AF4  00C0               	movwf	ARPV4_Request@header+3
 19598                           
 19599                           ;arpv4.c: 207: header.hlen = 6;
 19600  1AF5  3006               	movlw	6
 19601  1AF6  00AA               	movwf	??_ARPV4_Request
 19602  1AF7  082A               	movf	??_ARPV4_Request,w
 19603  1AF8  00C1               	movwf	ARPV4_Request@header+4
 19604                           
 19605                           ;arpv4.c: 208: header.plen = 4;
 19606  1AF9  3004               	movlw	4
 19607  1AFA  00AA               	movwf	??_ARPV4_Request
 19608  1AFB  082A               	movf	??_ARPV4_Request,w
 19609  1AFC  00C2               	movwf	ARPV4_Request@header+5
 19610                           
 19611                           ;arpv4.c: 209: header.oper = ((((uint16_t)1 & (uint16_t)0xFF00) >> 8) | (((uint16_t)1 & 
      +                          (uint16_t)0x00FF) << 8));
 19612  1AFD  3000               	movlw	0
 19613  1AFE  00C3               	movwf	ARPV4_Request@header+6
 19614  1AFF  3001               	movlw	1
 19615  1B00  00C4               	movwf	ARPV4_Request@header+7
 19616                           
 19617                           ;arpv4.c: 210: __builtin_memcpy((void*)&header.sha,(void*)&hostMacAddress,sizeof(mac48Ad
      +                          dress_t));
 19618  1B01  3008               	movlw	8
 19619  1B02  3E3D               	addlw	(low (ARPV4_Request@header| 0))& (0+255)
 19620  1B03  0086               	movwf	6
 19621  1B04  0187               	clrf	7
 19622  1B05  30E3               	movlw	low (_hostMacAddress| (0+512))
 19623  1B06  0084               	movwf	4
 19624  1B07  3002               	movlw	2	; select bank5/6
 19625  1B08  0085               	movwf	5
 19626  1B09  3006               	movlw	6
 19627  1B0A  0020               	movlb	0	; select bank0
 19628  1B0B  00AA               	movwf	??_ARPV4_Request
 19629  1B0C  082A               	movf	??_ARPV4_Request,w
 19630  1B0D  1903               	skipnz
 19631  1B0E  2B13               	goto	l7282
 19632  1B0F                     u586m0:
 19633  1B0F  0012               	moviw fsr0++
 19634  1B10  001E               	movwi fsr1++
 19635  1B11  0BAA               	decfsz	??_ARPV4_Request,f
 19636  1B12  2B0F               	goto	u586m0
 19637  1B13                     l7282:
 19638                           
 19639                           ;arpv4.c: 211: header.spa = ((((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0xf
      +                          f000000) >> 24) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x00ff0000) >>
      +                           8) | (((uint32_t)(ip_database_info.ipv4_myAddress)&(uint32_t)0x0000ff00) << 8) | (((uin
      +                          t
 19640  1B13  30FF               	movlw	255
 19641  1B14  0024               	movlb	4	; select bank4
 19642  1B15  0520               	andwf	_ip_database_info^(0+512),w
 19643  1B16  0020               	movlb	0	; select bank0
 19644  1B17  00AA               	movwf	??_ARPV4_Request
 19645  1B18  3000               	movlw	0
 19646  1B19  0024               	movlb	4	; select bank4
 19647  1B1A  0521               	andwf	(_ip_database_info+1)^(0+512),w
 19648  1B1B  0020               	movlb	0	; select bank0
 19649  1B1C  00AB               	movwf	??_ARPV4_Request+1
 19650  1B1D  3000               	movlw	0
 19651  1B1E  0024               	movlb	4	; select bank4
 19652  1B1F  0522               	andwf	(_ip_database_info+2)^(0+512),w
 19653  1B20  0020               	movlb	0	; select bank0
 19654  1B21  00AC               	movwf	??_ARPV4_Request+2
 19655  1B22  3000               	movlw	0
 19656  1B23  0024               	movlb	4	; select bank4
 19657  1B24  0523               	andwf	(_ip_database_info+3)^(0+512),w
 19658  1B25  0020               	movlb	0	; select bank0
 19659  1B26  00AD               	movwf	??_ARPV4_Request+3
 19660  1B27  3018               	movlw	24
 19661  1B28                     u5875:
 19662  1B28  35AA               	lslf	??_ARPV4_Request,f
 19663  1B29  0DAB               	rlf	??_ARPV4_Request+1,f
 19664  1B2A  0DAC               	rlf	??_ARPV4_Request+2,f
 19665  1B2B  0DAD               	rlf	??_ARPV4_Request+3,f
 19666  1B2C  0B89               	decfsz	9,f
 19667  1B2D  2B28               	goto	u5875
 19668  1B2E  3000               	movlw	0
 19669  1B2F  0024               	movlb	4	; select bank4
 19670  1B30  0520               	andwf	_ip_database_info^(0+512),w
 19671  1B31  0020               	movlb	0	; select bank0
 19672  1B32  00AE               	movwf	??_ARPV4_Request+4
 19673  1B33  30FF               	movlw	255
 19674  1B34  0024               	movlb	4	; select bank4
 19675  1B35  0521               	andwf	(_ip_database_info+1)^(0+512),w
 19676  1B36  0020               	movlb	0	; select bank0
 19677  1B37  00AF               	movwf	??_ARPV4_Request+5
 19678  1B38  3000               	movlw	0
 19679  1B39  0024               	movlb	4	; select bank4
 19680  1B3A  0522               	andwf	(_ip_database_info+2)^(0+512),w
 19681  1B3B  0020               	movlb	0	; select bank0
 19682  1B3C  00B0               	movwf	??_ARPV4_Request+6
 19683  1B3D  3000               	movlw	0
 19684  1B3E  0024               	movlb	4	; select bank4
 19685  1B3F  0523               	andwf	(_ip_database_info+3)^(0+512),w
 19686  1B40  0020               	movlb	0	; select bank0
 19687  1B41  00B1               	movwf	??_ARPV4_Request+7
 19688  1B42  3008               	movlw	8
 19689  1B43                     u5885:
 19690  1B43  35AE               	lslf	??_ARPV4_Request+4,f
 19691  1B44  0DAF               	rlf	??_ARPV4_Request+5,f
 19692  1B45  0DB0               	rlf	??_ARPV4_Request+6,f
 19693  1B46  0DB1               	rlf	??_ARPV4_Request+7,f
 19694  1B47  0B89               	decfsz	9,f
 19695  1B48  2B43               	goto	u5885
 19696  1B49  3000               	movlw	0
 19697  1B4A  00B2               	movwf	??_ARPV4_Request+8
 19698  1B4B  30FF               	movlw	255
 19699  1B4C  00B3               	movwf	??_ARPV4_Request+9
 19700  1B4D  3000               	movlw	0
 19701  1B4E  00B4               	movwf	??_ARPV4_Request+10
 19702  1B4F  0024               	movlb	4	; select bank4
 19703  1B50  0821               	movf	(_ip_database_info^(0+512)+1),w
 19704  1B51  0020               	movlb	0	; select bank0
 19705  1B52  05B2               	andwf	??_ARPV4_Request+8,f
 19706  1B53  0024               	movlb	4	; select bank4
 19707  1B54  0822               	movf	((_ip_database_info+1)^(0+512)+1),w
 19708  1B55  0020               	movlb	0	; select bank0
 19709  1B56  05B3               	andwf	??_ARPV4_Request+9,f
 19710  1B57  0024               	movlb	4	; select bank4
 19711  1B58  0823               	movf	((_ip_database_info+2)^(0+512)+1),w
 19712  1B59  0020               	movlb	0	; select bank0
 19713  1B5A  05B4               	andwf	??_ARPV4_Request+10,f
 19714  1B5B  0024               	movlb	4	; select bank4
 19715  1B5C  0823               	movf	(_ip_database_info^(0+512)+3),w
 19716  1B5D  0020               	movlb	0	; select bank0
 19717  1B5E  00B5               	movwf	??_ARPV4_Request+11
 19718  1B5F  01B6               	clrf	??_ARPV4_Request+12
 19719  1B60  01B7               	clrf	??_ARPV4_Request+13
 19720  1B61  0835               	movf	??_ARPV4_Request+11,w
 19721  1B62  04B2               	iorwf	??_ARPV4_Request+8,f
 19722  1B63  0836               	movf	??_ARPV4_Request+12,w
 19723  1B64  04B3               	iorwf	??_ARPV4_Request+9,f
 19724  1B65  0837               	movf	??_ARPV4_Request+13,w
 19725  1B66  04B4               	iorwf	??_ARPV4_Request+10,f
 19726  1B67  0832               	movf	??_ARPV4_Request+8,w
 19727  1B68  00B8               	movwf	??_ARPV4_Request+14
 19728  1B69  0833               	movf	??_ARPV4_Request+9,w
 19729  1B6A  00B9               	movwf	??_ARPV4_Request+15
 19730  1B6B  0834               	movf	??_ARPV4_Request+10,w
 19731  1B6C  00BA               	movwf	??_ARPV4_Request+16
 19732  1B6D  01BB               	clrf	??_ARPV4_Request+17
 19733  1B6E  0838               	movf	??_ARPV4_Request+14,w
 19734  1B6F  04AE               	iorwf	??_ARPV4_Request+4,f
 19735  1B70  0839               	movf	??_ARPV4_Request+15,w
 19736  1B71  04AF               	iorwf	??_ARPV4_Request+5,f
 19737  1B72  083A               	movf	??_ARPV4_Request+16,w
 19738  1B73  04B0               	iorwf	??_ARPV4_Request+6,f
 19739  1B74  083B               	movf	??_ARPV4_Request+17,w
 19740  1B75  04B1               	iorwf	??_ARPV4_Request+7,f
 19741  1B76  082A               	movf	??_ARPV4_Request,w
 19742  1B77  042E               	iorwf	??_ARPV4_Request+4,w
 19743  1B78  00CB               	movwf	ARPV4_Request@header+14
 19744  1B79  082B               	movf	??_ARPV4_Request+1,w
 19745  1B7A  042F               	iorwf	??_ARPV4_Request+5,w
 19746  1B7B  00CC               	movwf	ARPV4_Request@header+15
 19747  1B7C  082C               	movf	??_ARPV4_Request+2,w
 19748  1B7D  0430               	iorwf	??_ARPV4_Request+6,w
 19749  1B7E  00CD               	movwf	ARPV4_Request@header+16
 19750  1B7F  082D               	movf	??_ARPV4_Request+3,w
 19751  1B80  0431               	iorwf	??_ARPV4_Request+7,w
 19752  1B81  00CE               	movwf	ARPV4_Request@header+17
 19753                           
 19754                           ;arpv4.c: 212: header.tpa= ((((uint32_t)destAddress&(uint32_t)0xff000000) >> 24) | (((ui
      +                          nt32_t)destAddress&(uint32_t)0x00ff0000) >> 8) | (((uint32_t)destAddress&(uint32_t)0x000
      +                          0ff00) << 8) | (((uint32_t)destAddress&(uint32_t)0x000000ff) << 24) );
 19755  1B82  30FF               	movlw	255
 19756  1B83  0526               	andwf	ARPV4_Request@destAddress,w
 19757  1B84  00AA               	movwf	??_ARPV4_Request
 19758  1B85  3000               	movlw	0
 19759  1B86  0527               	andwf	ARPV4_Request@destAddress+1,w
 19760  1B87  00AB               	movwf	??_ARPV4_Request+1
 19761  1B88  3000               	movlw	0
 19762  1B89  0528               	andwf	ARPV4_Request@destAddress+2,w
 19763  1B8A  00AC               	movwf	??_ARPV4_Request+2
 19764  1B8B  3000               	movlw	0
 19765  1B8C  0529               	andwf	ARPV4_Request@destAddress+3,w
 19766  1B8D  00AD               	movwf	??_ARPV4_Request+3
 19767  1B8E  3018               	movlw	24
 19768  1B8F                     u5895:
 19769  1B8F  35AA               	lslf	??_ARPV4_Request,f
 19770  1B90  0DAB               	rlf	??_ARPV4_Request+1,f
 19771  1B91  0DAC               	rlf	??_ARPV4_Request+2,f
 19772  1B92  0DAD               	rlf	??_ARPV4_Request+3,f
 19773  1B93  0B89               	decfsz	9,f
 19774  1B94  2B8F               	goto	u5895
 19775  1B95  3000               	movlw	0
 19776  1B96  0526               	andwf	ARPV4_Request@destAddress,w
 19777  1B97  00AE               	movwf	??_ARPV4_Request+4
 19778  1B98  30FF               	movlw	255
 19779  1B99  0527               	andwf	ARPV4_Request@destAddress+1,w
 19780  1B9A  00AF               	movwf	??_ARPV4_Request+5
 19781  1B9B  3000               	movlw	0
 19782  1B9C  0528               	andwf	ARPV4_Request@destAddress+2,w
 19783  1B9D  00B0               	movwf	??_ARPV4_Request+6
 19784  1B9E  3000               	movlw	0
 19785  1B9F  0529               	andwf	ARPV4_Request@destAddress+3,w
 19786  1BA0  00B1               	movwf	??_ARPV4_Request+7
 19787  1BA1  3008               	movlw	8
 19788  1BA2                     u5905:
 19789  1BA2  35AE               	lslf	??_ARPV4_Request+4,f
 19790  1BA3  0DAF               	rlf	??_ARPV4_Request+5,f
 19791  1BA4  0DB0               	rlf	??_ARPV4_Request+6,f
 19792  1BA5  0DB1               	rlf	??_ARPV4_Request+7,f
 19793  1BA6  0B89               	decfsz	9,f
 19794  1BA7  2BA2               	goto	u5905
 19795  1BA8  3000               	movlw	0
 19796  1BA9  00B2               	movwf	??_ARPV4_Request+8
 19797  1BAA  30FF               	movlw	255
 19798  1BAB  00B3               	movwf	??_ARPV4_Request+9
 19799  1BAC  3000               	movlw	0
 19800  1BAD  00B4               	movwf	??_ARPV4_Request+10
 19801  1BAE  0827               	movf	ARPV4_Request@destAddress+1,w
 19802  1BAF  05B2               	andwf	??_ARPV4_Request+8,f
 19803  1BB0  0828               	movf	ARPV4_Request@destAddress+2,w
 19804  1BB1  05B3               	andwf	??_ARPV4_Request+9,f
 19805  1BB2  0829               	movf	ARPV4_Request@destAddress+3,w
 19806  1BB3  05B4               	andwf	??_ARPV4_Request+10,f
 19807  1BB4  0829               	movf	ARPV4_Request@destAddress+3,w
 19808  1BB5  00B5               	movwf	??_ARPV4_Request+11
 19809  1BB6  01B6               	clrf	??_ARPV4_Request+12
 19810  1BB7  01B7               	clrf	??_ARPV4_Request+13
 19811  1BB8  0835               	movf	??_ARPV4_Request+11,w
 19812  1BB9  04B2               	iorwf	??_ARPV4_Request+8,f
 19813  1BBA  0836               	movf	??_ARPV4_Request+12,w
 19814  1BBB  04B3               	iorwf	??_ARPV4_Request+9,f
 19815  1BBC  0837               	movf	??_ARPV4_Request+13,w
 19816  1BBD  04B4               	iorwf	??_ARPV4_Request+10,f
 19817  1BBE  0832               	movf	??_ARPV4_Request+8,w
 19818  1BBF  00B8               	movwf	??_ARPV4_Request+14
 19819  1BC0  0833               	movf	??_ARPV4_Request+9,w
 19820  1BC1  00B9               	movwf	??_ARPV4_Request+15
 19821  1BC2  0834               	movf	??_ARPV4_Request+10,w
 19822  1BC3  00BA               	movwf	??_ARPV4_Request+16
 19823  1BC4  01BB               	clrf	??_ARPV4_Request+17
 19824  1BC5  0838               	movf	??_ARPV4_Request+14,w
 19825  1BC6  04AE               	iorwf	??_ARPV4_Request+4,f
 19826  1BC7  0839               	movf	??_ARPV4_Request+15,w
 19827  1BC8  04AF               	iorwf	??_ARPV4_Request+5,f
 19828  1BC9  083A               	movf	??_ARPV4_Request+16,w
 19829  1BCA  04B0               	iorwf	??_ARPV4_Request+6,f
 19830  1BCB  083B               	movf	??_ARPV4_Request+17,w
 19831  1BCC  04B1               	iorwf	??_ARPV4_Request+7,f
 19832  1BCD  082A               	movf	??_ARPV4_Request,w
 19833  1BCE  042E               	iorwf	??_ARPV4_Request+4,w
 19834  1BCF  00D5               	movwf	ARPV4_Request@header+24
 19835  1BD0  082B               	movf	??_ARPV4_Request+1,w
 19836  1BD1  042F               	iorwf	??_ARPV4_Request+5,w
 19837  1BD2  00D6               	movwf	ARPV4_Request@header+25
 19838  1BD3  082C               	movf	??_ARPV4_Request+2,w
 19839  1BD4  0430               	iorwf	??_ARPV4_Request+6,w
 19840  1BD5  00D7               	movwf	ARPV4_Request@header+26
 19841  1BD6  082D               	movf	??_ARPV4_Request+3,w
 19842  1BD7  0431               	iorwf	??_ARPV4_Request+7,w
 19843  1BD8  00D8               	movwf	ARPV4_Request@header+27
 19844                           
 19845                           ;arpv4.c: 213: header.tha.s.byte1 = 0;
 19846  1BD9  01CF               	clrf	ARPV4_Request@header+18
 19847                           
 19848                           ;arpv4.c: 214: header.tha.s.byte2 = 0;
 19849  1BDA  01D0               	clrf	ARPV4_Request@header+19
 19850                           
 19851                           ;arpv4.c: 215: header.tha.s.byte3 = 0;
 19852  1BDB  01D1               	clrf	ARPV4_Request@header+20
 19853                           
 19854                           ;arpv4.c: 216: header.tha.s.byte4 = 0;
 19855  1BDC  01D2               	clrf	ARPV4_Request@header+21
 19856                           
 19857                           ;arpv4.c: 217: header.tha.s.byte5 = 0;
 19858  1BDD  01D3               	clrf	ARPV4_Request@header+22
 19859                           
 19860                           ;arpv4.c: 218: header.tha.s.byte6 = 0;
 19861  1BDE  01D4               	clrf	ARPV4_Request@header+23
 19862                           
 19863                           ;arpv4.c: 220: ret = ETH_WriteStart(&broadcastMAC,0x0806);
 19864  1BDF  306F               	movlw	low (_broadcastMAC| (0+32768))
 19865  1BE0  00A0               	movwf	ETH_WriteStart@dest_mac
 19866  1BE1  30B0               	movlw	high (_broadcastMAC| (0+32768))
 19867  1BE2  00A1               	movwf	ETH_WriteStart@dest_mac+1
 19868  1BE3  3006               	movlw	6
 19869  1BE4  00A2               	movwf	ETH_WriteStart@type
 19870  1BE5  3008               	movlw	8
 19871  1BE6  00A3               	movwf	ETH_WriteStart@type+1
 19872  1BE7  3199  21ED  319A   	fcall	_ETH_WriteStart
 19873  1BEA  0020               	movlb	0	; select bank0
 19874  1BEB  00AA               	movwf	??_ARPV4_Request
 19875  1BEC  082A               	movf	??_ARPV4_Request,w
 19876  1BED  00BC               	movwf	ARPV4_Request@ret
 19877                           
 19878                           ;arpv4.c: 221: if(ret == SUCCESS)
 19879  1BEE  033C               	decf	ARPV4_Request@ret,w
 19880  1BEF  1D03               	btfss	3,2
 19881  1BF0  2C08               	goto	l7312
 19882                           
 19883                           ;arpv4.c: 222: {;arpv4.c: 223: ETH_WriteBlock((char*)&header,sizeof(arpHeader_t));
 19884  1BF1  303D               	movlw	low ARPV4_Request@header
 19885  1BF2  00F1               	movwf	ETH_WriteBlock@data
 19886  1BF3  3000               	movlw	high ARPV4_Request@header
 19887  1BF4  00F2               	movwf	ETH_WriteBlock@data+1
 19888  1BF5  301C               	movlw	28
 19889  1BF6  00F3               	movwf	ETH_WriteBlock@length
 19890  1BF7  3000               	movlw	0
 19891  1BF8  00F4               	movwf	ETH_WriteBlock@length+1
 19892  1BF9  31AC  24E2  319A   	fcall	_ETH_WriteBlock
 19893                           
 19894                           ;arpv4.c: 224: ret = ETH_Send();
 19895  1BFC  31AB  23C1  319A   	fcall	_ETH_Send
 19896  1BFF  0020               	movlb	0	; select bank0
 19897  1C00  00AA               	movwf	??_ARPV4_Request
 19898  1C01  082A               	movf	??_ARPV4_Request,w
 19899  1C02  00BC               	movwf	ARPV4_Request@ret
 19900                           
 19901                           ;arpv4.c: 225: if(ret == SUCCESS)
 19902  1C03  033C               	decf	ARPV4_Request@ret,w
 19903  1C04  1D03               	btfss	3,2
 19904  1C05  2C08               	goto	l7312
 19905                           
 19906                           ;arpv4.c: 226: {;arpv4.c: 227: return MAC_NOT_FOUND;
 19907  1C06  3005               	movlw	5
 19908  1C07  0008               	return
 19909  1C08                     l7312:
 19910                           
 19911                           ;arpv4.c: 228: };arpv4.c: 229: };arpv4.c: 230: return ret;
 19912  1C08  083C               	movf	ARPV4_Request@ret,w
 19913  1C09  0008               	return
 19914  1C0A                     __end_of_ARPV4_Request:
 19915                           
 19916                           	psect	text77
 19917  19ED                     __ptext77:	
 19918 ;; *************** function _ETH_WriteStart *****************
 19919 ;; Defined at:
 19920 ;;		line 648 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 19921 ;; Parameters:    Size  Location     Type
 19922 ;;  dest_mac        2    0[BANK0 ] PTR const struct .
 19923 ;;		 -> arpMap.macAddress(6), broadcastMAC(6), header.sha(6), ARPV4_Packet@header(28), 
 19924 ;;		 -> arpMap(104), NULL(0), 
 19925 ;;  type            2    2[BANK0 ] unsigned int 
 19926 ;; Auto vars:     Size  Location     Type
 19927 ;;		None
 19928 ;; Return value:  Size  Location     Type
 19929 ;;                  1    wreg      enum E478
 19930 ;; Registers used:
 19931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19932 ;; Tracked objects:
 19933 ;;		On entry : 1F/0
 19934 ;;		On exit  : 19/0
 19935 ;;		Unchanged: 0/0
 19936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19940 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19941 ;;Total ram usage:        6 bytes
 19942 ;; Hardware stack levels used:    1
 19943 ;; Hardware stack levels required when called:    6
 19944 ;; This function calls:
 19945 ;;		_ENC28_Rcr8
 19946 ;;		_ENC28_Wcr16
 19947 ;;		_SPI1_Exchange8bit
 19948 ;; This function is called by:
 19949 ;;		_ARPV4_Packet
 19950 ;;		_ARPV4_Request
 19951 ;;		_IPv4_Start
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           
 19956                           ;psect for function _ETH_WriteStart
 19957  19ED                     _ETH_WriteStart:
 19958                           
 19959                           ;ENC28J60.c: 650: if(ethData.bufferBusy)
 19960                           
 19961                           ;incstack = 0
 19962                           ; Regs used in _ETH_WriteStart: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19963  19ED  0024               	movlb	4	; select bank4
 19964  19EE  1EC4               	btfss	_ethData^(0+512),5	;volatile
 19965  19EF  29F2               	goto	l4842
 19966                           
 19967                           ;ENC28J60.c: 651: {;ENC28J60.c: 652: return BUFFER_BUSY;
 19968  19F0  3003               	movlw	3
 19969  19F1  0008               	return
 19970  19F2                     l4842:
 19971                           
 19972                           ;ENC28J60.c: 653: };ENC28J60.c: 655: if((ENC28_Rcr8(J60_ECON1) & 0x08))
 19973  19F2  30FF               	movlw	255
 19974  19F3  31AB  2325  3199   	fcall	_ENC28_Rcr8
 19975  19F6  3908               	andlw	8
 19976  19F7  1903               	btfsc	3,2
 19977  19F8  29FB               	goto	l4848
 19978                           
 19979                           ;ENC28J60.c: 656: {;ENC28J60.c: 657: return TX_LOGIC_NOT_IDLE;
 19980  19F9  3004               	movlw	4
 19981  19FA  0008               	return
 19982  19FB                     l4848:
 19983                           
 19984                           ;ENC28J60.c: 658: };ENC28J60.c: 660: ENC28_Wcr16(J60_ETXSTL, (0x1FFF - (1500)));
 19985  19FB  3023               	movlw	35
 19986  19FC  00FA               	movwf	ENC28_Wcr16@v
 19987  19FD  301A               	movlw	26
 19988  19FE  00FB               	movwf	ENC28_Wcr16@v+1
 19989  19FF  3004               	movlw	4
 19990  1A00  31AC  2448  3199   	fcall	_ENC28_Wcr16
 19991                           
 19992                           ;ENC28J60.c: 661: ENC28_Wcr16(J60_EWRPTL, (0x1FFF - (1500)));
 19993  1A03  3023               	movlw	35
 19994  1A04  00FA               	movwf	ENC28_Wcr16@v
 19995  1A05  301A               	movlw	26
 19996  1A06  00FB               	movwf	ENC28_Wcr16@v+1
 19997  1A07  3002               	movlw	2
 19998  1A08  31AC  2448  3199   	fcall	_ENC28_Wcr16
 19999                           
 20000                           ;ENC28J60.c: 663: TXPacketSize = 0;
 20001  1A0B  0023               	movlb	3	; select bank3
 20002  1A0C  01A4               	clrf	_TXPacketSize^(0+384)
 20003  1A0D  01A5               	clrf	(_TXPacketSize+1)^(0+384)
 20004  1A0E  0022               	movlb	2	; select bank2
 20005  1A0F  130E               	bcf	14,6	;volatile
 20006                           
 20007                           ;ENC28J60.c: 665: SPI1_Exchange8bit(wbm_inst);
 20008  1A10  307A               	movlw	122
 20009  1A11  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20010                           
 20011                           ;ENC28J60.c: 666: SPI1_Exchange8bit(Control_Byte);
 20012  1A14  3000               	movlw	0
 20013  1A15  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20014                           
 20015                           ;ENC28J60.c: 667: SPI1_Exchange8bit(dest_mac->mac_array[0]);
 20016  1A18  0020               	movlb	0	; select bank0
 20017  1A19  0820               	movf	ETH_WriteStart@dest_mac,w
 20018  1A1A  0084               	movwf	4
 20019  1A1B  0821               	movf	ETH_WriteStart@dest_mac+1,w
 20020  1A1C  0085               	movwf	5
 20021  1A1D  0800               	movf	0,w	;code access
 20022  1A1E  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20023                           
 20024                           ;ENC28J60.c: 668: SPI1_Exchange8bit(dest_mac->mac_array[1]);
 20025  1A21  0020               	movlb	0	; select bank0
 20026  1A22  0821               	movf	ETH_WriteStart@dest_mac+1,w
 20027  1A23  00A5               	movwf	??_ETH_WriteStart+1
 20028  1A24  0820               	movf	ETH_WriteStart@dest_mac,w
 20029  1A25  00A4               	movwf	??_ETH_WriteStart
 20030  1A26  3001               	movlw	1
 20031  1A27  0724               	addwf	??_ETH_WriteStart,w
 20032  1A28  0084               	movwf	4
 20033  1A29  0825               	movf	??_ETH_WriteStart+1,w
 20034  1A2A  1803               	skipnc
 20035  1A2B  0A25               	incf	??_ETH_WriteStart+1,w
 20036  1A2C  0085               	movwf	5
 20037  1A2D  0800               	movf	0,w	;code access
 20038  1A2E  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20039                           
 20040                           ;ENC28J60.c: 669: SPI1_Exchange8bit(dest_mac->mac_array[2]);
 20041  1A31  0020               	movlb	0	; select bank0
 20042  1A32  0821               	movf	ETH_WriteStart@dest_mac+1,w
 20043  1A33  00A5               	movwf	??_ETH_WriteStart+1
 20044  1A34  0820               	movf	ETH_WriteStart@dest_mac,w
 20045  1A35  00A4               	movwf	??_ETH_WriteStart
 20046  1A36  3002               	movlw	2
 20047  1A37  0724               	addwf	??_ETH_WriteStart,w
 20048  1A38  0084               	movwf	4
 20049  1A39  0825               	movf	??_ETH_WriteStart+1,w
 20050  1A3A  1803               	skipnc
 20051  1A3B  0A25               	incf	??_ETH_WriteStart+1,w
 20052  1A3C  0085               	movwf	5
 20053  1A3D  0800               	movf	0,w	;code access
 20054  1A3E  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20055                           
 20056                           ;ENC28J60.c: 670: SPI1_Exchange8bit(dest_mac->mac_array[3]);
 20057  1A41  0020               	movlb	0	; select bank0
 20058  1A42  0821               	movf	ETH_WriteStart@dest_mac+1,w
 20059  1A43  00A5               	movwf	??_ETH_WriteStart+1
 20060  1A44  0820               	movf	ETH_WriteStart@dest_mac,w
 20061  1A45  00A4               	movwf	??_ETH_WriteStart
 20062  1A46  3003               	movlw	3
 20063  1A47  0724               	addwf	??_ETH_WriteStart,w
 20064  1A48  0084               	movwf	4
 20065  1A49  0825               	movf	??_ETH_WriteStart+1,w
 20066  1A4A  1803               	skipnc
 20067  1A4B  0A25               	incf	??_ETH_WriteStart+1,w
 20068  1A4C  0085               	movwf	5
 20069  1A4D  0800               	movf	0,w	;code access
 20070  1A4E  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20071                           
 20072                           ;ENC28J60.c: 671: SPI1_Exchange8bit(dest_mac->mac_array[4]);
 20073  1A51  0020               	movlb	0	; select bank0
 20074  1A52  0821               	movf	ETH_WriteStart@dest_mac+1,w
 20075  1A53  00A5               	movwf	??_ETH_WriteStart+1
 20076  1A54  0820               	movf	ETH_WriteStart@dest_mac,w
 20077  1A55  00A4               	movwf	??_ETH_WriteStart
 20078  1A56  3004               	movlw	4
 20079  1A57  0724               	addwf	??_ETH_WriteStart,w
 20080  1A58  0084               	movwf	4
 20081  1A59  0825               	movf	??_ETH_WriteStart+1,w
 20082  1A5A  1803               	skipnc
 20083  1A5B  0A25               	incf	??_ETH_WriteStart+1,w
 20084  1A5C  0085               	movwf	5
 20085  1A5D  0800               	movf	0,w	;code access
 20086  1A5E  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20087                           
 20088                           ;ENC28J60.c: 672: SPI1_Exchange8bit(dest_mac->mac_array[5]);
 20089  1A61  0020               	movlb	0	; select bank0
 20090  1A62  0821               	movf	ETH_WriteStart@dest_mac+1,w
 20091  1A63  00A5               	movwf	??_ETH_WriteStart+1
 20092  1A64  0820               	movf	ETH_WriteStart@dest_mac,w
 20093  1A65  00A4               	movwf	??_ETH_WriteStart
 20094  1A66  3005               	movlw	5
 20095  1A67  0724               	addwf	??_ETH_WriteStart,w
 20096  1A68  0084               	movwf	4
 20097  1A69  0825               	movf	??_ETH_WriteStart+1,w
 20098  1A6A  1803               	skipnc
 20099  1A6B  0A25               	incf	??_ETH_WriteStart+1,w
 20100  1A6C  0085               	movwf	5
 20101  1A6D  0800               	movf	0,w	;code access
 20102  1A6E  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20103                           
 20104                           ;ENC28J60.c: 673: SPI1_Exchange8bit(eth_MAC->mac_array[0]);
 20105  1A71  0023               	movlb	3	; select bank3
 20106  1A72  0828               	movf	_eth_MAC^(0+384),w
 20107  1A73  0084               	movwf	4
 20108  1A74  0829               	movf	(_eth_MAC+1)^(0+384),w
 20109  1A75  0085               	movwf	5
 20110  1A76  0800               	movf	0,w	;code access
 20111  1A77  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20112                           
 20113                           ;ENC28J60.c: 674: SPI1_Exchange8bit(eth_MAC->mac_array[1]);
 20114  1A7A  0023               	movlb	3	; select bank3
 20115  1A7B  0829               	movf	(_eth_MAC+1)^(0+384),w
 20116  1A7C  0020               	movlb	0	; select bank0
 20117  1A7D  00A5               	movwf	??_ETH_WriteStart+1
 20118  1A7E  0023               	movlb	3	; select bank3
 20119  1A7F  0828               	movf	_eth_MAC^(0+384),w
 20120  1A80  0020               	movlb	0	; select bank0
 20121  1A81  00A4               	movwf	??_ETH_WriteStart
 20122  1A82  3001               	movlw	1
 20123  1A83  0724               	addwf	??_ETH_WriteStart,w
 20124  1A84  0084               	movwf	4
 20125  1A85  0825               	movf	??_ETH_WriteStart+1,w
 20126  1A86  1803               	skipnc
 20127  1A87  0A25               	incf	??_ETH_WriteStart+1,w
 20128  1A88  0085               	movwf	5
 20129  1A89  0800               	movf	0,w	;code access
 20130  1A8A  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20131                           
 20132                           ;ENC28J60.c: 675: SPI1_Exchange8bit(eth_MAC->mac_array[2]);
 20133  1A8D  0023               	movlb	3	; select bank3
 20134  1A8E  0829               	movf	(_eth_MAC+1)^(0+384),w
 20135  1A8F  0020               	movlb	0	; select bank0
 20136  1A90  00A5               	movwf	??_ETH_WriteStart+1
 20137  1A91  0023               	movlb	3	; select bank3
 20138  1A92  0828               	movf	_eth_MAC^(0+384),w
 20139  1A93  0020               	movlb	0	; select bank0
 20140  1A94  00A4               	movwf	??_ETH_WriteStart
 20141  1A95  3002               	movlw	2
 20142  1A96  0724               	addwf	??_ETH_WriteStart,w
 20143  1A97  0084               	movwf	4
 20144  1A98  0825               	movf	??_ETH_WriteStart+1,w
 20145  1A99  1803               	skipnc
 20146  1A9A  0A25               	incf	??_ETH_WriteStart+1,w
 20147  1A9B  0085               	movwf	5
 20148  1A9C  0800               	movf	0,w	;code access
 20149  1A9D  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20150                           
 20151                           ;ENC28J60.c: 676: SPI1_Exchange8bit(eth_MAC->mac_array[3]);
 20152  1AA0  0023               	movlb	3	; select bank3
 20153  1AA1  0829               	movf	(_eth_MAC+1)^(0+384),w
 20154  1AA2  0020               	movlb	0	; select bank0
 20155  1AA3  00A5               	movwf	??_ETH_WriteStart+1
 20156  1AA4  0023               	movlb	3	; select bank3
 20157  1AA5  0828               	movf	_eth_MAC^(0+384),w
 20158  1AA6  0020               	movlb	0	; select bank0
 20159  1AA7  00A4               	movwf	??_ETH_WriteStart
 20160  1AA8  3003               	movlw	3
 20161  1AA9  0724               	addwf	??_ETH_WriteStart,w
 20162  1AAA  0084               	movwf	4
 20163  1AAB  0825               	movf	??_ETH_WriteStart+1,w
 20164  1AAC  1803               	skipnc
 20165  1AAD  0A25               	incf	??_ETH_WriteStart+1,w
 20166  1AAE  0085               	movwf	5
 20167  1AAF  0800               	movf	0,w	;code access
 20168  1AB0  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20169                           
 20170                           ;ENC28J60.c: 677: SPI1_Exchange8bit(eth_MAC->mac_array[4]);
 20171  1AB3  0023               	movlb	3	; select bank3
 20172  1AB4  0829               	movf	(_eth_MAC+1)^(0+384),w
 20173  1AB5  0020               	movlb	0	; select bank0
 20174  1AB6  00A5               	movwf	??_ETH_WriteStart+1
 20175  1AB7  0023               	movlb	3	; select bank3
 20176  1AB8  0828               	movf	_eth_MAC^(0+384),w
 20177  1AB9  0020               	movlb	0	; select bank0
 20178  1ABA  00A4               	movwf	??_ETH_WriteStart
 20179  1ABB  3004               	movlw	4
 20180  1ABC  0724               	addwf	??_ETH_WriteStart,w
 20181  1ABD  0084               	movwf	4
 20182  1ABE  0825               	movf	??_ETH_WriteStart+1,w
 20183  1ABF  1803               	skipnc
 20184  1AC0  0A25               	incf	??_ETH_WriteStart+1,w
 20185  1AC1  0085               	movwf	5
 20186  1AC2  0800               	movf	0,w	;code access
 20187  1AC3  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20188                           
 20189                           ;ENC28J60.c: 678: SPI1_Exchange8bit(eth_MAC->mac_array[5]);
 20190  1AC6  0023               	movlb	3	; select bank3
 20191  1AC7  0829               	movf	(_eth_MAC+1)^(0+384),w
 20192  1AC8  0020               	movlb	0	; select bank0
 20193  1AC9  00A5               	movwf	??_ETH_WriteStart+1
 20194  1ACA  0023               	movlb	3	; select bank3
 20195  1ACB  0828               	movf	_eth_MAC^(0+384),w
 20196  1ACC  0020               	movlb	0	; select bank0
 20197  1ACD  00A4               	movwf	??_ETH_WriteStart
 20198  1ACE  3005               	movlw	5
 20199  1ACF  0724               	addwf	??_ETH_WriteStart,w
 20200  1AD0  0084               	movwf	4
 20201  1AD1  0825               	movf	??_ETH_WriteStart+1,w
 20202  1AD2  1803               	skipnc
 20203  1AD3  0A25               	incf	??_ETH_WriteStart+1,w
 20204  1AD4  0085               	movwf	5
 20205  1AD5  0800               	movf	0,w	;code access
 20206  1AD6  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20207                           
 20208                           ;ENC28J60.c: 679: SPI1_Exchange8bit(type >> 8);
 20209  1AD9  0020               	movlb	0	; select bank0
 20210  1ADA  0823               	movf	ETH_WriteStart@type+1,w
 20211  1ADB  31A9  21A5  3199   	fcall	_SPI1_Exchange8bit
 20212                           
 20213                           ;ENC28J60.c: 680: SPI1_Exchange8bit(type & 0x0FF);
 20214  1ADE  0020               	movlb	0	; select bank0
 20215  1ADF  0822               	movf	ETH_WriteStart@type,w
 20216  1AE0  31A9  21A5         	fcall	_SPI1_Exchange8bit
 20217  1AE2  0022               	movlb	2	; select bank2
 20218  1AE3  170E               	bsf	14,6	;volatile
 20219                           
 20220                           ;ENC28J60.c: 682: TXPacketSize += 15;
 20221  1AE4  300F               	movlw	15
 20222  1AE5  0023               	movlb	3	; select bank3
 20223  1AE6  07A4               	addwf	_TXPacketSize^(0+384),f
 20224  1AE7  3000               	movlw	0
 20225  1AE8  3DA5               	addwfc	(_TXPacketSize+1)^(0+384),f
 20226                           
 20227                           ;ENC28J60.c: 683: ethData.bufferBusy = 1;
 20228  1AE9  0024               	movlb	4	; select bank4
 20229  1AEA  16C4               	bsf	_ethData^(0+512),5	;volatile
 20230                           
 20231                           ;ENC28J60.c: 685: return SUCCESS;
 20232  1AEB  3001               	movlw	1
 20233  1AEC  0008               	return
 20234  1AED                     __end_of_ETH_WriteStart:
 20235                           
 20236                           	psect	text78
 20237  2CE2                     __ptext78:	
 20238 ;; *************** function _ETH_WriteBlock *****************
 20239 ;; Defined at:
 20240 ;;		line 617 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 20241 ;; Parameters:    Size  Location     Type
 20242 ;;  data            2    1[COMMON] PTR const void 
 20243 ;;		 -> DEMO_TCP_Client@txdataPort60(80), TCP_Snd@txHeader(20), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 20244 ;;		 -> NULL(0), 
 20245 ;;  length          2    3[COMMON] unsigned int 
 20246 ;; Auto vars:     Size  Location     Type
 20247 ;;  p               2    5[COMMON] PTR unsigned char 
 20248 ;;		 -> DEMO_TCP_Client@txdataPort60(80), TCP_Snd@txHeader(20), ARPV4_Request@header(28), ARPV4_Packet@header(28), 
 20249 ;;		 -> NULL(0), 
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  2    1[COMMON] unsigned int 
 20252 ;; Registers used:
 20253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20254 ;; Tracked objects:
 20255 ;;		On entry : 1E/0
 20256 ;;		On exit  : 1F/2
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20263 ;;Total ram usage:        6 bytes
 20264 ;; Hardware stack levels used:    1
 20265 ;; Hardware stack levels required when called:    4
 20266 ;; This function calls:
 20267 ;;		_SPI1_Exchange8bit
 20268 ;; This function is called by:
 20269 ;;		_ARPV4_Packet
 20270 ;;		_ARPV4_Request
 20271 ;;		_TCP_Snd
 20272 ;; This function uses a non-reentrant model
 20273 ;;
 20274                           
 20275                           
 20276                           ;psect for function _ETH_WriteBlock
 20277  2CE2                     _ETH_WriteBlock:
 20278                           
 20279                           ;ENC28J60.c: 619: char *p = data;
 20280                           
 20281                           ;incstack = 0
 20282                           ; Regs used in _ETH_WriteBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20283  2CE2  0872               	movf	ETH_WriteBlock@data+1,w
 20284  2CE3  00F6               	movwf	ETH_WriteBlock@p+1
 20285  2CE4  0871               	movf	ETH_WriteBlock@data,w
 20286  2CE5  00F5               	movwf	ETH_WriteBlock@p
 20287                           
 20288                           ;ENC28J60.c: 620: TXPacketSize += length;
 20289  2CE6  0873               	movf	ETH_WriteBlock@length,w
 20290  2CE7  0023               	movlb	3	; select bank3
 20291  2CE8  07A4               	addwf	_TXPacketSize^(0+384),f
 20292  2CE9  0874               	movf	ETH_WriteBlock@length+1,w
 20293  2CEA  3DA5               	addwfc	(_TXPacketSize+1)^(0+384),f
 20294  2CEB  0022               	movlb	2	; select bank2
 20295  2CEC  130E               	bcf	14,6	;volatile
 20296                           
 20297                           ;ENC28J60.c: 622: SPI1_Exchange8bit(wbm_inst);
 20298  2CED  307A               	movlw	122
 20299  2CEE  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 20300  2CF1                     l7266:	
 20301                           ;ENC28J60.c: 623: while (length--) {
 20302                           
 20303  2CF1  3001               	movlw	1
 20304  2CF2  02F3               	subwf	ETH_WriteBlock@length,f
 20305  2CF3  3000               	movlw	0
 20306  2CF4  3BF4               	subwfb	ETH_WriteBlock@length+1,f
 20307  2CF5  0A73               	incf	ETH_WriteBlock@length,w
 20308  2CF6  1903               	btfsc	3,2
 20309  2CF7  0A74               	incf	ETH_WriteBlock@length+1,w
 20310  2CF8  1903               	btfsc	3,2
 20311  2CF9  2D07               	goto	l1243
 20312                           
 20313                           ;ENC28J60.c: 624: SPI1_Exchange8bit(*p++);
 20314  2CFA  0875               	movf	ETH_WriteBlock@p,w
 20315  2CFB  0086               	movwf	6
 20316  2CFC  0876               	movf	ETH_WriteBlock@p+1,w
 20317  2CFD  0087               	movwf	7
 20318  2CFE  0801               	movf	1,w
 20319  2CFF  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 20320  2D02  3001               	movlw	1
 20321  2D03  07F5               	addwf	ETH_WriteBlock@p,f
 20322  2D04  3000               	movlw	0
 20323  2D05  3DF6               	addwfc	ETH_WriteBlock@p+1,f
 20324  2D06  2CF1               	goto	l7266
 20325  2D07                     l1243:	
 20326                           ;ENC28J60.c: 625: };ENC28J60.c: 626: do{LATC6 = 1;} while(0);
 20327                           
 20328  2D07  0022               	movlb	2	; select bank2
 20329  2D08  170E               	bsf	14,6	;volatile
 20330  2D09  0008               	return
 20331  2D0A                     __end_of_ETH_WriteBlock:
 20332                           
 20333                           	psect	text79
 20334  2E5D                     __ptext79:	
 20335 ;; *************** function _ARPV4_Lookup *****************
 20336 ;; Defined at:
 20337 ;;		line 238 in file "mcc_generated_files/TCPIPLibrary/arpv4.c"
 20338 ;; Parameters:    Size  Location     Type
 20339 ;;  ip_address      4    0[COMMON] unsigned long 
 20340 ;; Auto vars:     Size  Location     Type
 20341 ;;  entry_pointe    2    8[COMMON] PTR struct .
 20342 ;;		 -> arpMap(104), 
 20343 ;;  x               1   10[COMMON] unsigned char 
 20344 ;; Return value:  Size  Location     Type
 20345 ;;                  2    0[COMMON] PTR struct .
 20346 ;; Registers used:
 20347 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20348 ;; Tracked objects:
 20349 ;;		On entry : 1F/0
 20350 ;;		On exit  : 1F/0
 20351 ;;		Unchanged: 1F/0
 20352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20354 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20356 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20357 ;;Total ram usage:       11 bytes
 20358 ;; Hardware stack levels used:    1
 20359 ;; Hardware stack levels required when called:    3
 20360 ;; This function calls:
 20361 ;;		Nothing
 20362 ;; This function is called by:
 20363 ;;		_IPv4_Start
 20364 ;; This function uses a non-reentrant model
 20365 ;;
 20366                           
 20367                           
 20368                           ;psect for function _ARPV4_Lookup
 20369  2E5D                     _ARPV4_Lookup:
 20370                           
 20371                           ;arpv4.c: 240: arpMap_t *entry_pointer = arpMap;
 20372                           
 20373                           ;incstack = 0
 20374                           ; Regs used in _ARPV4_Lookup: [wreg+fsr1l+fsr1h+status,2+status,0]
 20375  2E5D  3088               	movlw	136
 20376  2E5E  00F8               	movwf	ARPV4_Lookup@entry_pointer
 20377  2E5F  3027               	movlw	39
 20378  2E60  00F9               	movwf	ARPV4_Lookup@entry_pointer+1
 20379                           
 20380                           ;arpv4.c: 241: uint8_t x;;arpv4.c: 243: for(x = 0; x < 8; x++)
 20381  2E61  01FA               	clrf	ARPV4_Lookup@x
 20382  2E62                     l5018:
 20383                           
 20384                           ;arpv4.c: 244: {;arpv4.c: 245: if(entry_pointer->ipAddress == ip_address)
 20385  2E62  0878               	movf	ARPV4_Lookup@entry_pointer,w
 20386  2E63  0086               	movwf	6
 20387  2E64  0879               	movf	ARPV4_Lookup@entry_pointer+1,w
 20388  2E65  0087               	movwf	7
 20389  2E66  3146               	addfsr 1,6
 20390  2E67  3F40               	moviw [0]fsr1
 20391  2E68  00F4               	movwf	??_ARPV4_Lookup
 20392  2E69  3F41               	moviw [1]fsr1
 20393  2E6A  00F5               	movwf	??_ARPV4_Lookup+1
 20394  2E6B  3F42               	moviw [2]fsr1
 20395  2E6C  00F6               	movwf	??_ARPV4_Lookup+2
 20396  2E6D  3F43               	moviw [3]fsr1
 20397  2E6E  00F7               	movwf	??_ARPV4_Lookup+3
 20398  2E6F  0873               	movf	ARPV4_Lookup@ip_address+3,w
 20399  2E70  0677               	xorwf	??_ARPV4_Lookup+3,w
 20400  2E71  1D03               	skipz
 20401  2E72  2E7D               	goto	u2975
 20402  2E73  0872               	movf	ARPV4_Lookup@ip_address+2,w
 20403  2E74  0676               	xorwf	??_ARPV4_Lookup+2,w
 20404  2E75  1D03               	skipz
 20405  2E76  2E7D               	goto	u2975
 20406  2E77  0871               	movf	ARPV4_Lookup@ip_address+1,w
 20407  2E78  0675               	xorwf	??_ARPV4_Lookup+1,w
 20408  2E79  1D03               	skipz
 20409  2E7A  2E7D               	goto	u2975
 20410  2E7B  0870               	movf	ARPV4_Lookup@ip_address,w
 20411  2E7C  0674               	xorwf	??_ARPV4_Lookup,w
 20412  2E7D                     u2975:
 20413  2E7D  1D03               	skipz
 20414  2E7E  2E84               	goto	l5024
 20415                           
 20416                           ;arpv4.c: 246: return &entry_pointer->macAddress;
 20417  2E7F  0879               	movf	ARPV4_Lookup@entry_pointer+1,w
 20418  2E80  00F1               	movwf	?_ARPV4_Lookup+1
 20419  2E81  0878               	movf	ARPV4_Lookup@entry_pointer,w
 20420  2E82  00F0               	movwf	?_ARPV4_Lookup
 20421  2E83  0008               	return
 20422  2E84                     l5024:
 20423                           
 20424                           ;arpv4.c: 247: entry_pointer ++;
 20425  2E84  300D               	movlw	13
 20426  2E85  07F8               	addwf	ARPV4_Lookup@entry_pointer,f
 20427  2E86  3000               	movlw	0
 20428  2E87  3DF9               	addwfc	ARPV4_Lookup@entry_pointer+1,f
 20429  2E88  3001               	movlw	1
 20430  2E89  00F4               	movwf	??_ARPV4_Lookup
 20431  2E8A  0874               	movf	??_ARPV4_Lookup,w
 20432  2E8B  07FA               	addwf	ARPV4_Lookup@x,f
 20433  2E8C  3008               	movlw	8
 20434  2E8D  027A               	subwf	ARPV4_Lookup@x,w
 20435  2E8E  1C03               	skipc
 20436  2E8F  2E62               	goto	l5018
 20437                           
 20438                           ;arpv4.c: 248: };arpv4.c: 249: return 0;
 20439  2E90  01F0               	clrf	?_ARPV4_Lookup
 20440  2E91  01F1               	clrf	?_ARPV4_Lookup+1
 20441  2E92  0008               	return
 20442  2E93                     __end_of_ARPV4_Lookup:
 20443                           
 20444                           	psect	text80
 20445  2018                     __ptext80:	
 20446 ;; *************** function _IPV4_Send *****************
 20447 ;; Defined at:
 20448 ;;		line 258 in file "mcc_generated_files/TCPIPLibrary/ipv4.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  payloadLengt    2   19[BANK0 ] unsigned int 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;  totalLength     2   27[BANK0 ] unsigned int 
 20453 ;;  cksm            2   24[BANK0 ] unsigned int 
 20454 ;;  ret             1   26[BANK0 ] enum E390
 20455 ;; Return value:  Size  Location     Type
 20456 ;;                  1    wreg      enum E479
 20457 ;; Registers used:
 20458 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20459 ;; Tracked objects:
 20460 ;;		On entry : 1F/0
 20461 ;;		On exit  : 1F/0
 20462 ;;		Unchanged: 0/0
 20463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20465 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20466 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20467 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20468 ;;Total ram usage:       10 bytes
 20469 ;; Hardware stack levels used:    1
 20470 ;; Hardware stack levels required when called:    7
 20471 ;; This function calls:
 20472 ;;		_ETH_Insert
 20473 ;;		_ETH_Send
 20474 ;;		_ETH_TxComputeChecksum
 20475 ;; This function is called by:
 20476 ;;		_TCP_Snd
 20477 ;;		_ICMP_EchoReply
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481                           
 20482                           ;psect for function _IPV4_Send
 20483  2018                     _IPV4_Send:
 20484                           
 20485                           ;ipv4.c: 260: uint16_t totalLength;;ipv4.c: 261: uint16_t cksm;;ipv4.c: 262: error_msg r
      +                          et;;ipv4.c: 264: totalLength = 20 + payloadLength;
 20486                           
 20487                           ;incstack = 0
 20488                           ; Regs used in _IPV4_Send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20489  2018  0833               	movf	IPV4_Send@payloadLength,w
 20490  2019  3E14               	addlw	20
 20491  201A  00BB               	movwf	IPV4_Send@totalLength
 20492  201B  3000               	movlw	0
 20493  201C  3D34               	addwfc	IPV4_Send@payloadLength+1,w
 20494  201D  00BC               	movwf	IPV4_Send@totalLength+1
 20495                           
 20496                           ;ipv4.c: 265: totalLength = ((((uint16_t)totalLength & (uint16_t)0xFF00) >> 8) | (((uint
      +                          16_t)totalLength & (uint16_t)0x00FF) << 8));
 20497  201E  30FF               	movlw	255
 20498  201F  053B               	andwf	IPV4_Send@totalLength,w
 20499  2020  00B5               	movwf	??_IPV4_Send
 20500  2021  3000               	movlw	0
 20501  2022  053C               	andwf	IPV4_Send@totalLength+1,w
 20502  2023  00B6               	movwf	??_IPV4_Send+1
 20503  2024  0835               	movf	??_IPV4_Send,w
 20504  2025  00B6               	movwf	??_IPV4_Send+1
 20505  2026  01B5               	clrf	??_IPV4_Send
 20506  2027  0835               	movf	??_IPV4_Send,w
 20507  2028  043C               	iorwf	IPV4_Send@totalLength+1,w
 20508  2029  00BB               	movwf	IPV4_Send@totalLength
 20509  202A  0836               	movf	??_IPV4_Send+1,w
 20510  202B  00BC               	movwf	IPV4_Send@totalLength+1
 20511                           
 20512                           ;ipv4.c: 268: ETH_Insert((char *)&totalLength, 2, sizeof(ethernetFrame_t) + (size_t)(((c
      +                          har*)&((ipv4Header_t *)1)->length)-1));
 20513  202C  3002               	movlw	2
 20514  202D  00A0               	movwf	ETH_Insert@len
 20515  202E  3000               	movlw	0
 20516  202F  00A1               	movwf	ETH_Insert@len+1
 20517  2030  3010               	movlw	16
 20518  2031  00A2               	movwf	ETH_Insert@offset
 20519  2032  3000               	movlw	0
 20520  2033  00A3               	movwf	ETH_Insert@offset+1
 20521  2034  303B               	movlw	(low (IPV4_Send@totalLength| 0))& (0+255)
 20522  2035  31AF  277E  31A0   	fcall	_ETH_Insert
 20523                           
 20524                           ;ipv4.c: 270: cksm = ETH_TxComputeChecksum(sizeof(ethernetFrame_t),sizeof(ipv4Header_t),
      +                          0);
 20525  2038  300E               	movlw	14
 20526  2039  0020               	movlb	0	; select bank0
 20527  203A  00A0               	movwf	ETH_TxComputeChecksum@position
 20528  203B  3000               	movlw	0
 20529  203C  00A1               	movwf	ETH_TxComputeChecksum@position+1
 20530  203D  3014               	movlw	20
 20531  203E  00A2               	movwf	ETH_TxComputeChecksum@length
 20532  203F  3000               	movlw	0
 20533  2040  00A3               	movwf	ETH_TxComputeChecksum@length+1
 20534  2041  3000               	movlw	0
 20535  2042  00A4               	movwf	ETH_TxComputeChecksum@seed
 20536  2043  00A5               	movwf	ETH_TxComputeChecksum@seed+1
 20537  2044  31A5  2529  31A0   	fcall	_ETH_TxComputeChecksum
 20538  2047  0821               	movf	?_ETH_TxComputeChecksum+1,w
 20539  2048  00B9               	movwf	IPV4_Send@cksm+1
 20540  2049  0820               	movf	?_ETH_TxComputeChecksum,w
 20541  204A  00B8               	movwf	IPV4_Send@cksm
 20542                           
 20543                           ;ipv4.c: 272: ETH_Insert((char *)&cksm, 2, sizeof(ethernetFrame_t) + (size_t)(((char*)&(
      +                          (ipv4Header_t *)1)->headerCksm)-1));
 20544  204B  3002               	movlw	2
 20545  204C  00A0               	movwf	ETH_Insert@len
 20546  204D  3000               	movlw	0
 20547  204E  00A1               	movwf	ETH_Insert@len+1
 20548  204F  3018               	movlw	24
 20549  2050  00A2               	movwf	ETH_Insert@offset
 20550  2051  3000               	movlw	0
 20551  2052  00A3               	movwf	ETH_Insert@offset+1
 20552  2053  3038               	movlw	(low (IPV4_Send@cksm| 0))& (0+255)
 20553  2054  31AF  277E  31A0   	fcall	_ETH_Insert
 20554                           
 20555                           ;ipv4.c: 273: ret = ETH_Send();
 20556  2057  31AB  23C1         	fcall	_ETH_Send
 20557  2059  0020               	movlb	0	; select bank0
 20558  205A  00B5               	movwf	??_IPV4_Send
 20559  205B  0835               	movf	??_IPV4_Send,w
 20560  205C  00BA               	movwf	IPV4_Send@ret
 20561                           
 20562                           ;ipv4.c: 275: return ret;
 20563  205D  083A               	movf	IPV4_Send@ret,w
 20564  205E  0008               	return
 20565  205F                     __end_of_IPV4_Send:
 20566                           
 20567                           	psect	text81
 20568  2529                     __ptext81:	
 20569 ;; *************** function _ETH_TxComputeChecksum *****************
 20570 ;; Defined at:
 20571 ;;		line 862 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 20572 ;; Parameters:    Size  Location     Type
 20573 ;;  position        2    0[BANK0 ] unsigned int 
 20574 ;;  length          2    2[BANK0 ] unsigned int 
 20575 ;;  seed            2    4[BANK0 ] unsigned int 
 20576 ;; Auto vars:     Size  Location     Type
 20577 ;;  cksm            4   15[BANK0 ] unsigned long 
 20578 ;; Return value:  Size  Location     Type
 20579 ;;                  2    0[BANK0 ] unsigned int 
 20580 ;; Registers used:
 20581 ;;		wreg, status,2, status,0, pclath, cstack
 20582 ;; Tracked objects:
 20583 ;;		On entry : 1F/0
 20584 ;;		On exit  : 1F/0
 20585 ;;		Unchanged: 0/0
 20586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20587 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20588 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20589 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20590 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20591 ;;Total ram usage:       19 bytes
 20592 ;; Hardware stack levels used:    1
 20593 ;; Hardware stack levels required when called:    6
 20594 ;; This function calls:
 20595 ;;		_ENC28_Bfc
 20596 ;;		_ENC28_Bfs
 20597 ;;		_ENC28_Rcr16
 20598 ;;		_ENC28_Rcr8
 20599 ;;		_ENC28_Wcr16
 20600 ;; This function is called by:
 20601 ;;		_TCP_Snd
 20602 ;;		_IPV4_Send
 20603 ;;		_ICMP_EchoReply
 20604 ;; This function uses a non-reentrant model
 20605 ;;
 20606                           
 20607                           
 20608                           ;psect for function _ETH_TxComputeChecksum
 20609  2529                     _ETH_TxComputeChecksum:
 20610                           
 20611                           ;ENC28J60.c: 864: uint32_t cksm;;ENC28J60.c: 867: position+= sizeof(Control_Byte);
 20612                           
 20613                           ;incstack = 0
 20614                           ; Regs used in _ETH_TxComputeChecksum: [wreg+status,2+status,0+pclath+cstack]
 20615  2529  3001               	movlw	1
 20616  252A  07A0               	addwf	ETH_TxComputeChecksum@position,f
 20617  252B  3000               	movlw	0
 20618  252C  3DA1               	addwfc	ETH_TxComputeChecksum@position+1,f
 20619  252D                     l5036:	
 20620                           ;ENC28J60.c: 869: while ((ENC28_Rcr8(J60_ECON1) & 0x20) != 0);
 20621                           
 20622  252D  30FF               	movlw	255
 20623  252E  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 20624  2531  3920               	andlw	32
 20625  2532  1D03               	btfss	3,2
 20626  2533  2D2D               	goto	l5036
 20627                           
 20628                           ;ENC28J60.c: 871: ENC28_Wcr16(J60_EDMASTL, ((0x1FFF - (1500)) + position));
 20629  2534  0020               	movlb	0	; select bank0
 20630  2535  0820               	movf	ETH_TxComputeChecksum@position,w
 20631  2536  3E23               	addlw	35
 20632  2537  00FA               	movwf	ENC28_Wcr16@v
 20633  2538  301A               	movlw	26
 20634  2539  3D21               	addwfc	ETH_TxComputeChecksum@position+1,w
 20635  253A  00FB               	movwf	ENC28_Wcr16@v+1
 20636  253B  3010               	movlw	16
 20637  253C  31AC  2448  31A5   	fcall	_ENC28_Wcr16
 20638                           
 20639                           ;ENC28J60.c: 872: ENC28_Wcr16(J60_EDMANDL, (0x1FFF - (1500)) + position + (length-1));
 20640  253F  0020               	movlb	0	; select bank0
 20641  2540  0820               	movf	ETH_TxComputeChecksum@position,w
 20642  2541  0722               	addwf	ETH_TxComputeChecksum@length,w
 20643  2542  00A6               	movwf	??_ETH_TxComputeChecksum
 20644  2543  0821               	movf	ETH_TxComputeChecksum@position+1,w
 20645  2544  3D23               	addwfc	ETH_TxComputeChecksum@length+1,w
 20646  2545  00A7               	movwf	??_ETH_TxComputeChecksum+1
 20647  2546  0826               	movf	??_ETH_TxComputeChecksum,w
 20648  2547  3E22               	addlw	34
 20649  2548  00FA               	movwf	ENC28_Wcr16@v
 20650  2549  301A               	movlw	26
 20651  254A  3D27               	addwfc	??_ETH_TxComputeChecksum+1,w
 20652  254B  00FB               	movwf	ENC28_Wcr16@v+1
 20653  254C  3012               	movlw	18
 20654  254D  31AC  2448  31A5   	fcall	_ENC28_Wcr16
 20655                           
 20656                           ;ENC28J60.c: 874: if (!(ENC28_Rcr8(J60_ECON1) & 0x10))
 20657  2550  30FF               	movlw	255
 20658  2551  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 20659  2554  3910               	andlw	16
 20660  2555  1D03               	btfss	3,2
 20661  2556  2DCB               	goto	l1318
 20662                           
 20663                           ;ENC28J60.c: 875: {;ENC28J60.c: 877: ENC28_Bfs(J60_ECON1, 0x30);
 20664  2557  3030               	movlw	48
 20665  2558  0020               	movlb	0	; select bank0
 20666  2559  00A6               	movwf	??_ETH_TxComputeChecksum
 20667  255A  0826               	movf	??_ETH_TxComputeChecksum,w
 20668  255B  00F4               	movwf	ENC28_Bfs@bits
 20669  255C  30FF               	movlw	255
 20670  255D  31AA  226D  31A5   	fcall	_ENC28_Bfs
 20671  2560                     l5042:	
 20672                           ;ENC28J60.c: 878: while ((ENC28_Rcr8(J60_ECON1) & 0x20) != 0);
 20673                           
 20674  2560  30FF               	movlw	255
 20675  2561  31AB  2325  31A5   	fcall	_ENC28_Rcr8
 20676  2564  3920               	andlw	32
 20677  2565  1D03               	btfss	3,2
 20678  2566  2D60               	goto	l5042
 20679                           
 20680                           ;ENC28J60.c: 879: ENC28_Bfc(J60_ECON1,0x10);
 20681  2567  3010               	movlw	16
 20682  2568  0020               	movlb	0	; select bank0
 20683  2569  00A6               	movwf	??_ETH_TxComputeChecksum
 20684  256A  0826               	movf	??_ETH_TxComputeChecksum,w
 20685  256B  00F4               	movwf	ENC28_Bfc@bits
 20686  256C  30FF               	movlw	255
 20687  256D  31AA  2280  31A5   	fcall	_ENC28_Bfc
 20688                           
 20689                           ;ENC28J60.c: 881: cksm = ENC28_Rcr16(J60_EDMACSL);
 20690  2570  3016               	movlw	22
 20691  2571  31AD  2562  31A5   	fcall	_ENC28_Rcr16
 20692  2574  0874               	movf	?_ENC28_Rcr16,w
 20693  2575  0020               	movlb	0	; select bank0
 20694  2576  00AF               	movwf	ETH_TxComputeChecksum@cksm
 20695  2577  0875               	movf	?_ENC28_Rcr16+1,w
 20696  2578  00B0               	movwf	ETH_TxComputeChecksum@cksm+1
 20697  2579  01B1               	clrf	ETH_TxComputeChecksum@cksm+2
 20698  257A  01B2               	clrf	ETH_TxComputeChecksum@cksm+3
 20699                           
 20700                           ;ENC28J60.c: 882: if (seed)
 20701  257B  0824               	movf	ETH_TxComputeChecksum@seed,w
 20702  257C  0425               	iorwf	ETH_TxComputeChecksum@seed+1,w
 20703  257D  1903               	btfsc	3,2
 20704  257E  2DAF               	goto	l5056
 20705                           
 20706                           ;ENC28J60.c: 883: {;ENC28J60.c: 884: seed=~(seed);
 20707  257F  09A4               	comf	ETH_TxComputeChecksum@seed,f
 20708  2580  09A5               	comf	ETH_TxComputeChecksum@seed+1,f
 20709                           
 20710                           ;ENC28J60.c: 885: cksm+=seed;
 20711  2581  0824               	movf	ETH_TxComputeChecksum@seed,w
 20712  2582  07AF               	addwf	ETH_TxComputeChecksum@cksm,f
 20713  2583  0825               	movf	ETH_TxComputeChecksum@seed+1,w
 20714  2584  3DB0               	addwfc	ETH_TxComputeChecksum@cksm+1,f
 20715  2585  3000               	movlw	0
 20716  2586  3DB1               	addwfc	ETH_TxComputeChecksum@cksm+2,f
 20717  2587  3DB2               	addwfc	ETH_TxComputeChecksum@cksm+3,f
 20718  2588                     l5054:	
 20719                           ;ENC28J60.c: 886: while(cksm >> 16)
 20720                           
 20721  2588  0831               	movf	ETH_TxComputeChecksum@cksm+2,w
 20722  2589  0432               	iorwf	ETH_TxComputeChecksum@cksm+3,w
 20723  258A  1903               	btfsc	3,2
 20724  258B  2DAF               	goto	l5056
 20725                           
 20726                           ;ENC28J60.c: 887: {;ENC28J60.c: 888: cksm = (cksm & 0x0FFFF) + (cksm>>16);
 20727  258C  0831               	movf	ETH_TxComputeChecksum@cksm+2,w
 20728  258D  00A6               	movwf	??_ETH_TxComputeChecksum
 20729  258E  0832               	movf	ETH_TxComputeChecksum@cksm+3,w
 20730  258F  00A7               	movwf	??_ETH_TxComputeChecksum+1
 20731  2590  01A8               	clrf	??_ETH_TxComputeChecksum+2
 20732  2591  01A9               	clrf	??_ETH_TxComputeChecksum+3
 20733  2592  30FF               	movlw	255
 20734  2593  052F               	andwf	ETH_TxComputeChecksum@cksm,w
 20735  2594  00AA               	movwf	??_ETH_TxComputeChecksum+4
 20736  2595  30FF               	movlw	255
 20737  2596  0530               	andwf	ETH_TxComputeChecksum@cksm+1,w
 20738  2597  00AB               	movwf	??_ETH_TxComputeChecksum+5
 20739  2598  3000               	movlw	0
 20740  2599  0531               	andwf	ETH_TxComputeChecksum@cksm+2,w
 20741  259A  00AC               	movwf	??_ETH_TxComputeChecksum+6
 20742  259B  3000               	movlw	0
 20743  259C  0532               	andwf	ETH_TxComputeChecksum@cksm+3,w
 20744  259D  00AD               	movwf	??_ETH_TxComputeChecksum+7
 20745  259E  082A               	movf	??_ETH_TxComputeChecksum+4,w
 20746  259F  07A6               	addwf	??_ETH_TxComputeChecksum,f
 20747  25A0  082B               	movf	??_ETH_TxComputeChecksum+5,w
 20748  25A1  3DA7               	addwfc	??_ETH_TxComputeChecksum+1,f
 20749  25A2  082C               	movf	??_ETH_TxComputeChecksum+6,w
 20750  25A3  3DA8               	addwfc	??_ETH_TxComputeChecksum+2,f
 20751  25A4  082D               	movf	??_ETH_TxComputeChecksum+7,w
 20752  25A5  3DA9               	addwfc	??_ETH_TxComputeChecksum+3,f
 20753  25A6  0829               	movf	??_ETH_TxComputeChecksum+3,w
 20754  25A7  00B2               	movwf	ETH_TxComputeChecksum@cksm+3
 20755  25A8  0828               	movf	??_ETH_TxComputeChecksum+2,w
 20756  25A9  00B1               	movwf	ETH_TxComputeChecksum@cksm+2
 20757  25AA  0827               	movf	??_ETH_TxComputeChecksum+1,w
 20758  25AB  00B0               	movwf	ETH_TxComputeChecksum@cksm+1
 20759  25AC  0826               	movf	??_ETH_TxComputeChecksum,w
 20760  25AD  00AF               	movwf	ETH_TxComputeChecksum@cksm
 20761  25AE  2D88               	goto	l5054
 20762  25AF                     l5056:
 20763                           
 20764                           ;ENC28J60.c: 889: };ENC28J60.c: 890: };ENC28J60.c: 891: cksm = ((((uint16_t)cksm & (uint
      +                          16_t)0xFF00) >> 8) | (((uint16_t)cksm & (uint16_t)0x00FF) << 8));
 20765  25AF  30FF               	movlw	255
 20766  25B0  052F               	andwf	ETH_TxComputeChecksum@cksm,w
 20767  25B1  00A6               	movwf	??_ETH_TxComputeChecksum
 20768  25B2  3000               	movlw	0
 20769  25B3  0530               	andwf	ETH_TxComputeChecksum@cksm+1,w
 20770  25B4  00A7               	movwf	??_ETH_TxComputeChecksum+1
 20771  25B5  0826               	movf	??_ETH_TxComputeChecksum,w
 20772  25B6  00A7               	movwf	??_ETH_TxComputeChecksum+1
 20773  25B7  01A6               	clrf	??_ETH_TxComputeChecksum
 20774  25B8  0826               	movf	??_ETH_TxComputeChecksum,w
 20775  25B9  0430               	iorwf	ETH_TxComputeChecksum@cksm+1,w
 20776  25BA  00A9               	movwf	??_ETH_TxComputeChecksum+3
 20777  25BB  0827               	movf	??_ETH_TxComputeChecksum+1,w
 20778  25BC  00AA               	movwf	??_ETH_TxComputeChecksum+4
 20779  25BD  0829               	movf	??_ETH_TxComputeChecksum+3,w
 20780  25BE  00AB               	movwf	??_ETH_TxComputeChecksum+5
 20781  25BF  082A               	movf	??_ETH_TxComputeChecksum+4,w
 20782  25C0  00AC               	movwf	??_ETH_TxComputeChecksum+6
 20783  25C1  01AD               	clrf	??_ETH_TxComputeChecksum+7
 20784  25C2  01AE               	clrf	??_ETH_TxComputeChecksum+8
 20785  25C3  082E               	movf	??_ETH_TxComputeChecksum+8,w
 20786  25C4  00B2               	movwf	ETH_TxComputeChecksum@cksm+3
 20787  25C5  082D               	movf	??_ETH_TxComputeChecksum+7,w
 20788  25C6  00B1               	movwf	ETH_TxComputeChecksum@cksm+2
 20789  25C7  082C               	movf	??_ETH_TxComputeChecksum+6,w
 20790  25C8  00B0               	movwf	ETH_TxComputeChecksum@cksm+1
 20791  25C9  082B               	movf	??_ETH_TxComputeChecksum+5,w
 20792  25CA  00AF               	movwf	ETH_TxComputeChecksum@cksm
 20793  25CB                     l1318:
 20794                           
 20795                           ;ENC28J60.c: 892: };ENC28J60.c: 893: return cksm;
 20796  25CB  0020               	movlb	0	; select bank0
 20797  25CC  0830               	movf	ETH_TxComputeChecksum@cksm+1,w
 20798  25CD  00A1               	movwf	?_ETH_TxComputeChecksum+1
 20799  25CE  082F               	movf	ETH_TxComputeChecksum@cksm,w
 20800  25CF  00A0               	movwf	?_ETH_TxComputeChecksum
 20801  25D0  0008               	return
 20802  25D1                     __end_of_ETH_TxComputeChecksum:
 20803                           
 20804                           	psect	text82
 20805  2B25                     __ptext82:	
 20806 ;; *************** function _ENC28_Rcr8 *****************
 20807 ;; Defined at:
 20808 ;;		line 282 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 20809 ;; Parameters:    Size  Location     Type
 20810 ;;  a               1    wreg     enum E6630
 20811 ;; Auto vars:     Size  Location     Type
 20812 ;;  a               1    6[COMMON] enum E6630
 20813 ;;  v               1    5[COMMON] unsigned char 
 20814 ;; Return value:  Size  Location     Type
 20815 ;;                  1    wreg      unsigned char 
 20816 ;; Registers used:
 20817 ;;		wreg, status,2, status,0, pclath, cstack
 20818 ;; Tracked objects:
 20819 ;;		On entry : 0/2
 20820 ;;		On exit  : 1F/2
 20821 ;;		Unchanged: 0/0
 20822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20826 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20827 ;;Total ram usage:        3 bytes
 20828 ;; Hardware stack levels used:    1
 20829 ;; Hardware stack levels required when called:    5
 20830 ;; This function calls:
 20831 ;;		_ENC28_BankSel
 20832 ;;		_SPI1_Exchange8bit
 20833 ;; This function is called by:
 20834 ;;		_ETH_Init
 20835 ;;		_ETH_EventHandler
 20836 ;;		_ENC28_PhyWrite
 20837 ;;		_ENC28_PhyRead
 20838 ;;		_ETH_WriteStart
 20839 ;;		_ETH_Copy
 20840 ;;		_ETH_TxComputeChecksum
 20841 ;;		_ETH_GetMAC
 20842 ;; This function uses a non-reentrant model
 20843 ;;
 20844                           
 20845                           
 20846                           ;psect for function _ENC28_Rcr8
 20847  2B25                     _ENC28_Rcr8:
 20848                           
 20849                           ;incstack = 0
 20850                           ; Regs used in _ENC28_Rcr8: [wreg+status,2+status,0+pclath+cstack]
 20851                           ;ENC28_Rcr8@a stored from wreg
 20852  2B25  00F6               	movwf	ENC28_Rcr8@a
 20853                           
 20854                           ;ENC28J60.c: 284: uint8_t v;;ENC28J60.c: 286: ENC28_BankSel(a);
 20855  2B26  0876               	movf	ENC28_Rcr8@a,w
 20856  2B27  31AD  25C1  31AB   	fcall	_ENC28_BankSel
 20857  2B2A  0022               	movlb	2	; select bank2
 20858  2B2B  130E               	bcf	14,6	;volatile
 20859                           
 20860                           ;ENC28J60.c: 288: SPI1_Exchange8bit(rcr_inst | (a & 0x1F));
 20861  2B2C  0876               	movf	ENC28_Rcr8@a,w
 20862  2B2D  391F               	andlw	31
 20863  2B2E  31A9  21A5  31AB   	fcall	_SPI1_Exchange8bit
 20864                           
 20865                           ;ENC28J60.c: 289: v = SPI1_Exchange8bit(0);
 20866  2B31  3000               	movlw	0
 20867  2B32  31A9  21A5         	fcall	_SPI1_Exchange8bit
 20868  2B34  00F4               	movwf	??_ENC28_Rcr8
 20869  2B35  0874               	movf	??_ENC28_Rcr8,w
 20870  2B36  00F5               	movwf	ENC28_Rcr8@v
 20871  2B37  0022               	movlb	2	; select bank2
 20872  2B38  170E               	bsf	14,6	;volatile
 20873                           
 20874                           ;ENC28J60.c: 292: return v;
 20875  2B39  0875               	movf	ENC28_Rcr8@v,w
 20876  2B3A  0008               	return
 20877  2B3B                     __end_of_ENC28_Rcr8:
 20878                           
 20879                           	psect	text83
 20880  2A80                     __ptext83:	
 20881 ;; *************** function _ENC28_Bfc *****************
 20882 ;; Defined at:
 20883 ;;		line 374 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 20884 ;; Parameters:    Size  Location     Type
 20885 ;;  a               1    wreg     enum E6630
 20886 ;;  bits            1    4[COMMON] unsigned char 
 20887 ;; Auto vars:     Size  Location     Type
 20888 ;;  a               1    5[COMMON] enum E6630
 20889 ;; Return value:  Size  Location     Type
 20890 ;;                  1    wreg      void 
 20891 ;; Registers used:
 20892 ;;		wreg, status,2, status,0, pclath, cstack
 20893 ;; Tracked objects:
 20894 ;;		On entry : 1D/0
 20895 ;;		On exit  : 1F/2
 20896 ;;		Unchanged: 0/0
 20897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20898 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20899 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20902 ;;Total ram usage:        2 bytes
 20903 ;; Hardware stack levels used:    1
 20904 ;; Hardware stack levels required when called:    5
 20905 ;; This function calls:
 20906 ;;		_ENC28_BankSel
 20907 ;;		_SPI1_Exchange8bit
 20908 ;; This function is called by:
 20909 ;;		_ETH_EventHandler
 20910 ;;		_ENC28_PhyRead
 20911 ;;		_ETH_Copy
 20912 ;;		_ETH_TxComputeChecksum
 20913 ;; This function uses a non-reentrant model
 20914 ;;
 20915                           
 20916                           
 20917                           ;psect for function _ENC28_Bfc
 20918  2A80                     _ENC28_Bfc:
 20919                           
 20920                           ;incstack = 0
 20921                           ; Regs used in _ENC28_Bfc: [wreg+status,2+status,0+pclath+cstack]
 20922                           ;ENC28_Bfc@a stored from wreg
 20923  2A80  00F5               	movwf	ENC28_Bfc@a
 20924                           
 20925                           ;ENC28J60.c: 376: ENC28_BankSel(a);
 20926  2A81  0875               	movf	ENC28_Bfc@a,w
 20927  2A82  31AD  25C1  31AA   	fcall	_ENC28_BankSel
 20928  2A85  0022               	movlb	2	; select bank2
 20929  2A86  130E               	bcf	14,6	;volatile
 20930                           
 20931                           ;ENC28J60.c: 378: SPI1_Exchange8bit(bfc_inst | (a & 0x1F));
 20932  2A87  0875               	movf	ENC28_Bfc@a,w
 20933  2A88  391F               	andlw	31
 20934  2A89  38A0               	iorlw	160
 20935  2A8A  31A9  21A5  31AA   	fcall	_SPI1_Exchange8bit
 20936                           
 20937                           ;ENC28J60.c: 379: SPI1_Exchange8bit(bits);
 20938  2A8D  0874               	movf	ENC28_Bfc@bits,w
 20939  2A8E  31A9  21A5         	fcall	_SPI1_Exchange8bit
 20940  2A90  0022               	movlb	2	; select bank2
 20941  2A91  170E               	bsf	14,6	;volatile
 20942  2A92  0008               	return
 20943  2A93                     __end_of_ENC28_Bfc:
 20944                           
 20945                           	psect	text84
 20946  2BC1                     __ptext84:	
 20947 ;; *************** function _ETH_Send *****************
 20948 ;; Defined at:
 20949 ;;		line 692 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 20950 ;; Parameters:    Size  Location     Type
 20951 ;;		None
 20952 ;; Auto vars:     Size  Location     Type
 20953 ;;		None
 20954 ;; Return value:  Size  Location     Type
 20955 ;;                  1    wreg      enum E478
 20956 ;; Registers used:
 20957 ;;		wreg, status,2, status,0, pclath, cstack
 20958 ;; Tracked objects:
 20959 ;;		On entry : 1F/2
 20960 ;;		On exit  : 1F/4
 20961 ;;		Unchanged: 0/0
 20962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20965 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20966 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20967 ;;Total ram usage:        1 bytes
 20968 ;; Hardware stack levels used:    1
 20969 ;; Hardware stack levels required when called:    6
 20970 ;; This function calls:
 20971 ;;		_ENC28_Bfs
 20972 ;;		_ENC28_Wcr16
 20973 ;; This function is called by:
 20974 ;;		_ARPV4_Packet
 20975 ;;		_ARPV4_Request
 20976 ;;		_IPV4_Send
 20977 ;; This function uses a non-reentrant model
 20978 ;;
 20979                           
 20980                           
 20981                           ;psect for function _ETH_Send
 20982  2BC1                     _ETH_Send:
 20983                           
 20984                           ;ENC28J60.c: 694: ENC28_Wcr16(J60_ETXNDL,(0x1FFF - (1500))+TXPacketSize);
 20985                           
 20986                           ;incstack = 0
 20987                           ; Regs used in _ETH_Send: [wreg+status,2+status,0+pclath+cstack]
 20988  2BC1  0023               	movlb	3	; select bank3
 20989  2BC2  0824               	movf	_TXPacketSize^(0+384),w
 20990  2BC3  3E23               	addlw	35
 20991  2BC4  00FA               	movwf	ENC28_Wcr16@v
 20992  2BC5  301A               	movlw	26
 20993  2BC6  3D25               	addwfc	(_TXPacketSize+1)^(0+384),w
 20994  2BC7  00FB               	movwf	ENC28_Wcr16@v+1
 20995  2BC8  3006               	movlw	6
 20996  2BC9  31AC  2448  31AB   	fcall	_ENC28_Wcr16
 20997                           
 20998                           ;ENC28J60.c: 695: if (!ethData.up)
 20999  2BCC  0024               	movlb	4	; select bank4
 21000  2BCD  1944               	btfsc	_ethData^(0+512),2	;volatile
 21001  2BCE  2BD1               	goto	l1260
 21002                           
 21003                           ;ENC28J60.c: 696: {;ENC28J60.c: 697: return LINK_NOT_FOUND;
 21004  2BCF  3002               	movlw	2
 21005  2BD0  0008               	return
 21006  2BD1                     l1260:
 21007                           
 21008                           ;ENC28J60.c: 698: };ENC28J60.c: 699: if(!ethData.bufferBusy)
 21009  2BD1  1AC4               	btfsc	_ethData^(0+512),5	;volatile
 21010  2BD2  2BD5               	goto	l4920
 21011                           
 21012                           ;ENC28J60.c: 700: {;ENC28J60.c: 701: return BUFFER_BUSY;
 21013  2BD3  3003               	movlw	3
 21014  2BD4  0008               	return
 21015  2BD5                     l4920:
 21016                           
 21017                           ;ENC28J60.c: 702: };ENC28J60.c: 703: ENC28_Bfs(J60_ECON1, 0x08);
 21018  2BD5  3008               	movlw	8
 21019  2BD6  0020               	movlb	0	; select bank0
 21020  2BD7  00A0               	movwf	??_ETH_Send
 21021  2BD8  0820               	movf	??_ETH_Send,w
 21022  2BD9  00F4               	movwf	ENC28_Bfs@bits
 21023  2BDA  30FF               	movlw	255
 21024  2BDB  31AA  226D         	fcall	_ENC28_Bfs
 21025                           
 21026                           ;ENC28J60.c: 704: ethData.bufferBusy = 0;
 21027  2BDD  0024               	movlb	4	; select bank4
 21028  2BDE  12C4               	bcf	_ethData^(0+512),5	;volatile
 21029                           
 21030                           ;ENC28J60.c: 706: return SUCCESS;
 21031  2BDF  3001               	movlw	1
 21032  2BE0  0008               	return
 21033  2BE1                     __end_of_ETH_Send:
 21034                           
 21035                           	psect	text85
 21036  2A6D                     __ptext85:	
 21037 ;; *************** function _ENC28_Bfs *****************
 21038 ;; Defined at:
 21039 ;;		line 360 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 21040 ;; Parameters:    Size  Location     Type
 21041 ;;  a               1    wreg     enum E6630
 21042 ;;  bits            1    4[COMMON] unsigned char 
 21043 ;; Auto vars:     Size  Location     Type
 21044 ;;  a               1    5[COMMON] enum E6630
 21045 ;; Return value:  Size  Location     Type
 21046 ;;                  1    wreg      void 
 21047 ;; Registers used:
 21048 ;;		wreg, status,2, status,0, pclath, cstack
 21049 ;; Tracked objects:
 21050 ;;		On entry : 1D/0
 21051 ;;		On exit  : 1F/2
 21052 ;;		Unchanged: 0/0
 21053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21054 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21058 ;;Total ram usage:        2 bytes
 21059 ;; Hardware stack levels used:    1
 21060 ;; Hardware stack levels required when called:    5
 21061 ;; This function calls:
 21062 ;;		_ENC28_BankSel
 21063 ;;		_SPI1_Exchange8bit
 21064 ;; This function is called by:
 21065 ;;		_ETH_Init
 21066 ;;		_ETH_EventHandler
 21067 ;;		_ENC28_PhyRead
 21068 ;;		_ETH_Send
 21069 ;;		_ETH_Flush
 21070 ;;		_ETH_Copy
 21071 ;;		_ETH_TxComputeChecksum
 21072 ;; This function uses a non-reentrant model
 21073 ;;
 21074                           
 21075                           
 21076                           ;psect for function _ENC28_Bfs
 21077  2A6D                     _ENC28_Bfs:
 21078                           
 21079                           ;incstack = 0
 21080                           ; Regs used in _ENC28_Bfs: [wreg+status,2+status,0+pclath+cstack]
 21081                           ;ENC28_Bfs@a stored from wreg
 21082  2A6D  00F5               	movwf	ENC28_Bfs@a
 21083                           
 21084                           ;ENC28J60.c: 362: ENC28_BankSel(a);
 21085  2A6E  0875               	movf	ENC28_Bfs@a,w
 21086  2A6F  31AD  25C1  31AA   	fcall	_ENC28_BankSel
 21087  2A72  0022               	movlb	2	; select bank2
 21088  2A73  130E               	bcf	14,6	;volatile
 21089                           
 21090                           ;ENC28J60.c: 364: SPI1_Exchange8bit(bfs_inst | (a & 0x1F));
 21091  2A74  0875               	movf	ENC28_Bfs@a,w
 21092  2A75  391F               	andlw	31
 21093  2A76  3880               	iorlw	128
 21094  2A77  31A9  21A5  31AA   	fcall	_SPI1_Exchange8bit
 21095                           
 21096                           ;ENC28J60.c: 365: SPI1_Exchange8bit(bits);
 21097  2A7A  0874               	movf	ENC28_Bfs@bits,w
 21098  2A7B  31A9  21A5         	fcall	_SPI1_Exchange8bit
 21099  2A7D  0022               	movlb	2	; select bank2
 21100  2A7E  170E               	bsf	14,6	;volatile
 21101  2A7F  0008               	return
 21102  2A80                     __end_of_ENC28_Bfs:
 21103                           
 21104                           	psect	text86
 21105  2F7E                     __ptext86:	
 21106 ;; *************** function _ETH_Insert *****************
 21107 ;; Defined at:
 21108 ;;		line 748 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 21109 ;; Parameters:    Size  Location     Type
 21110 ;;  data            1    wreg     PTR unsigned char 
 21111 ;;		 -> ICMP_PortUnreachable@cksm(2), ICMP_EchoReply@cksm(2), IPV4_Send@cksm(2), IPV4_Send@totalLength(2), 
 21112 ;;		 -> TCP_Snd@cksm(2), 
 21113 ;;  len             2    0[BANK0 ] unsigned int 
 21114 ;;  offset          2    2[BANK0 ] unsigned int 
 21115 ;; Auto vars:     Size  Location     Type
 21116 ;;  data            1    7[BANK0 ] PTR unsigned char 
 21117 ;;		 -> ICMP_PortUnreachable@cksm(2), ICMP_EchoReply@cksm(2), IPV4_Send@cksm(2), IPV4_Send@totalLength(2), 
 21118 ;;		 -> TCP_Snd@cksm(2), 
 21119 ;;  current_tx_p    2    5[BANK0 ] unsigned int 
 21120 ;; Return value:  Size  Location     Type
 21121 ;;                  1    wreg      void 
 21122 ;; Registers used:
 21123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21124 ;; Tracked objects:
 21125 ;;		On entry : 1F/0
 21126 ;;		On exit  : 1F/2
 21127 ;;		Unchanged: 0/0
 21128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21129 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21130 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21132 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;Total ram usage:        8 bytes
 21134 ;; Hardware stack levels used:    1
 21135 ;; Hardware stack levels required when called:    6
 21136 ;; This function calls:
 21137 ;;		_ENC28_Rcr16
 21138 ;;		_ENC28_Wcr16
 21139 ;;		_SPI1_Exchange8bit
 21140 ;; This function is called by:
 21141 ;;		_TCP_Snd
 21142 ;;		_IPV4_Send
 21143 ;;		_ICMP_EchoReply
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147                           
 21148                           ;psect for function _ETH_Insert
 21149  2F7E                     _ETH_Insert:
 21150                           
 21151                           ;incstack = 0
 21152                           ; Regs used in _ETH_Insert: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21153                           ;ETH_Insert@data stored from wreg
 21154  2F7E  00A7               	movwf	ETH_Insert@data
 21155                           
 21156                           ;ENC28J60.c: 751: offset+=sizeof(Control_Byte);
 21157  2F7F  3001               	movlw	1
 21158  2F80  07A2               	addwf	ETH_Insert@offset,f
 21159  2F81  3000               	movlw	0
 21160  2F82  3DA3               	addwfc	ETH_Insert@offset+1,f
 21161                           
 21162                           ;ENC28J60.c: 753: current_tx_pointer = ENC28_Rcr16(J60_EWRPTL);
 21163  2F83  3002               	movlw	2
 21164  2F84  31AD  2562  31AF   	fcall	_ENC28_Rcr16
 21165  2F87  0875               	movf	?_ENC28_Rcr16+1,w
 21166  2F88  0020               	movlb	0	; select bank0
 21167  2F89  00A6               	movwf	ETH_Insert@current_tx_pointer+1
 21168  2F8A  0874               	movf	?_ENC28_Rcr16,w
 21169  2F8B  00A5               	movwf	ETH_Insert@current_tx_pointer
 21170                           
 21171                           ;ENC28J60.c: 754: ENC28_Wcr16(J60_EWRPTL, (0x1FFF - (1500))+offset);
 21172  2F8C  0822               	movf	ETH_Insert@offset,w
 21173  2F8D  3E23               	addlw	35
 21174  2F8E  00FA               	movwf	ENC28_Wcr16@v
 21175  2F8F  301A               	movlw	26
 21176  2F90  3D23               	addwfc	ETH_Insert@offset+1,w
 21177  2F91  00FB               	movwf	ENC28_Wcr16@v+1
 21178  2F92  3002               	movlw	2
 21179  2F93  31AC  2448  31AF   	fcall	_ENC28_Wcr16
 21180  2F96                     l5076:	
 21181                           ;ENC28J60.c: 755: while (len--)
 21182                           
 21183  2F96  3001               	movlw	1
 21184  2F97  0020               	movlb	0	; select bank0
 21185  2F98  02A0               	subwf	ETH_Insert@len,f
 21186  2F99  3000               	movlw	0
 21187  2F9A  3BA1               	subwfb	ETH_Insert@len+1,f
 21188  2F9B  0A20               	incf	ETH_Insert@len,w
 21189  2F9C  1903               	btfsc	3,2
 21190  2F9D  0A21               	incf	ETH_Insert@len+1,w
 21191  2F9E  1903               	btfsc	3,2
 21192  2F9F  2FB6               	goto	l5078
 21193                           
 21194                           ;ENC28J60.c: 756: {;ENC28J60.c: 757: do{LATC6 = 0;} while(0);
 21195  2FA0  0022               	movlb	2	; select bank2
 21196  2FA1  130E               	bcf	14,6	;volatile
 21197                           
 21198                           ;ENC28J60.c: 758: SPI1_Exchange8bit(wbm_inst);
 21199  2FA2  307A               	movlw	122
 21200  2FA3  31A9  21A5  31AF   	fcall	_SPI1_Exchange8bit
 21201                           
 21202                           ;ENC28J60.c: 759: SPI1_Exchange8bit(*data++);
 21203  2FA6  0020               	movlb	0	; select bank0
 21204  2FA7  0827               	movf	ETH_Insert@data,w
 21205  2FA8  0086               	movwf	6
 21206  2FA9  0187               	clrf	7
 21207  2FAA  0801               	movf	1,w
 21208  2FAB  31A9  21A5  31AF   	fcall	_SPI1_Exchange8bit
 21209  2FAE  3001               	movlw	1
 21210  2FAF  0020               	movlb	0	; select bank0
 21211  2FB0  00A4               	movwf	??_ETH_Insert
 21212  2FB1  0824               	movf	??_ETH_Insert,w
 21213  2FB2  07A7               	addwf	ETH_Insert@data,f
 21214  2FB3  0022               	movlb	2	; select bank2
 21215  2FB4  170E               	bsf	14,6	;volatile
 21216  2FB5  2F96               	goto	l5076
 21217  2FB6                     l5078:
 21218                           
 21219                           ;ENC28J60.c: 761: };ENC28J60.c: 762: ENC28_Wcr16(J60_EWRPTL, current_tx_pointer);
 21220  2FB6  0826               	movf	ETH_Insert@current_tx_pointer+1,w
 21221  2FB7  00FB               	movwf	ENC28_Wcr16@v+1
 21222  2FB8  0825               	movf	ETH_Insert@current_tx_pointer,w
 21223  2FB9  00FA               	movwf	ENC28_Wcr16@v
 21224  2FBA  3002               	movlw	2
 21225  2FBB  31AC  2448         	fcall	_ENC28_Wcr16
 21226  2FBD  0008               	return
 21227  2FBE                     __end_of_ETH_Insert:
 21228                           
 21229                           	psect	text87
 21230  2C48                     __ptext87:	
 21231 ;; *************** function _ENC28_Wcr16 *****************
 21232 ;; Defined at:
 21233 ;;		line 339 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 21234 ;; Parameters:    Size  Location     Type
 21235 ;;  a               1    wreg     enum E6630
 21236 ;;  v               2   10[COMMON] unsigned int 
 21237 ;; Auto vars:     Size  Location     Type
 21238 ;;  a               1   13[COMMON] enum E6630
 21239 ;; Return value:  Size  Location     Type
 21240 ;;                  1    wreg      void 
 21241 ;; Registers used:
 21242 ;;		wreg, status,2, status,0, pclath, cstack
 21243 ;; Tracked objects:
 21244 ;;		On entry : 1C/2
 21245 ;;		On exit  : 1F/2
 21246 ;;		Unchanged: 0/0
 21247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21250 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21252 ;;Total ram usage:        4 bytes
 21253 ;; Hardware stack levels used:    1
 21254 ;; Hardware stack levels required when called:    5
 21255 ;; This function calls:
 21256 ;;		_ENC28_BankSel
 21257 ;;		_SPI1_Exchange8bit
 21258 ;; This function is called by:
 21259 ;;		_ETH_Init
 21260 ;;		_ETH_EventHandler
 21261 ;;		_ETH_NextPacketUpdate
 21262 ;;		_ENC28_PhyWrite
 21263 ;;		_ETH_WriteStart
 21264 ;;		_ETH_Send
 21265 ;;		_ETH_Dump
 21266 ;;		_ETH_Flush
 21267 ;;		_ETH_Insert
 21268 ;;		_ETH_Copy
 21269 ;;		_ETH_TxComputeChecksum
 21270 ;;		_ETH_RxComputeChecksum
 21271 ;; This function uses a non-reentrant model
 21272 ;;
 21273                           
 21274                           
 21275                           ;psect for function _ENC28_Wcr16
 21276  2C48                     _ENC28_Wcr16:
 21277                           
 21278                           ;incstack = 0
 21279                           ; Regs used in _ENC28_Wcr16: [wreg+status,2+status,0+pclath+cstack]
 21280                           ;ENC28_Wcr16@a stored from wreg
 21281  2C48  00FD               	movwf	ENC28_Wcr16@a
 21282                           
 21283                           ;ENC28J60.c: 341: ENC28_BankSel(a);
 21284  2C49  087D               	movf	ENC28_Wcr16@a,w
 21285  2C4A  31AD  25C1  31AC   	fcall	_ENC28_BankSel
 21286                           
 21287                           ;ENC28J60.c: 342: a &= 0x1F;
 21288  2C4D  301F               	movlw	31
 21289  2C4E  00FC               	movwf	??_ENC28_Wcr16
 21290  2C4F  087C               	movf	??_ENC28_Wcr16,w
 21291  2C50  05FD               	andwf	ENC28_Wcr16@a,f
 21292  2C51  0022               	movlb	2	; select bank2
 21293  2C52  130E               	bcf	14,6	;volatile
 21294                           
 21295                           ;ENC28J60.c: 344: SPI1_Exchange8bit(wcr_inst | (a));
 21296  2C53  087D               	movf	ENC28_Wcr16@a,w
 21297  2C54  3840               	iorlw	64
 21298  2C55  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 21299                           
 21300                           ;ENC28J60.c: 345: SPI1_Exchange8bit(((char *) &v)[0]);
 21301  2C58  087A               	movf	ENC28_Wcr16@v,w
 21302  2C59  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 21303  2C5C  0022               	movlb	2	; select bank2
 21304  2C5D  170E               	bsf	14,6	;volatile
 21305                           
 21306                           ;ENC28J60.c: 347: __nop();
 21307  2C5E  0000               	nop
 21308                           
 21309                           ;ENC28J60.c: 348: __nop();
 21310  2C5F  0000               	nop
 21311  2C60  0022               	movlb	2	; select bank2
 21312  2C61  130E               	bcf	14,6	;volatile
 21313                           
 21314                           ;ENC28J60.c: 350: SPI1_Exchange8bit(wcr_inst | (a + 1));
 21315  2C62  087D               	movf	ENC28_Wcr16@a,w
 21316  2C63  3E01               	addlw	1
 21317  2C64  3840               	iorlw	64
 21318  2C65  31A9  21A5  31AC   	fcall	_SPI1_Exchange8bit
 21319                           
 21320                           ;ENC28J60.c: 351: SPI1_Exchange8bit(((char *) &v)[1]);
 21321  2C68  087B               	movf	ENC28_Wcr16@v+1,w
 21322  2C69  31A9  21A5         	fcall	_SPI1_Exchange8bit
 21323  2C6B  0022               	movlb	2	; select bank2
 21324  2C6C  170E               	bsf	14,6	;volatile
 21325  2C6D  0008               	return
 21326  2C6E                     __end_of_ENC28_Wcr16:
 21327                           
 21328                           	psect	text88
 21329  2D62                     __ptext88:	
 21330 ;; *************** function _ENC28_Rcr16 *****************
 21331 ;; Defined at:
 21332 ;;		line 300 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 21333 ;; Parameters:    Size  Location     Type
 21334 ;;  a               1    wreg     enum E6630
 21335 ;; Auto vars:     Size  Location     Type
 21336 ;;  a               1    9[COMMON] enum E6630
 21337 ;;  v               2    7[COMMON] unsigned int 
 21338 ;; Return value:  Size  Location     Type
 21339 ;;                  2    4[COMMON] unsigned int 
 21340 ;; Registers used:
 21341 ;;		wreg, status,2, status,0, pclath, cstack
 21342 ;; Tracked objects:
 21343 ;;		On entry : 1D/2
 21344 ;;		On exit  : 1F/2
 21345 ;;		Unchanged: 0/0
 21346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21348 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21350 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21351 ;;Total ram usage:        6 bytes
 21352 ;; Hardware stack levels used:    1
 21353 ;; Hardware stack levels required when called:    5
 21354 ;; This function calls:
 21355 ;;		_ENC28_BankSel
 21356 ;;		_SPI1_Exchange8bit
 21357 ;; This function is called by:
 21358 ;;		_ETH_EventHandler
 21359 ;;		_ENC28_PhyRead
 21360 ;;		_ETH_Dump
 21361 ;;		_ETH_Insert
 21362 ;;		_ETH_Copy
 21363 ;;		_ETH_TxComputeChecksum
 21364 ;;		_ETH_RxComputeChecksum
 21365 ;;		_ETH_GetReadPtr
 21366 ;; This function uses a non-reentrant model
 21367 ;;
 21368                           
 21369                           
 21370                           ;psect for function _ENC28_Rcr16
 21371  2D62                     _ENC28_Rcr16:
 21372                           
 21373                           ;incstack = 0
 21374                           ; Regs used in _ENC28_Rcr16: [wreg+status,2+status,0+pclath+cstack]
 21375                           ;ENC28_Rcr16@a stored from wreg
 21376  2D62  00F9               	movwf	ENC28_Rcr16@a
 21377                           
 21378                           ;ENC28J60.c: 302: uint16_t v;;ENC28J60.c: 304: ENC28_BankSel(a);
 21379  2D63  0879               	movf	ENC28_Rcr16@a,w
 21380  2D64  31AD  25C1  31AD   	fcall	_ENC28_BankSel
 21381                           
 21382                           ;ENC28J60.c: 305: a &= 0x1F;
 21383  2D67  301F               	movlw	31
 21384  2D68  00F6               	movwf	??_ENC28_Rcr16
 21385  2D69  0876               	movf	??_ENC28_Rcr16,w
 21386  2D6A  05F9               	andwf	ENC28_Rcr16@a,f
 21387  2D6B  0022               	movlb	2	; select bank2
 21388  2D6C  130E               	bcf	14,6	;volatile
 21389                           
 21390                           ;ENC28J60.c: 307: SPI1_Exchange8bit(rcr_inst | (a));
 21391  2D6D  0879               	movf	ENC28_Rcr16@a,w
 21392  2D6E  31A9  21A5  31AD   	fcall	_SPI1_Exchange8bit
 21393                           
 21394                           ;ENC28J60.c: 308: ((char *) &v)[0] = SPI1_Exchange8bit(0);
 21395  2D71  3000               	movlw	0
 21396  2D72  31A9  21A5  31AD   	fcall	_SPI1_Exchange8bit
 21397  2D75  00F6               	movwf	??_ENC28_Rcr16
 21398  2D76  0876               	movf	??_ENC28_Rcr16,w
 21399  2D77  00F7               	movwf	ENC28_Rcr16@v
 21400  2D78  0022               	movlb	2	; select bank2
 21401  2D79  170E               	bsf	14,6	;volatile
 21402                           
 21403                           ;ENC28J60.c: 310: __nop();
 21404  2D7A  0000               	nop
 21405                           
 21406                           ;ENC28J60.c: 311: __nop();
 21407  2D7B  0000               	nop
 21408  2D7C  0022               	movlb	2	; select bank2
 21409  2D7D  130E               	bcf	14,6	;volatile
 21410                           
 21411                           ;ENC28J60.c: 313: SPI1_Exchange8bit(rcr_inst | (a + 1));
 21412  2D7E  0879               	movf	ENC28_Rcr16@a,w
 21413  2D7F  3E01               	addlw	1
 21414  2D80  31A9  21A5  31AD   	fcall	_SPI1_Exchange8bit
 21415                           
 21416                           ;ENC28J60.c: 314: ((char *) &v)[1] = SPI1_Exchange8bit(0);
 21417  2D83  3000               	movlw	0
 21418  2D84  31A9  21A5         	fcall	_SPI1_Exchange8bit
 21419  2D86  00F6               	movwf	??_ENC28_Rcr16
 21420  2D87  0876               	movf	??_ENC28_Rcr16,w
 21421  2D88  00F8               	movwf	ENC28_Rcr16@v+1
 21422  2D89  0022               	movlb	2	; select bank2
 21423  2D8A  170E               	bsf	14,6	;volatile
 21424                           
 21425                           ;ENC28J60.c: 317: return v;
 21426  2D8B  0878               	movf	ENC28_Rcr16@v+1,w
 21427  2D8C  00F5               	movwf	?_ENC28_Rcr16+1
 21428  2D8D  0877               	movf	ENC28_Rcr16@v,w
 21429  2D8E  00F4               	movwf	?_ENC28_Rcr16
 21430  2D8F  0008               	return
 21431  2D90                     __end_of_ENC28_Rcr16:
 21432                           
 21433                           	psect	text89
 21434  2DC1                     __ptext89:	
 21435 ;; *************** function _ENC28_BankSel *****************
 21436 ;; Defined at:
 21437 ;;		line 99 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 21438 ;; Parameters:    Size  Location     Type
 21439 ;;  r               1    wreg     enum E6630
 21440 ;; Auto vars:     Size  Location     Type
 21441 ;;  r               1    2[COMMON] enum E6630
 21442 ;;  a               1    3[COMMON] unsigned char 
 21443 ;; Return value:  Size  Location     Type
 21444 ;;                  1    wreg      void 
 21445 ;; Registers used:
 21446 ;;		wreg, status,2, status,0, pclath, cstack
 21447 ;; Tracked objects:
 21448 ;;		On entry : 0/0
 21449 ;;		On exit  : 0/0
 21450 ;;		Unchanged: 0/0
 21451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21455 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21456 ;;Total ram usage:        3 bytes
 21457 ;; Hardware stack levels used:    1
 21458 ;; Hardware stack levels required when called:    4
 21459 ;; This function calls:
 21460 ;;		_SPI1_Exchange8bit
 21461 ;; This function is called by:
 21462 ;;		_ENC28_Rcr8
 21463 ;;		_ENC28_Rcr16
 21464 ;;		_ENC28_Wcr8
 21465 ;;		_ENC28_Wcr16
 21466 ;;		_ENC28_Bfs
 21467 ;;		_ENC28_Bfc
 21468 ;; This function uses a non-reentrant model
 21469 ;;
 21470                           
 21471                           
 21472                           ;psect for function _ENC28_BankSel
 21473  2DC1                     _ENC28_BankSel:
 21474                           
 21475                           ;incstack = 0
 21476                           ; Regs used in _ENC28_BankSel: [wreg+status,2+status,0+pclath+cstack]
 21477                           ;ENC28_BankSel@r stored from wreg
 21478  2DC1  00F2               	movwf	ENC28_BankSel@r
 21479                           
 21480                           ;ENC28J60.c: 101: uint8_t a = r & 0xE0;
 21481  2DC2  0872               	movf	ENC28_BankSel@r,w
 21482  2DC3  39E0               	andlw	224
 21483  2DC4  00F1               	movwf	??_ENC28_BankSel
 21484  2DC5  0871               	movf	??_ENC28_BankSel,w
 21485  2DC6  00F3               	movwf	ENC28_BankSel@a
 21486                           
 21487                           ;ENC28J60.c: 103: if (a != sfr_common && a != lastBank)
 21488  2DC7  30E0               	movlw	224
 21489  2DC8  0673               	xorwf	ENC28_BankSel@a,w
 21490  2DC9  1903               	btfsc	3,2
 21491  2DCA  0008               	return
 21492  2DCB  0873               	movf	ENC28_BankSel@a,w
 21493  2DCC  0023               	movlb	3	; select bank3
 21494  2DCD  0635               	xorwf	_lastBank^(0+384),w
 21495  2DCE  1903               	skipnz
 21496  2DCF  0008               	return
 21497                           
 21498                           ;ENC28J60.c: 104: {;ENC28J60.c: 105: lastBank = a;
 21499  2DD0  0873               	movf	ENC28_BankSel@a,w
 21500  2DD1  00F1               	movwf	??_ENC28_BankSel
 21501  2DD2  0871               	movf	??_ENC28_BankSel,w
 21502  2DD3  00B5               	movwf	_lastBank^(0+384)
 21503  2DD4  0022               	movlb	2	; select bank2
 21504  2DD5  130E               	bcf	14,6	;volatile
 21505                           
 21506                           ;ENC28J60.c: 108: SPI1_Exchange8bit(bfc_inst | 0x1F);
 21507  2DD6  30BF               	movlw	191
 21508  2DD7  31A9  21A5  31AD   	fcall	_SPI1_Exchange8bit
 21509                           
 21510                           ;ENC28J60.c: 109: SPI1_Exchange8bit(0x03);
 21511  2DDA  3003               	movlw	3
 21512  2DDB  31A9  21A5  31AD   	fcall	_SPI1_Exchange8bit
 21513  2DDE  0022               	movlb	2	; select bank2
 21514  2DDF  170E               	bsf	14,6	;volatile
 21515                           
 21516                           ;ENC28J60.c: 111: __nop();
 21517  2DE0  0000               	nop
 21518                           
 21519                           ;ENC28J60.c: 112: __nop();
 21520  2DE1  0000               	nop
 21521  2DE2  0022               	movlb	2	; select bank2
 21522  2DE3  130E               	bcf	14,6	;volatile
 21523                           
 21524                           ;ENC28J60.c: 115: SPI1_Exchange8bit(bfs_inst | 0x1F);
 21525  2DE4  309F               	movlw	159
 21526  2DE5  31A9  21A5  31AD   	fcall	_SPI1_Exchange8bit
 21527                           
 21528                           ;ENC28J60.c: 116: SPI1_Exchange8bit(a >> 6);
 21529  2DE8  0873               	movf	ENC28_BankSel@a,w
 21530  2DE9  00F1               	movwf	??_ENC28_BankSel
 21531  2DEA  3006               	movlw	6
 21532  2DEB                     u2845:
 21533  2DEB  36F1               	lsrf	??_ENC28_BankSel,f
 21534  2DEC  0B89               	decfsz	9,f
 21535  2DED  2DEB               	goto	u2845
 21536  2DEE  0871               	movf	??_ENC28_BankSel,w
 21537  2DEF  31A9  21A5         	fcall	_SPI1_Exchange8bit
 21538  2DF1  0022               	movlb	2	; select bank2
 21539  2DF2  170E               	bsf	14,6	;volatile
 21540  2DF3  0008               	return
 21541  2DF4                     __end_of_ENC28_BankSel:
 21542                           
 21543                           	psect	text90
 21544  2F3F                     __ptext90:	
 21545 ;; *************** function _ETH_ReadBlock *****************
 21546 ;; Defined at:
 21547 ;;		line 521 in file "mcc_generated_files/TCPIPLibrary/ENC28J60.c"
 21548 ;; Parameters:    Size  Location     Type
 21549 ;;  buffer          2    1[COMMON] PTR void 
 21550 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), ICMP_Receive@icmpHdr(4), ipv4Header(20), Network_Read@header(14), 
 21551 ;;		 -> tcpHeader(20), ARPV4_Packet@header(28), NULL(0), 
 21552 ;;  length          2    3[COMMON] unsigned int 
 21553 ;; Auto vars:     Size  Location     Type
 21554 ;;  readCount       2    8[COMMON] unsigned int 
 21555 ;;  p               2    6[COMMON] PTR unsigned char 
 21556 ;;		 -> DEMO_TCP_Client@rxdataPort60(50), ICMP_Receive@icmpHdr(4), ipv4Header(20), Network_Read@header(14), 
 21557 ;;		 -> tcpHeader(20), ARPV4_Packet@header(28), NULL(0), 
 21558 ;; Return value:  Size  Location     Type
 21559 ;;                  2    1[COMMON] unsigned int 
 21560 ;; Registers used:
 21561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21562 ;; Tracked objects:
 21563 ;;		On entry : 18/4
 21564 ;;		On exit  : 1F/2
 21565 ;;		Unchanged: 0/0
 21566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21568 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21570 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21571 ;;Total ram usage:        9 bytes
 21572 ;; Hardware stack levels used:    1
 21573 ;; Hardware stack levels required when called:    4
 21574 ;; This function calls:
 21575 ;;		_SPI1_Exchange8bit
 21576 ;; This function is called by:
 21577 ;;		_ARPV4_Packet
 21578 ;;		_TCP_PayloadSave
 21579 ;;		_TCP_Recv
 21580 ;;		_Network_Read
 21581 ;;		_IPV4_Packet
 21582 ;;		_ICMP_Receive
 21583 ;; This function uses a non-reentrant model
 21584 ;;
 21585                           
 21586                           
 21587                           ;psect for function _ETH_ReadBlock
 21588  2F3F                     _ETH_ReadBlock:
 21589                           
 21590                           ;ENC28J60.c: 523: uint16_t readCount = length;
 21591                           
 21592                           ;incstack = 0
 21593                           ; Regs used in _ETH_ReadBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21594  2F3F  0874               	movf	ETH_ReadBlock@length+1,w
 21595  2F40  00F9               	movwf	ETH_ReadBlock@readCount+1
 21596  2F41  0873               	movf	ETH_ReadBlock@length,w
 21597  2F42  00F8               	movwf	ETH_ReadBlock@readCount
 21598                           
 21599                           ;ENC28J60.c: 524: char *p = buffer;
 21600  2F43  0872               	movf	ETH_ReadBlock@buffer+1,w
 21601  2F44  00F7               	movwf	ETH_ReadBlock@p+1
 21602  2F45  0871               	movf	ETH_ReadBlock@buffer,w
 21603  2F46  00F6               	movwf	ETH_ReadBlock@p
 21604                           
 21605                           ;ENC28J60.c: 526: if (rxPacketStatusVector.byteCount < length)
 21606  2F47  0874               	movf	ETH_ReadBlock@length+1,w
 21607  2F48  0024               	movlb	4	; select bank4
 21608  2F49  024F               	subwf	(_rxPacketStatusVector+1)^(0+512),w
 21609  2F4A  1D03               	skipz
 21610  2F4B  2F4E               	goto	u6035
 21611  2F4C  0873               	movf	ETH_ReadBlock@length,w
 21612  2F4D  024E               	subwf	_rxPacketStatusVector^(0+512),w
 21613  2F4E                     u6035:
 21614  2F4E  1803               	skipnc
 21615  2F4F  2F54               	goto	l1189
 21616                           
 21617                           ;ENC28J60.c: 527: readCount = rxPacketStatusVector.byteCount;
 21618  2F50  084F               	movf	(_rxPacketStatusVector+1)^(0+512),w
 21619  2F51  00F9               	movwf	ETH_ReadBlock@readCount+1
 21620  2F52  084E               	movf	_rxPacketStatusVector^(0+512),w
 21621  2F53  00F8               	movwf	ETH_ReadBlock@readCount
 21622  2F54                     l1189:
 21623                           
 21624                           ;ENC28J60.c: 528: length = readCount;
 21625  2F54  0879               	movf	ETH_ReadBlock@readCount+1,w
 21626  2F55  00F4               	movwf	ETH_ReadBlock@length+1
 21627  2F56  0878               	movf	ETH_ReadBlock@readCount,w
 21628  2F57  00F3               	movwf	ETH_ReadBlock@length
 21629  2F58  0022               	movlb	2	; select bank2
 21630  2F59  130E               	bcf	14,6	;volatile
 21631                           
 21632                           ;ENC28J60.c: 530: SPI1_Exchange8bit(rbm_inst);
 21633  2F5A  303A               	movlw	58
 21634  2F5B  31A9  21A5  31AF   	fcall	_SPI1_Exchange8bit
 21635  2F5E                     l7378:	
 21636                           ;ENC28J60.c: 531: while (length--) *p++ = SPI1_Exchange8bit(0);
 21637                           
 21638  2F5E  3001               	movlw	1
 21639  2F5F  02F3               	subwf	ETH_ReadBlock@length,f
 21640  2F60  3000               	movlw	0
 21641  2F61  3BF4               	subwfb	ETH_ReadBlock@length+1,f
 21642  2F62  0A73               	incf	ETH_ReadBlock@length,w
 21643  2F63  1903               	btfsc	3,2
 21644  2F64  0A74               	incf	ETH_ReadBlock@length+1,w
 21645  2F65  1903               	btfsc	3,2
 21646  2F66  2F77               	goto	l1195
 21647  2F67  3000               	movlw	0
 21648  2F68  31A9  21A5  31AF   	fcall	_SPI1_Exchange8bit
 21649  2F6B  00F5               	movwf	??_ETH_ReadBlock
 21650  2F6C  0876               	movf	ETH_ReadBlock@p,w
 21651  2F6D  0086               	movwf	6
 21652  2F6E  0877               	movf	ETH_ReadBlock@p+1,w
 21653  2F6F  0087               	movwf	7
 21654  2F70  0875               	movf	??_ETH_ReadBlock,w
 21655  2F71  0081               	movwf	1
 21656  2F72  3001               	movlw	1
 21657  2F73  07F6               	addwf	ETH_ReadBlock@p,f
 21658  2F74  3000               	movlw	0
 21659  2F75  3DF7               	addwfc	ETH_ReadBlock@p+1,f
 21660  2F76  2F5E               	goto	l7378
 21661  2F77                     l1195:	
 21662                           ;ENC28J60.c: 532: do{LATC6 = 1;} while(0);
 21663                           
 21664  2F77  0022               	movlb	2	; select bank2
 21665  2F78  170E               	bsf	14,6	;volatile
 21666                           
 21667                           ;ENC28J60.c: 534: return readCount;
 21668  2F79  0879               	movf	ETH_ReadBlock@readCount+1,w
 21669  2F7A  00F2               	movwf	?_ETH_ReadBlock+1
 21670  2F7B  0878               	movf	ETH_ReadBlock@readCount,w
 21671  2F7C  00F1               	movwf	?_ETH_ReadBlock
 21672  2F7D  0008               	return
 21673  2F7E                     __end_of_ETH_ReadBlock:
 21674                           
 21675                           	psect	text91
 21676  29A5                     __ptext91:	
 21677 ;; *************** function _SPI1_Exchange8bit *****************
 21678 ;; Defined at:
 21679 ;;		line 77 in file "mcc_generated_files/spi1.c"
 21680 ;; Parameters:    Size  Location     Type
 21681 ;;  data            1    wreg     unsigned char 
 21682 ;; Auto vars:     Size  Location     Type
 21683 ;;  data            1    0[COMMON] unsigned char 
 21684 ;; Return value:  Size  Location     Type
 21685 ;;                  1    wreg      unsigned char 
 21686 ;; Registers used:
 21687 ;;		wreg
 21688 ;; Tracked objects:
 21689 ;;		On entry : 18/2
 21690 ;;		On exit  : 1F/4
 21691 ;;		Unchanged: 0/0
 21692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21696 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21697 ;;Total ram usage:        1 bytes
 21698 ;; Hardware stack levels used:    1
 21699 ;; Hardware stack levels required when called:    3
 21700 ;; This function calls:
 21701 ;;		Nothing
 21702 ;; This function is called by:
 21703 ;;		_ENC28_BankSel
 21704 ;;		_ETH_NextPacketUpdate
 21705 ;;		_ENC28_Rcr8
 21706 ;;		_ENC28_Rcr16
 21707 ;;		_ENC28_Wcr8
 21708 ;;		_ENC28_Wcr16
 21709 ;;		_ENC28_Bfs
 21710 ;;		_ENC28_Bfc
 21711 ;;		_ETH_SendSystemReset
 21712 ;;		_ETH_Read8
 21713 ;;		_ETH_Read16
 21714 ;;		_ETH_ReadBlock
 21715 ;;		_ETH_Write8
 21716 ;;		_ETH_Write16
 21717 ;;		_ETH_Write32
 21718 ;;		_ETH_WriteBlock
 21719 ;;		_ETH_WriteStart
 21720 ;;		_ETH_Insert
 21721 ;; This function uses a non-reentrant model
 21722 ;;
 21723                           
 21724                           
 21725                           ;psect for function _SPI1_Exchange8bit
 21726  29A5                     _SPI1_Exchange8bit:
 21727                           
 21728                           ;incstack = 0
 21729                           ; Regs used in _SPI1_Exchange8bit: [wreg]
 21730                           ;SPI1_Exchange8bit@data stored from wreg
 21731  29A5  00F0               	movwf	SPI1_Exchange8bit@data
 21732                           
 21733                           ;spi1.c: 80: SSP1CON1bits.WCOL = 0;
 21734  29A6  0024               	movlb	4	; select bank4
 21735  29A7  1395               	bcf	21,7	;volatile
 21736                           
 21737                           ;spi1.c: 82: SSP1BUF = data;
 21738  29A8  0870               	movf	SPI1_Exchange8bit@data,w
 21739  29A9  0091               	movwf	17	;volatile
 21740  29AA                     l466:	
 21741                           ;spi1.c: 85: {
 21742                           
 21743  29AA  1C14               	btfss	20,0	;volatile
 21744  29AB  29AA               	goto	l466
 21745                           
 21746                           ;spi1.c: 86: };spi1.c: 88: return (SSP1BUF);
 21747  29AC  0811               	movf	17,w	;volatile
 21748  29AD  0008               	return
 21749  29AE                     __end_of_SPI1_Exchange8bit:
 21750                           
 21751                           	psect	text92
 21752  1001                     __ptext92:	
 21753 ;; *************** function _TCB_Reset *****************
 21754 ;; Defined at:
 21755 ;;		line 128 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 21756 ;; Parameters:    Size  Location     Type
 21757 ;;  tcbPtr          1    wreg     PTR struct .
 21758 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
 21759 ;; Auto vars:     Size  Location     Type
 21760 ;;  tcbPtr          1    1[COMMON] PTR struct .
 21761 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
 21762 ;; Return value:  Size  Location     Type
 21763 ;;                  1    wreg      void 
 21764 ;; Registers used:
 21765 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21766 ;; Tracked objects:
 21767 ;;		On entry : 1E/2
 21768 ;;		On exit  : 1E/2
 21769 ;;		Unchanged: 1E/0
 21770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21772 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21775 ;;Total ram usage:        2 bytes
 21776 ;; Hardware stack levels used:    1
 21777 ;; Hardware stack levels required when called:    3
 21778 ;; This function calls:
 21779 ;;		Nothing
 21780 ;; This function is called by:
 21781 ;;		_TCP_FiniteStateMachine
 21782 ;;		_TCP_SocketInit
 21783 ;; This function uses a non-reentrant model
 21784 ;;
 21785                           
 21786                           
 21787                           ;psect for function _TCB_Reset
 21788  1001                     _TCB_Reset:
 21789                           
 21790                           ;incstack = 0
 21791                           ; Regs used in _TCB_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
 21792                           ;TCB_Reset@tcbPtr stored from wreg
 21793  1001  00F1               	movwf	TCB_Reset@tcbPtr
 21794                           
 21795                           ;tcpv4.c: 130: tcbPtr->destIP = 0;
 21796  1002  0871               	movf	TCB_Reset@tcbPtr,w
 21797  1003  3E02               	addlw	2
 21798  1004  0086               	movwf	6
 21799  1005  3002               	movlw	2	; select bank4/5
 21800  1006  0087               	movwf	7
 21801  1007  3000               	movlw	0
 21802  1008  3FC0               	movwi [0]fsr1
 21803  1009  3000               	movlw	0
 21804  100A  3FC1               	movwi [1]fsr1
 21805  100B  3FC2               	movwi [2]fsr1
 21806  100C  3FC3               	movwi [3]fsr1
 21807                           
 21808                           ;tcpv4.c: 131: tcbPtr->destPort = 0;
 21809  100D  0871               	movf	TCB_Reset@tcbPtr,w
 21810  100E  3E06               	addlw	6
 21811  100F  0086               	movwf	6
 21812  1010  3002               	movlw	2	; select bank4/5
 21813  1011  0087               	movwf	7
 21814  1012  3000               	movlw	0
 21815  1013  3FC0               	movwi [0]fsr1
 21816  1014  3FC1               	movwi [1]fsr1
 21817                           
 21818                           ;tcpv4.c: 132: tcbPtr->localSeqno = 0;
 21819  1015  0871               	movf	TCB_Reset@tcbPtr,w
 21820  1016  3E10               	addlw	16
 21821  1017  0086               	movwf	6
 21822  1018  3002               	movlw	2	; select bank4/5
 21823  1019  0087               	movwf	7
 21824  101A  3000               	movlw	0
 21825  101B  3FC0               	movwi [0]fsr1
 21826  101C  3000               	movlw	0
 21827  101D  3FC1               	movwi [1]fsr1
 21828  101E  3FC2               	movwi [2]fsr1
 21829  101F  3FC3               	movwi [3]fsr1
 21830                           
 21831                           ;tcpv4.c: 133: tcbPtr->localLastAck = 0;
 21832  1020  0871               	movf	TCB_Reset@tcbPtr,w
 21833  1021  3E14               	addlw	20
 21834  1022  0086               	movwf	6
 21835  1023  3002               	movlw	2	; select bank4/5
 21836  1024  0087               	movwf	7
 21837  1025  3000               	movlw	0
 21838  1026  3FC0               	movwi [0]fsr1
 21839  1027  3000               	movlw	0
 21840  1028  3FC1               	movwi [1]fsr1
 21841  1029  3FC2               	movwi [2]fsr1
 21842  102A  3FC3               	movwi [3]fsr1
 21843                           
 21844                           ;tcpv4.c: 134: tcbPtr->remoteSeqno = 0;
 21845  102B  0871               	movf	TCB_Reset@tcbPtr,w
 21846  102C  3E08               	addlw	8
 21847  102D  0086               	movwf	6
 21848  102E  3002               	movlw	2	; select bank4/5
 21849  102F  0087               	movwf	7
 21850  1030  3000               	movlw	0
 21851  1031  3FC0               	movwi [0]fsr1
 21852  1032  3000               	movlw	0
 21853  1033  3FC1               	movwi [1]fsr1
 21854  1034  3FC2               	movwi [2]fsr1
 21855  1035  3FC3               	movwi [3]fsr1
 21856                           
 21857                           ;tcpv4.c: 135: tcbPtr->remoteAck = 0;
 21858  1036  0871               	movf	TCB_Reset@tcbPtr,w
 21859  1037  3E0C               	addlw	12
 21860  1038  0086               	movwf	6
 21861  1039  3002               	movlw	2	; select bank4/5
 21862  103A  0087               	movwf	7
 21863  103B  3000               	movlw	0
 21864  103C  3FC0               	movwi [0]fsr1
 21865  103D  3000               	movlw	0
 21866  103E  3FC1               	movwi [1]fsr1
 21867  103F  3FC2               	movwi [2]fsr1
 21868  1040  3FC3               	movwi [3]fsr1
 21869                           
 21870                           ;tcpv4.c: 136: tcbPtr->remoteWnd = 0;
 21871  1041  0871               	movf	TCB_Reset@tcbPtr,w
 21872  1042  3E18               	addlw	24
 21873  1043  0086               	movwf	6
 21874  1044  3002               	movlw	2	; select bank4/5
 21875  1045  0087               	movwf	7
 21876  1046  3000               	movlw	0
 21877  1047  3FC0               	movwi [0]fsr1
 21878  1048  3FC1               	movwi [1]fsr1
 21879                           
 21880                           ;tcpv4.c: 138: tcbPtr->timeout = 0;
 21881  1049  0871               	movf	TCB_Reset@tcbPtr,w
 21882  104A  3E2D               	addlw	45
 21883  104B  0086               	movwf	6
 21884  104C  3002               	movlw	2	; select bank4/5
 21885  104D  0087               	movwf	7
 21886  104E  3000               	movlw	0
 21887  104F  3FC0               	movwi [0]fsr1
 21888  1050  3FC1               	movwi [1]fsr1
 21889                           
 21890                           ;tcpv4.c: 139: tcbPtr->timeoutReloadValue = 0;
 21891  1051  0871               	movf	TCB_Reset@tcbPtr,w
 21892  1052  3E2F               	addlw	47
 21893  1053  0086               	movwf	6
 21894  1054  3002               	movlw	2	; select bank4/5
 21895  1055  0087               	movwf	7
 21896  1056  3000               	movlw	0
 21897  1057  3FC0               	movwi [0]fsr1
 21898  1058  3FC1               	movwi [1]fsr1
 21899                           
 21900                           ;tcpv4.c: 140: tcbPtr->timeoutsCount = 0;
 21901  1059  0871               	movf	TCB_Reset@tcbPtr,w
 21902  105A  3E31               	addlw	49
 21903  105B  0086               	movwf	6
 21904  105C  3002               	movlw	2	; select bank4/5
 21905  105D  0087               	movwf	7
 21906  105E  0181               	clrf	1
 21907                           
 21908                           ;tcpv4.c: 141: tcbPtr->flags = 0;
 21909  105F  0871               	movf	TCB_Reset@tcbPtr,w
 21910  1060  3E32               	addlw	50
 21911  1061  0086               	movwf	6
 21912  1062  3002               	movlw	2	; select bank4/5
 21913  1063  0087               	movwf	7
 21914  1064  0181               	clrf	1
 21915                           
 21916                           ;tcpv4.c: 143: tcbPtr->localPort = 0;
 21917  1065  0871               	movf	TCB_Reset@tcbPtr,w
 21918  1066  0086               	movwf	6
 21919  1067  3002               	movlw	2	; select bank4/5
 21920  1068  0087               	movwf	7
 21921  1069  3000               	movlw	0
 21922  106A  3FC0               	movwi [0]fsr1
 21923  106B  3FC1               	movwi [1]fsr1
 21924                           
 21925                           ;tcpv4.c: 144: tcbPtr->bytesSent = 0;
 21926  106C  0871               	movf	TCB_Reset@tcbPtr,w
 21927  106D  3E26               	addlw	38
 21928  106E  0086               	movwf	6
 21929  106F  3002               	movlw	2	; select bank4/5
 21930  1070  0087               	movwf	7
 21931  1071  3000               	movlw	0
 21932  1072  3FC0               	movwi [0]fsr1
 21933  1073  3FC1               	movwi [1]fsr1
 21934                           
 21935                           ;tcpv4.c: 145: tcbPtr->payloadSave = 0;
 21936  1074  0871               	movf	TCB_Reset@tcbPtr,w
 21937  1075  3E28               	addlw	40
 21938  1076  0086               	movwf	6
 21939  1077  3002               	movlw	2	; select bank4/5
 21940  1078  0087               	movwf	7
 21941  1079  0181               	clrf	1
 21942                           
 21943                           ;tcpv4.c: 146: tcbPtr->socketState = SOCKET_CLOSING;
 21944  107A  3004               	movlw	4
 21945  107B  00F0               	movwf	??_TCB_Reset
 21946  107C  0871               	movf	TCB_Reset@tcbPtr,w
 21947  107D  3E33               	addlw	51
 21948  107E  0086               	movwf	6
 21949  107F  3002               	movlw	2	; select bank4/5
 21950  1080  0087               	movwf	7
 21951  1081  0870               	movf	??_TCB_Reset,w
 21952  1082  0081               	movwf	1
 21953  1083  0008               	return
 21954  1084                     __end_of_TCB_Reset:
 21955                           
 21956                           	psect	text93
 21957  2D90                     __ptext93:	
 21958 ;; *************** function _TCB_Check *****************
 21959 ;; Defined at:
 21960 ;;		line 158 in file "mcc_generated_files/TCPIPLibrary/tcpv4.c"
 21961 ;; Parameters:    Size  Location     Type
 21962 ;;  ptr             1    wreg     PTR struct .
 21963 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 21964 ;; Auto vars:     Size  Location     Type
 21965 ;;  ptr             1    4[COMMON] PTR struct .
 21966 ;;		 -> DEMO_TCP_Client@port60TCB(52), 
 21967 ;;  tcbPtr          1    3[COMMON] PTR struct .
 21968 ;;		 -> DEMO_TCP_Client@port60TCB(52), NULL(0), 
 21969 ;;  count           1    2[COMMON] char 
 21970 ;;  ret             1    1[COMMON] unsigned char 
 21971 ;; Return value:  Size  Location     Type
 21972 ;;                  1    wreg      unsigned char 
 21973 ;; Registers used:
 21974 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21975 ;; Tracked objects:
 21976 ;;		On entry : 18/2
 21977 ;;		On exit  : 1E/2
 21978 ;;		Unchanged: 0/0
 21979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21981 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21983 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21984 ;;Total ram usage:        5 bytes
 21985 ;; Hardware stack levels used:    1
 21986 ;; Hardware stack levels required when called:    3
 21987 ;; This function calls:
 21988 ;;		Nothing
 21989 ;; This function is called by:
 21990 ;;		_TCP_SocketInit
 21991 ;;		_TCP_SocketPoll
 21992 ;;		_TCP_Close
 21993 ;;		_TCP_SendDone
 21994 ;;		_TCP_InsertRxBuffer
 21995 ;;		_TCP_GetReceivedData
 21996 ;; This function uses a non-reentrant model
 21997 ;;
 21998                           
 21999                           
 22000                           ;psect for function _TCB_Check
 22001  2D90                     _TCB_Check:
 22002                           
 22003                           ;incstack = 0
 22004                           ; Regs used in _TCB_Check: [wreg+fsr1l+fsr1h+status,2+status,0]
 22005                           ;TCB_Check@ptr stored from wreg
 22006  2D90  00F4               	movwf	TCB_Check@ptr
 22007                           
 22008                           ;tcpv4.c: 160: tcpTCB_t *tcbPtr;;tcpv4.c: 161: bool ret = 0;
 22009  2D91  01F1               	clrf	TCB_Check@ret
 22010                           
 22011                           ;tcpv4.c: 162: socklistsize_t count = 0;
 22012  2D92  01F2               	clrf	TCB_Check@count
 22013                           
 22014                           ;tcpv4.c: 164: if((tcbList != (0)) && (ptr != (0)))
 22015  2D93  0022               	movlb	2	; select bank2
 22016  2D94  086F               	movf	_tcbList^(0+256),w
 22017  2D95  1903               	btfsc	3,2
 22018  2D96  2DBF               	goto	l5980
 22019  2D97  0874               	movf	TCB_Check@ptr,w
 22020  2D98  1903               	btfsc	3,2
 22021  2D99  2DBF               	goto	l5980
 22022                           
 22023                           ;tcpv4.c: 165: {;tcpv4.c: 167: tcbPtr = tcbList;
 22024  2D9A  086F               	movf	_tcbList^(0+256),w
 22025  2D9B  00F0               	movwf	??_TCB_Check
 22026  2D9C  0870               	movf	??_TCB_Check,w
 22027  2D9D  00F3               	movwf	TCB_Check@tcbPtr
 22028                           
 22029                           ;tcpv4.c: 168: while((tcbPtr != (0)) && (count < tcbListSize))
 22030  2D9E  2DB3               	goto	l5976
 22031  2D9F                     l5966:
 22032                           
 22033                           ;tcpv4.c: 169: {;tcpv4.c: 170: if (tcbPtr == ptr)
 22034  2D9F  0873               	movf	TCB_Check@tcbPtr,w
 22035  2DA0  0674               	xorwf	TCB_Check@ptr,w
 22036  2DA1  1D03               	skipz
 22037  2DA2  2DA6               	goto	l5972
 22038                           
 22039                           ;tcpv4.c: 171: {;tcpv4.c: 172: ret = 1;
 22040  2DA3  01F1               	clrf	TCB_Check@ret
 22041  2DA4  0AF1               	incf	TCB_Check@ret,f
 22042                           
 22043                           ;tcpv4.c: 173: break;
 22044  2DA5  2DBF               	goto	l5980
 22045  2DA6                     l5972:
 22046                           
 22047                           ;tcpv4.c: 175: else;tcpv4.c: 176: {;tcpv4.c: 177: tcbPtr = tcbPtr->nextTCB;
 22048  2DA6  0873               	movf	TCB_Check@tcbPtr,w
 22049  2DA7  3E2B               	addlw	43
 22050  2DA8  0086               	movwf	6
 22051  2DA9  3002               	movlw	2	; select bank4/5
 22052  2DAA  0087               	movwf	7
 22053  2DAB  0801               	movf	1,w
 22054  2DAC  00F0               	movwf	??_TCB_Check
 22055  2DAD  0870               	movf	??_TCB_Check,w
 22056  2DAE  00F3               	movwf	TCB_Check@tcbPtr
 22057                           
 22058                           ;tcpv4.c: 178: count ++;
 22059  2DAF  3001               	movlw	1
 22060  2DB0  00F0               	movwf	??_TCB_Check
 22061  2DB1  0870               	movf	??_TCB_Check,w
 22062  2DB2  07F2               	addwf	TCB_Check@count,f
 22063  2DB3                     l5976:
 22064  2DB3  0873               	movf	TCB_Check@tcbPtr,w
 22065  2DB4  1903               	btfsc	3,2
 22066  2DB5  2DBF               	goto	l5980
 22067  2DB6  0872               	movf	TCB_Check@count,w
 22068  2DB7  3A80               	xorlw	128
 22069  2DB8  00F0               	movwf	??_TCB_Check
 22070  2DB9  0023               	movlb	3	; select bank3
 22071  2DBA  0836               	movf	_tcbListSize^(0+384),w
 22072  2DBB  3A80               	xorlw	128
 22073  2DBC  02F0               	subwf	??_TCB_Check,f
 22074  2DBD  1C03               	skipc
 22075  2DBE  2D9F               	goto	l5966
 22076  2DBF                     l5980:
 22077                           
 22078                           ;tcpv4.c: 179: };tcpv4.c: 180: };tcpv4.c: 181: };tcpv4.c: 182: return ret;
 22079  2DBF  0871               	movf	TCB_Check@ret,w
 22080  2DC0  0008               	return
 22081  2DC1                     __end_of_TCB_Check:
 22082                           
 22083                           	psect	text94
 22084  2B0F                     __ptext94:	
 22085 ;; *************** function _ADC_GetConversion *****************
 22086 ;; Defined at:
 22087 ;;		line 112 in file "mcc_generated_files/adc.c"
 22088 ;; Parameters:    Size  Location     Type
 22089 ;;  channel         1    wreg     enum E6618
 22090 ;; Auto vars:     Size  Location     Type
 22091 ;;  channel         1    3[COMMON] enum E6618
 22092 ;; Return value:  Size  Location     Type
 22093 ;;                  2    0[COMMON] unsigned int 
 22094 ;; Registers used:
 22095 ;;		wreg, status,2, status,0
 22096 ;; Tracked objects:
 22097 ;;		On entry : 1F/4
 22098 ;;		On exit  : 1F/1
 22099 ;;		Unchanged: 0/0
 22100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22105 ;;Total ram usage:        4 bytes
 22106 ;; Hardware stack levels used:    1
 22107 ;; Hardware stack levels required when called:    3
 22108 ;; This function calls:
 22109 ;;		Nothing
 22110 ;; This function is called by:
 22111 ;;		_DEMO_TCP_Client
 22112 ;; This function uses a non-reentrant model
 22113 ;;
 22114                           
 22115                           
 22116                           ;psect for function _ADC_GetConversion
 22117  2B0F                     _ADC_GetConversion:
 22118                           
 22119                           ;incstack = 0
 22120                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 22121                           ;ADC_GetConversion@channel stored from wreg
 22122  2B0F  00F3               	movwf	ADC_GetConversion@channel
 22123                           
 22124                           ;adc.c: 115: ADCON0bits.CHS = channel;
 22125  2B10  0873               	movf	ADC_GetConversion@channel,w
 22126  2B11  00F2               	movwf	??_ADC_GetConversion
 22127  2B12  0DF2               	rlf	??_ADC_GetConversion,f
 22128  2B13  0DF2               	rlf	??_ADC_GetConversion,f
 22129  2B14  0021               	movlb	1	; select bank1
 22130  2B15  081D               	movf	29,w	;volatile
 22131  2B16  0672               	xorwf	??_ADC_GetConversion,w
 22132  2B17  3903               	andlw	-253
 22133  2B18  0672               	xorwf	??_ADC_GetConversion,w
 22134  2B19  009D               	movwf	29	;volatile
 22135                           
 22136                           ;adc.c: 118: ADCON0bits.ADON = 1;
 22137  2B1A  141D               	bsf	29,0	;volatile
 22138                           
 22139                           ;adc.c: 120: _delay((unsigned long)((5)*(1000000/4000000.0)));
 22140  2B1B  0000               	nop
 22141                           
 22142                           ;adc.c: 123: ADCON0bits.ADGO = 1;
 22143  2B1C  0021               	movlb	1	; select bank1
 22144  2B1D  149D               	bsf	29,1	;volatile
 22145  2B1E                     l969:	
 22146                           ;adc.c: 127: {
 22147                           
 22148  2B1E  189D               	btfsc	29,1	;volatile
 22149  2B1F  2B1E               	goto	l969
 22150                           
 22151                           ;adc.c: 128: };adc.c: 130: return ((ADRESH << 8) + ADRESL);
 22152  2B20  081C               	movf	28,w	;volatile
 22153  2B21  00F1               	movwf	?_ADC_GetConversion+1
 22154  2B22  081B               	movf	27,w	;volatile
 22155  2B23  00F0               	movwf	?_ADC_GetConversion
 22156  2B24  0008               	return
 22157  2B25                     __end_of_ADC_GetConversion:
 22158                           
 22159                           	psect	intentry
 22160  0004                     __pintentry:	
 22161 ;; *************** function _INTERRUPT_InterruptManager *****************
 22162 ;; Defined at:
 22163 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 22164 ;; Parameters:    Size  Location     Type
 22165 ;;		None
 22166 ;; Auto vars:     Size  Location     Type
 22167 ;;		None
 22168 ;; Return value:  Size  Location     Type
 22169 ;;                  1    wreg      void 
 22170 ;; Registers used:
 22171 ;;		wreg, status,2, status,0, pclath, cstack
 22172 ;; Tracked objects:
 22173 ;;		On entry : 0/0
 22174 ;;		On exit  : 0/0
 22175 ;;		Unchanged: 0/0
 22176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22181 ;;Total ram usage:        0 bytes
 22182 ;; Hardware stack levels used:    1
 22183 ;; Hardware stack levels required when called:    2
 22184 ;; This function calls:
 22185 ;;		_TMR1_ISR
 22186 ;; This function is called by:
 22187 ;;		Interrupt level 1
 22188 ;; This function uses a non-reentrant model
 22189 ;;
 22190                           
 22191  0004                     _INTERRUPT_InterruptManager:
 22192                           
 22193                           ;incstack = 0
 22194  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22195                           
 22196                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 22197  0005  3180               	pagesel	$
 22198                           
 22199                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bits.TM
      +                          R1IF == 1)
 22200  0006  1F0B               	btfss	11,6	;volatile
 22201  0007  2810               	goto	i1l989
 22202  0008  0021               	movlb	1	; select bank1
 22203  0009  1C11               	btfss	17,0	;volatile
 22204  000A  2810               	goto	i1l989
 22205  000B  0020               	movlb	0	; select bank0
 22206  000C  1C11               	btfss	17,0	;volatile
 22207  000D  2810               	goto	i1l989
 22208                           
 22209                           ;interrupt_manager.c: 55: {;interrupt_manager.c: 56: TMR1_ISR();
 22210  000E  31AB  2354         	fcall	_TMR1_ISR
 22211  0010                     i1l989:	
 22212                           ;interrupt_manager.c: 57: }
 22213                           
 22214  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22215  0011  0009               	retfie
 22216  0012                     __end_of_INTERRUPT_InterruptManager:
 22217                           
 22218                           	psect	text96
 22219  2B54                     __ptext96:	
 22220 ;; *************** function _TMR1_ISR *****************
 22221 ;; Defined at:
 22222 ;;		line 155 in file "mcc_generated_files/tmr1.c"
 22223 ;; Parameters:    Size  Location     Type
 22224 ;;		None
 22225 ;; Auto vars:     Size  Location     Type
 22226 ;;		None
 22227 ;; Return value:  Size  Location     Type
 22228 ;;                  1    wreg      void 
 22229 ;; Registers used:
 22230 ;;		wreg, status,2, status,0, pclath, cstack
 22231 ;; Tracked objects:
 22232 ;;		On entry : 1F/0
 22233 ;;		On exit  : 1F/3
 22234 ;;		Unchanged: 0/0
 22235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22240 ;;Total ram usage:        0 bytes
 22241 ;; Hardware stack levels used:    1
 22242 ;; Hardware stack levels required when called:    1
 22243 ;; This function calls:
 22244 ;;		_TMR1_CallBack
 22245 ;; This function is called by:
 22246 ;;		_INTERRUPT_InterruptManager
 22247 ;; This function uses a non-reentrant model
 22248 ;;
 22249                           
 22250                           
 22251                           ;psect for function _TMR1_ISR
 22252  2B54                     _TMR1_ISR:
 22253                           
 22254                           ;tmr1.c: 157: static volatile unsigned int CountCallBack = 0;;tmr1.c: 160: PIR1bits.TMR1
      +                          IF = 0;
 22255                           
 22256                           ;incstack = 0
 22257                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 22258  2B54  1011               	bcf	17,0	;volatile
 22259                           
 22260                           ;tmr1.c: 162: TMR1H = (timer1ReloadVal >> 8);
 22261  2B55  0023               	movlb	3	; select bank3
 22262  2B56  086E               	movf	(_timer1ReloadVal^(0+384)+1),w	;volatile
 22263  2B57  0020               	movlb	0	; select bank0
 22264  2B58  009A               	movwf	26	;volatile
 22265                           
 22266                           ;tmr1.c: 163: TMR1L = timer1ReloadVal;
 22267  2B59  0023               	movlb	3	; select bank3
 22268  2B5A  086D               	movf	_timer1ReloadVal^(0+384),w	;volatile
 22269  2B5B  0020               	movlb	0	; select bank0
 22270  2B5C  0099               	movwf	25	;volatile
 22271                           
 22272                           ;tmr1.c: 166: if (++CountCallBack >= 4)
 22273  2B5D  3001               	movlw	1
 22274  2B5E  0023               	movlb	3	; select bank3
 22275  2B5F  07AC               	addwf	TMR1_ISR@CountCallBack^(0+384),f	;volatile
 22276  2B60  3000               	movlw	0
 22277  2B61  3DAD               	addwfc	(TMR1_ISR@CountCallBack+1)^(0+384),f	;volatile
 22278  2B62  3000               	movlw	0
 22279  2B63  022D               	subwf	(TMR1_ISR@CountCallBack+1)^(0+384),w	;volatile
 22280  2B64  3004               	movlw	4
 22281  2B65  1903               	skipnz
 22282  2B66  022C               	subwf	TMR1_ISR@CountCallBack^(0+384),w	;volatile
 22283  2B67  1C03               	skipc
 22284  2B68  0008               	return
 22285                           
 22286                           ;tmr1.c: 167: {;tmr1.c: 169: TMR1_CallBack();
 22287  2B69  3180  2003         	fcall	_TMR1_CallBack
 22288                           
 22289                           ;tmr1.c: 172: CountCallBack = 0;
 22290  2B6B  01AC               	clrf	TMR1_ISR@CountCallBack^(0+384)	;volatile
 22291  2B6C  01AD               	clrf	(TMR1_ISR@CountCallBack+1)^(0+384)	;volatile
 22292  2B6D  0008               	return
 22293  2B6E                     __end_of_TMR1_ISR:
 22294                           
 22295                           	psect	text97
 22296  0003                     __ptext97:	
 22297 ;; *************** function _TMR1_CallBack *****************
 22298 ;; Defined at:
 22299 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 22300 ;; Parameters:    Size  Location     Type
 22301 ;;		None
 22302 ;; Auto vars:     Size  Location     Type
 22303 ;;		None
 22304 ;; Return value:  Size  Location     Type
 22305 ;;                  1    wreg      void 
 22306 ;; Registers used:
 22307 ;;		wreg, status,2, status,0
 22308 ;; Tracked objects:
 22309 ;;		On entry : 1F/3
 22310 ;;		On exit  : 1F/3
 22311 ;;		Unchanged: 1E/0
 22312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22317 ;;Total ram usage:        0 bytes
 22318 ;; Hardware stack levels used:    1
 22319 ;; This function calls:
 22320 ;;		Nothing
 22321 ;; This function is called by:
 22322 ;;		_TMR1_ISR
 22323 ;; This function uses a non-reentrant model
 22324 ;;
 22325                           
 22326                           
 22327                           ;psect for function _TMR1_CallBack
 22328  0003                     _TMR1_CallBack:
 22329                           
 22330                           ;incstack = 0
 22331                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0]
 22332  0003  0008               	return
 22333  0004                     __end_of_TMR1_CallBack:
 22334  007E                     btemp	set	126	;btemp
 22335  007E                     int$flags	set	126
 22336  007E                     wtemp0	set	126
 22337  2788                     
 22338                           	psect	config
 22339                           
 22340                           ;Config register CONFIG1 @ 0x8007
 22341                           ;	FEXTOSC External Oscillator mode Selection bits
 22342                           ;	FEXTOSC = OFF, Oscillator not enabled
 22343                           ;	Power-up default value for COSC bits
 22344                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 22345                           ;	Clock Out Enable bit
 22346                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 22347                           ;	Clock Switch Enable bit
 22348                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22349                           ;	Fail-Safe Clock Monitor Enable
 22350                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22351  8007                     	org	32775
 22352  8007  3FEC               	dw	16364
 22353                           
 22354                           ;Config register CONFIG2 @ 0x8008
 22355                           ;	Master Clear Enable bit
 22356                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
 22357                           ;	Power-up Timer Enable bit
 22358                           ;	PWRTE = OFF, PWRT disabled
 22359                           ;	Watchdog Timer Enable bits
 22360                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 22361                           ;	Low-power BOR enable bit
 22362                           ;	LPBOREN = OFF, ULPBOR disabled
 22363                           ;	Brown-out Reset Enable bits
 22364                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 22365                           ;	Brown-out Reset Voltage selection bit
 22366                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 22367                           ;	PPSLOCK bit One-Way Set Enable bit
 22368                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 22369                           ;	Stack Overflow/Underflow Reset Enable bit
 22370                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22371                           ;	Debugger enable bit
 22372                           ;	DEBUG = OFF, Background debugger disabled
 22373  8008                     	org	32776
 22374  8008  3FF3               	dw	16371
 22375                           
 22376                           ;Config register CONFIG3 @ 0x8009
 22377                           ;	User NVM self-write protection bits
 22378                           ;	WRT = OFF, Write protection off
 22379                           ;	Low Voltage Programming Enable bit
 22380                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
 22381  8009                     	org	32777
 22382  8009  3FFF               	dw	16383
 22383                           
 22384                           ;Config register CONFIG4 @ 0x800A
 22385                           ;	User NVM Program Memory Code Protection bit
 22386                           ;	CP = OFF, User NVM code protection disabled
 22387                           ;	Data NVM Memory Code Protection bit
 22388                           ;	CPD = OFF, Data NVM code protection disabled
 22389  800A                     	org	32778
 22390  800A  3FFF               	dw	16383
 22391                           
 22392                           	psect	text67_split_1
 22393  006D                     l7618:
 22394                           
 22395                           ;tcpv4.c: 826: currentTCB->timeout = 0;
 22396  006D  0022               	movlb	2	; select bank2
 22397  006E  086E               	movf	_currentTCB^(0+256),w
 22398  006F  3E2D               	addlw	45
 22399  0070  0086               	movwf	6
 22400  0071  3002               	movlw	2	; select bank4/5
 22401  0072  0087               	movwf	7
 22402  0073  3000               	movlw	0
 22403  0074  3FC0               	movwi [0]fsr1
 22404  0075  3FC1               	movwi [1]fsr1
 22405                           
 22406                           ;tcpv4.c: 828: currentTCB->flags = 0x01U;
 22407  0076  086E               	movf	_currentTCB^(0+256),w
 22408  0077  3E32               	addlw	50
 22409  0078  0086               	movwf	6
 22410  0079  3002               	movlw	2	; select bank4/5
 22411  007A  0087               	movwf	7
 22412  007B  0181               	clrf	1
 22413  007C  0A81               	incf	1,f
 22414                           
 22415                           ;tcpv4.c: 829: currentTCB->timeout = ((unsigned long)1*2);
 22416  007D  086E               	movf	_currentTCB^(0+256),w
 22417  007E  3E2D               	addlw	45
 22418  007F  0086               	movwf	6
 22419  0080  3002               	movlw	2	; select bank4/5
 22420  0081  0087               	movwf	7
 22421  0082  3002               	movlw	2
 22422  0083  3FC0               	movwi [0]fsr1
 22423  0084  3000               	movlw	0
 22424  0085  3FC1               	movwi [1]fsr1
 22425                           
 22426                           ;tcpv4.c: 830: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 22427  0086  086E               	movf	_currentTCB^(0+256),w
 22428  0087  3E2F               	addlw	47
 22429  0088  0086               	movwf	6
 22430  0089  3002               	movlw	2	; select bank4/5
 22431  008A  0087               	movwf	7
 22432  008B  3002               	movlw	2
 22433  008C  3FC0               	movwi [0]fsr1
 22434  008D  3000               	movlw	0
 22435  008E  3FC1               	movwi [1]fsr1
 22436                           
 22437                           ;tcpv4.c: 831: currentTCB->timeoutsCount = (5u);
 22438  008F  3005               	movlw	5
 22439  0090  0021               	movlb	1	; select bank1
 22440  0091  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22441  0092  0022               	movlb	2	; select bank2
 22442  0093  086E               	movf	_currentTCB^(0+256),w
 22443  0094  3E31               	addlw	49
 22444  0095  0086               	movwf	6
 22445  0096  3002               	movlw	2	; select bank4/5
 22446  0097  0087               	movwf	7
 22447  0098  0021               	movlb	1	; select bank1
 22448  0099  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 22449  009A  0081               	movwf	1
 22450                           
 22451                           ;tcpv4.c: 833: nextState = FIN_WAIT_1;
 22452  009B  3005               	movlw	5
 22453  009C  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22454  009D  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 22455  009E  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 22456                           
 22457                           ;tcpv4.c: 834: TCP_Snd(currentTCB);
 22458  009F  0022               	movlb	2	; select bank2
 22459  00A0  086E               	movf	_currentTCB^(0+256),w
 22460  00A1  3194  24B7  3180   	fcall	_TCP_Snd
 22461                           
 22462                           ;tcpv4.c: 835: break;
 22463  00A4  2DCC               	goto	l7826
 22464  00A5                     l7624:
 22465                           
 22466                           ;tcpv4.c: 837: case RCV_RST:;tcpv4.c: 840: if (currentTCB->localPort == tcpHeader.destPo
      +                          rt)
 22467  00A5  0022               	movlb	2	; select bank2
 22468  00A6  086E               	movf	_currentTCB^(0+256),w
 22469  00A7  0086               	movwf	6
 22470  00A8  3002               	movlw	2	; select bank4/5
 22471  00A9  0087               	movwf	7
 22472  00AA  3F40               	moviw [0]fsr1
 22473  00AB  0021               	movlb	1	; select bank1
 22474  00AC  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22475  00AD  3F41               	moviw [1]fsr1
 22476  00AE  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 22477  00AF  0023               	movlb	3	; select bank3
 22478  00B0  0850               	movf	((_tcpHeader+1)^(0+384)+2),w
 22479  00B1  0021               	movlb	1	; select bank1
 22480  00B2  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 22481  00B3  1D03               	skipz
 22482  00B4  28B9               	goto	u6455
 22483  00B5  0023               	movlb	3	; select bank3
 22484  00B6  084F               	movf	(_tcpHeader^(0+384)+2),w
 22485  00B7  0021               	movlb	1	; select bank1
 22486  00B8  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 22487  00B9                     u6455:
 22488  00B9  1D03               	skipz
 22489  00BA  2DCC               	goto	l7826
 22490                           
 22491                           ;tcpv4.c: 841: {;tcpv4.c: 842: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 22492  00BB  0022               	movlb	2	; select bank2
 22493  00BC  086E               	movf	_currentTCB^(0+256),w
 22494  00BD  3E0C               	addlw	12
 22495  00BE  0086               	movwf	6
 22496  00BF  3002               	movlw	2	; select bank4/5
 22497  00C0  0087               	movwf	7
 22498  00C1  3F40               	moviw [0]fsr1
 22499  00C2  0021               	movlb	1	; select bank1
 22500  00C3  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22501  00C4  3F41               	moviw [1]fsr1
 22502  00C5  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 22503  00C6  3F42               	moviw [2]fsr1
 22504  00C7  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 22505  00C8  3F43               	moviw [3]fsr1
 22506  00C9  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 22507  00CA  0023               	movlb	3	; select bank3
 22508  00CB  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 22509  00CC  0021               	movlb	1	; select bank1
 22510  00CD  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 22511  00CE  1D03               	skipz
 22512  00CF  28E0               	goto	u6465
 22513  00D0  0023               	movlb	3	; select bank3
 22514  00D1  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 22515  00D2  0021               	movlb	1	; select bank1
 22516  00D3  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 22517  00D4  1D03               	skipz
 22518  00D5  28E0               	goto	u6465
 22519  00D6  0023               	movlb	3	; select bank3
 22520  00D7  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 22521  00D8  0021               	movlb	1	; select bank1
 22522  00D9  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 22523  00DA  1D03               	skipz
 22524  00DB  28E0               	goto	u6465
 22525  00DC  0023               	movlb	3	; select bank3
 22526  00DD  0851               	movf	(_tcpHeader^(0+384)+4),w
 22527  00DE  0021               	movlb	1	; select bank1
 22528  00DF  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 22529  00E0                     u6465:
 22530  00E0  1D03               	skipz
 22531  00E1  2DCC               	goto	l7826
 22532                           
 22533                           ;tcpv4.c: 843: {;tcpv4.c: 844: currentTCB->destIP = 0;
 22534  00E2  0022               	movlb	2	; select bank2
 22535  00E3  086E               	movf	_currentTCB^(0+256),w
 22536  00E4  3E02               	addlw	2
 22537  00E5  0086               	movwf	6
 22538  00E6  3002               	movlw	2	; select bank4/5
 22539  00E7  0087               	movwf	7
 22540  00E8  3000               	movlw	0
 22541  00E9  3FC0               	movwi [0]fsr1
 22542  00EA  3000               	movlw	0
 22543  00EB  3FC1               	movwi [1]fsr1
 22544  00EC  3FC2               	movwi [2]fsr1
 22545  00ED  3FC3               	movwi [3]fsr1
 22546                           
 22547                           ;tcpv4.c: 845: currentTCB->destPort = 0;
 22548  00EE  086E               	movf	_currentTCB^(0+256),w
 22549  00EF  3E06               	addlw	6
 22550  00F0  0086               	movwf	6
 22551  00F1  3002               	movlw	2	; select bank4/5
 22552  00F2  0087               	movwf	7
 22553  00F3  3000               	movlw	0
 22554  00F4  3FC0               	movwi [0]fsr1
 22555  00F5  3FC1               	movwi [1]fsr1
 22556                           
 22557                           ;tcpv4.c: 846: currentTCB->localSeqno = 0;
 22558  00F6  086E               	movf	_currentTCB^(0+256),w
 22559  00F7  3E10               	addlw	16
 22560  00F8  0086               	movwf	6
 22561  00F9  3002               	movlw	2	; select bank4/5
 22562  00FA  0087               	movwf	7
 22563  00FB  3000               	movlw	0
 22564  00FC  3FC0               	movwi [0]fsr1
 22565  00FD  3000               	movlw	0
 22566  00FE  3FC1               	movwi [1]fsr1
 22567  00FF  3FC2               	movwi [2]fsr1
 22568  0100  3FC3               	movwi [3]fsr1
 22569                           
 22570                           ;tcpv4.c: 847: currentTCB->localLastAck = 0;
 22571  0101  086E               	movf	_currentTCB^(0+256),w
 22572  0102  3E14               	addlw	20
 22573  0103  0086               	movwf	6
 22574  0104  3002               	movlw	2	; select bank4/5
 22575  0105  0087               	movwf	7
 22576  0106  3000               	movlw	0
 22577  0107  3FC0               	movwi [0]fsr1
 22578  0108  3000               	movlw	0
 22579  0109  3FC1               	movwi [1]fsr1
 22580  010A  3FC2               	movwi [2]fsr1
 22581  010B  3FC3               	movwi [3]fsr1
 22582                           
 22583                           ;tcpv4.c: 848: currentTCB->remoteSeqno = 0;
 22584  010C  086E               	movf	_currentTCB^(0+256),w
 22585  010D  3E08               	addlw	8
 22586  010E  0086               	movwf	6
 22587  010F  3002               	movlw	2	; select bank4/5
 22588  0110  0087               	movwf	7
 22589  0111  3000               	movlw	0
 22590  0112  3FC0               	movwi [0]fsr1
 22591  0113  3000               	movlw	0
 22592  0114  3FC1               	movwi [1]fsr1
 22593  0115  3FC2               	movwi [2]fsr1
 22594  0116  3FC3               	movwi [3]fsr1
 22595                           
 22596                           ;tcpv4.c: 849: currentTCB->remoteAck = 0;
 22597  0117  086E               	movf	_currentTCB^(0+256),w
 22598  0118  3E0C               	addlw	12
 22599  0119  0086               	movwf	6
 22600  011A  3002               	movlw	2	; select bank4/5
 22601  011B  0087               	movwf	7
 22602  011C  3000               	movlw	0
 22603  011D  3FC0               	movwi [0]fsr1
 22604  011E  3000               	movlw	0
 22605  011F  3FC1               	movwi [1]fsr1
 22606  0120  3FC2               	movwi [2]fsr1
 22607  0121  3FC3               	movwi [3]fsr1
 22608                           
 22609                           ;tcpv4.c: 850: currentTCB->remoteWnd = 0;
 22610  0122  086E               	movf	_currentTCB^(0+256),w
 22611  0123  3E18               	addlw	24
 22612  0124  0086               	movwf	6
 22613  0125  3002               	movlw	2	; select bank4/5
 22614  0126  0087               	movwf	7
 22615  0127  3000               	movlw	0
 22616  0128  3FC0               	movwi [0]fsr1
 22617  0129  3FC1               	movwi [1]fsr1
 22618                           
 22619                           ;tcpv4.c: 852: currentTCB->mss = 1460u;
 22620  012A  086E               	movf	_currentTCB^(0+256),w
 22621  012B  3E1C               	addlw	28
 22622  012C  0086               	movwf	6
 22623  012D  3002               	movlw	2	; select bank4/5
 22624  012E  0087               	movwf	7
 22625  012F  30B4               	movlw	180
 22626  0130  3FC0               	movwi [0]fsr1
 22627  0131  3005               	movlw	5
 22628  0132  3FC1               	movwi [1]fsr1
 22629  0133                     l7630:
 22630                           
 22631                           ;tcpv4.c: 854: nextState = LISTEN;
 22632  0133  0021               	movlb	1	; select bank1
 22633  0134  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 22634  0135  0AED               	incf	TCP_FiniteStateMachine@nextState^(0+128),f
 22635  0136  2DCC               	goto	l7826
 22636  0137                     l7632:
 22637                           
 22638                           ;tcpv4.c: 859: if (currentTCB->timeoutsCount)
 22639  0137  0022               	movlb	2	; select bank2
 22640  0138  086E               	movf	_currentTCB^(0+256),w
 22641  0139  3E31               	addlw	49
 22642  013A  0086               	movwf	6
 22643  013B  3002               	movlw	2	; select bank4/5
 22644  013C  0087               	movwf	7
 22645  013D  0801               	movf	1,w
 22646  013E  1903               	btfsc	3,2
 22647  013F  2945               	goto	l7636
 22648                           
 22649                           ;tcpv4.c: 860: {;tcpv4.c: 861: TCP_Snd(currentTCB);
 22650  0140  086E               	movf	_currentTCB^(0+256),w
 22651  0141  3194  24B7  3180   	fcall	_TCP_Snd
 22652                           
 22653                           ;tcpv4.c: 862: }
 22654  0144  2DCC               	goto	l7826
 22655  0145                     l7636:
 22656                           
 22657                           ;tcpv4.c: 863: else;tcpv4.c: 864: {;tcpv4.c: 866: currentTCB->flags = 0x04U;
 22658  0145  3004               	movlw	4
 22659  0146  0021               	movlb	1	; select bank1
 22660  0147  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22661  0148  0022               	movlb	2	; select bank2
 22662  0149  086E               	movf	_currentTCB^(0+256),w
 22663  014A  3E32               	addlw	50
 22664  014B  0086               	movwf	6
 22665  014C  3002               	movlw	2	; select bank4/5
 22666  014D  0087               	movwf	7
 22667  014E  0021               	movlb	1	; select bank1
 22668  014F  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 22669  0150  0081               	movwf	1
 22670                           
 22671                           ;tcpv4.c: 867: if(TCP_Snd(currentTCB))
 22672  0151  0022               	movlb	2	; select bank2
 22673  0152  086E               	movf	_currentTCB^(0+256),w
 22674  0153  3194  24B7  3180   	fcall	_TCP_Snd
 22675  0156  3A00               	xorlw	0
 22676  0157  1903               	skipnz
 22677  0158  2DCC               	goto	l7826
 22678                           
 22679                           ;tcpv4.c: 868: {;tcpv4.c: 869: currentTCB->destIP = 0;
 22680  0159  0022               	movlb	2	; select bank2
 22681  015A  086E               	movf	_currentTCB^(0+256),w
 22682  015B  3E02               	addlw	2
 22683  015C  0086               	movwf	6
 22684  015D  3002               	movlw	2	; select bank4/5
 22685  015E  0087               	movwf	7
 22686  015F  3000               	movlw	0
 22687  0160  3FC0               	movwi [0]fsr1
 22688  0161  3000               	movlw	0
 22689  0162  3FC1               	movwi [1]fsr1
 22690  0163  3FC2               	movwi [2]fsr1
 22691  0164  3FC3               	movwi [3]fsr1
 22692                           
 22693                           ;tcpv4.c: 870: currentTCB->destPort = 0;
 22694  0165  086E               	movf	_currentTCB^(0+256),w
 22695  0166  3E06               	addlw	6
 22696  0167  0086               	movwf	6
 22697  0168  3002               	movlw	2	; select bank4/5
 22698  0169  0087               	movwf	7
 22699  016A  3000               	movlw	0
 22700  016B  3FC0               	movwi [0]fsr1
 22701  016C  3FC1               	movwi [1]fsr1
 22702                           
 22703                           ;tcpv4.c: 871: currentTCB->localSeqno = 0;
 22704  016D  086E               	movf	_currentTCB^(0+256),w
 22705  016E  3E10               	addlw	16
 22706  016F  0086               	movwf	6
 22707  0170  3002               	movlw	2	; select bank4/5
 22708  0171  0087               	movwf	7
 22709  0172  3000               	movlw	0
 22710  0173  3FC0               	movwi [0]fsr1
 22711  0174  3000               	movlw	0
 22712  0175  3FC1               	movwi [1]fsr1
 22713  0176  3FC2               	movwi [2]fsr1
 22714  0177  3FC3               	movwi [3]fsr1
 22715                           
 22716                           ;tcpv4.c: 872: currentTCB->localLastAck = 0;
 22717  0178  086E               	movf	_currentTCB^(0+256),w
 22718  0179  3E14               	addlw	20
 22719  017A  0086               	movwf	6
 22720  017B  3002               	movlw	2	; select bank4/5
 22721  017C  0087               	movwf	7
 22722  017D  3000               	movlw	0
 22723  017E  3FC0               	movwi [0]fsr1
 22724  017F  3000               	movlw	0
 22725  0180  3FC1               	movwi [1]fsr1
 22726  0181  3FC2               	movwi [2]fsr1
 22727  0182  3FC3               	movwi [3]fsr1
 22728                           
 22729                           ;tcpv4.c: 873: currentTCB->remoteSeqno = 0;
 22730  0183  086E               	movf	_currentTCB^(0+256),w
 22731  0184  3E08               	addlw	8
 22732  0185  0086               	movwf	6
 22733  0186  3002               	movlw	2	; select bank4/5
 22734  0187  0087               	movwf	7
 22735  0188  3000               	movlw	0
 22736  0189  3FC0               	movwi [0]fsr1
 22737  018A  3000               	movlw	0
 22738  018B  3FC1               	movwi [1]fsr1
 22739  018C  3FC2               	movwi [2]fsr1
 22740  018D  3FC3               	movwi [3]fsr1
 22741                           
 22742                           ;tcpv4.c: 874: currentTCB->remoteAck = 0;
 22743  018E  086E               	movf	_currentTCB^(0+256),w
 22744  018F  3E0C               	addlw	12
 22745  0190  0086               	movwf	6
 22746  0191  3002               	movlw	2	; select bank4/5
 22747  0192  0087               	movwf	7
 22748  0193  3000               	movlw	0
 22749  0194  3FC0               	movwi [0]fsr1
 22750  0195  3000               	movlw	0
 22751  0196  3FC1               	movwi [1]fsr1
 22752  0197  3FC2               	movwi [2]fsr1
 22753  0198  3FC3               	movwi [3]fsr1
 22754                           
 22755                           ;tcpv4.c: 875: currentTCB->remoteWnd = 0;
 22756  0199  086E               	movf	_currentTCB^(0+256),w
 22757  019A  3E18               	addlw	24
 22758  019B  0086               	movwf	6
 22759  019C  3002               	movlw	2	; select bank4/5
 22760  019D  0087               	movwf	7
 22761  019E  3000               	movlw	0
 22762  019F  3FC0               	movwi [0]fsr1
 22763  01A0  3FC1               	movwi [1]fsr1
 22764                           
 22765                           ;tcpv4.c: 877: currentTCB->mss = 1460u;
 22766  01A1  086E               	movf	_currentTCB^(0+256),w
 22767  01A2  3E1C               	addlw	28
 22768  01A3  0086               	movwf	6
 22769  01A4  3002               	movlw	2	; select bank4/5
 22770  01A5  0087               	movwf	7
 22771  01A6  30B4               	movlw	180
 22772  01A7  3FC0               	movwi [0]fsr1
 22773  01A8  3005               	movlw	5
 22774  01A9  3FC1               	movwi [1]fsr1
 22775  01AA  2933               	goto	l7630
 22776  01AB                     l7646:
 22777  01AB  0021               	movlb	1	; select bank1
 22778  01AC  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 22779                           
 22780                           ; Switch size 1, requested type "simple"
 22781                           ; Number of cases is 6, Range of values is 0 to 12
 22782                           ; switch strategies available:
 22783                           ; Name         Instructions Cycles
 22784                           ; simple_byte           19    10 (average)
 22785                           ; direct_byte           32     6 (fixed)
 22786                           ; jumptable            260     6 (fixed)
 22787                           ;	Chosen strategy is simple_byte
 22788  01AD  3A00               	xorlw	0	; case 0
 22789  01AE  1903               	skipnz
 22790  01AF  286D               	goto	l7618
 22791  01B0  3A04               	xorlw	4	; case 4
 22792  01B1  318F  1903         	skipnz
 22793  01B3  2F2C  3180         	goto	l7604
 22794  01B5  3A01               	xorlw	1	; case 5
 22795  01B6  1903               	skipnz
 22796  01B7  2DE5               	goto	L14
 22797  01B8  3A0C               	xorlw	12	; case 9
 22798  01B9  1903               	skipnz
 22799  01BA  28A5               	goto	l7624
 22800  01BB  3A03               	xorlw	3	; case 10
 22801  01BC  1903               	skipnz
 22802  01BD  28A5               	goto	l7624
 22803  01BE  3A06               	xorlw	6	; case 12
 22804  01BF  1903               	skipnz
 22805  01C0  2937               	goto	l7632
 22806  01C1  2DCC               	goto	l7826
 22807  01C2                     l7648:
 22808                           
 22809                           ;tcpv4.c: 891: if (currentTCB->destIP == receivedRemoteAddress)
 22810  01C2  0022               	movlb	2	; select bank2
 22811  01C3  086E               	movf	_currentTCB^(0+256),w
 22812  01C4  3E02               	addlw	2
 22813  01C5  0086               	movwf	6
 22814  01C6  3002               	movlw	2	; select bank4/5
 22815  01C7  0087               	movwf	7
 22816  01C8  3F40               	moviw [0]fsr1
 22817  01C9  0021               	movlb	1	; select bank1
 22818  01CA  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22819  01CB  3F41               	moviw [1]fsr1
 22820  01CC  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 22821  01CD  3F42               	moviw [2]fsr1
 22822  01CE  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 22823  01CF  3F43               	moviw [3]fsr1
 22824  01D0  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 22825  01D1  0023               	movlb	3	; select bank3
 22826  01D2  0823               	movf	(_receivedRemoteAddress+3)^(0+384),w
 22827  01D3  0021               	movlb	1	; select bank1
 22828  01D4  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 22829  01D5  1D03               	skipz
 22830  01D6  29E7               	goto	u6495
 22831  01D7  0023               	movlb	3	; select bank3
 22832  01D8  0822               	movf	(_receivedRemoteAddress+2)^(0+384),w
 22833  01D9  0021               	movlb	1	; select bank1
 22834  01DA  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 22835  01DB  1D03               	skipz
 22836  01DC  29E7               	goto	u6495
 22837  01DD  0023               	movlb	3	; select bank3
 22838  01DE  0821               	movf	(_receivedRemoteAddress+1)^(0+384),w
 22839  01DF  0021               	movlb	1	; select bank1
 22840  01E0  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 22841  01E1  1D03               	skipz
 22842  01E2  29E7               	goto	u6495
 22843  01E3  0023               	movlb	3	; select bank3
 22844  01E4  0820               	movf	_receivedRemoteAddress^(0+384),w
 22845  01E5  0021               	movlb	1	; select bank1
 22846  01E6  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 22847  01E7                     u6495:
 22848  01E7  1D03               	skipz
 22849  01E8  2DCC               	goto	l7826
 22850                           
 22851                           ;tcpv4.c: 892: {;tcpv4.c: 896: if (currentTCB->remoteAck == tcpHeader.sequenceNumber)
 22852  01E9  0022               	movlb	2	; select bank2
 22853  01EA  086E               	movf	_currentTCB^(0+256),w
 22854  01EB  3E0C               	addlw	12
 22855  01EC  0086               	movwf	6
 22856  01ED  3002               	movlw	2	; select bank4/5
 22857  01EE  0087               	movwf	7
 22858  01EF  3F40               	moviw [0]fsr1
 22859  01F0  0021               	movlb	1	; select bank1
 22860  01F1  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22861  01F2  3F41               	moviw [1]fsr1
 22862  01F3  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 22863  01F4  3F42               	moviw [2]fsr1
 22864  01F5  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 22865  01F6  3F43               	moviw [3]fsr1
 22866  01F7  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 22867  01F8  0023               	movlb	3	; select bank3
 22868  01F9  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 22869  01FA  0021               	movlb	1	; select bank1
 22870  01FB  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 22871  01FC  1D03               	skipz
 22872  01FD  2A0E               	goto	u6505
 22873  01FE  0023               	movlb	3	; select bank3
 22874  01FF  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 22875  0200  0021               	movlb	1	; select bank1
 22876  0201  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 22877  0202  1D03               	skipz
 22878  0203  2A0E               	goto	u6505
 22879  0204  0023               	movlb	3	; select bank3
 22880  0205  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 22881  0206  0021               	movlb	1	; select bank1
 22882  0207  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 22883  0208  1D03               	skipz
 22884  0209  2A0E               	goto	u6505
 22885  020A  0023               	movlb	3	; select bank3
 22886  020B  0851               	movf	(_tcpHeader^(0+384)+4),w
 22887  020C  0021               	movlb	1	; select bank1
 22888  020D  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 22889  020E                     u6505:
 22890  020E  1D03               	skipz
 22891  020F  2DCC               	goto	l7826
 22892                           
 22893                           ;tcpv4.c: 897: {;tcpv4.c: 901: if (currentTCB->localLastAck < tcpHeader.ackNumber)
 22894  0210  0022               	movlb	2	; select bank2
 22895  0211  086E               	movf	_currentTCB^(0+256),w
 22896  0212  3E14               	addlw	20
 22897  0213  0086               	movwf	6
 22898  0214  3002               	movlw	2	; select bank4/5
 22899  0215  0087               	movwf	7
 22900  0216  3F40               	moviw [0]fsr1
 22901  0217  0021               	movlb	1	; select bank1
 22902  0218  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22903  0219  3F41               	moviw [1]fsr1
 22904  021A  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 22905  021B  3F42               	moviw [2]fsr1
 22906  021C  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 22907  021D  3F43               	moviw [3]fsr1
 22908  021E  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 22909  021F  0023               	movlb	3	; select bank3
 22910  0220  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 22911  0221  0021               	movlb	1	; select bank1
 22912  0222  0263               	subwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 22913  0223  1D03               	skipz
 22914  0224  2A35               	goto	u6515
 22915  0225  0023               	movlb	3	; select bank3
 22916  0226  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 22917  0227  0021               	movlb	1	; select bank1
 22918  0228  0262               	subwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 22919  0229  1D03               	skipz
 22920  022A  2A35               	goto	u6515
 22921  022B  0023               	movlb	3	; select bank3
 22922  022C  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 22923  022D  0021               	movlb	1	; select bank1
 22924  022E  0261               	subwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 22925  022F  1D03               	skipz
 22926  0230  2A35               	goto	u6515
 22927  0231  0023               	movlb	3	; select bank3
 22928  0232  0855               	movf	(_tcpHeader^(0+384)+8),w
 22929  0233  0021               	movlb	1	; select bank1
 22930  0234  0260               	subwf	??_TCP_FiniteStateMachine^(0+128),w
 22931  0235                     u6515:
 22932  0235  1803               	skipnc
 22933  0236  2DCC               	goto	l7826
 22934                           
 22935                           ;tcpv4.c: 902: {;tcpv4.c: 904: if ((currentTCB->localSeqno + 1) >= tcpHeader.ackNumber)
 22936  0237  3001               	movlw	1
 22937  0238  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 22938  0239  3000               	movlw	0
 22939  023A  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 22940  023B  3000               	movlw	0
 22941  023C  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 22942  023D  3000               	movlw	0
 22943  023E  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 22944  023F  0022               	movlb	2	; select bank2
 22945  0240  086E               	movf	_currentTCB^(0+256),w
 22946  0241  3E10               	addlw	16
 22947  0242  0086               	movwf	6
 22948  0243  3002               	movlw	2	; select bank4/5
 22949  0244  0087               	movwf	7
 22950  0245  3F40               	moviw [0]fsr1
 22951  0246  0021               	movlb	1	; select bank1
 22952  0247  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 22953  0248  3F41               	moviw [1]fsr1
 22954  0249  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 22955  024A  3F42               	moviw [2]fsr1
 22956  024B  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 22957  024C  3F43               	moviw [3]fsr1
 22958  024D  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 22959  024E  0023               	movlb	3	; select bank3
 22960  024F  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 22961  0250  0021               	movlb	1	; select bank1
 22962  0251  0263               	subwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 22963  0252  1D03               	skipz
 22964  0253  2A64               	goto	u6525
 22965  0254  0023               	movlb	3	; select bank3
 22966  0255  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 22967  0256  0021               	movlb	1	; select bank1
 22968  0257  0262               	subwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 22969  0258  1D03               	skipz
 22970  0259  2A64               	goto	u6525
 22971  025A  0023               	movlb	3	; select bank3
 22972  025B  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 22973  025C  0021               	movlb	1	; select bank1
 22974  025D  0261               	subwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 22975  025E  1D03               	skipz
 22976  025F  2A64               	goto	u6525
 22977  0260  0023               	movlb	3	; select bank3
 22978  0261  0855               	movf	(_tcpHeader^(0+384)+8),w
 22979  0262  0021               	movlb	1	; select bank1
 22980  0263  0260               	subwf	??_TCP_FiniteStateMachine^(0+128),w
 22981  0264                     u6525:
 22982  0264  1C03               	skipc
 22983  0265  2DCC               	goto	l7826
 22984                           
 22985                           ;tcpv4.c: 905: {;tcpv4.c: 906: notAckBytes = currentTCB->localSeqno - tcpHeader.ackNumbe
      +                          r;
 22986  0266  3008               	movlw	8
 22987  0267  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 22988  0268  0086               	movwf	6
 22989  0269  3001               	movlw	1	; select bank3/4
 22990  026A  0087               	movwf	7
 22991  026B  0022               	movlb	2	; select bank2
 22992  026C  086E               	movf	_currentTCB^(0+256),w
 22993  026D  3E10               	addlw	16
 22994  026E  0084               	movwf	4
 22995  026F  3002               	movlw	2	; select bank4/5
 22996  0270  0085               	movwf	5
 22997  0271  3F40               	moviw [0]fsr1
 22998  0272  0200               	subwf	0,w
 22999  0273  0021               	movlb	1	; select bank1
 23000  0274  00EA               	movwf	TCP_FiniteStateMachine@notAckBytes^(0+128)
 23001  0275  3101               	addfsr 0,1
 23002  0276  3F41               	moviw [1]fsr1
 23003  0277  3B00               	subwfb	0,w
 23004  0278  00EB               	movwf	(TCP_FiniteStateMachine@notAckBytes^(0+128)+1)
 23005                           
 23006                           ;tcpv4.c: 909: currentTCB->txBufferPtr = currentTCB->txBufferPtr - notAckBytes;
 23007  0279  0022               	movlb	2	; select bank2
 23008  027A  086E               	movf	_currentTCB^(0+256),w
 23009  027B  3E22               	addlw	34
 23010  027C  0086               	movwf	6
 23011  027D  3002               	movlw	2	; select bank4/5
 23012  027E  0087               	movwf	7
 23013  027F  0021               	movlb	1	; select bank1
 23014  0280  086A               	movf	TCP_FiniteStateMachine@notAckBytes^(0+128),w
 23015  0281  0201               	subwf	1,w
 23016  0282  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23017  0283  0022               	movlb	2	; select bank2
 23018  0284  086E               	movf	_currentTCB^(0+256),w
 23019  0285  3E22               	addlw	34
 23020  0286  0086               	movwf	6
 23021  0287  3002               	movlw	2	; select bank4/5
 23022  0288  0087               	movwf	7
 23023  0289  0021               	movlb	1	; select bank1
 23024  028A  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23025  028B  0081               	movwf	1
 23026                           
 23027                           ;tcpv4.c: 910: currentTCB->bytesToSend = currentTCB->bytesToSend + notAckBytes;
 23028  028C  0022               	movlb	2	; select bank2
 23029  028D  086E               	movf	_currentTCB^(0+256),w
 23030  028E  3E23               	addlw	35
 23031  028F  0086               	movwf	6
 23032  0290  3002               	movlw	2	; select bank4/5
 23033  0291  0087               	movwf	7
 23034  0292  3F40               	moviw [0]fsr1
 23035  0293  0021               	movlb	1	; select bank1
 23036  0294  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23037  0295  3F41               	moviw [1]fsr1
 23038  0296  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 23039  0297  086A               	movf	TCP_FiniteStateMachine@notAckBytes^(0+128),w
 23040  0298  0760               	addwf	??_TCP_FiniteStateMachine^(0+128),w
 23041  0299  00E2               	movwf	(??_TCP_FiniteStateMachine+2)^(0+128)
 23042  029A  086B               	movf	(TCP_FiniteStateMachine@notAckBytes+1)^(0+128),w
 23043  029B  3D61               	addwfc	(??_TCP_FiniteStateMachine+1)^(0+128),w
 23044  029C  00E3               	movwf	(??_TCP_FiniteStateMachine+3)^(0+128)
 23045  029D  0022               	movlb	2	; select bank2
 23046  029E  086E               	movf	_currentTCB^(0+256),w
 23047  029F  3E23               	addlw	35
 23048  02A0  0086               	movwf	6
 23049  02A1  3002               	movlw	2	; select bank4/5
 23050  02A2  0087               	movwf	7
 23051  02A3  0021               	movlb	1	; select bank1
 23052  02A4  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 23053  02A5  3FC0               	movwi [0]fsr1
 23054  02A6  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 23055  02A7  3FC1               	movwi [1]fsr1
 23056                           
 23057                           ;tcpv4.c: 912: currentTCB->localLastAck = tcpHeader.ackNumber - 1;
 23058  02A8  30FF               	movlw	255
 23059  02A9  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23060  02AA  30FF               	movlw	255
 23061  02AB  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 23062  02AC  30FF               	movlw	255
 23063  02AD  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 23064  02AE  30FF               	movlw	255
 23065  02AF  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 23066  02B0  3008               	movlw	8
 23067  02B1  3ECD               	addlw	(low (_tcpHeader| (0+256)))& (0+255)
 23068  02B2  0086               	movwf	6
 23069  02B3  3001               	movlw	1	; select bank3/4
 23070  02B4  0087               	movwf	7
 23071  02B5  3F40               	moviw [0]fsr1
 23072  02B6  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 23073  02B7  3F41               	moviw [1]fsr1
 23074  02B8  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 23075  02B9  3F42               	moviw [2]fsr1
 23076  02BA  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 23077  02BB  3F43               	moviw [3]fsr1
 23078  02BC  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 23079  02BD  0022               	movlb	2	; select bank2
 23080  02BE  086E               	movf	_currentTCB^(0+256),w
 23081  02BF  3E14               	addlw	20
 23082  02C0  0086               	movwf	6
 23083  02C1  3002               	movlw	2	; select bank4/5
 23084  02C2  0087               	movwf	7
 23085  02C3  0021               	movlb	1	; select bank1
 23086  02C4  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23087  02C5  3FC0               	movwi [0]fsr1
 23088  02C6  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 23089  02C7  3FC1               	movwi [1]fsr1
 23090  02C8  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 23091  02C9  3FC2               	movwi [2]fsr1
 23092  02CA  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 23093  02CB  3FC3               	movwi [3]fsr1
 23094                           
 23095                           ;tcpv4.c: 913: currentTCB->localSeqno = tcpHeader.ackNumber;
 23096  02CC  0022               	movlb	2	; select bank2
 23097  02CD  086E               	movf	_currentTCB^(0+256),w
 23098  02CE  3E10               	addlw	16
 23099  02CF  0086               	movwf	6
 23100  02D0  3002               	movlw	2	; select bank4/5
 23101  02D1  0087               	movwf	7
 23102  02D2  0023               	movlb	3	; select bank3
 23103  02D3  0855               	movf	(_tcpHeader^(0+384)+8),w
 23104  02D4  3FC0               	movwi [0]fsr1
 23105  02D5  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 23106  02D6  3FC1               	movwi [1]fsr1
 23107  02D7  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 23108  02D8  3FC2               	movwi [2]fsr1
 23109  02D9  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 23110  02DA  3FC3               	movwi [3]fsr1
 23111                           
 23112                           ;tcpv4.c: 916: if(currentTCB->bytesToSend == 0)
 23113  02DB  0022               	movlb	2	; select bank2
 23114  02DC  086E               	movf	_currentTCB^(0+256),w
 23115  02DD  3E23               	addlw	35
 23116  02DE  0086               	movwf	6
 23117  02DF  3002               	movlw	2	; select bank4/5
 23118  02E0  0087               	movwf	7
 23119  02E1  0016               	moviw fsr1++
 23120  02E2  0401               	iorwf	1,w
 23121  02E3  1D03               	btfss	3,2
 23122  02E4  2AFD               	goto	l7672
 23123                           
 23124                           ;tcpv4.c: 917: {;tcpv4.c: 918: if (currentTCB->txBufState == TX_BUFF_IN_USE)
 23125  02E5  086E               	movf	_currentTCB^(0+256),w
 23126  02E6  3E25               	addlw	37
 23127  02E7  0086               	movwf	6
 23128  02E8  3002               	movlw	2	; select bank4/5
 23129  02E9  0087               	movwf	7
 23130  02EA  3002               	movlw	2
 23131  02EB  0601               	xorwf	1,w
 23132  02EC  1D03               	btfss	3,2
 23133  02ED  2B0F               	goto	l7676
 23134                           
 23135                           ;tcpv4.c: 919: {;tcpv4.c: 920: currentTCB->txBufState = NO_BUFF;
 23136  02EE  086E               	movf	_currentTCB^(0+256),w
 23137  02EF  3E25               	addlw	37
 23138  02F0  0086               	movwf	6
 23139  02F1  3002               	movlw	2	; select bank4/5
 23140  02F2  0087               	movwf	7
 23141  02F3  0181               	clrf	1
 23142                           
 23143                           ;tcpv4.c: 922: currentTCB->timeout = 0;
 23144  02F4  086E               	movf	_currentTCB^(0+256),w
 23145  02F5  3E2D               	addlw	45
 23146  02F6  0086               	movwf	6
 23147  02F7  3002               	movlw	2	; select bank4/5
 23148  02F8  0087               	movwf	7
 23149  02F9  3000               	movlw	0
 23150  02FA  3FC0               	movwi [0]fsr1
 23151  02FB  3FC1               	movwi [1]fsr1
 23152  02FC  2B0F               	goto	l7676
 23153  02FD                     l7672:
 23154                           
 23155                           ;tcpv4.c: 925: else;tcpv4.c: 926: {;tcpv4.c: 927: currentTCB->bytesSent = currentTCB->by
      +                          tesToSend;
 23156  02FD  086E               	movf	_currentTCB^(0+256),w
 23157  02FE  3E23               	addlw	35
 23158  02FF  0086               	movwf	6
 23159  0300  3002               	movlw	2	; select bank4/5
 23160  0301  0087               	movwf	7
 23161  0302  086E               	movf	_currentTCB^(0+256),w
 23162  0303  3E26               	addlw	38
 23163  0304  0084               	movwf	4
 23164  0305  3002               	movlw	2	; select bank4/5
 23165  0306  0085               	movwf	5
 23166  0307  3F40               	moviw [0]fsr1
 23167  0308  3F80               	movwi [0]fsr0
 23168  0309  3F41               	moviw [1]fsr1
 23169  030A  3F81               	movwi [1]fsr0
 23170                           
 23171                           ;tcpv4.c: 928: TCP_Snd(currentTCB);
 23172  030B  086E               	movf	_currentTCB^(0+256),w
 23173  030C  3194  24B7  3180   	fcall	_TCP_Snd
 23174  030F                     l7676:
 23175                           
 23176                           ;tcpv4.c: 929: };tcpv4.c: 933: if(rcvPayloadLen > 0)
 23177  030F  0023               	movlb	3	; select bank3
 23178  0310  0830               	movf	_rcvPayloadLen^(0+384),w
 23179  0311  0431               	iorwf	(_rcvPayloadLen+1)^(0+384),w
 23180  0312  1903               	btfsc	3,2
 23181  0313  2DCC               	goto	l7826
 23182                           
 23183                           ;tcpv4.c: 934: {;tcpv4.c: 935: currentTCB->remoteSeqno = tcpHeader.sequenceNumber;
 23184  0314  0022               	movlb	2	; select bank2
 23185  0315  086E               	movf	_currentTCB^(0+256),w
 23186  0316  3E08               	addlw	8
 23187  0317  0086               	movwf	6
 23188  0318  3002               	movlw	2	; select bank4/5
 23189  0319  0087               	movwf	7
 23190  031A  0023               	movlb	3	; select bank3
 23191  031B  0851               	movf	(_tcpHeader^(0+384)+4),w
 23192  031C  3FC0               	movwi [0]fsr1
 23193  031D  0852               	movf	((_tcpHeader+1)^(0+384)+4),w
 23194  031E  3FC1               	movwi [1]fsr1
 23195  031F  0853               	movf	((_tcpHeader+2)^(0+384)+4),w
 23196  0320  3FC2               	movwi [2]fsr1
 23197  0321  0854               	movf	((_tcpHeader+3)^(0+384)+4),w
 23198  0322  3FC3               	movwi [3]fsr1
 23199                           
 23200                           ;tcpv4.c: 938: TCP_PayloadSave(rcvPayloadLen);
 23201  0323  0831               	movf	(_rcvPayloadLen+1)^(0+384),w
 23202  0324  0020               	movlb	0	; select bank0
 23203  0325  00EE               	movwf	TCP_PayloadSave@len+1
 23204  0326  0023               	movlb	3	; select bank3
 23205  0327  0830               	movf	_rcvPayloadLen^(0+384),w
 23206  0328  0020               	movlb	0	; select bank0
 23207  0329  00ED               	movwf	TCP_PayloadSave@len
 23208  032A  31A6  2680  3180   	fcall	_TCP_PayloadSave
 23209  032D  2DCC               	goto	l7826
 23210  032E                     l7682:
 23211                           
 23212                           ;tcpv4.c: 950: currentTCB->flags = 0x01U;
 23213  032E  0022               	movlb	2	; select bank2
 23214  032F  086E               	movf	_currentTCB^(0+256),w
 23215  0330  3E32               	addlw	50
 23216  0331  0086               	movwf	6
 23217  0332  3002               	movlw	2	; select bank4/5
 23218  0333  0087               	movwf	7
 23219  0334  0181               	clrf	1
 23220  0335  0A81               	incf	1,f
 23221                           
 23222                           ;tcpv4.c: 951: nextState = FIN_WAIT_1;
 23223  0336  3005               	movlw	5
 23224  0337  0021               	movlb	1	; select bank1
 23225  0338  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23226  0339  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23227  033A  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 23228                           
 23229                           ;tcpv4.c: 952: TCP_Snd(currentTCB);
 23230  033B  0022               	movlb	2	; select bank2
 23231  033C  086E               	movf	_currentTCB^(0+256),w
 23232  033D  3194  24B7  3180   	fcall	_TCP_Snd
 23233                           
 23234                           ;tcpv4.c: 953: break;
 23235  0340  2DCC               	goto	l7826
 23236  0341                     l7688:
 23237                           
 23238                           ;tcpv4.c: 957: currentTCB->bytesSent = 0;
 23239  0341  0022               	movlb	2	; select bank2
 23240  0342  086E               	movf	_currentTCB^(0+256),w
 23241  0343  3E26               	addlw	38
 23242  0344  0086               	movwf	6
 23243  0345  3002               	movlw	2	; select bank4/5
 23244  0346  0087               	movwf	7
 23245  0347  3000               	movlw	0
 23246  0348  3FC0               	movwi [0]fsr1
 23247  0349  3FC1               	movwi [1]fsr1
 23248                           
 23249                           ;tcpv4.c: 960: currentTCB->localSeqno = tcpHeader.ackNumber;
 23250  034A  086E               	movf	_currentTCB^(0+256),w
 23251  034B  3E10               	addlw	16
 23252  034C  0086               	movwf	6
 23253  034D  3002               	movlw	2	; select bank4/5
 23254  034E  0087               	movwf	7
 23255  034F  0023               	movlb	3	; select bank3
 23256  0350  0855               	movf	(_tcpHeader^(0+384)+8),w
 23257  0351  3FC0               	movwi [0]fsr1
 23258  0352  0856               	movf	((_tcpHeader+1)^(0+384)+8),w
 23259  0353  3FC1               	movwi [1]fsr1
 23260  0354  0857               	movf	((_tcpHeader+2)^(0+384)+8),w
 23261  0355  3FC2               	movwi [2]fsr1
 23262  0356  0858               	movf	((_tcpHeader+3)^(0+384)+8),w
 23263  0357  3FC3               	movwi [3]fsr1
 23264                           
 23265                           ;tcpv4.c: 961: currentTCB->remoteAck = currentTCB->remoteAck + 1;
 23266  0358  3001               	movlw	1
 23267  0359  0021               	movlb	1	; select bank1
 23268  035A  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23269  035B  3000               	movlw	0
 23270  035C  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 23271  035D  3000               	movlw	0
 23272  035E  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 23273  035F  3000               	movlw	0
 23274  0360  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 23275  0361  0022               	movlb	2	; select bank2
 23276  0362  086E               	movf	_currentTCB^(0+256),w
 23277  0363  3E0C               	addlw	12
 23278  0364  0086               	movwf	6
 23279  0365  3002               	movlw	2	; select bank4/5
 23280  0366  0087               	movwf	7
 23281  0367  3F40               	moviw [0]fsr1
 23282  0368  0021               	movlb	1	; select bank1
 23283  0369  07E0               	addwf	??_TCP_FiniteStateMachine^(0+128),f
 23284  036A  3F41               	moviw [1]fsr1
 23285  036B  3DE1               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+1),f
 23286  036C  3F42               	moviw [2]fsr1
 23287  036D  3DE2               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+2),f
 23288  036E  3F43               	moviw [3]fsr1
 23289  036F  3DE3               	addwfc	(??_TCP_FiniteStateMachine^(0+128)+3),f
 23290  0370  0022               	movlb	2	; select bank2
 23291  0371  086E               	movf	_currentTCB^(0+256),w
 23292  0372  3E0C               	addlw	12
 23293  0373  0086               	movwf	6
 23294  0374  3002               	movlw	2	; select bank4/5
 23295  0375  0087               	movwf	7
 23296  0376  0021               	movlb	1	; select bank1
 23297  0377  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23298  0378  3FC0               	movwi [0]fsr1
 23299  0379  0861               	movf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 23300  037A  3FC1               	movwi [1]fsr1
 23301  037B  0862               	movf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 23302  037C  3FC2               	movwi [2]fsr1
 23303  037D  0863               	movf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 23304  037E  3FC3               	movwi [3]fsr1
 23305                           
 23306                           ;tcpv4.c: 963: currentTCB->socketState = SOCKET_CLOSING;
 23307  037F  3004               	movlw	4
 23308  0380  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23309  0381  0022               	movlb	2	; select bank2
 23310  0382  086E               	movf	_currentTCB^(0+256),w
 23311  0383  3E33               	addlw	51
 23312  0384  0086               	movwf	6
 23313  0385  3002               	movlw	2	; select bank4/5
 23314  0386  0087               	movwf	7
 23315  0387  0021               	movlb	1	; select bank1
 23316  0388  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23317  0389  0081               	movwf	1
 23318                           
 23319                           ;tcpv4.c: 964: currentTCB->timeout = ((unsigned long)1*2);
 23320  038A  0022               	movlb	2	; select bank2
 23321  038B  086E               	movf	_currentTCB^(0+256),w
 23322  038C  3E2D               	addlw	45
 23323  038D  0086               	movwf	6
 23324  038E  3002               	movlw	2	; select bank4/5
 23325  038F  0087               	movwf	7
 23326  0390  3002               	movlw	2
 23327  0391  3FC0               	movwi [0]fsr1
 23328  0392  3000               	movlw	0
 23329  0393  3FC1               	movwi [1]fsr1
 23330                           
 23331                           ;tcpv4.c: 965: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 23332  0394  086E               	movf	_currentTCB^(0+256),w
 23333  0395  3E2F               	addlw	47
 23334  0396  0086               	movwf	6
 23335  0397  3002               	movlw	2	; select bank4/5
 23336  0398  0087               	movwf	7
 23337  0399  3002               	movlw	2
 23338  039A  3FC0               	movwi [0]fsr1
 23339  039B  3000               	movlw	0
 23340  039C  3FC1               	movwi [1]fsr1
 23341                           
 23342                           ;tcpv4.c: 966: currentTCB->timeoutsCount = (5u);
 23343  039D  3005               	movlw	5
 23344  039E  0021               	movlb	1	; select bank1
 23345  039F  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23346  03A0  0022               	movlb	2	; select bank2
 23347  03A1  086E               	movf	_currentTCB^(0+256),w
 23348  03A2  3E31               	addlw	49
 23349  03A3  0086               	movwf	6
 23350  03A4  3002               	movlw	2	; select bank4/5
 23351  03A5  0087               	movwf	7
 23352  03A6  0021               	movlb	1	; select bank1
 23353  03A7  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23354  03A8  0081               	movwf	1
 23355                           
 23356                           ;tcpv4.c: 968: currentTCB->flags = 0x01U | 0x10U;
 23357  03A9  3011               	movlw	17
 23358  03AA  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23359  03AB  0022               	movlb	2	; select bank2
 23360  03AC  086E               	movf	_currentTCB^(0+256),w
 23361  03AD  3E32               	addlw	50
 23362  03AE  0086               	movwf	6
 23363  03AF  3002               	movlw	2	; select bank4/5
 23364  03B0  0087               	movwf	7
 23365  03B1  0021               	movlb	1	; select bank1
 23366  03B2  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23367  03B3  0081               	movwf	1
 23368                           
 23369                           ;tcpv4.c: 970: nextState = LAST_ACK;
 23370  03B4  3009               	movlw	9
 23371  03B5  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23372  03B6  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23373  03B7  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 23374                           
 23375                           ;tcpv4.c: 971: TCP_Snd(currentTCB);
 23376  03B8  0022               	movlb	2	; select bank2
 23377  03B9  086E               	movf	_currentTCB^(0+256),w
 23378  03BA  3194  24B7  3180   	fcall	_TCP_Snd
 23379                           
 23380                           ;tcpv4.c: 972: break;
 23381  03BD  2DCC               	goto	l7826
 23382  03BE                     l7694:
 23383                           
 23384                           ;tcpv4.c: 974: case RCV_RSTACK:;tcpv4.c: 975: currentTCB->flags = 0x04U;
 23385  03BE  3004               	movlw	4
 23386  03BF  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23387  03C0  0022               	movlb	2	; select bank2
 23388  03C1  086E               	movf	_currentTCB^(0+256),w
 23389  03C2  3E32               	addlw	50
 23390  03C3  0086               	movwf	6
 23391  03C4  3002               	movlw	2	; select bank4/5
 23392  03C5  0087               	movwf	7
 23393  03C6  0021               	movlb	1	; select bank1
 23394  03C7  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23395  03C8  0081               	movwf	1
 23396                           
 23397                           ;tcpv4.c: 976: TCP_Snd(currentTCB);
 23398  03C9  0022               	movlb	2	; select bank2
 23399  03CA  086E               	movf	_currentTCB^(0+256),w
 23400  03CB  3194  24B7  3180   	fcall	_TCP_Snd
 23401                           
 23402                           ;tcpv4.c: 977: nextState = CLOSED;
 23403  03CE  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23404                           
 23405                           ;tcpv4.c: 978: TCB_Reset(currentTCB);
 23406  03CF  0022               	movlb	2	; select bank2
 23407  03D0  086E               	movf	_currentTCB^(0+256),w
 23408  03D1  3190  2001  3180   	fcall	_TCB_Reset
 23409                           
 23410                           ;tcpv4.c: 979: break;
 23411  03D4  2DCC               	goto	l7826
 23412  03D5                     l7702:
 23413                           
 23414                           ;tcpv4.c: 981: if (currentTCB->timeoutsCount)
 23415  03D5  0022               	movlb	2	; select bank2
 23416  03D6  086E               	movf	_currentTCB^(0+256),w
 23417  03D7  3E31               	addlw	49
 23418  03D8  0086               	movwf	6
 23419  03D9  3002               	movlw	2	; select bank4/5
 23420  03DA  0087               	movwf	7
 23421  03DB  0801               	movf	1,w
 23422  03DC  1903               	btfsc	3,2
 23423  03DD  2BE3               	goto	l7706
 23424                           
 23425                           ;tcpv4.c: 982: {;tcpv4.c: 983: TCP_Snd(currentTCB);
 23426  03DE  086E               	movf	_currentTCB^(0+256),w
 23427  03DF  3194  24B7  3180   	fcall	_TCP_Snd
 23428                           
 23429                           ;tcpv4.c: 984: }else
 23430  03E2  2DCC               	goto	l7826
 23431  03E3                     l7706:
 23432                           
 23433                           ;tcpv4.c: 985: {;tcpv4.c: 987: currentTCB->flags = 0x04U;
 23434  03E3  3004               	movlw	4
 23435  03E4  0021               	movlb	1	; select bank1
 23436  03E5  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23437  03E6  0022               	movlb	2	; select bank2
 23438  03E7  086E               	movf	_currentTCB^(0+256),w
 23439  03E8  3E32               	addlw	50
 23440  03E9  0086               	movwf	6
 23441  03EA  3002               	movlw	2	; select bank4/5
 23442  03EB  0087               	movwf	7
 23443  03EC  0021               	movlb	1	; select bank1
 23444  03ED  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23445  03EE  0081               	movwf	1
 23446                           
 23447                           ;tcpv4.c: 988: if(TCP_Snd(currentTCB))
 23448  03EF  0022               	movlb	2	; select bank2
 23449  03F0  086E               	movf	_currentTCB^(0+256),w
 23450  03F1  3194  24B7  3180   	fcall	_TCP_Snd
 23451  03F4  3A00               	xorlw	0
 23452  03F5  1903               	skipnz
 23453  03F6  2DCC               	goto	l7826
 23454                           
 23455                           ;tcpv4.c: 989: {;tcpv4.c: 990: nextState = CLOSE;
 23456  03F7  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23457                           
 23458                           ;tcpv4.c: 991: TCB_Reset(currentTCB);
 23459  03F8  0022               	movlb	2	; select bank2
 23460  03F9  086E               	movf	_currentTCB^(0+256),w
 23461  03FA  3190  2001  3180   	fcall	_TCB_Reset
 23462  03FD  2DCC               	goto	l7826
 23463  03FE                     l7716:
 23464  03FE  0021               	movlb	1	; select bank1
 23465  03FF  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 23466                           
 23467                           ; Switch size 1, requested type "simple"
 23468                           ; Number of cases is 7, Range of values is 0 to 12
 23469                           ; switch strategies available:
 23470                           ; Name         Instructions Cycles
 23471                           ; simple_byte           22    12 (average)
 23472                           ; direct_byte           32     6 (fixed)
 23473                           ; jumptable            260     6 (fixed)
 23474                           ;	Chosen strategy is simple_byte
 23475  0400  3A00               	xorlw	0	; case 0
 23476  0401  1903               	skipnz
 23477  0402  2B2E               	goto	l7682
 23478  0403  3A04               	xorlw	4	; case 4
 23479  0404  1903               	skipnz
 23480  0405  29C2               	goto	l7648
 23481  0406  3A02               	xorlw	2	; case 6
 23482  0407  1903               	skipnz
 23483  0408  2DCC               	goto	l7826
 23484  0409  3A01               	xorlw	1	; case 7
 23485  040A  1903               	skipnz
 23486  040B  2B41               	goto	l7688
 23487  040C  3A0E               	xorlw	14	; case 9
 23488  040D  1903               	skipnz
 23489  040E  2BBE               	goto	l7694
 23490  040F  3A03               	xorlw	3	; case 10
 23491  0410  1903               	skipnz
 23492  0411  2BBE               	goto	l7694
 23493  0412  3A06               	xorlw	6	; case 12
 23494  0413  1903               	skipnz
 23495  0414  2BD5               	goto	l7702
 23496  0415  2DCC               	goto	l7826
 23497  0416                     l7718:
 23498                           
 23499                           ;tcpv4.c: 1003: currentTCB->flags = 0x10U;
 23500  0416  3010               	movlw	16
 23501  0417  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23502  0418  0022               	movlb	2	; select bank2
 23503  0419  086E               	movf	_currentTCB^(0+256),w
 23504  041A  3E32               	addlw	50
 23505  041B  0086               	movwf	6
 23506  041C  3002               	movlw	2	; select bank4/5
 23507  041D  0087               	movwf	7
 23508  041E  0021               	movlb	1	; select bank1
 23509  041F  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23510  0420  0081               	movwf	1
 23511                           
 23512                           ;tcpv4.c: 1004: if(TCP_Snd(currentTCB))
 23513  0421  0022               	movlb	2	; select bank2
 23514  0422  086E               	movf	_currentTCB^(0+256),w
 23515  0423  3194  24B7  3180   	fcall	_TCP_Snd
 23516  0426  3A00               	xorlw	0
 23517  0427  1903               	skipnz
 23518  0428  2DCC               	goto	l7826
 23519                           
 23520                           ;tcpv4.c: 1005: {;tcpv4.c: 1006: nextState = CLOSING;
 23521  0429  3008               	movlw	8
 23522  042A  2C53               	goto	L7
 23523  042B                     l7724:
 23524                           
 23525                           ;tcpv4.c: 1011: currentTCB->timeout = ((unsigned long)1*2);
 23526  042B  0022               	movlb	2	; select bank2
 23527  042C  086E               	movf	_currentTCB^(0+256),w
 23528  042D  3E2D               	addlw	45
 23529  042E  0086               	movwf	6
 23530  042F  3002               	movlw	2	; select bank4/5
 23531  0430  0087               	movwf	7
 23532  0431  3002               	movlw	2
 23533  0432  3FC0               	movwi [0]fsr1
 23534  0433  3000               	movlw	0
 23535  0434  3FC1               	movwi [1]fsr1
 23536                           
 23537                           ;tcpv4.c: 1012: currentTCB->timeoutsCount = 1;
 23538  0435  086E               	movf	_currentTCB^(0+256),w
 23539  0436  3E31               	addlw	49
 23540  0437  0086               	movwf	6
 23541  0438  3002               	movlw	2	; select bank4/5
 23542  0439  0087               	movwf	7
 23543  043A  0181               	clrf	1
 23544  043B  0A81               	incf	1,f
 23545                           
 23546                           ;tcpv4.c: 1013: nextState = FIN_WAIT_2;
 23547  043C  3006               	movlw	6
 23548  043D  0021               	movlb	1	; select bank1
 23549  043E  2C53               	goto	L7
 23550  043F                     l7728:	
 23551                           ;tcpv4.c: 1014: break;
 23552                           
 23553                           
 23554                           ;tcpv4.c: 1016: currentTCB->flags = 0x10U;
 23555  043F  3010               	movlw	16
 23556  0440  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23557  0441  0022               	movlb	2	; select bank2
 23558  0442  086E               	movf	_currentTCB^(0+256),w
 23559  0443  3E32               	addlw	50
 23560  0444  0086               	movwf	6
 23561  0445  3002               	movlw	2	; select bank4/5
 23562  0446  0087               	movwf	7
 23563  0447  0021               	movlb	1	; select bank1
 23564  0448  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23565  0449  0081               	movwf	1
 23566  044A                     L8:
 23567                           
 23568                           ;tcpv4.c: 1017: if(TCP_Snd(currentTCB))
 23569  044A  0022               	movlb	2	; select bank2
 23570  044B  086E               	movf	_currentTCB^(0+256),w
 23571  044C  3194  24B7  3180   	fcall	_TCP_Snd
 23572  044F  3A00               	xorlw	0
 23573  0450  1903               	skipnz
 23574  0451  2DCC               	goto	l7826
 23575  0452                     l7732:
 23576                           
 23577                           ;tcpv4.c: 1018: {;tcpv4.c: 1019: nextState = TIME_WAIT;
 23578  0452  300A               	movlw	10
 23579  0453                     L7:
 23580  0453  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23581  0454  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23582  0455  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 23583  0456  2DCC               	goto	l7826
 23584  0457                     l7734:
 23585                           
 23586                           ;tcpv4.c: 1023: if (currentTCB->timeoutsCount)
 23587  0457  0022               	movlb	2	; select bank2
 23588  0458  086E               	movf	_currentTCB^(0+256),w
 23589  0459  3E31               	addlw	49
 23590  045A  0086               	movwf	6
 23591  045B  3002               	movlw	2	; select bank4/5
 23592  045C  0087               	movwf	7
 23593  045D  0801               	movf	1,w
 23594  045E  1903               	btfsc	3,2
 23595  045F  2C65               	goto	l7738
 23596                           
 23597                           ;tcpv4.c: 1024: {;tcpv4.c: 1025: TCP_Snd(currentTCB);
 23598  0460  086E               	movf	_currentTCB^(0+256),w
 23599  0461  3194  24B7  3180   	fcall	_TCP_Snd
 23600                           
 23601                           ;tcpv4.c: 1026: }else
 23602  0464  2DCC               	goto	l7826
 23603  0465                     l7738:
 23604                           
 23605                           ;tcpv4.c: 1027: {;tcpv4.c: 1029: currentTCB->flags = 0x04U;
 23606  0465  3004               	movlw	4
 23607  0466  0021               	movlb	1	; select bank1
 23608  0467  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23609  0468  0022               	movlb	2	; select bank2
 23610  0469  086E               	movf	_currentTCB^(0+256),w
 23611  046A  3E32               	addlw	50
 23612  046B  0086               	movwf	6
 23613  046C  3002               	movlw	2	; select bank4/5
 23614  046D  0087               	movwf	7
 23615  046E  0021               	movlb	1	; select bank1
 23616  046F  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23617  0470  0081               	movwf	1
 23618                           
 23619                           ;tcpv4.c: 1030: if(TCP_Snd(currentTCB))
 23620  0471  0022               	movlb	2	; select bank2
 23621  0472  086E               	movf	_currentTCB^(0+256),w
 23622  0473  3194  24B7  3180   	fcall	_TCP_Snd
 23623  0476  3A00               	xorlw	0
 23624  0477  1903               	skipnz
 23625  0478  2DCC               	goto	l7826
 23626                           
 23627                           ;tcpv4.c: 1031: {;tcpv4.c: 1032: nextState = CLOSE;
 23628  0479  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23629                           
 23630                           ;tcpv4.c: 1033: TCB_Reset(currentTCB);
 23631  047A  0022               	movlb	2	; select bank2
 23632  047B  086E               	movf	_currentTCB^(0+256),w
 23633  047C  3190  2001  3180   	fcall	_TCB_Reset
 23634  047F  2DCC               	goto	l7826
 23635  0480                     l7748:
 23636  0480  0021               	movlb	1	; select bank1
 23637  0481  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 23638                           
 23639                           ; Switch size 1, requested type "simple"
 23640                           ; Number of cases is 4, Range of values is 4 to 12
 23641                           ; switch strategies available:
 23642                           ; Name         Instructions Cycles
 23643                           ; simple_byte           13     7 (average)
 23644                           ; direct_byte           27     9 (fixed)
 23645                           ; jumptable            263     9 (fixed)
 23646                           ;	Chosen strategy is simple_byte
 23647  0482  3A04               	xorlw	4	; case 4
 23648  0483  1903               	skipnz
 23649  0484  2C2B               	goto	l7724
 23650  0485  3A02               	xorlw	2	; case 6
 23651  0486  1903               	skipnz
 23652  0487  2C16               	goto	l7718
 23653  0488  3A01               	xorlw	1	; case 7
 23654  0489  1903               	skipnz
 23655  048A  2C3F               	goto	l7728
 23656  048B  3A0B               	xorlw	11	; case 12
 23657  048C  1903               	skipnz
 23658  048D  2C57               	goto	l7734
 23659  048E  2DCC               	goto	l7826
 23660  048F                     l7750:
 23661  048F  2C4A               	goto	L8
 23662  0490                     l7754:	
 23663                           ;tcpv4.c: 1045: if(TCP_Snd(currentTCB))
 23664                           
 23665                           
 23666                           ;tcpv4.c: 1051: if (currentTCB->timeoutsCount)
 23667  0490  0022               	movlb	2	; select bank2
 23668  0491  086E               	movf	_currentTCB^(0+256),w
 23669  0492  3E31               	addlw	49
 23670  0493  0086               	movwf	6
 23671  0494  3002               	movlw	2	; select bank4/5
 23672  0495  0087               	movwf	7
 23673  0496  0801               	movf	1,w
 23674  0497  1903               	btfsc	3,2
 23675  0498  2C9E               	goto	l7758
 23676                           
 23677                           ;tcpv4.c: 1052: {;tcpv4.c: 1053: TCP_Snd(currentTCB);
 23678  0499  086E               	movf	_currentTCB^(0+256),w
 23679  049A  3194  24B7  3180   	fcall	_TCP_Snd
 23680                           
 23681                           ;tcpv4.c: 1054: }else
 23682  049D  2DCC               	goto	l7826
 23683  049E                     l7758:
 23684                           
 23685                           ;tcpv4.c: 1055: {;tcpv4.c: 1057: currentTCB->flags = 0x04U;
 23686  049E  3004               	movlw	4
 23687  049F  0021               	movlb	1	; select bank1
 23688  04A0  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23689  04A1  0022               	movlb	2	; select bank2
 23690  04A2  086E               	movf	_currentTCB^(0+256),w
 23691  04A3  3E32               	addlw	50
 23692  04A4  0086               	movwf	6
 23693  04A5  3002               	movlw	2	; select bank4/5
 23694  04A6  0087               	movwf	7
 23695  04A7  0021               	movlb	1	; select bank1
 23696  04A8  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23697  04A9  0081               	movwf	1
 23698                           
 23699                           ;tcpv4.c: 1058: if(TCP_Snd(currentTCB))
 23700  04AA  0022               	movlb	2	; select bank2
 23701  04AB  086E               	movf	_currentTCB^(0+256),w
 23702  04AC  3194  24B7  3180   	fcall	_TCP_Snd
 23703  04AF  3A00               	xorlw	0
 23704  04B0  1903               	skipnz
 23705  04B1  2DCC               	goto	l7826
 23706                           
 23707                           ;tcpv4.c: 1059: {;tcpv4.c: 1060: nextState = CLOSE;
 23708  04B2  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23709                           
 23710                           ;tcpv4.c: 1061: TCB_Reset(currentTCB);
 23711  04B3  0022               	movlb	2	; select bank2
 23712  04B4  086E               	movf	_currentTCB^(0+256),w
 23713  04B5  3190  2001  3180   	fcall	_TCB_Reset
 23714  04B8  2DCC               	goto	l7826
 23715  04B9                     l7768:
 23716  04B9  0021               	movlb	1	; select bank1
 23717  04BA  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 23718                           
 23719                           ; Switch size 1, requested type "simple"
 23720                           ; Number of cases is 2, Range of values is 6 to 12
 23721                           ; switch strategies available:
 23722                           ; Name         Instructions Cycles
 23723                           ; simple_byte            7     4 (average)
 23724                           ; direct_byte           23     9 (fixed)
 23725                           ; jumptable            263     9 (fixed)
 23726                           ;	Chosen strategy is simple_byte
 23727  04BB  3A06               	xorlw	6	; case 6
 23728  04BC  1903               	skipnz
 23729  04BD  2C8F               	goto	l7750
 23730  04BE  3A0A               	xorlw	10	; case 12
 23731  04BF  1903               	skipnz
 23732  04C0  2C90               	goto	l7754
 23733  04C1  2DCC               	goto	l7826
 23734  04C2                     l7774:
 23735  04C2  0021               	movlb	1	; select bank1
 23736  04C3  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 23737                           
 23738                           ; Switch size 1, requested type "simple"
 23739                           ; Number of cases is 1, Range of values is 4 to 4
 23740                           ; switch strategies available:
 23741                           ; Name         Instructions Cycles
 23742                           ; simple_byte            4     3 (average)
 23743                           ; direct_byte           11     9 (fixed)
 23744                           ; jumptable            263     9 (fixed)
 23745                           ;	Chosen strategy is simple_byte
 23746  04C4  3A04               	xorlw	4	; case 4
 23747  04C5  1903               	skipnz
 23748  04C6  2C52               	goto	l7732
 23749  04C7  2DCC               	goto	l7826
 23750  04C8                     l7776:
 23751                           
 23752                           ;tcpv4.c: 1087: case RCV_ACK:;tcpv4.c: 1088: if ((currentTCB->destIP == receivedRemoteAd
      +                          dress) &&;tcpv4.c: 1089: (currentTCB->destPort == tcpHeader.sourcePort))
 23753  04C8  0022               	movlb	2	; select bank2
 23754  04C9  086E               	movf	_currentTCB^(0+256),w
 23755  04CA  3E02               	addlw	2
 23756  04CB  0086               	movwf	6
 23757  04CC  3002               	movlw	2	; select bank4/5
 23758  04CD  0087               	movwf	7
 23759  04CE  3F40               	moviw [0]fsr1
 23760  04CF  0021               	movlb	1	; select bank1
 23761  04D0  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23762  04D1  3F41               	moviw [1]fsr1
 23763  04D2  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 23764  04D3  3F42               	moviw [2]fsr1
 23765  04D4  00E2               	movwf	(??_TCP_FiniteStateMachine^(0+128)+2)
 23766  04D5  3F43               	moviw [3]fsr1
 23767  04D6  00E3               	movwf	(??_TCP_FiniteStateMachine^(0+128)+3)
 23768  04D7  0023               	movlb	3	; select bank3
 23769  04D8  0823               	movf	(_receivedRemoteAddress+3)^(0+384),w
 23770  04D9  0021               	movlb	1	; select bank1
 23771  04DA  0663               	xorwf	(??_TCP_FiniteStateMachine+3)^(0+128),w
 23772  04DB  1D03               	skipz
 23773  04DC  2CED               	goto	u6655
 23774  04DD  0023               	movlb	3	; select bank3
 23775  04DE  0822               	movf	(_receivedRemoteAddress+2)^(0+384),w
 23776  04DF  0021               	movlb	1	; select bank1
 23777  04E0  0662               	xorwf	(??_TCP_FiniteStateMachine+2)^(0+128),w
 23778  04E1  1D03               	skipz
 23779  04E2  2CED               	goto	u6655
 23780  04E3  0023               	movlb	3	; select bank3
 23781  04E4  0821               	movf	(_receivedRemoteAddress+1)^(0+384),w
 23782  04E5  0021               	movlb	1	; select bank1
 23783  04E6  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 23784  04E7  1D03               	skipz
 23785  04E8  2CED               	goto	u6655
 23786  04E9  0023               	movlb	3	; select bank3
 23787  04EA  0820               	movf	_receivedRemoteAddress^(0+384),w
 23788  04EB  0021               	movlb	1	; select bank1
 23789  04EC  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 23790  04ED                     u6655:
 23791  04ED  1D03               	skipz
 23792  04EE  2DCC               	goto	l7826
 23793  04EF  0022               	movlb	2	; select bank2
 23794  04F0  086E               	movf	_currentTCB^(0+256),w
 23795  04F1  3E06               	addlw	6
 23796  04F2  0086               	movwf	6
 23797  04F3  3002               	movlw	2	; select bank4/5
 23798  04F4  0087               	movwf	7
 23799  04F5  3F40               	moviw [0]fsr1
 23800  04F6  0021               	movlb	1	; select bank1
 23801  04F7  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23802  04F8  3F41               	moviw [1]fsr1
 23803  04F9  00E1               	movwf	(??_TCP_FiniteStateMachine^(0+128)+1)
 23804  04FA  0023               	movlb	3	; select bank3
 23805  04FB  084E               	movf	(_tcpHeader+1)^(0+384),w
 23806  04FC  0021               	movlb	1	; select bank1
 23807  04FD  0661               	xorwf	(??_TCP_FiniteStateMachine+1)^(0+128),w
 23808  04FE  1D03               	skipz
 23809  04FF  2D04               	goto	u6665
 23810  0500  0023               	movlb	3	; select bank3
 23811  0501  084D               	movf	_tcpHeader^(0+384),w
 23812  0502  0021               	movlb	1	; select bank1
 23813  0503  0660               	xorwf	??_TCP_FiniteStateMachine^(0+128),w
 23814  0504                     u6665:
 23815  0504  1D03               	skipz
 23816  0505  2DCC               	goto	l7826
 23817                           
 23818                           ;tcpv4.c: 1090: {;tcpv4.c: 1091: nextState = CLOSED;
 23819  0506  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23820                           
 23821                           ;tcpv4.c: 1092: TCB_Reset(currentTCB);
 23822  0507  0022               	movlb	2	; select bank2
 23823  0508  086E               	movf	_currentTCB^(0+256),w
 23824  0509  3190  2001  3180   	fcall	_TCB_Reset
 23825  050C  2DCC               	goto	l7826
 23826  050D                     l7784:
 23827                           
 23828                           ;tcpv4.c: 1096: if (currentTCB->timeoutsCount)
 23829  050D  0022               	movlb	2	; select bank2
 23830  050E  086E               	movf	_currentTCB^(0+256),w
 23831  050F  3E31               	addlw	49
 23832  0510  0086               	movwf	6
 23833  0511  3002               	movlw	2	; select bank4/5
 23834  0512  0087               	movwf	7
 23835  0513  0801               	movf	1,w
 23836  0514  1903               	btfsc	3,2
 23837  0515  2D1B               	goto	l7788
 23838                           
 23839                           ;tcpv4.c: 1097: {;tcpv4.c: 1098: TCP_Snd(currentTCB);
 23840  0516  086E               	movf	_currentTCB^(0+256),w
 23841  0517  3194  24B7  3180   	fcall	_TCP_Snd
 23842                           
 23843                           ;tcpv4.c: 1099: }else
 23844  051A  2DCC               	goto	l7826
 23845  051B                     l7788:
 23846                           
 23847                           ;tcpv4.c: 1100: {;tcpv4.c: 1102: currentTCB->flags = 0x04U;
 23848  051B  3004               	movlw	4
 23849  051C  0021               	movlb	1	; select bank1
 23850  051D  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23851  051E  0022               	movlb	2	; select bank2
 23852  051F  086E               	movf	_currentTCB^(0+256),w
 23853  0520  3E32               	addlw	50
 23854  0521  0086               	movwf	6
 23855  0522  3002               	movlw	2	; select bank4/5
 23856  0523  0087               	movwf	7
 23857  0524  0021               	movlb	1	; select bank1
 23858  0525  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23859  0526  0081               	movwf	1
 23860                           
 23861                           ;tcpv4.c: 1103: if(TCP_Snd(currentTCB))
 23862  0527  0022               	movlb	2	; select bank2
 23863  0528  086E               	movf	_currentTCB^(0+256),w
 23864  0529  3194  24B7  3180   	fcall	_TCP_Snd
 23865  052C  3A00               	xorlw	0
 23866  052D  1903               	skipnz
 23867  052E  2DCC               	goto	l7826
 23868                           
 23869                           ;tcpv4.c: 1104: {;tcpv4.c: 1105: nextState = CLOSE;
 23870  052F  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23871                           
 23872                           ;tcpv4.c: 1106: TCB_Reset(currentTCB);
 23873  0530  0022               	movlb	2	; select bank2
 23874  0531  086E               	movf	_currentTCB^(0+256),w
 23875  0532  3190  2001  3180   	fcall	_TCB_Reset
 23876  0535  2DCC               	goto	l7826
 23877  0536                     l7798:
 23878  0536  0021               	movlb	1	; select bank1
 23879  0537  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 23880                           
 23881                           ; Switch size 1, requested type "simple"
 23882                           ; Number of cases is 3, Range of values is 4 to 12
 23883                           ; switch strategies available:
 23884                           ; Name         Instructions Cycles
 23885                           ; simple_byte           10     6 (average)
 23886                           ; direct_byte           27     9 (fixed)
 23887                           ; jumptable            263     9 (fixed)
 23888                           ;	Chosen strategy is simple_byte
 23889  0538  3A04               	xorlw	4	; case 4
 23890  0539  1903               	skipnz
 23891  053A  2CC8               	goto	l7776
 23892  053B  3A03               	xorlw	3	; case 7
 23893  053C  1903               	skipnz
 23894  053D  2CC8               	goto	l7776
 23895  053E  3A0B               	xorlw	11	; case 12
 23896  053F  1903               	skipnz
 23897  0540  2D0D               	goto	l7784
 23898  0541  2DCC               	goto	l7826
 23899  0542                     l7800:
 23900                           
 23901                           ;tcpv4.c: 1114: nextState = CLOSED;
 23902  0542  0021               	movlb	1	; select bank1
 23903  0543  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 23904                           
 23905                           ;tcpv4.c: 1115: TCB_Reset(currentTCB);
 23906  0544  0022               	movlb	2	; select bank2
 23907  0545  086E               	movf	_currentTCB^(0+256),w
 23908  0546  3190  2001  3180   	fcall	_TCB_Reset
 23909                           
 23910                           ;tcpv4.c: 1116: break;
 23911  0549  2DCC               	goto	l7826
 23912  054A                     l7804:
 23913                           
 23914                           ;tcpv4.c: 1122: currentTCB->timeout = ((unsigned long)1*2);
 23915  054A  0022               	movlb	2	; select bank2
 23916  054B  086E               	movf	_currentTCB^(0+256),w
 23917  054C  3E2D               	addlw	45
 23918  054D  0086               	movwf	6
 23919  054E  3002               	movlw	2	; select bank4/5
 23920  054F  0087               	movwf	7
 23921  0550  3002               	movlw	2
 23922  0551  3FC0               	movwi [0]fsr1
 23923  0552  3000               	movlw	0
 23924  0553  3FC1               	movwi [1]fsr1
 23925                           
 23926                           ;tcpv4.c: 1123: currentTCB->timeoutReloadValue = ((unsigned long)1*2);
 23927  0554  086E               	movf	_currentTCB^(0+256),w
 23928  0555  3E2F               	addlw	47
 23929  0556  0086               	movwf	6
 23930  0557  3002               	movlw	2	; select bank4/5
 23931  0558  0087               	movwf	7
 23932  0559  3002               	movlw	2
 23933  055A  3FC0               	movwi [0]fsr1
 23934  055B  3000               	movlw	0
 23935  055C  3FC1               	movwi [1]fsr1
 23936                           
 23937                           ;tcpv4.c: 1124: currentTCB->timeoutsCount = (3u);
 23938  055D  3003               	movlw	3
 23939  055E  0021               	movlb	1	; select bank1
 23940  055F  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23941  0560  0022               	movlb	2	; select bank2
 23942  0561  086E               	movf	_currentTCB^(0+256),w
 23943  0562  3E31               	addlw	49
 23944  0563  0086               	movwf	6
 23945  0564  3002               	movlw	2	; select bank4/5
 23946  0565  0087               	movwf	7
 23947  0566  0021               	movlb	1	; select bank1
 23948  0567  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23949  0568  0081               	movwf	1
 23950                           
 23951                           ;tcpv4.c: 1125: currentTCB->flags = 0x02U;
 23952  0569  3002               	movlw	2
 23953  056A  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23954  056B  0022               	movlb	2	; select bank2
 23955  056C  086E               	movf	_currentTCB^(0+256),w
 23956  056D  3E32               	addlw	50
 23957  056E  0086               	movwf	6
 23958  056F  3002               	movlw	2	; select bank4/5
 23959  0570  0087               	movwf	7
 23960  0571  0021               	movlb	1	; select bank1
 23961  0572  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23962  0573  0081               	movwf	1
 23963                           
 23964                           ;tcpv4.c: 1126: TCP_Snd(currentTCB);
 23965  0574  0022               	movlb	2	; select bank2
 23966  0575  086E               	movf	_currentTCB^(0+256),w
 23967  0576  3194  24B7  3180   	fcall	_TCP_Snd
 23968                           
 23969                           ;tcpv4.c: 1127: nextState = SYN_SENT;
 23970  0579  3002               	movlw	2
 23971  057A  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 23972  057B  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 23973  057C  00ED               	movwf	TCP_FiniteStateMachine@nextState^(0+128)
 23974  057D                     l7810:
 23975                           
 23976                           ;tcpv4.c: 1128: ret = 1;
 23977  057D  01E9               	clrf	TCP_FiniteStateMachine@ret^(0+128)
 23978  057E  0AE9               	incf	TCP_FiniteStateMachine@ret^(0+128),f
 23979                           
 23980                           ;tcpv4.c: 1129: break;
 23981  057F  2DCC               	goto	l7826
 23982  0580                     l7812:
 23983                           
 23984                           ;tcpv4.c: 1131: currentTCB->destIP = 0;
 23985  0580  0022               	movlb	2	; select bank2
 23986  0581  086E               	movf	_currentTCB^(0+256),w
 23987  0582  3E02               	addlw	2
 23988  0583  0086               	movwf	6
 23989  0584  3002               	movlw	2	; select bank4/5
 23990  0585  0087               	movwf	7
 23991  0586  3000               	movlw	0
 23992  0587  3FC0               	movwi [0]fsr1
 23993  0588  3000               	movlw	0
 23994  0589  3FC1               	movwi [1]fsr1
 23995  058A  3FC2               	movwi [2]fsr1
 23996  058B  3FC3               	movwi [3]fsr1
 23997                           
 23998                           ;tcpv4.c: 1132: currentTCB->destPort = 0;
 23999  058C  086E               	movf	_currentTCB^(0+256),w
 24000  058D  3E06               	addlw	6
 24001  058E  0086               	movwf	6
 24002  058F  3002               	movlw	2	; select bank4/5
 24003  0590  0087               	movwf	7
 24004  0591  3000               	movlw	0
 24005  0592  3FC0               	movwi [0]fsr1
 24006  0593  3FC1               	movwi [1]fsr1
 24007                           
 24008                           ;tcpv4.c: 1133: nextState = LISTEN;
 24009  0594  0021               	movlb	1	; select bank1
 24010  0595  01ED               	clrf	TCP_FiniteStateMachine@nextState^(0+128)
 24011  0596  0AED               	incf	TCP_FiniteStateMachine@nextState^(0+128),f
 24012  0597  2D7D               	goto	l7810
 24013  0598                     l7820:
 24014  0598  0021               	movlb	1	; select bank1
 24015  0599  086C               	movf	TCP_FiniteStateMachine@event^(0+128),w
 24016                           
 24017                           ; Switch size 1, requested type "simple"
 24018                           ; Number of cases is 2, Range of values is 1 to 2
 24019                           ; switch strategies available:
 24020                           ; Name         Instructions Cycles
 24021                           ; simple_byte            7     4 (average)
 24022                           ; direct_byte           13     9 (fixed)
 24023                           ; jumptable            263     9 (fixed)
 24024                           ;	Chosen strategy is simple_byte
 24025  059A  3A01               	xorlw	1	; case 1
 24026  059B  1903               	skipnz
 24027  059C  2D4A               	goto	l7804
 24028  059D  3A03               	xorlw	3	; case 2
 24029  059E  1903               	skipnz
 24030  059F  2D80               	goto	l7812
 24031  05A0  2DCC               	goto	l7826
 24032  05A1                     l7824:
 24033  05A1  0022               	movlb	2	; select bank2
 24034  05A2  086E               	movf	_currentTCB^(0+256),w
 24035  05A3  3E29               	addlw	41
 24036  05A4  0086               	movwf	6
 24037  05A5  3002               	movlw	2	; select bank4/5
 24038  05A6  0087               	movwf	7
 24039  05A7  0801               	movf	1,w
 24040                           
 24041                           ; Switch size 1, requested type "simple"
 24042                           ; Number of cases is 11, Range of values is 0 to 10
 24043                           ; switch strategies available:
 24044                           ; Name         Instructions Cycles
 24045                           ; direct_byte           28     6 (fixed)
 24046                           ; simple_byte           34    18 (average)
 24047                           ; jumptable            260     6 (fixed)
 24048                           ;	Chosen strategy is simple_byte
 24049  05A8  3A00               	xorlw	0	; case 0
 24050  05A9  1903               	skipnz
 24051  05AA  2D98               	goto	l7820
 24052  05AB  3A01               	xorlw	1	; case 1
 24053  05AC  318B  1903         	skipnz
 24054  05AE  2B88  3180         	goto	l7514
 24055  05B0  3A03               	xorlw	3	; case 2
 24056  05B1  1903               	skipnz
 24057  05B2  2DE7               	goto	L16
 24058  05B3  3A01               	xorlw	1	; case 3
 24059  05B4  1903               	skipnz
 24060  05B5  29AB               	goto	l7646
 24061  05B6  3A07               	xorlw	7	; case 4
 24062  05B7  1903               	skipnz
 24063  05B8  2BFE               	goto	l7716
 24064  05B9  3A01               	xorlw	1	; case 5
 24065  05BA  1903               	skipnz
 24066  05BB  2C80               	goto	l7748
 24067  05BC  3A03               	xorlw	3	; case 6
 24068  05BD  1903               	skipnz
 24069  05BE  2CB9               	goto	l7768
 24070  05BF  3A01               	xorlw	1	; case 7
 24071  05C0  1903               	skipnz
 24072  05C1  2DCC               	goto	l7826
 24073  05C2  3A0F               	xorlw	15	; case 8
 24074  05C3  1903               	skipnz
 24075  05C4  2CC2               	goto	l7774
 24076  05C5  3A01               	xorlw	1	; case 9
 24077  05C6  1903               	skipnz
 24078  05C7  2D36               	goto	l7798
 24079  05C8  3A03               	xorlw	3	; case 10
 24080  05C9  1903               	skipnz
 24081  05CA  2D42               	goto	l7800
 24082  05CB  2DCC               	goto	l7826
 24083  05CC                     l7826:
 24084                           
 24085                           ;tcpv4.c: 1143: currentTCB->connectionEvent = NOP;
 24086  05CC  300D               	movlw	13
 24087  05CD  0021               	movlb	1	; select bank1
 24088  05CE  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 24089  05CF  0022               	movlb	2	; select bank2
 24090  05D0  086E               	movf	_currentTCB^(0+256),w
 24091  05D1  3E2A               	addlw	42
 24092  05D2  0086               	movwf	6
 24093  05D3  3002               	movlw	2	; select bank4/5
 24094  05D4  0087               	movwf	7
 24095  05D5  0021               	movlb	1	; select bank1
 24096  05D6  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 24097  05D7  0081               	movwf	1
 24098                           
 24099                           ;tcpv4.c: 1144: currentTCB->fsmState = nextState;
 24100  05D8  086D               	movf	TCP_FiniteStateMachine@nextState^(0+128),w
 24101  05D9  00E0               	movwf	??_TCP_FiniteStateMachine^(0+128)
 24102  05DA  0022               	movlb	2	; select bank2
 24103  05DB  086E               	movf	_currentTCB^(0+256),w
 24104  05DC  3E29               	addlw	41
 24105  05DD  0086               	movwf	6
 24106  05DE  3002               	movlw	2	; select bank4/5
 24107  05DF  0087               	movwf	7
 24108  05E0  0021               	movlb	1	; select bank1
 24109  05E1  0860               	movf	??_TCP_FiniteStateMachine^(0+128),w
 24110  05E2  0081               	movwf	1
 24111                           
 24112                           ;tcpv4.c: 1145: return ret;
 24113  05E3  0869               	movf	TCP_FiniteStateMachine@ret^(0+128),w
 24114  05E4  0008               	return
 24115  05E5                     L14:
 24116  05E5                     __end_of_TCP_FiniteStateMachine:
 24117  05E5  318E  2E9F         	ljmp	l7592
 24118  05E7                     L16:
 24119  05E7                     L15:
 24120  05E7  318E  2E87         	ljmp	l7590

Data Sizes:
    Strings     79
    Constant    40
    Data        4
    BSS         350
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     78      80
    BANK3            80      4      79
    BANK4            80      0      78
    BANK5            80      0      73
    BANK6            80      0      50
    BANK7            80      0      80
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24            8      0       0
    BANK25            0      0       0

Pointer List with Targets:

    TCP_SocketRemove@tcbPtr.prevTCB	PTR void  size(1) Largest target is 52
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SocketRemove@tcbPtr.nextTCB	PTR void  size(1) Largest target is 52
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SocketRemove@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SocketRemove@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SocketRemove@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SocketRemove@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Check@ptr.prevTCB	PTR void  size(1) Largest target is 52
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Check@ptr.nextTCB	PTR void  size(1) Largest target is 52
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Check@ptr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Check@ptr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    F7488.nextTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    F7488.nextTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    F7488.nextTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    F7488.nextTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    F7488.nextTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    F7488.nextTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    F7488.prevTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    F7488.prevTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    F7488.prevTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    F7488.prevTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    F7488.prevTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    F7488.prevTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[10]), STR_1(CODE[29]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 4
		 -> printf@pb(COMMON[3]), 

    __builtin_memcpy$1	PTR const void  size(1) Largest target is 6
		 -> hostMacAddress(BANK5[6]), 

    __builtin_memcpy$0	PTR void  size(1) Largest target is 28
		 -> ARPV4_Request@header(BANK0[28]), header.sha(BANK0[6]), ARPV4_Packet@header(BANK0[28]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 2
		 -> STR_4(CODE[2]), STR_3(CODE[2]), NULL(NULL[0]), 

    strtok@sp	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), 

    S4061__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> putch(), 

    S4061__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[26]), STR_5(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), makeIpv4AddresstoStr@ip_str(BANK5[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    F7488.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    F7488.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    F7488.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    F7488.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    F7488.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    F7488.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    ETH_GetMAC@macAddr	PTR unsigned char  size(1) Largest target is 6
		 -> hostMacAddress(BANK5[6]), 

    ETH_Insert@data	PTR unsigned char  size(1) Largest target is 2
		 -> ICMP_PortUnreachable@cksm(COMMON[2]), ICMP_EchoReply@cksm(BANK1[2]), IPV4_Send@cksm(BANK0[2]), IPV4_Send@totalLength(BANK0[2]), 
		 -> TCP_Snd@cksm(BANK1[2]), 

    ETH_WriteStart@dest_mac	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BIGRAM[6]), broadcastMAC(CODE[6]), header.sha(BANK0[6]), ARPV4_Packet@header(BANK0[28]), 
		 -> arpMap(BIGRAM[104]), NULL(NULL[0]), 

    ETH_WriteBlock@data	PTR const void  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), TCP_Snd@txHeader(BANK1[20]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> NULL(NULL[0]), 

    ETH_WriteBlock@p	PTR unsigned char  size(2) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), TCP_Snd@txHeader(BANK1[20]), ARPV4_Request@header(BANK0[28]), ARPV4_Packet@header(BANK0[28]), 
		 -> NULL(NULL[0]), 

    ETH_ReadBlock@buffer	PTR void  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), ICMP_Receive@icmpHdr(BANK1[4]), ipv4Header(BANK3[20]), Network_Read@header(BANK2[14]), 
		 -> tcpHeader(BANK3[20]), ARPV4_Packet@header(BANK0[28]), NULL(NULL[0]), 

    ETH_ReadBlock@p	PTR unsigned char  size(2) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), ICMP_Receive@icmpHdr(BANK1[4]), ipv4Header(BANK3[20]), Network_Read@header(BANK2[14]), 
		 -> tcpHeader(BANK3[20]), ARPV4_Packet@header(BANK0[28]), NULL(NULL[0]), 

    eth_MAC	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), NULL(NULL[0]), 

    sp__MAC_getAddress	PTR const struct . size(2) Largest target is 6
		 -> macAddress(CODE[6]), 

    ICMP_EchoReply@ipv4Hdr	PTR struct . size(1) Largest target is 20
		 -> ipv4Header(BANK3[20]), 

    ICMP_Receive@ipv4Hdr	PTR struct . size(1) Largest target is 20
		 -> ipv4Header(BANK3[20]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(1) Largest target is 0

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    IPv4_Start@macAddress	PTR const struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BIGRAM[6]), broadcastMAC(CODE[6]), arpMap(BIGRAM[104]), NULL(NULL[0]), 

    IPV4_PseudoHeaderChecksum@v	PTR unsigned int  size(1) Largest target is 12
		 -> IPV4_PseudoHeaderChecksum@tmp(BANK0[12]), 

    sp__makeIpv4AddresstoStr	PTR unsigned char  size(1) Largest target is 15
		 -> makeIpv4AddresstoStr@ip_str(BANK5[15]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    time@t	PTR long  size(2) Largest target is 4
		 -> DEMO_TCP_Client@t_client(BANK3[4]), Network_Manage@now(BANK3[4]), arpTimer(BANK4[4]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Update@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Update@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_GetRxLength@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_GetReceivedData@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_InsertRxBuffer@data	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), 

    TCP_InsertRxBuffer@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_InsertRxBuffer@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_SendDone@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SendDone@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_Send@data	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), 

    TCP_Send@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Send@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Send@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_Close@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Close@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Close@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_Connect@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Connect@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Connect@srvaddr	PTR struct . size(1) Largest target is 6
		 -> remoteSocket(BANK4[6]), 

    TCP_Connect@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_Listen@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Listen@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Bind@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SocketPoll@socket_ptr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_SocketRemove@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_SocketInit@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_SocketInit@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCP_Recv@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Recv@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    currentTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    currentTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    currentTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    currentTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    currentTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    currentTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    currentTCB	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Snd@data	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCP_Snd@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Check@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Check@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Check@ptr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCB_Reset@tcbPtr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Reset@tcbPtr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Remove@ptr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Remove@ptr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    TCB_Insert@ptr.nextTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Insert@ptr.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Insert@ptr.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    tcbList.prevTCB.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    tcbList.prevTCB.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    tcbList.prevTCB.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    tcbList.prevTCB.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    S356$prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    tcbList.prevTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    S356$nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    tcbList.nextTCB	PTR void  size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    S356$txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    tcbList.txBufferPtr	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    S356$txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    tcbList.txBufferStart	PTR unsigned char  size(1) Largest target is 80
		 -> DEMO_TCP_Client@txdataPort60(BANK7[80]), NULL(NULL[0]), 

    S356$rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    tcbList.rxBufferPtr	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    S356$rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    tcbList.rxBufferStart	PTR unsigned char  size(1) Largest target is 50
		 -> DEMO_TCP_Client@rxdataPort60(BANK6[50]), NULL(NULL[0]), 

    TCB_Insert@ptr	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), 

    tcbList	PTR struct . size(1) Largest target is 58
		 -> DEMO_TCP_Client@port60TCB(BANK5[52]), NULL(NULL[0]), 

    sp__ARPV4_Lookup	PTR struct . size(2) Largest target is 104
		 -> arpMap.macAddress(BIGRAM[6]), arpMap(BIGRAM[104]), NULL(NULL[0]), 

    ARPV4_Lookup@entry_pointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BIGRAM[104]), 

    ARPV4_Update@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BIGRAM[104]), 

    sp____builtin_memcpy	PTR void  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    ARPV4_Packet@arpPtr	PTR struct . size(2) Largest target is 104
		 -> arpMap(BIGRAM[104]), 

    ARPV4_Packet@entryPointer	PTR struct . size(2) Largest target is 104
		 -> arpMap(BIGRAM[104]), 


Critical Paths under _main in COMMON

    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _timersInit->_time
    _rtcc_init->_TMR1_SetInterruptHandler
    _IPV4_Init->_ipdb_init
    _ETH_Init->_ENC28_Wcr16
    _ETH_SendSystemReset->_SPI1_Exchange8bit
    _ENC28_PhyWrite->_ENC28_Wcr16
    _ARPV4_Init->_ETH_GetMAC
    _ETH_GetMAC->_ENC28_Rcr8
    _IPV4_SaveStartPosition->_ETH_GetReadPtr
    _ETH_GetReadPtr->_ENC28_Rcr16
    _ETH_Read16->_SPI1_Exchange8bit
    _ETH_Copy->_ENC28_Wcr16
    _ETH_Dump->_ENC28_Wcr16
    _ETH_RxComputeChecksum->_ENC28_Wcr16
    _ETH_ComputeChecksum->_ETH_Read8
    _ETH_Read8->_SPI1_Exchange8bit
    _ETH_NextPacketUpdate->_ENC28_Wcr16
    _ETH_Flush->_ENC28_Wcr16
    _ETH_EventHandler->_ENC28_Wcr16
    _ETH_CheckLinkUp->_ENC28_PhyRead
    _ENC28_PhyRead->_ENC28_Rcr16
    _ENC28_Wcr8->_ENC28_BankSel
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _TCP_SocketRemove->_TCP_SocketPoll
    _TCP_SocketInit->_TCB_Check
    _TCP_SendDone->_TCB_Check
    _TCP_InsertRxBuffer->_TCB_Check
    _TCP_GetReceivedData->_TCB_Check
    _TCP_SocketPoll->_TCB_Check
    _ETH_Write8->_SPI1_Exchange8bit
    _ETH_Write32->_SPI1_Exchange8bit
    _ETH_Write16->_SPI1_Exchange8bit
    _ETH_WriteStart->_ENC28_Wcr16
    _ETH_WriteBlock->_SPI1_Exchange8bit
    _ETH_TxComputeChecksum->_ENC28_Wcr16
    _ENC28_Rcr8->_ENC28_BankSel
    _ENC28_Bfc->_ENC28_BankSel
    _ETH_Send->_ENC28_Wcr16
    _ENC28_Bfs->_ENC28_BankSel
    _ETH_Insert->_ENC28_Wcr16
    _ENC28_Wcr16->_ENC28_Rcr16
    _ENC28_Rcr16->_ENC28_BankSel
    _ENC28_BankSel->_SPI1_Exchange8bit
    _ETH_ReadBlock->_SPI1_Exchange8bit

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Network_Manage
    _Network_Init->_ETH_Init
    _Network_WaitForLink->_ETH_CheckLinkUp
    _ETH_Init->_ENC28_PhyWrite
    _TCP_ParseTCPOptions->_ETH_Dump
    _ICMP_EchoReply->_IPv4_Start
    _ETH_RxComputeChecksum->_ETH_ComputeChecksum
    _ARPV4_Packet->_ETH_WriteStart
    _ETH_EventHandler->_ETH_CheckLinkUp
    _DEMO_TCP_Client->_TCP_Close
    _DEMO_TCP_Client->_TCP_Send
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_Snd->_IPv4_Start
    _IPv4_Start->_ARPV4_Request
    _ARPV4_Request->_ETH_WriteStart
    _IPV4_Send->_ETH_TxComputeChecksum

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _TCP_Update->_TCP_FiniteStateMachine
    _IPV4_Packet->_TCP_Recv
    _TCP_Recv->_TCP_FiniteStateMachine
    _ICMP_Receive->_ICMP_EchoReply
    _DEMO_TCP_Client->_TCP_Close
    _TCP_Send->_TCP_Snd
    _TCP_Connect->_TCP_FiniteStateMachine
    _TCP_Close->_TCP_FiniteStateMachine
    _TCP_FiniteStateMachine->_TCP_PayloadSave
    _TCP_PayloadSave->_TCP_Snd

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _Network_Manage->_Network_Read
    _Network_Read->_IPV4_Packet
    _IPV4_Packet->_TCP_Recv
    _DEMO_TCP_Client->_TCP_Connect

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_Network_Manage

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  546788
                    _DEMO_TCP_Client
                     _Network_Manage
                  _SYSTEM_Initialize
              _TCP_Client_Initialize
 ---------------------------------------------------------------------------------
 (1) _TCP_Client_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   20380
                     _ADC_Initialize
                       _Network_Init
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI1_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     122
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Network_Init                                         0     0      0   20243
                         _ARPV4_Init
                           _ETH_Init
                          _IPV4_Init
                _Network_WaitForLink
                           _TCP_Init
                          _rtcc_init
                         _timersInit
 ---------------------------------------------------------------------------------
 (3) _timersInit                                           0     0      0     353
                               _time
 ---------------------------------------------------------------------------------
 (3) _rtcc_init                                            0     0      0     122
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             3     3      0     122
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _TCP_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Network_WaitForLink                                  0     0      0    3831
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (3) _IPV4_Init                                            0     0      0      68
                          _ipdb_init
 ---------------------------------------------------------------------------------
 (4) _ipdb_init                                            2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ETH_Init                                             3     3      0   15408
                                              5 BANK0      3     3      0
                          _ENC28_Bfs
                     _ENC28_PhyWrite
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                         _ENC28_Wcr8
                    _ETH_CheckLinkUp
                _ETH_SendSystemReset
                     _MAC_getAddress
 ---------------------------------------------------------------------------------
 (4) _MAC_getAddress                                       2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _ETH_SendSystemReset                                  0     0      0      22
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _ENC28_PhyWrite                                       5     3      2    5549
                                              0 BANK0      5     3      2
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                         _ENC28_Wcr8
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Init                                           2     2      0     461
                                              9 COMMON     2     2      0
                         _ETH_GetMAC
 ---------------------------------------------------------------------------------
 (4) _ETH_GetMAC                                           2     2      0     393
                                              7 COMMON     2     2      0
                         _ENC28_Rcr8
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Network_Manage                                       5     5      0  286026
                                             79 BANK0      1     1      0
                                              0 BANK3      4     4      0
                       _ARPV4_Update
                   _ETH_EventHandler
                       _Network_Read
                         _TCP_Update
                               _time
 ---------------------------------------------------------------------------------
 (2) _TCP_Update                                           7     7      0   92837
                                              0 BANK2      7     7      0
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (2) _Network_Read                                       101   101      0  181816
                                             57 BANK2     21    21      0
                       _ARPV4_Packet
                          _ETH_Flush
               _ETH_NextPacketUpdate
                      _ETH_ReadBlock
                        _IPV4_Packet
 ---------------------------------------------------------------------------------
 (3) _IPV4_Packet                                         67    67      0  162406
                                             30 BANK2     27    27      0
                           _ETH_Dump
                      _ETH_ReadBlock
              _ETH_RxComputeChecksum
                       _ICMP_Receive
          _IPV4_PseudoHeaderChecksum
             _IPV4_SaveStartPosition
                           _TCP_Recv
 ---------------------------------------------------------------------------------
 (4) _TCP_Recv                                            32    26      6   98349
                                             78 BANK1      2     2      0
                                              0 BANK2     30    24      6
                      _ETH_ReadBlock
             _TCP_FiniteStateMachine
                _TCP_ParseTCPOptions
 ---------------------------------------------------------------------------------
 (5) _TCP_ParseTCPOptions                                  6     6      0    4416
                                              4 BANK0      6     6      0
                           _ETH_Dump
                         _ETH_Read16
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (4) _IPV4_SaveStartPosition                               0     0      0     269
                     _ETH_GetReadPtr
 ---------------------------------------------------------------------------------
 (5) _ETH_GetReadPtr                                       2     0      2     269
                                             10 COMMON     2     0      2
                        _ENC28_Rcr16
 ---------------------------------------------------------------------------------
 (4) _IPV4_PseudoHeaderChecksum                           28    26      2     359
                                              0 COMMON    10     8      2
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (4) _ICMP_Receive                                        11    11      0   53295
                                             16 BANK1     11    11      0
                           _ETH_Dump
                         _ETH_Read16
                      _ETH_ReadBlock
                     _ICMP_EchoReply
 ---------------------------------------------------------------------------------
 (5) _ICMP_EchoReply                                      16    16      0   47882
                                              0 BANK1     16    16      0
                           _ETH_Copy
                         _ETH_Insert
                         _ETH_Read16
              _ETH_TxComputeChecksum
                        _ETH_Write16
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (6) _ETH_Read16                                           7     5      2      46
                                              1 COMMON     7     5      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ETH_Copy                                             9     7      2    5736
                                              0 BANK0      9     7      2
                          _ENC28_Bfc
                          _ENC28_Bfs
                        _ENC28_Rcr16
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     370
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _ETH_Dump                                             4     2      2    3928
                                              0 BANK0      4     2      2
                        _ENC28_Rcr16
                        _ENC28_Wcr16
 ---------------------------------------------------------------------------------
 (4) _ETH_RxComputeChecksum                               15    11      4    4405
                                              8 BANK0     15    11      4
                        _ENC28_Rcr16
                        _ENC28_Wcr16
                _ETH_ComputeChecksum
 ---------------------------------------------------------------------------------
 (5) _ETH_ComputeChecksum                                 18    14      4     477
                                              3 COMMON    10     6      4
                                              0 BANK0      8     8      0
                          _ETH_Read8
 ---------------------------------------------------------------------------------
 (6) _ETH_Read8                                            2     2      0      45
                                              1 COMMON     2     2      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _ETH_NextPacketUpdate                                 1     1      0    3112
                                              0 BANK0      1     1      0
                        _ENC28_Wcr16
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (3) _ETH_Flush                                            1     1      0    3843
                                              0 BANK0      1     1      0
                          _ENC28_Bfs
                        _ENC28_Wcr16
 ---------------------------------------------------------------------------------
 (3) _ARPV4_Packet                                        62    62      0   11112
                                              6 BANK0     62    62      0
                      _ETH_ReadBlock
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (2) _ETH_EventHandler                                     5     5      0   10820
                                              2 BANK0      5     5      0
                          _ENC28_Bfc
                          _ENC28_Bfs
                        _ENC28_Rcr16
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                         _ENC28_Wcr8
                    _ETH_CheckLinkUp
 ---------------------------------------------------------------------------------
 (4) _ETH_CheckLinkUp                                      2     2      0    3831
                                              0 BANK0      2     2      0
                      _ENC28_PhyRead
 ---------------------------------------------------------------------------------
 (5) _ENC28_PhyRead                                        4     2      2    3808
                                             10 COMMON     4     2      2
                          _ENC28_Bfc
                          _ENC28_Bfs
                        _ENC28_Rcr16
                         _ENC28_Rcr8
                         _ENC28_Wcr8
 ---------------------------------------------------------------------------------
 (6) _ENC28_Wcr8                                           2     1      1    1941
                                              4 COMMON     2     1      1
                      _ENC28_BankSel
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (2) _ARPV4_Update                                         4     4      0      70
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _DEMO_TCP_Client                                     24    24      0  240382
                                              6 BANK2      7     7      0
                  _ADC_GetConversion
                          _TCP_Close
                        _TCP_Connect
                _TCP_GetReceivedData
                 _TCP_InsertRxBuffer
                           _TCP_Send
                       _TCP_SendDone
                     _TCP_SocketInit
                     _TCP_SocketPoll
                   _TCP_SocketRemove
                            _sprintf
                             _strlen
                               _time
 ---------------------------------------------------------------------------------
 (4) _time                                                 9     5      4     353
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             26    18      8    1434
                                              0 BANK0     18    10      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     437
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketRemove                                     2     2      0     929
                                              8 COMMON     2     2      0
                         _TCB_Remove
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (3) _TCB_Remove                                           2     2      0     187
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TCP_SocketInit                                       3     3      0    1796
                                              5 COMMON     3     3      0
                          _TCB_Check
                         _TCB_Insert
                          _TCB_Reset
 ---------------------------------------------------------------------------------
 (3) _TCB_Insert                                           2     2      0     121
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TCP_SendDone                                         2     2      0     558
                                              5 COMMON     2     2      0
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Send                                             6     3      3   46108
                                             77 BANK0      3     3      0
                                             53 BANK1      3     0      3
                            _TCP_Snd
                     _TCP_SocketPoll
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _TCP_InsertRxBuffer                                   6     3      3    1055
                                              5 COMMON     6     3      3
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_GetReceivedData                                  6     3      3     668
                                              5 COMMON     6     3      3
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Connect                                          7     6      1   93525
                                             78 BANK1      1     0      1
                                              0 BANK2      6     6      0
             _TCP_FiniteStateMachine
                     _TCP_SocketPoll
 ---------------------------------------------------------------------------------
 (3) _TCP_SocketPoll                                       3     3      0     657
                                              5 COMMON     3     3      0
                          _TCB_Check
 ---------------------------------------------------------------------------------
 (2) _TCP_Close                                            3     3      0   92987
                                             79 BANK0      1     1      0
                                             78 BANK1      2     2      0
                          _TCB_Check
             _TCP_FiniteStateMachine
 ---------------------------------------------------------------------------------
 (3) _TCP_FiniteStateMachine                              14    14      0   92357
                                             64 BANK1     14    14      0
                          _TCB_Reset
                    _TCP_PayloadSave
                            _TCP_Snd
                  _isPortUnreachable
               _resetPortUnreachable
 ---------------------------------------------------------------------------------
 (4) _resetPortUnreachable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _isPortUnreachable                                    2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _TCP_PayloadSave                                     13    11      2   46185
                                             77 BANK0      2     0      2
                                             53 BANK1     11    11      0
                      _ETH_ReadBlock
                            _TCP_Snd
 ---------------------------------------------------------------------------------
 (4) _TCP_Snd                                             53    53      0   44726
                                              0 BANK1     53    53      0
                         _ETH_Insert
              _ETH_TxComputeChecksum
                     _ETH_WriteBlock
                          _IPV4_Send
                         _IPv4_Start
 ---------------------------------------------------------------------------------
 (5) _IPv4_Start                                          20    15      5   15732
                                             57 BANK0     20    15      5
                       _ARPV4_Lookup
                      _ARPV4_Request
                        _ETH_Write16
                        _ETH_Write32
                         _ETH_Write8
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_Write8                                           1     1      0      44
                                              1 COMMON     1     1      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ETH_Write32                                          4     0      4     404
                                              1 COMMON     4     0      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ETH_Write16                                          2     0      2     725
                                              1 COMMON     2     0      2
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Request                                       51    47      4    9323
                                              6 BANK0     51    47      4
                           _ETH_Send
                     _ETH_WriteBlock
                     _ETH_WriteStart
 ---------------------------------------------------------------------------------
 (6) _ETH_WriteStart                                       6     2      4    3967
                                              0 BANK0      6     2      4
                         _ENC28_Rcr8
                        _ENC28_Wcr16
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _ETH_WriteBlock                                       6     2      4     679
                                              1 COMMON     6     2      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ARPV4_Lookup                                        11     7      4     190
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (5) _IPV4_Send                                           10     8      2   14650
                                             19 BANK0     10     8      2
                         _ETH_Insert
                           _ETH_Send
              _ETH_TxComputeChecksum
 ---------------------------------------------------------------------------------
 (6) _ETH_TxComputeChecksum                               19    13      6    6081
                                              0 BANK0     19    13      6
                          _ENC28_Bfc
                          _ENC28_Bfs
                        _ENC28_Rcr16
                         _ENC28_Rcr8
                        _ENC28_Wcr16
 ---------------------------------------------------------------------------------
 (6) _ENC28_Rcr8                                           3     3      0     222
                                              4 COMMON     3     3      0
                      _ENC28_BankSel
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ENC28_Bfc                                            2     1      1     601
                                              4 COMMON     2     1      1
                      _ENC28_BankSel
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _ETH_Send                                             1     1      0    3843
                                              0 BANK0      1     1      0
                          _ENC28_Bfs
                        _ENC28_Wcr16
 ---------------------------------------------------------------------------------
 (6) _ENC28_Bfs                                            2     1      1     753
                                              4 COMMON     2     1      1
                      _ENC28_BankSel
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ETH_Insert                                           8     4      4    4372
                                              0 BANK0      8     4      4
                        _ENC28_Rcr16
                        _ENC28_Wcr16
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (4) _ENC28_Wcr16                                          4     2      2    3090
                                             10 COMMON     4     2      2
                      _ENC28_BankSel
                        _ENC28_Rcr16 (ARG)
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (6) _ENC28_Rcr16                                          6     4      2     269
                                              4 COMMON     6     4      2
                      _ENC28_BankSel
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _ENC28_BankSel                                        3     3      0     133
                                              1 COMMON     3     3      0
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (5) _ETH_ReadBlock                                        9     5      4    1164
                                              1 COMMON     9     5      4
                  _SPI1_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI1_Exchange8bit                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _TCB_Reset                                            2     2      0     825
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _TCB_Check                                            5     5      0     457
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR1_ISR                                            0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (16) _TMR1_CallBack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DEMO_TCP_Client
     _ADC_GetConversion
     _TCP_Close
       _TCB_Check
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI1_Exchange8bit
           _TCP_Snd
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_WriteBlock
               _SPI1_Exchange8bit
             _IPV4_Send
               _ETH_Insert
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_TxComputeChecksum
                 _ENC28_Bfc
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                 _ETH_WriteBlock
                   _SPI1_Exchange8bit
                 _ETH_WriteStart
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
               _ETH_Write16
                 _SPI1_Exchange8bit
               _ETH_Write32
                 _SPI1_Exchange8bit
               _ETH_Write8
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
         _TCP_Snd
           _ETH_Insert
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
             _SPI1_Exchange8bit
           _ETH_TxComputeChecksum
             _ENC28_Bfc
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
           _ETH_WriteBlock
             _SPI1_Exchange8bit
           _IPV4_Send
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_Send
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_WriteBlock
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
             _ETH_Write16
               _SPI1_Exchange8bit
             _ETH_Write32
               _SPI1_Exchange8bit
             _ETH_Write8
               _SPI1_Exchange8bit
             _ETH_WriteStart
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
         _isPortUnreachable
         _resetPortUnreachable
     _TCP_Connect
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI1_Exchange8bit
           _TCP_Snd
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_WriteBlock
               _SPI1_Exchange8bit
             _IPV4_Send
               _ETH_Insert
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_TxComputeChecksum
                 _ENC28_Bfc
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                 _ETH_WriteBlock
                   _SPI1_Exchange8bit
                 _ETH_WriteStart
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
               _ETH_Write16
                 _SPI1_Exchange8bit
               _ETH_Write32
                 _SPI1_Exchange8bit
               _ETH_Write8
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
         _TCP_Snd
           _ETH_Insert
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
             _SPI1_Exchange8bit
           _ETH_TxComputeChecksum
             _ENC28_Bfc
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
           _ETH_WriteBlock
             _SPI1_Exchange8bit
           _IPV4_Send
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_Send
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_WriteBlock
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
             _ETH_Write16
               _SPI1_Exchange8bit
             _ETH_Write32
               _SPI1_Exchange8bit
             _ETH_Write8
               _SPI1_Exchange8bit
             _ETH_WriteStart
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
         _isPortUnreachable
         _resetPortUnreachable
       _TCP_SocketPoll
         _TCB_Check
     _TCP_GetReceivedData
       _TCB_Check
     _TCP_InsertRxBuffer
       _TCB_Check
     _TCP_Send
       _TCP_Snd
         _ETH_Insert
           _ENC28_Rcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
           _SPI1_Exchange8bit
         _ETH_TxComputeChecksum
           _ENC28_Bfc
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Bfs
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Rcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Rcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
         _ETH_WriteBlock
           _SPI1_Exchange8bit
         _IPV4_Send
           _ETH_Insert
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
             _SPI1_Exchange8bit
           _ETH_Send
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
           _ETH_TxComputeChecksum
             _ENC28_Bfc
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
         _IPv4_Start
           _ARPV4_Lookup
           _ARPV4_Request
             _ETH_Send
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_WriteBlock
               _SPI1_Exchange8bit
             _ETH_WriteStart
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
           _ETH_Write16
             _SPI1_Exchange8bit
           _ETH_Write32
             _SPI1_Exchange8bit
           _ETH_Write8
             _SPI1_Exchange8bit
           _ETH_WriteStart
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
             _SPI1_Exchange8bit
       _TCP_SocketPoll
         _TCB_Check
       _strlen (ARG)
     _TCP_SendDone
       _TCB_Check
     _TCP_SocketInit
       _TCB_Check
       _TCB_Insert
       _TCB_Reset
     _TCP_SocketPoll
       _TCB_Check
     _TCP_SocketRemove
       _TCB_Remove
       _TCP_SocketPoll
         _TCB_Check
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _strlen
     _time
   _Network_Manage
     _ARPV4_Update
     _ETH_EventHandler
       _ENC28_Bfc
         _ENC28_BankSel
           _SPI1_Exchange8bit
         _SPI1_Exchange8bit
       _ENC28_Bfs
         _ENC28_BankSel
           _SPI1_Exchange8bit
         _SPI1_Exchange8bit
       _ENC28_Rcr16
         _ENC28_BankSel
           _SPI1_Exchange8bit
         _SPI1_Exchange8bit
       _ENC28_Rcr8
         _ENC28_BankSel
           _SPI1_Exchange8bit
         _SPI1_Exchange8bit
       _ENC28_Wcr16
         _ENC28_BankSel
           _SPI1_Exchange8bit
         _ENC28_Rcr16 (ARG)
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit
         _SPI1_Exchange8bit (ARG)
       _ENC28_Wcr8
         _ENC28_BankSel
           _SPI1_Exchange8bit
         _SPI1_Exchange8bit
       _ETH_CheckLinkUp
         _ENC28_PhyRead
           _ENC28_Bfc
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Bfs
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Rcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Rcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
     _Network_Read
       _ARPV4_Packet
         _ETH_ReadBlock
           _SPI1_Exchange8bit
         _ETH_Send
           _ENC28_Bfs
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
         _ETH_WriteBlock
           _SPI1_Exchange8bit
         _ETH_WriteStart
           _ENC28_Rcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
           _SPI1_Exchange8bit
       _ETH_Flush
         _ENC28_Bfs
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit
         _ENC28_Wcr16
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _ENC28_Rcr16 (ARG)
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit (ARG)
       _ETH_NextPacketUpdate
         _ENC28_Wcr16
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _ENC28_Rcr16 (ARG)
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit (ARG)
         _SPI1_Exchange8bit
       _ETH_ReadBlock
         _SPI1_Exchange8bit
       _IPV4_Packet
         _ETH_Dump
           _ENC28_Rcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
         _ETH_ReadBlock
           _SPI1_Exchange8bit
         _ETH_RxComputeChecksum
           _ENC28_Rcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
           _ETH_ComputeChecksum
             _ETH_Read8
               _SPI1_Exchange8bit
         _ICMP_Receive
           _ETH_Dump
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
           _ETH_Read16
             _SPI1_Exchange8bit
           _ETH_ReadBlock
             _SPI1_Exchange8bit
           _ICMP_EchoReply
             _ETH_Copy
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               ___wmul
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_Read16
               _SPI1_Exchange8bit
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_Write16
               _SPI1_Exchange8bit
             _IPV4_Send
               _ETH_Insert
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_TxComputeChecksum
                 _ENC28_Bfc
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                 _ETH_WriteBlock
                   _SPI1_Exchange8bit
                 _ETH_WriteStart
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
               _ETH_Write16
                 _SPI1_Exchange8bit
               _ETH_Write32
                 _SPI1_Exchange8bit
               _ETH_Write8
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
         _IPV4_PseudoHeaderChecksum
         _IPV4_SaveStartPosition
           _ETH_GetReadPtr
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
         _TCP_Recv
           _ETH_ReadBlock
             _SPI1_Exchange8bit
           _TCP_FiniteStateMachine
             _TCB_Reset
             _TCP_PayloadSave
               _ETH_ReadBlock
                 _SPI1_Exchange8bit
               _TCP_Snd
                 _ETH_Insert
                   _ENC28_Rcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
                 _ETH_TxComputeChecksum
                   _ENC28_Bfc
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                 _ETH_WriteBlock
                   _SPI1_Exchange8bit
                 _IPV4_Send
                   _ETH_Insert
                     _ENC28_Rcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Wcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _ENC28_Rcr16 (ARG)
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit (ARG)
                     _SPI1_Exchange8bit
                   _ETH_Send
                     _ENC28_Bfs
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Wcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _ENC28_Rcr16 (ARG)
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit (ARG)
                   _ETH_TxComputeChecksum
                     _ENC28_Bfc
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Bfs
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Rcr8
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Wcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _ENC28_Rcr16 (ARG)
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit (ARG)
                 _IPv4_Start
                   _ARPV4_Lookup
                   _ARPV4_Request
                     _ETH_Send
                       _ENC28_Bfs
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _ENC28_Wcr16
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _ENC28_Rcr16 (ARG)
                           _ENC28_BankSel
                             _SPI1_Exchange8bit
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit (ARG)
                     _ETH_WriteBlock
                       _SPI1_Exchange8bit
                     _ETH_WriteStart
                       _ENC28_Rcr8
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _ENC28_Wcr16
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _ENC28_Rcr16 (ARG)
                           _ENC28_BankSel
                             _SPI1_Exchange8bit
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit (ARG)
                       _SPI1_Exchange8bit
                   _ETH_Write16
                     _SPI1_Exchange8bit
                   _ETH_Write32
                     _SPI1_Exchange8bit
                   _ETH_Write8
                     _SPI1_Exchange8bit
                   _ETH_WriteStart
                     _ENC28_Rcr8
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Wcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _ENC28_Rcr16 (ARG)
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit (ARG)
                     _SPI1_Exchange8bit
             _TCP_Snd
               _ETH_Insert
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
               _ETH_TxComputeChecksum
                 _ENC28_Bfc
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_WriteBlock
                 _SPI1_Exchange8bit
               _IPV4_Send
                 _ETH_Insert
                   _ENC28_Rcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
                 _ETH_Send
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                 _ETH_TxComputeChecksum
                   _ENC28_Bfc
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
               _IPv4_Start
                 _ARPV4_Lookup
                 _ARPV4_Request
                   _ETH_Send
                     _ENC28_Bfs
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Wcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _ENC28_Rcr16 (ARG)
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit (ARG)
                   _ETH_WriteBlock
                     _SPI1_Exchange8bit
                   _ETH_WriteStart
                     _ENC28_Rcr8
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _ENC28_Wcr16
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _ENC28_Rcr16 (ARG)
                         _ENC28_BankSel
                           _SPI1_Exchange8bit
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit (ARG)
                     _SPI1_Exchange8bit
                 _ETH_Write16
                   _SPI1_Exchange8bit
                 _ETH_Write32
                   _SPI1_Exchange8bit
                 _ETH_Write8
                   _SPI1_Exchange8bit
                 _ETH_WriteStart
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
             _isPortUnreachable
             _resetPortUnreachable
           _TCP_ParseTCPOptions
             _ETH_Dump
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_Read16
               _SPI1_Exchange8bit
             _ETH_Read8
               _SPI1_Exchange8bit
     _TCP_Update
       _TCP_FiniteStateMachine
         _TCB_Reset
         _TCP_PayloadSave
           _ETH_ReadBlock
             _SPI1_Exchange8bit
           _TCP_Snd
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_WriteBlock
               _SPI1_Exchange8bit
             _IPV4_Send
               _ETH_Insert
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_TxComputeChecksum
                 _ENC28_Bfc
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
             _IPv4_Start
               _ARPV4_Lookup
               _ARPV4_Request
                 _ETH_Send
                   _ENC28_Bfs
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                 _ETH_WriteBlock
                   _SPI1_Exchange8bit
                 _ETH_WriteStart
                   _ENC28_Rcr8
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _ENC28_Wcr16
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _ENC28_Rcr16 (ARG)
                       _ENC28_BankSel
                         _SPI1_Exchange8bit
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit (ARG)
                   _SPI1_Exchange8bit
               _ETH_Write16
                 _SPI1_Exchange8bit
               _ETH_Write32
                 _SPI1_Exchange8bit
               _ETH_Write8
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
         _TCP_Snd
           _ETH_Insert
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
             _SPI1_Exchange8bit
           _ETH_TxComputeChecksum
             _ENC28_Bfc
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _ENC28_Rcr16 (ARG)
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit (ARG)
           _ETH_WriteBlock
             _SPI1_Exchange8bit
           _IPV4_Send
             _ETH_Insert
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
             _ETH_Send
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
             _ETH_TxComputeChecksum
               _ENC28_Bfc
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Bfs
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
           _IPv4_Start
             _ARPV4_Lookup
             _ARPV4_Request
               _ETH_Send
                 _ENC28_Bfs
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
               _ETH_WriteBlock
                 _SPI1_Exchange8bit
               _ETH_WriteStart
                 _ENC28_Rcr8
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _ENC28_Wcr16
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _ENC28_Rcr16 (ARG)
                     _ENC28_BankSel
                       _SPI1_Exchange8bit
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit (ARG)
                 _SPI1_Exchange8bit
             _ETH_Write16
               _SPI1_Exchange8bit
             _ETH_Write32
               _SPI1_Exchange8bit
             _ETH_Write8
               _SPI1_Exchange8bit
             _ETH_WriteStart
               _ENC28_Rcr8
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit
               _ENC28_Wcr16
                 _ENC28_BankSel
                   _SPI1_Exchange8bit
                 _ENC28_Rcr16 (ARG)
                   _ENC28_BankSel
                     _SPI1_Exchange8bit
                   _SPI1_Exchange8bit
                 _SPI1_Exchange8bit (ARG)
               _SPI1_Exchange8bit
         _isPortUnreachable
         _resetPortUnreachable
     _time
   _SYSTEM_Initialize
     _ADC_Initialize
     _Network_Init
       _ARPV4_Init
         _ETH_GetMAC
           _ENC28_Rcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
       _ETH_Init
         _ENC28_Bfs
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit
         _ENC28_PhyWrite
           _ENC28_Rcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _ENC28_Wcr16
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _ENC28_Rcr16 (ARG)
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit (ARG)
           _ENC28_Wcr8
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
         _ENC28_Rcr8
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit
         _ENC28_Wcr16
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _ENC28_Rcr16 (ARG)
             _ENC28_BankSel
               _SPI1_Exchange8bit
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit (ARG)
         _ENC28_Wcr8
           _ENC28_BankSel
             _SPI1_Exchange8bit
           _SPI1_Exchange8bit
         _ETH_CheckLinkUp
           _ENC28_PhyRead
             _ENC28_Bfc
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
         _ETH_SendSystemReset
           _SPI1_Exchange8bit
         _MAC_getAddress
       _IPV4_Init
         _ipdb_init
       _Network_WaitForLink
         _ETH_CheckLinkUp
           _ENC28_PhyRead
             _ENC28_Bfc
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Bfs
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr16
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Rcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
             _ENC28_Wcr8
               _ENC28_BankSel
                 _SPI1_Exchange8bit
               _SPI1_Exchange8bit
       _TCP_Init
       _rtcc_init
         _TMR1_SetInterruptHandler
       _timersInit
         _time
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI1_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
     _WDT_Initialize
   _TCP_Client_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4E      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4E      13       97.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     266      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      49      16       91.2%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      32      18       62.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     266      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               8      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug 18 23:24:43 2020

                       _SPI1_Exchange8bit 29A5             __size_of_resetPortUnreachable 0004  
                     IPV4_Packet@addrTemp 0155                        ?_SPI1_Exchange8bit 0070  
                                      l72 1E7F                            ENC28_PhyRead@a 007D  
                     ___wmul@multiplicand 0072                          ??_ICMP_EchoReply 00A0  
                      __size_of_ENC28_Bfc 0013                TCP_InsertRxBuffer@data_len 0076  
             ??_IPV4_PseudoHeaderChecksum 0072                        __size_of_ENC28_Bfs 0013  
                          ??_ICMP_Receive 00B0                                       l141 2CA2  
                                     l233 0917                                       l172 16A7  
                                     l173 16C1                                       l237 091F  
                                     l229 090F                                       l174 16DB  
                                     l168 1723                                       l444 07DE  
                                     l437 076A                                       l466 29AA  
                                     l909 2439                                       l969 2B1E  
                                     _GIE 005F                               ?_ETH_GetMAC 0070  
                      ICMP_EchoReply@cksm 00AA                   IPv4_Start@targetAddress 0066  
                         _timer1ReloadVal 01ED                       ??_SPI1_Exchange8bit 0070  
                             ?_ETH_Read16 0071                      TCP_Snd@tcpDataLength 00BE  
                   ??_ETH_ComputeChecksum 0020                                       wreg 0009  
                             ?_ETH_Insert 0020                       __size_of_ENC28_Rcr8 0016  
                     __size_of_ENC28_Wcr8 0013                               ?_ETH_Write8 0070  
               TCP_FiniteStateMachine@ret 00E9                           ?_Network_Manage 0070  
                                    l1071 1856                                      l1311 23BE  
                                    l1243 2D07                                      l1260 2BD1  
                                    l1318 25CB                                      l1195 2F77  
                                    l1189 2F54                                      l1293 267D  
                                    l1650 2B91                                      l1467 1D47  
                                    l5024 2E84                                      l5042 2560  
                                    l5018 2E62                                      l5036 252D  
                                    l5054 2588                                      l5056 25AF  
                                    l5400 2628                                      l6112 24EA  
                                    l5402 265D                                      l6114 2502  
                                    l5076 2F96                                      l5404 2653  
                                    l5078 2FB6                                      l6070 2A47  
                                    l5406 2664                                      l6304 2AA5  
                                    l5280 2B8B                                      l5440 2765  
                                    l6400 297F                                      l6410 21C3  
                                    l6170 2BF5                                      l6322 0602  
                                    l6082 2089                                      l5348 2E3C  
                                    l8022 1DB4                                      l8006 1D66  
                                    l5446 2773                                      l5438 275D  
                                    l4920 2BD5                                      l7312 1C08  
                                    l5376 29FA                                      l8016 1DAB  
                                    l5384 25E0                                      l5464 27A5  
                                    l5448 2777                                      l8120 1378  
                                    l8112 1313                                      l4842 19F2  
                                    l7330 10D4                                      l7322 1091  
                                    l7410 1680                                      l8034 1E6D  
                                    l8050 1F3C                                      l5386 25D6  
                                    l5490 27DD                                      l8106 12EA  
                                    l6178 2AA8                                      l7332 10EB  
                                    l6284 20D2                                      l5388 25E7  
                                    l5468 27A9                                      l5492 27E8  
                                    l8140 1406                                      l8124 13AB  
                                    l8116 1345                                      l7350 115A  
                                    l7326 10A6                                      l7502 0AB7  
                                    l6286 20F8                                      l6550 2DFC  
                                    l5494 27F4                                      l8126 13B4  
                                    l4848 19FB                                      l7336 1126  
                                    l7328 10BD                                      l7344 1153  
                                    l7440 176D                                      l7408 167D  
                                    l6288 20FE                                      l6552 2E08  
                                    l8400 1D35                                      l6536 2CC6  
                                    l5904 235F                                      l5496 27FB  
                                    l8152 1436                                      l7266 2CF1  
                                    l7282 1B13                                      l7338 1133  
                                    l7522 0C26                                      l7514 0B88  
                                    l6562 2E23                                      l6810 1830  
                                    l8058 1F72                                      l5906 2382  
                                    l5498 27FE                                      l8162 1479  
                                    l8410 2A11                                      l7348 1156  
                                    l7604 0F2C                                      l7540 0D32  
                                    l7532 0D08                                      l7516 0B92  
                                    l7508 0B80                                      l6716 2AE3  
                                    l6580 2D28                                      l6812 183E  
                                    l8172 14AD                                      l8332 2271  
                                    l7454 17D6                                      l7470 26B3  
                                    l7702 03D5                                      l7630 0133  
                                    l8190 2483                                      l6558 2E1A  
                                    l6574 2D10                                      l6910 18E7  
                                    l6902 18E3                                      l6822 1858  
                                    l5918 2397                                      l8262 076F  
                                    l7456 17FE                                      l7448 17B1  
                                    l7800 0542                                      l7632 0137  
                                    l7624 00A5                                      l7616 0FF4  
                                    l7560 0E3D                                      l6576 2D1C  
                                    l6584 2D31                                      l6912 1865  
                                    l8352 1C49                                      l8344 1C1A  
                                    l8168 14A3                                      l8328 2250  
                                    l7378 2F5E                                      l7810 057D  
                                    l7706 03E3                                      l7618 006D  
                                    l7570 0E5D                                      l6746 2EFF  
                                    l6914 191F                                      l8346 1C1E  
                                    l6818 184C                                      l8290 213B  
                                    l8258 07EE                                      l5972 2DA6  
                                    l5980 2DBF                                      l7468 26A8  
                                    l7820 0598                                      l7812 0580  
                                    l7804 054A                                      l7732 0452  
                                    l7724 042B                                      l7716 03FE  
                                    l7636 0145                                      l7556 0E36  
                                    l7548 0E0C                                      l8356 1C6C  
                                    l6596 2B73                                      l5966 2D9F  
                                    l7750 048F                                      l7734 0457  
                                    l7718 0416                                      l7646 01AB  
                                    l7590 0E87                                      l8366 1C8A  
                                    l5886 2C33                                      l7910 0893  
                                    l8294 213F                                      l5976 2DB3  
                                    l7728 043F                                      l7672 02FD  
                                    l7648 01C2                                      l7592 0E9F  
                                    l7584 0E80                                      l7576 0E65  
                                    l7824 05A1                                      l6952 2005  
                                    l8384 1CB6                                      l8368 1C90  
                                    l7904 0877                                      l8296 215C  
                                    l8288 2137                                      l7754 0490  
                                    l7738 0465                                      l7682 032E  
                                    l7826 05CC                                      l6890 18B6  
                                    l6874 189E                                      l6954 2011  
                                    l8378 1CA8                                      l8386 1CC3  
                                    l8570 2429                                      l7914 08A5  
                                    l7748 0480                                      l7676 030F  
                                    l6884 18B4                                      l6868 1886  
                                    l8396 1D31                                      l8572 242E  
                                    l7924 08DF                                      l8564 214A  
                                    l7774 04C2                                      l7758 049E  
                                    l7694 03BE                                      l7942 0915  
                                    l7918 08B3                                      l8566 2152  
                                    l7784 050D                                      l7776 04C8  
                                    l7768 04B9                                      l7688 0341  
                                    l6896 18D5                                      l7880 2D59  
                                    l7864 19EB                                      l7952 092B  
                                    l7936 090D                                      l8568 2157  
                                    l7788 051B                                      l7876 2D49  
                                    l7964 23E9                                      l7948 091D  
                                    l7798 0536                                      l7966 23ED  
                                    l7976 2413                                      STR_1 3000  
                                    STR_2 305F                                      STR_3 3075  
                                    STR_5 3049                                      STR_6 301D  
             __end_of_TCP_GetReceivedData 2F04                                      _LATA 010C  
                                    _LATB 010D                                      _LATC 010E  
                         ENC28_PhyWrite@a 0023                           ENC28_PhyWrite@d 0020  
                                    u5105 2DFF                                      u3425 2E32  
                                    u2580 2FFE                                      u3445 29F6  
                                    u5125 2E09                                      u5205 2D29  
                                    u5135 2E13                                      u3375 2B92  
                                    u6105 15D5                                      u5145 2E1B  
                                    u3385 2B97                                      u6035 2F4E  
                                    u6115 15F1                                      u4435 208C  
                                    u2845 2DEB                                      u6125 1615  
                                    u7030 1DA4                           ENC28_PhyWrite@v 0024  
                                    u6055 1520                                      u5175 2D13  
                                    u7015 1D81                                      u6065 153B  
                                    u6305 0D69                                      u7105 1E5C  
                                    u7025 1D92                                      u7210 1F5C  
                                    u6075 1557                                      u5195 2D22  
                                    u3595 27C6                                      u7140 1E98  
                                    u6085 157B                                      u6405 0F28  
                                    u2975 2E7D                                      u6175 16B6  
                                    u6095 15BA                                      u6255 269D  
                                    u6415 0F51                                      u6185 16D0  
                                    u6505 020E                                      u6425 0F68  
                                    u7065 1DD0                                      u7305 12A1  
                                    u6515 0235                                      u6435 0F8F  
                                    u6275 0C5D                                      u5555 18CB  
                                    u7235 1F94                                      u7155 1EB0  
                                    u7075 1DEA                                      u6525 0264  
                                    u6445 0FBE                                      u7245 1FAF  
                                    u7165 1ECA                                      u7085 1E01  
                                    u7405 13A9                                      u7325 1300  
                                    u6710 2D48                                      u6455 00B9  
                                    u6375 0EB3                                      u7175 1EE1  
                                    u7095 1E20                                      u5905 1BA2  
                                    u6465 00E0                                      u6385 0EE2  
                                    u7185 1F00                                      u7425 13E1  
                                    u6395 0EF9                                      u7275 121A  
                                    u6805 08CA                                      u7365 1343  
                                    u7285 122D                                      u6655 04ED  
                                    u6495 01E7                                      u7295 128E  
                                    u6665 0504                                      u6905 0941  
                                    u7385 1376                                      u7625 0783  
                                    u5875 1B28                                      u6915 095C  
                                    u7643 2242                                      u5885 1B43  
                                    u6925 097B                                      u6765 088A  
                                    u7653 226D                                      u5895 1B8F  
                                    u7663 1C66                                      u6935 09A2  
                                    u7807 05FD                                      u6945 09ED  
                                    u6955 0A08                                      u6965 0A27  
                                    u7783 1CE0                                      u6975 0A4E  
                                    u7797 05F3                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
               __size_of_TCP_SocketRemove 000C                           __end_of_TCP_Snd 1800  
                         _TCP_PayloadSave 2680            __size_of_TCP_Client_Initialize 000D  
                                    _main 2A09             __end_of_TCP_Client_Initialize 2A09  
                                    _time 2D36                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                                    start 0012                 __end_of_SPI1_Exchange8bit 29AE  
                            ?_IPV4_Packet 0070                      __size_of_ENC28_Rcr16 002E  
              makeIpv4AddresstoStr@ip_str 02D4                ??_TMR1_SetInterruptHandler 0070  
                    __size_of_ENC28_Wcr16 0026                        __size_of_ETH_Read8 0010  
                      __size_of_ETH_Flush 0027                    __size_of_ETH_ReadBlock 003F  
                      __size_of_IPV4_Init 0003                        __size_of_IPV4_Send 0047  
                 DEMO_TCP_Client@t_client 01E1                               ?_TCB_Insert 0070  
                            ?_ETH_Write32 0071                              ?_ETH_Write16 0071  
                         _DEMO_TCP_Client 1C0A                        TCP_Connect@srvaddr 00EE  
                             ?_TCB_Remove 0070                   __size_of_ETH_GetReadPtr 0008  
                        ARPV4_Request@ret 003C                       __size_of_ARPV4_Init 0014  
                __size_of_ETH_CheckLinkUp 0011                   ?_TCP_FiniteStateMachine 0070  
                  TCP_SocketRemove@tcbPtr 0079            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 29C0                          __end_of_ETH_Copy 2680  
                        __end_of_ETH_Dump 2E5D                          __end_of_ETH_Init 074C  
                       _nextPacketPointer 01A6                          __end_of_ETH_Send 2BE1  
                      __size_of_TCB_Check 0031                                     _ADACT 009F  
                                   ?_main 0070                                     ?_time 0070  
                         _TMR1_StartTimer 07FD       IPV4_PseudoHeaderChecksum@payloadLen 0070  
                                   _T1CON 001B                                     _LATC6 0876  
                      __size_of_TCB_Reset 0083                           __end_of___lwdiv 2E28  
                         __end_of___lwmod 2D36                                     i1l989 0010  
                                   _OSCEN 091D                                     u722m0 1F6E  
                                   _TMR1H 001A                                     _TMR1L 0019  
                                   u586m0 1B0F                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
          __size_of_ETH_TxComputeChecksum 00A8             __end_of_ETH_TxComputeChecksum 25D1  
                        __end_of_TMR1_ISR 2B6E                        __size_of_TCP_Close 0026  
                        __end_of_TCP_Init 2A6D                          __end_of_TCP_Recv 0A86  
                        __end_of_TCP_Send 2359                               ?_IPv4_Start 0059  
                         __end_of_dpowers 305F                            _WDT_Initialize 2972  
                       ETH_GetMAC@macAddr 0078                               ?_TCP_Update 0070  
                                   _putch 0000                   __end_of_TMR1_Initialize 2B54  
               __size_of_ETH_EventHandler 005F                 _IPV4_PseudoHeaderChecksum 24B0  
         TCP_FiniteStateMachine@nextState 00ED                    TCP_InsertRxBuffer@data 0075  
                                   time@t 0070                         __end_of_ENC28_Bfc 2A93  
                       __end_of_ENC28_Bfs 2A80                                     status 0003  
                        ??_ENC28_PhyWrite 0022                        _TCP_InsertRxBuffer 2F04  
                                   wtemp0 007E                           __end_of_sprintf 1925  
              ETH_RxComputeChecksum@rxptr 0031                  __size_of_SPI1_Initialize 0007  
                     __size_of_ETH_GetMAC 005B             ETH_TxComputeChecksum@position 0020  
                     __size_of_ETH_Read16 0023                      __end_of_ARPV4_Packet 2000  
                         __initialization 0014                       __size_of_ETH_Insert 0040  
                         TCP_Send@dataLen 00D6                      __end_of_ARPV4_Lookup 2E93  
                     ?_TCP_InsertRxBuffer 0075                              __end_of_main 2A18  
                    __end_of_ARPV4_Update 2B89                              __end_of_time 2D62  
                            _xorSequences 3037            __end_of_TCP_FiniteStateMachine 05E5  
                     __size_of_ETH_Write8 0012                               ETH_Copy@len 0020  
                             ETH_Read16@b 0076               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 007E                                    ??_time 0074  
                DEMO_TCP_Client@port60TCB 02A0                            _MAC_getAddress 297A  
                         TCP_SendDone@ret 0075                       _TCP_ParseTCPOptions 273F  
                  __end_of_WDT_Initialize 2976                             _ETH_ReadBlock 2F3F  
                         TCP_Snd@txHeader 00C0                      ??_TCP_InsertRxBuffer 0078  
                       __end_of_ETH_Read8 2A28                         __end_of_ETH_Flush 2CE2  
                 __end_of_TCP_PayloadSave 273F                         __end_of_IPV4_Init 296E  
                       __end_of_IPV4_Send 205F                                 ??_TCP_Snd 00A0  
                                  _ADCON0 009D                                    _ADCON1 009E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                          ETH_Dump@length 0020                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _T1GCON 001C                       __size_of_TCB_Insert 0027  
                     __size_of_TCB_Remove 0057                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  _OSCFRQ 091F                                    _WDTCON 0097  
                       __end_of_TCB_Check 2DC1                      __end_of_ICMP_Receive 243A  
                 __end_of_DEMO_TCP_Client 1D48                     SPI1_Exchange8bit@data 0070  
                    ?_TCP_ParseTCPOptions 0070                         __end_of_TCB_Reset 1084  
              __size_of_SPI1_Exchange8bit 0009                              ??_ENC28_Rcr8 0074  
                            ??_ENC28_Wcr8 0075                              ?_TCP_Connect 00EE  
                     _ETH_SendSystemReset 299D              _TMR1_DefaultInterruptHandler 0000  
                          ETH_ReadBlock@p 0076                         __end_of_TCP_Close 2C94  
                    TCP_Snd@payloadLength 00BB                     ICMP_EchoReply@ipv4Hdr 00AF  
                 __end_of_TMR1_StartTimer 0800                                    ___wmul 2B89  
                     __size_of_IPv4_Start 014E                                    _arpMap 2788  
                               ??___lwdiv 0074                                 ??___lwmod 007C  
                     __size_of_TCP_Update 00B1                    __end_of_MAC_getAddress 297F  
                                  _tcpMss 01E5                      __end_of_broadcastMAC 3075  
                                  _strlen 2000                    ETH_ComputeChecksum@len 0073  
                          ?_ETH_ReadBlock 0071                         ??_ETH_CheckLinkUp 007E  
                    ?_ETH_SendSystemReset 0070                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 0073                        __end_of_ENC28_Rcr8 2B3B  
            __size_of_Network_WaitForLink 0007                        __end_of_ENC28_Wcr8 0813  
TMR1_SetInterruptHandler@InterruptHandler 0072                                 ??_sprintf 0028  
                            ??_ARPV4_Init 0079                     __end_of_TMR1_CallBack 0004  
                 ?_IPV4_SaveStartPosition 0070                          ?_TMR1_Initialize 0070  
                          ETH_Insert@data 0027                         _SYSTEM_Initialize 2AFA  
                        _TCP_SocketRemove 29CB                   __end_of__initialization 0069  
                  __size_of_ENC28_BankSel 0033                        TCP_SendDone@tcbPtr 0076  
                   ??_TCP_ParseTCPOptions 0024                        ?_SYSTEM_Initialize 0070  
                               ?_ETH_Copy 0020                                 ?_ETH_Dump 0020  
                               ?_ETH_Init 0070                                 ?_ETH_Send 0070  
                           ?_Network_Init 0070                             ?_Network_Read 0070  
                  IPV4_Send@payloadLength 0033                     IPv4_Start@destAddress 0059  
                          __pcstackCOMMON 0070                    __size_of_ENC28_PhyRead 0024  
                            __pidataBANK3 2976                       ??_SYSTEM_Initialize 007E  
                   _ETH_RxComputeChecksum 2E93                   __size_of_ETH_WriteBlock 0028  
                          _ETH_GetReadPtr 298D                      __size_of_IPV4_Packet 02E5  
                               ?_TMR1_ISR 0070                     __end_of_ARPV4_Request 1C0A  
                               ?_TCP_Init 0070                                 ?_TCP_Recv 0120  
                               ?_TCP_Send 00D5                         ??_SPI1_Initialize 0070  
                 __size_of_ETH_WriteStart 0100                      __size_of_ETH_Write16 0015  
                    __size_of_ETH_Write32 001D                           ?_MAC_getAddress 0070  
                      __end_of_ARPV4_Init 2ABB         TCP_ParseTCPOptions@tcpOptionsSize 0028  
                            _TXPacketSize 01A4              __end_of_ETH_NextPacketUpdate 2218  
                            ??_ETH_GetMAC 0077                              ??_ETH_Read16 0073  
                        ??_Network_Manage 006F                     ??_ETH_SendSystemReset 0071  
                            ??_ETH_Insert 0024              __end_of_resetPortUnreachable 2972  
                           TCB_Insert@ptr 0071                              ??_ETH_Write8 0071  
                        ?_TCP_PayloadSave 006D                      ETH_ComputeChecksum@v 0077  
          __end_of_IPV4_SaveStartPosition 299D                 __end_of_SYSTEM_Initialize 2B0F  
                       _ipv4StartPosition 01AE                                __pbssBANK2 016E  
                              __pbssBANK3 01A0                                __pbssBANK4 0220  
                              __pbssBANK5 02A0                                __pbssBANK6 0320  
                              __pbssBANK7 03A0                          _ETH_EventHandler 1802  
                      __size_of_ipdb_init 004E                     __size_of_ARPV4_Packet 02B8  
                   __size_of_ARPV4_Lookup 0036                                ??_ETH_Copy 0022  
                              ??_ETH_Dump 007E                                ??_ETH_Init 0025  
                          ??_Network_Init 007E                            ??_Network_Read 0159  
                              ??_ETH_Send 0020                     __size_of_ARPV4_Update 001B  
                        ?_DEMO_TCP_Client 0070                     isPortUnreachable@port 0070  
                              _macAddress 3069                           TCB_Reset@tcbPtr 0071  
                      __end_of_ETH_GetMAC 21BA                    __end_of_ETH_GetReadPtr 2995  
                          _SSP1DATPPSbits 0E21                                __pmaintext 2A09  
                      __end_of_ETH_Read16 2C24                             TCB_Remove@ptr 0071  
                            ??_TCB_Insert 0070                        __end_of_ETH_Insert 2FBE  
                            IPV4_Send@ret 003A                                   ?___wmul 0070  
                        ?_TMR1_StartTimer 0070                                ??_TMR1_ISR 0070  
                            ??_TCB_Remove 0070                                ??_TCP_Init 0070  
                              ??_TCP_Recv 0126                                ??_TCP_Send 006D  
                              __pintentry 0004                        __end_of_ETH_Write8 2A5B  
             __end_of_ETH_ComputeChecksum 23C7                             _ENC28_BankSel 2DC1  
                          _SSP1CLKPPSbits 0E20                  TCP_SocketPoll@socket_ptr 0077  
                 __size_of_ADC_Initialize 0009                                   ?_strlen 0070  
                         ??_ETH_ReadBlock 0075                    TCP_GetReceivedData@ret 0078  
                      __size_of_rtcc_init 000C                            TCB_Check@count 0072  
                 __size_of_TCP_SocketInit 006B                   __size_of_TCP_SocketPoll 0014  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                              _ipv4Header 01B9                              _ARPV4_Packet 1D48  
                                 _OSCTUNE 091E                             _ENC28_PhyRead 2C24  
                            ??_IPv4_Start 005E                                   _SSP1ADD 0212  
                              ENC28_Bfc@a 0075                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                ENC28_Bfs@a 0075  
                            _ARPV4_Lookup 2E5D                                   _TCP_Snd 14B7  
                            ??_TCP_Update 0120                     __size_of_ICMP_Receive 0073  
                            _ARPV4_Update 2B6E                    ARPV4_Lookup@ip_address 0070  
                      __end_of_TCB_Insert 2CBB                        __end_of_TCB_Remove 2104  
                         TCP_Update@count 0124                             ??_ENC28_Rcr16 0076  
                           ??_ENC28_Wcr16 007C                         ETH_Dump@newRXTail 0022  
                    TCP_SocketInit@tcbPtr 0077                     _TCP_Client_Initialize 29FC  
            __size_of_TCP_GetReceivedData 0039                                 _ENC28_Bfc 2A80  
                               _ENC28_Bfs 2A6D                           ?_ETH_GetReadPtr 007A  
                  ?_ETH_RxComputeChecksum 0028                      __size_of_TCP_Connect 0076  
                             time@gie_val 0074                           __size_of___wmul 001B  
                                 ___lwdiv 2DF4                                   ___lwmod 2D0A  
                              _currentTCB 016E                             ?_TCP_SendDone 0070  
                      __end_of_IPv4_Start 11D2                            ?_ENC28_BankSel 0070  
                      __end_of_TCP_Update 07FD                         __end_of_ipdb_init 20AD  
                                 __ptext1 29FC                                   __ptext2 2AFA  
                                 __ptext3 2972                                   __ptext4 2B3B  
                                 __ptext5 07FD                                   __ptext6 2986  
                                 __ptext7 2FBE                                   __ptext8 29B7  
                                 __ptext9 2AE5                                   _ethData 0244  
                                 _eth_MAC 01A8         TCP_FiniteStateMachine@notAckBytes 00EA  
                            _ICMP_Receive 23C7                           __size_of_strlen 0018  
                               _T1CONbits 001B                                   _dpowers 3055  
                   _OSCILLATOR_Initialize 29B7                                   _tcbList 016F  
                              _lfsr_value 01E7         __size_of_TMR1_SetInterruptHandler 000B  
                ??_PIN_MANAGER_Initialize 0070                 ?_TMR1_SetInterruptHandler 0070  
                          ?_ENC28_PhyRead 007A                    ICMP_EchoReply@sequence 00A6  
                 ETH_EventHandler@eir_val 0026                     _ETH_TxComputeChecksum 2529  
                 __size_of_ICMP_EchoReply 00C8                __size_of_SYSTEM_Initialize 0015  
                                 _sprintf 1861                                   clrloop0 29E4  
                    end_of_initialization 0069                   ETH_ComputeChecksum@cksm 0079  
                             TCP_Snd@data 00B8                   ETH_ComputeChecksum@seed 0075  
                             TCP_Snd@cksm 00B9                                 _ETH_Read8 2A18  
                               _ETH_Flush 2CBB                                 _IPV4_Init 296B  
                               _IPV4_Send 2018                        IPv4_Start@protocol 005D  
                            _broadcastMAC 306F                       ETH_ReadBlock@buffer 0071  
                    _ETH_NextPacketUpdate 21BA                       ETH_ReadBlock@length 0073  
                          ETH_Write8@data 0071                         __end_of_rtcc_init 29E3  
                              ?_ENC28_Bfc 0074                                ?_ENC28_Bfs 0074  
                TCP_InsertRxBuffer@tcbPtr 007A                                 _TCB_Check 2D90  
                            _Control_Byte 01B7                            _ETH_WriteBlock 2CE2  
               TCP_GetReceivedData@tcbPtr 007A                       _Network_WaitForLink 297F  
                               _TCB_Reset 1001                                   psplit$0 600080  
                     __end_of_ENC28_Rcr16 2D90                      _resetPortUnreachable 296E  
                     __end_of_ENC28_Wcr16 2C6E              DEMO_TCP_Client@socketTimeout 024A  
                          ??_TCP_SendDone 0075                           _ETH_CheckLinkUp 2A38  
                          _ETH_WriteStart 19ED                        TCP_PayloadSave@len 006D  
                   ARPV4_Packet@mergeFlag 0040                        _nextSequenceNumber 025E  
                                 strlen@s 0073                                 _TCP_Close 2C6E  
                __end_of_TCP_SocketRemove 29D7                          ??_WDT_Initialize 0070  
                ETH_RxComputeChecksum@len 0028                                 _PORTAbits 000C  
                              _timersInit 2A28                              ENC28_Rcr16@a 0079  
                            ENC28_Rcr16@v 0077                      __end_of_Network_Init 2AFA  
                    __end_of_Network_Read 215F                              ENC28_Wcr16@a 007D  
                            ENC28_Wcr16@v 007A                             _rcvPayloadLen 01B0  
                    ?_Network_WaitForLink 0070               __size_of_TCP_InsertRxBuffer 003B  
                       IPV4_Packet@hdrLen 0150                         _isPortUnreachable 29EF  
                       IPV4_Packet@length 0151                         ICMP_EchoReply@ret 00AE  
                              ?_ETH_Read8 0070                        ?_isPortUnreachable 0070  
                              ?_ETH_Flush 0070                                ?_IPV4_Init 0070  
                              ?_IPV4_Send 0033                     ?_ETH_NextPacketUpdate 0070  
                         _SPI1_Initialize 2986                     DEMO_TCP_Client@rx_len 012B  
                  ?_TCP_Client_Initialize 0070                    __end_of_ETH_WriteBlock 2D0A  
                     ??_isPortUnreachable 0072                         TCP_Connect@tcbPtr 0125  
                              ?_TCB_Check 0070                         __size_of_ETH_Copy 00AF  
                       __size_of_ETH_Dump 0035                         __size_of_ETH_Init 0163  
                  __end_of_ETH_WriteStart 1AED                         __size_of_ETH_Send 0020  
                        ??_MAC_getAddress 0072                     ?_resetPortUnreachable 0070  
                              ?_TCB_Reset 0070                           ??_ENC28_BankSel 0071  
                 __size_of_ENC28_PhyWrite 0020                            __end_of___wmul 2BA4  
                __end_of_ETH_EventHandler 1861                  ARPV4_Request@destAddress 0026  
                          TCP_Recv@length 0124                                ?_TCP_Close 0070  
                          TCP_Recv@tcbPtr 00EF                         __size_of_TMR1_ISR 001A  
                          _ADC_Initialize 29AE                         __size_of_TCP_Init 0012  
                       __size_of_TCP_Recv 0273                         __size_of_TCP_Send 006C  
                  ?_OSCILLATOR_Initialize 0070                           ??_ENC28_PhyRead 007C  
               ETH_RxComputeChecksum@cksm 0033                       ICMP_Receive@icmpHdr 00B6  
               ETH_RxComputeChecksum@seed 002A                            __end_of_strlen 2018  
                          _TCP_SocketInit 2282                            _TCP_SocketPoll 2A93  
                     ICMP_Receive@ipv4Hdr 00BA                       start_initialization 0014  
               __end_of_isPortUnreachable 29FC                     ??_Network_WaitForLink 007E  
                  ?_ETH_TxComputeChecksum 0020           __size_of_PIN_MANAGER_Initialize 0042  
                              ipdb_init@x 0071                          ETH_Copy@temp_len 0027  
                           ETH_Copy@timer 0025                 ETH_Copy@tx_buffer_address 0023  
                              ETH_Read8@b 0072               __end_of_TCP_ParseTCPOptions 2800  
                          TCP_Send@tcbPtr 006F                    ETH_WriteStart@dest_mac 0020  
            TCP_SocketPoll@tmpSocketState 0076               ETH_TxComputeChecksum@length 0022  
             ETH_EventHandler@phstat2_val 0023                               _ENC28_Rcr16 2D62  
                             _ENC28_Wcr16 2C48                              TCB_Check@ret 0071  
                            TCB_Check@ptr 0074                  ??_TCP_FiniteStateMachine 00E0  
                 __end_of_ETH_CheckLinkUp 2A49                             ??_IPV4_Packet 013E  
                             ??_ENC28_Bfc 0075                           ?_ETH_WriteBlock 0071  
                             ??_ENC28_Bfs 0075                  __size_of_TMR1_Initialize 0019  
                         ?_ETH_WriteStart 0020                             ??_ETH_Write32 0075  
                           ??_ETH_Write16 0073                                  ??___wmul 0074  
                  __end_of_ADC_Initialize 29B7                       ARPV4_Request@header 003D  
                             __pdataBANK3 01E5               __end_of_ETH_SendSystemReset 29A5  
                  __size_of_TMR1_CallBack 0001                               ?_timersInit 0070  
                  __end_of_TCP_SocketInit 22ED                    __end_of_TCP_SocketPoll 2AA7  
                                ??_strlen 0072                      IPv4_Start@macAddress 006A  
                           ETH_Insert@len 0020                               __pbssBIGRAM 2788  
                         IPV4_Packet@cksm 0153                     TMR1_ISR@CountCallBack 01AC  
                     _TCP_GetReceivedData 2ECB                  ICMP_EchoReply@identifier 00A4  
                               ___latbits 0003                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0120  
                           __pcstackBANK3 01E9                     TCP_Recv@remoteAddress 0120  
                          _hostMacAddress 02E3                            _ICMP_EchoReply 1925  
                                ?_TCP_Snd 0070                   __end_of_SPI1_Initialize 298D  
                    __end_of_TCP_SendDone 2AE5                    __size_of_ARPV4_Request 011D  
                             ??_ETH_Read8 0071                               ??_ETH_Flush 0020  
                  ??_ETH_NextPacketUpdate 0020                               ??_IPV4_Init 0072  
                             ??_IPV4_Send 0035                          ??_ETH_GetReadPtr 007C  
                             sprintf@flag 002D                               sprintf@prec 002E  
                 ??_ETH_RxComputeChecksum 002C                  __size_of_TCP_PayloadSave 00BF  
                               __pnvBANK3 01ED                                 __pnvBANK4 026C  
                    ?_TCP_GetReceivedData 0075           ICMP_EchoReply@ipv4PayloadLength 00AC  
                  ??_resetPortUnreachable 0070                          ___lwdiv@dividend 0072  
                  _PIN_MANAGER_Initialize 2FBE                               ??_TCB_Check 0070  
                             ??_TCB_Reset 0070          __end_of_TMR1_SetInterruptHandler 29CB  
                                ?___lwdiv 0070                                  ?___lwmod 0078  
                           IPV4_Send@cksm 0038                           ?_ADC_Initialize 0070  
                  ETH_ReadBlock@readCount 0078                  __size_of_DEMO_TCP_Client 013E  
                      ETH_WriteBlock@data 0071                     __size_of_Network_Init 0015  
                   __size_of_Network_Read 005B                        ARPV4_Packet@header 0048  
                     __end_of_IPV4_Packet 14B7                        ARPV4_Packet@arpPtr 0042  
                             ??_TCP_Close 006F                          _ip_database_info 0220  
            ??_INTERRUPT_InterruptManager 0070                        ARPV4_Packet@length 003E  
            IPV4_PseudoHeaderChecksum@len 0021              IPV4_PseudoHeaderChecksum@tmp 0026  
                         ?_TCP_SocketInit 0070                  ARPV4_Update@entryPointer 0071  
                         ?_TCP_SocketPoll 0070                       __end_of_ETH_Write16 2AD0  
                     __end_of_ETH_Write32 2BC1                  __size_of_TMR1_StartTimer 0003  
                   __end_of_ETH_ReadBlock 2F7E                    __end_of_ICMP_EchoReply 19ED  
                               _ipdb_init 205F                __size_of_isPortUnreachable 000D  
                             _device_time 025A              __size_of_ETH_ComputeChecksum 006E  
                        ___lwdiv@quotient 0075                                pnum$text67 0060  
                                ?_sprintf 0020                                 _tcpHeader 01CD  
                           _TMR1_CallBack 0003                   __size_of_Network_Manage 006A  
                          ___wmul@product 0074                                  _LATAbits 010C  
                    ETH_WriteBlock@length 0073                                  _ETH_Copy 25D1  
                              TCP_Snd@ret 00BD                                  _ETH_Dump 2E28  
                                _ETH_Init 05E9                       __size_of_timersInit 0010  
                               clear_ram0 29E3                                  _ETH_Send 2BC1  
                                _PIE1bits 0091                     ??_TCP_GetReceivedData 0078  
                        ?_ETH_CheckLinkUp 0070                           TCB_Check@tcbPtr 0073  
         __size_of_TCP_FiniteStateMachine FB5F                             ??_TCP_Connect 0120  
                            _Network_Init 2AE5                              _Network_Read 2104  
     __size_of_INTERRUPT_InterruptManager 000E                         _nextAvailablePort 01B2  
                                _PIR1bits 0011                                  _SSP1CON1 0215  
                           ARPV4_Packet@x 0044                                  _TMR1_ISR 2B54  
                          _ENC28_PhyWrite 2BE1                                  _TCP_Init 2A5B  
                               _rtcc_init 29D7                                  _SSP1STAT 0214  
                                _TCP_Recv 0813                                  _TCP_Send 22ED  
      __size_of_IPV4_PseudoHeaderChecksum 0079                             _ARPV4_Request 1AED  
                         _portUnreachable 01AA                ?_IPV4_PseudoHeaderChecksum 0070  
                             ENC28_Rcr8@a 0076                               ENC28_Rcr8@v 0075  
                             ENC28_Wcr8@a 0075                               ENC28_Wcr8@v 0074  
                       ??_TMR1_Initialize 0073                                _ADCON0bits 009D  
                       ?_TCP_SocketRemove 0070                         ___wmul@multiplier 0070  
                           ARPV4_Lookup@x 007A               TCP_FiniteStateMachine@event 00EC  
                ??_IPV4_SaveStartPosition 007C                        ??_TCP_SocketRemove 0078  
                              ?_ipdb_init 0070                           ?_ICMP_EchoReply 0070  
                           ARPV4_Update@x 0073                        __end_of_macAddress 306F  
                        ?_SPI1_Initialize 0070                IPV4_PseudoHeaderChecksum@v 0020  
                           TCP_Recv@count 00EE                          TCP_Update@tcbPtr 0126  
                        __size_of_TCP_Snd 0349                            ?_TMR1_CallBack 0070  
                 ??_TCP_Client_Initialize 0070                             TCP_Snd@tcbPtr 00D4  
                           IPv4_Start@ret 006C                                _ENC28_Rcr8 2B25  
                              _ENC28_Wcr8 0800                               _IPV4_Packet 11D2  
                  __end_of_ENC28_PhyWrite 2C01                         _ADC_GetConversion 2B0F  
                             _ETH_Write32 2BA4                               _ETH_Write16 2ABB  
                          ?_ARPV4_Request 0026                         ??_TCP_PayloadSave 00D5  
                 ??_OSCILLATOR_Initialize 0070                                ?_rtcc_init 0070  
                      ?_ADC_GetConversion 0070                       __end_of_TCP_Connect 24B0  
                        __size_of___lwdiv 0034                          __size_of___lwmod 002C  
                      DEMO_TCP_Client@pot 0128                         ?_ETH_EventHandler 0070  
       __end_of_IPV4_PseudoHeaderChecksum 2529                    TCP_ParseTCPOptions@ret 0026  
                _TMR1_SetInterruptHandler 29C0                    TCP_ParseTCPOptions@opt 0027  
                             _tcbListSize 01B6                  ARPV4_Packet@entryPointer 0046  
                 ??_ETH_TxComputeChecksum 0026                     _TMR1_InterruptHandler 026C  
                      ??_ETH_EventHandler 0022                    ETH_CheckLinkUp@phstat2 0020  
                  _TCP_FiniteStateMachine 0A86                       ??_ADC_GetConversion 0072  
                              sprintf@val 002F                __end_of_TCP_InsertRxBuffer 2F3F  
                       ??_DEMO_TCP_Client 0126                     __size_of_TCP_SendDone 0015  
                         TCP_Close@tcbPtr 00EF               DEMO_TCP_Client@rxdataPort60 0320  
                         ___lwdiv@divisor 0070                           ___lwdiv@counter 0077  
                                __ptext10 2A28                                  __ptext11 29D7  
                                __ptext20 2BE1                                  __ptext12 29C0  
                                __ptext21 2AA7                                  __ptext13 2A5B  
                                __ptext30 2995                                  __ptext22 215F  
                                __ptext14 297F                                  __ptext31 298D  
                                __ptext23 29AE                                  __ptext15 296B  
                                __ptext40 2359                                  __ptext32 24B0  
                                __ptext24 2218                                  __ptext16 205F  
                                _arpTimer 0268                                  __ptext41 2A18  
                                __ptext33 23C7                                  __ptext25 074C  
                                __ptext17 05E9                                  __ptext50 1C0A  
                                __ptext42 21BA                                  __ptext34 1925  
                                __ptext26 2104                                  __ptext18 297A  
                                __ptext51 2D36                                  __ptext43 2CBB  
                                __ptext35 2C01                                  __ptext27 11D2  
                                __ptext19 299D                                  __ptext60 2AD0  
                                __ptext52 2000                                  __ptext44 1D48  
                                __ptext36 25D1                                  __ptext28 0813  
                                __ptext61 22ED                                  __ptext53 1861  
                                __ptext45 1802                                  __ptext37 2B89  
                                __ptext29 273F                                  __ptext70 2680  
                                __ptext62 2F04                                  __ptext54 2D0A  
                                __ptext46 2A38                                  __ptext38 2E28  
                                __ptext71 14B7                                  __ptext63 2ECB  
                                __ptext55 2DF4                                  __ptext47 2C24  
                                __ptext39 2E93                                  __ptext80 2018  
                                __ptext72 1084                                  __ptext64 243A  
                                __ptext56 29CB                                  __ptext48 0800  
                                __ptext81 2529                                  __ptext73 2A49  
                                __ptext65 2A93                                  __ptext57 20AD  
                                __ptext49 2B6E                                  __ptext90 2F3F  
                                __ptext82 2B25                                  __ptext74 2BA4  
                                __ptext66 2C6E                                  __ptext58 2282  
                                __ptext91 29A5                                  __ptext83 2A80  
                                __ptext75 2ABB                                  __ptext67 0A86  
                                __ptext59 2C94                                  __ptext92 1001  
                                __ptext84 2BC1                                  __ptext76 1AED  
                                __ptext68 296E                                  __ptext93 2D90  
                                __ptext85 2A6D                                  __ptext77 19ED  
                                __ptext69 29EF                                  __ptext94 2B0F  
                                __ptext86 2F7E                                  __ptext78 2CE2  
                                __ptext87 2C48                                  __ptext79 2E5D  
                                __ptext96 2B54                                  __ptext88 2D62  
                                __ptext97 0003                                  __ptext89 2DC1  
                       ARPV4_Packet@x_219 0045                              _SSP1CON1bits 0215  
                           _sequenceIndex 01B8                                _ARPV4_Init 2AA7  
                            time@the_time 0075                         ??_TMR1_StartTimer 0070  
                        __size_of_sprintf 00C4                              _remoteSocket 0262  
                                _lastBank 01B5                          ??_ETH_WriteBlock 0075  
                       _remoteIpv4Address 0252                        ETH_WriteStart@type 0022  
               ARPV4_Lookup@entry_pointer 0078                          ??_ETH_WriteStart 0024  
                           __size_of_main 000F                             __size_of_time 002C  
                            ?_ENC28_Rcr16 0074                              ?_ENC28_Wcr16 007A  
               __end_of_ADC_GetConversion 2B25                           ?_ENC28_PhyWrite 0020  
              DEMO_TCP_Client@socketState 012A              ETH_Insert@current_tx_pointer 0025  
                              _RB6PPSbits 0E9E                                  int$flags 007E  
                    _rxPacketStatusVector 024E                                _RC7PPSbits 0EA7  
      __end_of_INTERRUPT_InterruptManager 0012                _INTERRUPT_InterruptManager 0004  
                   __end_of_ENC28_BankSel 2DF4                              _TCP_SendDone 2AD0  
                            _SSP1STATbits 0214               __end_of_Network_WaitForLink 2986  
                            ??_timersInit 0079               PIN_MANAGER_Initialize@state 0070  
                                _xor_mask 01E8                                _ETH_GetMAC 215F  
                            TCP_Send@data 00D5                       Network_Manage@nowPv 0256  
         __size_of_IPV4_SaveStartPosition 0008                                _ETH_Read16 2C01  
                              _INTCONbits 000B                 ETH_TxComputeChecksum@cksm 002F  
                             ??_ipdb_init 0070                 ETH_TxComputeChecksum@seed 0024  
                              _ETH_Insert 2F7E                     __end_of_ENC28_PhyRead 2C48  
             DEMO_TCP_Client@txdataPort60 03A0                             ?_ARPV4_Packet 0070  
                          __pstringtext10 0000                           ETH_Write32@data 0071  
                         ETH_Write16@data 0071                             ?_ARPV4_Lookup 0070  
                              _ETH_Write8 2A49                      __end_of_xorSequences 3049  
                         ??_TMR1_CallBack 0070                             ?_ARPV4_Update 0070  
                   _receivedRemoteAddress 01A0                   __size_of_WDT_Initialize 0004  
           ICMP_EchoReply@icmp_cksm_start 00A8                                  intlevel1 0000  
                               sprintf@ap 002C                                 sprintf@sp 0020  
                          _Network_Manage 2218                          ___lwmod@dividend 007A  
                 ?_PIN_MANAGER_Initialize 0070              __size_of_TCP_ParseTCPOptions 00C1  
                             _PPSLOCKbits 0E0F                        __end_of_timersInit 2A38  
                             ?_ENC28_Rcr8 0070                               ?_ENC28_Wcr8 0074  
          __size_of_ETH_RxComputeChecksum 0038                          ??_ADC_Initialize 0070  
           __end_of_ETH_RxComputeChecksum 2ECB                              _rtcc_handler 0000  
                             _TCP_Connect 243A                           ??_ARPV4_Request 002A  
                     _ETH_ComputeChecksum 2359                               ARPV4_Init@x 007A  
                      pnum$text67_split_1 0080                            ENC28_BankSel@a 0073  
                          ENC28_BankSel@r 0072                          ??_TCP_SocketInit 0075  
                              _TCB_Insert 2C94                          ??_TCP_SocketPoll 0075  
                             ??_rtcc_init 0073                                _TCB_Remove 20AD  
                    IPV4_Send@totalLength 003B                             __pstringtext1 3037  
                           __pstringtext2 3055                             __pstringtext3 3069  
                           __pstringtext4 306F                             __pstringtext5 3000  
                           __pstringtext6 301D                             __pstringtext7 3049  
                           __pstringtext8 305F                             __pstringtext9 3075  
                           ?_ICMP_Receive 0070                                  sprintf@c 0031  
                                sprintf@f 0022                   __size_of_MAC_getAddress 0005  
                         ETH_WriteBlock@p 0075                             ENC28_Bfc@bits 0074  
           IPV4_PseudoHeaderChecksum@cksm 0022                           ___lwmod@divisor 0078  
                         ARPV4_Packet@ret 0041                                  strlen@cp 0074  
                          ??_ARPV4_Packet 0026                           ___lwmod@counter 007D  
                          ??_ARPV4_Lookup 0074                      ?_ETH_ComputeChecksum 0073  
            __size_of_ETH_SendSystemReset 0008                TCP_PayloadSave@buffer_size 00DE  
                          ??_ARPV4_Update 0070                             ENC28_Bfs@bits 0074  
                                strtok@sp 01B4                                _IPv4_Start 1084  
                       Network_Manage@now 01E9                                _TCP_Update 074C  
                  __end_of_Network_Manage 2282                               ?_ARPV4_Init 0070  
          __end_of_PIN_MANAGER_Initialize 3000                        Network_Read@header 0160  
           __size_of_ETH_NextPacketUpdate 005E                    _IPV4_SaveStartPosition 2995  
              __size_of_ADC_GetConversion 0016                           _TMR1_Initialize 2B3B  
                        ETH_Insert@offset 0022  
